var Remtairy = Remtairy || {};
Remtairy.KarrynEmote = Remtairy.KarrynEmote || {};

const VAR_STOOD_STILL_FOR_TOO_LONG_NUM = 7200;

//=============================================================================
 /*:
 * @plugindesc Karryn Emotes
 * @author Remtairy
 *
 * @help
 * This is a private plugin. 
 * Do not redistribute, use, or modify this plugin
 * without explicit written permission from Remtairy.
 *
 */
//=============================================================================

/////////
// Game Actor
///////////////

///////////////////
//Gets called when:
//   General
//Karryn becomes aroused or unaroused
//
//   Map Pose
//On map change
//After common event 105:ベッドで寝る
//After common event 50:Battle Generic
//After common event 51:Battle Masturbation
//After common event 53:Level 1 Defeat Battle
//After common event 54:Guard Battle
//
//   Battle
//Standby, Defend, Attack, Evade pose change
//Down stamina, falldown pose change
//   Sex
//Called after everytime enemy inserts or pulls out
//Called after enemy or Karryn orgasm
//Called after petted/sex each time*

Game_Actor.prototype.emoteMasterManager = function() {
	if($gameParty.isInGloryBattle) {
		this.emoteMasterManager_GloryBattle();
		return;
	}
	else if($gameParty.isInStripperBattle) {
		this.emoteMasterManager_StripperBattle();
		return;
	}
	else if($gameParty.isInTrainerBattle) {
		this.emoteMasterManager_TrainerBattle();
		return;
	}
	
	if(this._emoteMasterManagerIsRunning) return;
	this._emoteMasterManagerIsRunning = true;
	let pose = this.poseName;
	switch(pose){
	case POSE_MAP:
		this.emoteMapPose();
		break;
	case POSE_DEFEND:
		this.emoteDefendPose();
		break;
	case POSE_ATTACK:
		this.emoteAttackPose();
		break;
	case POSE_EVADE:
		this.emoteEvadePose();
		break;
	case POSE_STANDBY:
		this.emoteStandbyPose();
		break;
	case POSE_DOWN_FALLDOWN:
		this.emoteDownFalldownPose();
		break;
	case POSE_DOWN_ORGASM:
		this.emoteDownOrgasmPose();
		break;
	case POSE_DOWN_STAMINA:
		this.emoteDownStaminaPose();
		break;
	case POSE_UNARMED:
		this.emoteUnarmedPose();
		break;
	case POSE_KICK:
		this.emoteKickPose();
		break;
	case POSE_THUGGANGBANG:
		this.emoteThugGangbangPose();
		break;
	case POSE_GOBLINCUNNILINGUS:
		this.emoteGoblinCunnilingusPose();
		break;
	case POSE_GUARDGANGBANG:
		this.emoteGuardGangbangPose();
		break;
	case POSE_REVERSE_COWGIRL:
		this.emoteReverseCowgirlPose();
		break;
	case POSE_KARRYN_COWGIRL:
		this.emoteKarrynCowgirlPose();
		break;
	case POSE_LIZARDMAN_COWGIRL:
		this.emoteLizardmanCowgirlPose();
		break;
	case POSE_HJ_STANDING:
		this.emoteStandingHandjobPose();
		break;
	case POSE_BJ_KNEELING:
		this.emoteKneelingBlowjobPose();
		break;
	case POSE_PAIZURI_LAYING:
		this.emoteLayingPaizuriPose();
		break;
	case POSE_KICKCOUNTER:
		this.emoteKickCounterPose();
		break;
	case POSE_ORC_PAIZURI:
		this.emoteOrcPaizuriPose();
		break;
	case POSE_FOOTJOB:
		this.emoteFootjobPose();
		break;
	case POSE_RIMJOB:
		this.emoteRimjobPose();
		break;
	case POSE_SLIME_PILEDRIVER_ANAL:
		this.emoteSlimePiledriverPose();
		break;
	case POSE_WEREWOLF_BACK:
		this.emoteWerewolfBackPose();
		break;
	case POSE_YETI_PAIZURI:
		this.emoteYetiPaizuriPose();
		break;		
	case POSE_YETI_CARRY:
		this.emoteYetiCarryPose();
		break;
	case POSE_WAITRESS_SEX:
		this.emoteWaitressSexPose();
		break;
	case POSE_RECEPTIONIST:
		this.emoteReceptionistPose();
		break;
	case POSE_DEFEATED_LEVEL1: 
		this.emoteDefeatedLevelOnePose(false);
		break;
	case POSE_DEFEATED_LEVEL2:
		this.emoteDefeatedLevelTwoPose();
		break;
	case POSE_DEFEATED_LEVEL3:
		this.emoteDefeatedLevelThreePose();
		break;
	case POSE_DEFEATED_LEVEL4:
		this.emoteDefeatedLevelFourPose();
		break;
	case POSE_DEFEATED_LEVEL5:
		this.emoteDefeatedLevelFivePose();
		break;
	case POSE_DEFEATED_GUARD:
		this.emoteDefeatedGuardPose();
		break;
	case POSE_MASTURBATE_INBATTLE:
		this.emoteMasturbationInBattlePose();
		break;
	}
	
	//this.setCacheChanged();
	this._emoteMasterManagerIsRunning = false;
};

Game_Actor.prototype.emoteMasterManager_GloryBattle = function() {
	if(this._emoteMasterManagerForGloryBattleIsRunning) return;
	this._emoteMasterManagerForGloryBattleIsRunning = true;
	let pose = this.poseName;
	switch(pose){
	case POSE_TOILET_SITTING:
		this.emoteGloryToiletSittingPose();
		break;
	case POSE_TOILET_SIT_LEFT:
		this.emoteGloryToiletSitLeftPose();
		break;
	case POSE_TOILET_SIT_RIGHT:
		this.emoteGloryToiletSitRightPose();
		break;
	case POSE_TOILET_STAND_LEFT:
		this.emoteGloryToiletStandLeftPose();
		break;
	case POSE_TOILET_STAND_RIGHT:
		this.emoteGloryToiletStandRightPose();
		break;
	}
	
	//this.setCacheChanged();
	this._emoteMasterManagerForGloryBattleIsRunning = false;
};

Game_Actor.prototype.emoteMasterManager_StripperBattle = function() {
	if(this._emoteMasterManagerForStripperBattleIsRunning) return;
	this._emoteMasterManagerForStripperBattleIsRunning = true;
	let pose = this.poseName;
	switch(pose){
	case POSE_STRIPPER_INTERMISSION:
		this.emoteStripperIntermissionPose();
		break;
	case POSE_STRIPPER_MOUTH:
		this.emoteStripperMouthPose();
		break;
	case POSE_STRIPPER_BOOBS:
		this.emoteStripperBoobsPose();
		break;
	case POSE_STRIPPER_PUSSY:
		this.emoteStripperPussyPose();
		break;
	case POSE_STRIPPER_BUTT:
		this.emoteStripperButtPose();
		break;
	case POSE_STRIPPER_VIP:
		this.emoteStripperVIPPose();
		break;
	}
	
	//this.setCacheChanged();
	this._emoteMasterManagerForStripperBattleIsRunning = false;
};

Game_Actor.prototype.emoteMasterManager_TrainerBattle = function() {
	if(this._emoteMasterManagerForTrainerBattleIsRunning) return;
	this._emoteMasterManagerForTrainerBattleIsRunning = true;

	let pose = this.poseName;
	switch(pose){
	case POSE_TRAINER_STANDBY:
		this.emoteTrainerStandbyPose();
		break;
	case POSE_TRAINER_TEKOKI:
		this.emoteTrainerTekokiPose();
		break;
	case POSE_TRAINER_KISU:
		this.emoteTrainerKisuPose();
		break;
	case POSE_TRAINER_FERA:
		this.emoteTrainerFeraPose();
		break;
	case POSE_TRAINER_PAIZURI:
		this.emoteTrainerPaizuriPose();
		break;
	case POSE_TRAINER_RINKAN:
		this.emoteTrainerRinkanPose();
		break;
	}
	
	//this.setCacheChanged();
	this._emoteMasterManagerForTrainerBattleIsRunning = false;
};

/////////////////
// Emote Attack Pose
/////////////////
Game_Actor.prototype.emoteAttackPose = function() {
	this.setAllowTachieEmoteUpdate(false);
	let staminaPercent = this.currentPercentOfStamina_realMax();
	let pleasurePercent = this.currentPercentOfOrgasm(false);
	let justOrgasmed = this.didLastGetHitBySkillType(JUST_SKILLTYPE_KARRYN_ORGASM) || this.justOrgasmed();
	let isAroused = this.isAroused() || justOrgasmed;
	let isOffBalanced = this.isOffBalance;
	let isConfident = this.isConfident;
	let cockiness = this.cockiness;
	let masochismLvl = this.masochismLvl();
	let sadismLvl = this.sadismLvl();
	
	let bluntStance = this.isBluntStance();
	let slashStance = this.isSlashStance();
	let pierceStance = this.isPierceStance();
	//let weaponId = this.equips()[0].id;
	let weaponId = 1;
	
	let generalReactionScore = this.getReactionScore();
	
	let generallvl3 = generalReactionScore >= VAR_DEF_RS_LV3_REQ;
	let generallvl2 = generalReactionScore >= VAR_DEF_RS_LV2_REQ;
	
	let fatigueLevel = this.getFatigueLevel();
	let fatigueLvl1 = fatigueLevel === 2 || (fatigueLevel === 1 && staminaPercent <= 66) || (staminaPercent <= 33);
	let fatigueLvl2 = fatigueLevel === 3 || (fatigueLevel === 2 && staminaPercent <= 66) || (fatigueLevel === 1 && staminaPercent <= 33);
	let fatigueLvl3 = fatigueLevel >= 4 || (fatigueLevel === 3 && staminaPercent <= 66) || (fatigueLevel === 2 && staminaPercent <= 33);
	
	let faceArray = [];
	this.resetTachieHoppe();
	this.resetTachieSweat();
	
	if(slashStance) 
		this.setTachieWeapon('' + weaponId + '_slash');
	else if(pierceStance)
		this.setTachieWeapon('' + weaponId + '_pierce');
	else 
		this.setTachieWeapon('' + weaponId + '_blunt');
	
	if(isConfident) {
		if(!this.isWearingGlovesAndHat()) {
			this.setTachieBodyExtension('confident_naked_');
		}
		else {
			this.setTachieBodyExtension('confident_');
		}
		this.setTachieHipsExtension('confident_');
		this.setTachiePubicExtension('confident_');
		this.setTachieStrayGroinExtension('confident_');
		this.setTachieSemenCrotchExtension('confident_');
		this.setTachieSemenWetExtension('confident_');
		
	}
	else {
		if(!this.isWearingGlovesAndHat()) {
			this.setTachieBodyExtension('normal_naked_');
		}
		else {
			this.setTachieBodyExtension('normal_');
		}
		this.setTachieHipsExtension('normal_');
		this.setTachiePubicExtension('normal_');
		this.setTachieStrayGroinExtension('normal_');
		this.setTachieSemenCrotchExtension('normal_');
		this.setTachieSemenWetExtension('normal_');
	}
	
	
	if(isOffBalanced) {
		if(fatigueLvl2 || fatigueLvl3) {
			faceArray.push(7);	
		}
		else {
			if(generallvl3) {
				faceArray.push(13);
			}
			else {
				faceArray.push(5);
			}
		}
	}
	else if(isConfident) {
		if(fatigueLvl3) {
			if(generallvl3) {
				faceArray.push(15);
			}
			else {
				faceArray.push(8);
			}
			
		}
		else if(fatigueLvl2) {
			if(generallvl3) {
				faceArray.push(14);
			}
			else {
				faceArray.push(6);
			}
		}
		else if(fatigueLvl1) {
			if(generallvl3) {
				faceArray.push(12);
			}
			else {
				faceArray.push(4);
			}
		}
		else {
			if(generallvl3) {
				faceArray.push(10);
			}
			else {
				faceArray.push(2);
			}
		}
	}
	else {
		if(fatigueLvl3) {
			faceArray.push(7);
		}
		else if(fatigueLvl2) {
			if(generallvl3) {
				faceArray.push(13);
			}
			else {
				faceArray.push(5);
			}
		}
		else if(fatigueLvl1) {
			if(generallvl3) {
				faceArray.push(11);
			}
			else {
				faceArray.push(3);
			}
		}
		else {
			if(generallvl3) {
				faceArray.push(9);
			}
			else {
				faceArray.push(1);
			}
			
		}
	}
	
	//Sadism
	if((sadismLvl - masochismLvl) >= 2 && isAroused && (isConfident || generallvl3)) {
		for(let i = 0; i < Math.ceil((sadismLvl - masochismLvl) / 4); ++i) {
			if(fatigueLvl3 || fatigueLvl2)
				faceArray.push(17);
			else
				faceArray.push(16);
		}
	}
	
	let faceId = faceArray[Math.randomInt(faceArray.length)];
	let eyebrowsArray = [];
	let eyesArray = [];
	let mouthArray = [];
	
	switch(faceId) {
	case 1:
		eyebrowsArray.push('kiri1');
		eyesArray.push('mae1');
		mouthArray.push('ho1');
		mouthArray.push('ho2');
		mouthArray.push('wa1');
		mouthArray.push('wa2');
		mouthArray.push('wa3');
		if(isAroused) this.setTachieHoppe(1);
	break;
	case 2:
		eyebrowsArray.push('kiri1');
		eyebrowsArray.push('kiri2');
		eyesArray.push('mae1');
		eyesArray.push('mae2');
		mouthArray.push('ho1');
		mouthArray.push('ho2');
		mouthArray.push('wa1');
		mouthArray.push('wa2');
		mouthArray.push('nico1');
		mouthArray.push('nico4');
		if(isAroused) this.setTachieHoppe(1);
	break;
	case 3:
		eyebrowsArray.push('kiri1');
		eyebrowsArray.push('kiri2');
		eyesArray.push('mae1');
		eyesArray.push('mae2');
		mouthArray.push('ho1');
		mouthArray.push('ho2');
		mouthArray.push('wa1');
		mouthArray.push('wa2');
		mouthArray.push('wa3');
		if(isAroused) this.setTachieHoppe(1);
	break;
	case 4:
		eyebrowsArray.push('kiri1');
		eyebrowsArray.push('kiri2');
		eyesArray.push('mae2');
		mouthArray.push('ho1');
		mouthArray.push('ho2');
		mouthArray.push('nico1');
		mouthArray.push('nico2');
		mouthArray.push('wa3');
		if(isAroused) this.setTachieHoppe(1);
	break;
	case 5:
		eyebrowsArray.push('kiri1');
		eyebrowsArray.push('oko1');
		eyebrowsArray.push('koma1');
		eyesArray.push('mae2');
		eyesArray.push('uru2');
		mouthArray.push('ho1');
		mouthArray.push('ho2');
		mouthArray.push('wa1');
		mouthArray.push('wa2');
		mouthArray.push('wa3');
		if(isAroused) this.setTachieHoppe(1);
		this.setTachieSweat(1);
	break;
	case 6:
		eyebrowsArray.push('kiri1');
		eyebrowsArray.push('oko1');
		eyebrowsArray.push('koma1');
		eyesArray.push('mae2');
		eyesArray.push('uru1');
		eyesArray.push('uru2');
		mouthArray.push('ho1');
		mouthArray.push('ho2');
		mouthArray.push('nico1');
		mouthArray.push('nico2');
		mouthArray.push('wa3');
		if(isAroused) this.setTachieHoppe(1);
		this.setTachieSweat(1);
	break;
	case 7:
		eyebrowsArray.push('kiri1');
		eyebrowsArray.push('oko1');
		eyebrowsArray.push('koma1');
		eyesArray.push('mae3');
		eyesArray.push('uru2');
		mouthArray.push('ho1');
		mouthArray.push('ho2');
		mouthArray.push('wa1');
		mouthArray.push('wa2');
		mouthArray.push('wa3');
		mouthArray.push('ahe1');
		if(isAroused) this.setTachieHoppe(1);
		this.setTachieSweat(2);
	break;
	case 8:
		eyebrowsArray.push('koma2');
		eyebrowsArray.push('oko1');
		eyebrowsArray.push('koma1');
		eyesArray.push('mae3');
		eyesArray.push('uru2');
		mouthArray.push('ho1');
		mouthArray.push('ho2');
		mouthArray.push('wa1');
		mouthArray.push('wa2');
		mouthArray.push('wa3');
		mouthArray.push('nico2');
		if(isAroused) this.setTachieHoppe(1);
		this.setTachieSweat(2);
	break;
	case 9:
		eyebrowsArray.push('kiri2');
		eyebrowsArray.push('nico1');
		eyebrowsArray.push('nico2');
		eyesArray.push('mae1');
		eyesArray.push('mae2');
		mouthArray.push('nico1');
		mouthArray.push('nico2');
		mouthArray.push('nico3');
		mouthArray.push('nico4');
		mouthArray.push('ho3');
		if(isAroused) this.setTachieHoppe(1);
	break;
	case 10:
		eyebrowsArray.push('kiri2');
		eyebrowsArray.push('nico1');
		eyebrowsArray.push('kiri1');
		eyesArray.push('mae2');
		eyesArray.push('heart1');
		mouthArray.push('nico1');
		mouthArray.push('nico2');
		mouthArray.push('nico3');
		mouthArray.push('nico4');
		mouthArray.push('pero1');
		mouthArray.push('ahe2');
		mouthArray.push('ahe3');
		if(isAroused) this.setTachieHoppe(1);
	break;
	case 11:
		eyebrowsArray.push('kiri2');
		eyebrowsArray.push('nico1');
		eyebrowsArray.push('nico2');
		eyesArray.push('mae1');
		eyesArray.push('mae2');
		eyesArray.push('uru1');
		eyesArray.push('uru2');
		mouthArray.push('wa1');
		mouthArray.push('wa2');
		mouthArray.push('wa3');
		mouthArray.push('ho1');
		mouthArray.push('ho2');
		if(isAroused) this.setTachieHoppe(1);
	break;
	case 12:
		eyebrowsArray.push('kiri2');
		eyebrowsArray.push('kiri1');
		eyesArray.push('mae2');
		eyesArray.push('heart1');
		eyesArray.push('heart2');
		mouthArray.push('nico1');
		mouthArray.push('nico2');
		mouthArray.push('nico3');
		mouthArray.push('nico4');
		mouthArray.push('pero1');
		mouthArray.push('ahe2');
		if(isAroused) this.setTachieHoppe(1);
	break;
	case 13:
		eyebrowsArray.push('kiri2');
		eyebrowsArray.push('koma1');
		eyebrowsArray.push('koma2');
		eyesArray.push('mae2');
		eyesArray.push('uru1');
		eyesArray.push('uru2');
		mouthArray.push('wa1');
		mouthArray.push('ho1');
		mouthArray.push('nico2');
		mouthArray.push('ho2');
		mouthArray.push('ho3');
		if(isAroused) this.setTachieHoppe(1);
		this.setTachieSweat(1);
	break;
	case 14:
		eyebrowsArray.push('kiri1');
		eyebrowsArray.push('kiri2');
		eyebrowsArray.push('koma1');
		eyesArray.push('mae2');
		eyesArray.push('uru1');
		eyesArray.push('uru2');
		eyesArray.push('heart1');
		eyesArray.push('heart2');
		mouthArray.push('ho1');
		mouthArray.push('ho2');
		mouthArray.push('ho3');
		mouthArray.push('nico1');
		mouthArray.push('nico2');
		mouthArray.push('nico3');
		mouthArray.push('nico4');
		if(isAroused) this.setTachieHoppe(1);
		this.setTachieSweat(1);
	break;
	case 15:
		eyebrowsArray.push('kiri2');
		eyebrowsArray.push('koma1');
		eyebrowsArray.push('koma2');
		eyesArray.push('mae3');
		eyesArray.push('uru2');
		eyesArray.push('heart2');
		mouthArray.push('ho1');
		mouthArray.push('ho2');
		mouthArray.push('ho3');
		mouthArray.push('nico1');
		mouthArray.push('nico2');
		mouthArray.push('nico3');
		if(isAroused) this.setTachieHoppe(1);
		this.setTachieSweat(2);
	break;
	case 16:
		eyebrowsArray.push('kiri1');
		eyebrowsArray.push('kiri2');
		eyebrowsArray.push('oko1');
		eyebrowsArray.push('oko2');
		eyesArray.push('mae1');
		eyesArray.push('mae2');
		eyesArray.push('sado1');
		mouthArray.push('nico1');
		mouthArray.push('nico2');
		mouthArray.push('nico3');
		mouthArray.push('nico4');
		mouthArray.push('nico5');
		mouthArray.push('pero1');
		mouthArray.push('ahe2');
		mouthArray.push('ahe3');
		this.setTachieHoppe(1);
	break;
	case 17:
		eyebrowsArray.push('kiri1');
		eyebrowsArray.push('oko1');
		eyebrowsArray.push('oko2');
		eyesArray.push('mae2');
		eyesArray.push('sado2');
		eyesArray.push('sado1');
		mouthArray.push('nico1');
		mouthArray.push('nico2');
		mouthArray.push('nico4');
		mouthArray.push('nico5');
		mouthArray.push('ahe2');
		mouthArray.push('ahe3');
		this.setTachieHoppe(1);
		this.setTachieSweat(1);
	break;
	
	}
	
	if(eyebrowsArray.length > 0) {
		this.setTachieEyebrows(eyebrowsArray[Math.randomInt(eyebrowsArray.length)]);
	}
	if(eyesArray.length > 0) {
		this.setTachieEyes(eyesArray[Math.randomInt(eyesArray.length)]);
	}
	if(mouthArray.length > 0) {
		this.setTachieMouth(mouthArray[Math.randomInt(mouthArray.length)]);
	}
	
	this.setAllowTachieEmoteUpdate(true);
};

/////////////////
// Emote Kick Pose
/////////////////
Game_Actor.prototype.emoteKickPose = function(item) {
	this.setAllowTachieEmoteUpdate(false);
	let staminaPercent = this.currentPercentOfStamina_realMax();
	let pleasurePercent = this.currentPercentOfOrgasm(false);
	let justOrgasmed = this.didLastGetHitBySkillType(JUST_SKILLTYPE_KARRYN_ORGASM) || this.justOrgasmed();
	let isAroused = this.isAroused() || justOrgasmed;
	let isOffBalanced = this.isOffBalance;
	let isConfident = this.isConfident;
	let cockiness = this.cockiness;
	let masochismLvl = this.masochismLvl();
	let sadismLvl = this.sadismLvl();
	let hasHalberd = this.hasHalberd();

	
	let bluntStance = this.isBluntStance();
	let slashStance = this.isSlashStance();
	let pierceStance = this.isPierceStance();
	let justUsedLightKick = item && item.id === SKILL_KARRYN_LIGHT_KICK_ID;
	let justUsedCockKick = item && item.id === SKILL_KARRYN_COCK_KICK_ID;
	
	let generalReactionScore = this.getReactionScore();
	
	let generallvl3 = generalReactionScore >= VAR_DEF_RS_LV3_REQ;
	let generallvl2 = generalReactionScore >= VAR_DEF_RS_LV2_REQ;
	
	let fatigueLevel = this.getFatigueLevel();
	let fatigueLvl1 = fatigueLevel === 2 || (fatigueLevel === 1 && staminaPercent <= 66) || (staminaPercent <= 33);
	let fatigueLvl2 = fatigueLevel === 3 || (fatigueLevel === 2 && staminaPercent <= 66) || (fatigueLevel === 1 && staminaPercent <= 33);
	let fatigueLvl3 = fatigueLevel >= 4 || (fatigueLevel === 3 && staminaPercent <= 66) || (fatigueLevel === 2 && staminaPercent <= 33);
	
	if(justUsedLightKick) {
		if(!this.isWearingGlovesAndHat())
			this.setTachieFrontC('lightkick_naked');
		else
			this.setTachieFrontC('lightkick');
		this.resetTachieFrontA();
		this.resetTachieFrontB();
	}
	else if(justUsedCockKick) {
		if(!this.isWearingGlovesAndHat())
			this.setTachieFrontC('chinkick_naked');
		else
			this.setTachieFrontC('chinkick');
		this.resetTachieFrontA();
		this.resetTachieFrontB();
	}
	else {
		if(slashStance) 
			this.setTachieFrontB('slash');
		else if(pierceStance)
			this.setTachieFrontB('pierce');
		else 
			this.setTachieFrontB('blunt');
		
		if(!this.isWearingGlovesAndHat())
			this.setTachieFrontA('feet1_naked');
		else
			this.setTachieFrontA('feet1');
		this.resetTachieFrontC();
	}
	
	let faceArray = [];
	this.resetTachieHoppe();
	this.resetTachieSweat();

	let rightArmName = '';
	let leftArmName = '';
	
	if(!this.isWearingGlovesAndHat()) {
		rightArmName = 'naked_';
		leftArmName = 'naked_';
	}
	
	if(hasHalberd) {
		rightArmName += '2';
	}
	else {
		rightArmName += '1';
	}
	
	leftArmName += '1';
	
	this.setTachieRightArm(rightArmName);
	this.setTachieLeftArm(leftArmName);
	
	
	if(isOffBalanced) {
		if(fatigueLvl2 || fatigueLvl3) {
			faceArray.push(7);	
		}
		else {
			if(generallvl3) {
				faceArray.push(13);
			}
			else {
				faceArray.push(5);
			}
		}
	}
	else if(isConfident) {
		if(fatigueLvl3) {
			if(generallvl3) {
				faceArray.push(15);
			}
			else {
				faceArray.push(8);
			}
			
		}
		else if(fatigueLvl2) {
			if(generallvl3) {
				faceArray.push(14);
			}
			else {
				faceArray.push(6);
			}
		}
		else if(fatigueLvl1) {
			if(generallvl3) {
				faceArray.push(12);
			}
			else {
				faceArray.push(4);
			}
		}
		else {
			if(generallvl3) {
				faceArray.push(10);
			}
			else {
				faceArray.push(2);
			}
		}
	}
	else {
		if(fatigueLvl3) {
			faceArray.push(7);
		}
		else if(fatigueLvl2) {
			if(generallvl3) {
				faceArray.push(13);
			}
			else {
				faceArray.push(5);
			}
		}
		else if(fatigueLvl1) {
			if(generallvl3) {
				faceArray.push(11);
			}
			else {
				faceArray.push(3);
			}
		}
		else {
			if(generallvl3) {
				faceArray.push(9);
			}
			else {
				faceArray.push(1);
			}
			
		}
	}
	
	//Sadism
	if((sadismLvl - masochismLvl) >= 2 && isAroused && (isConfident || generallvl3)) {
		for(let i = 0; i < Math.ceil((sadismLvl - masochismLvl) / 4); ++i) {
			if(fatigueLvl3 || fatigueLvl2)
				faceArray.push(17);
			else
				faceArray.push(16);
		}
	}
	
	let faceId = faceArray[Math.randomInt(faceArray.length)];
	let eyebrowsArray = [];
	let eyesArray = [];
	let mouthArray = [];
	
	switch(faceId) {
	case 1:
		eyebrowsArray.push('kiri1');
		eyesArray.push('mae1');
		mouthArray.push('ho1');
		mouthArray.push('ho2');
		mouthArray.push('wa1');
		mouthArray.push('wa2');
		mouthArray.push('wa3');
		if(isAroused) this.setTachieHoppe(1);
	break;
	case 2:
		eyebrowsArray.push('kiri1');
		eyebrowsArray.push('kiri2');
		eyesArray.push('mae1');
		eyesArray.push('mae2');
		mouthArray.push('ho1');
		mouthArray.push('ho2');
		mouthArray.push('wa1');
		mouthArray.push('wa2');
		mouthArray.push('nico1');
		mouthArray.push('nico4');
		if(isAroused) this.setTachieHoppe(1);
	break;
	case 3:
		eyebrowsArray.push('kiri1');
		eyebrowsArray.push('kiri2');
		eyesArray.push('mae1');
		eyesArray.push('mae2');
		mouthArray.push('ho1');
		mouthArray.push('ho2');
		mouthArray.push('wa1');
		mouthArray.push('wa2');
		mouthArray.push('wa3');
		if(isAroused) this.setTachieHoppe(1);
	break;
	case 4:
		eyebrowsArray.push('kiri1');
		eyebrowsArray.push('kiri2');
		eyesArray.push('mae2');
		mouthArray.push('ho1');
		mouthArray.push('ho2');
		mouthArray.push('nico1');
		mouthArray.push('nico2');
		mouthArray.push('wa3');
		if(isAroused) this.setTachieHoppe(1);
	break;
	case 5:
		eyebrowsArray.push('kiri1');
		eyebrowsArray.push('oko1');
		eyebrowsArray.push('koma1');
		eyesArray.push('mae2');
		eyesArray.push('uru2');
		mouthArray.push('ho1');
		mouthArray.push('ho2');
		mouthArray.push('wa1');
		mouthArray.push('wa2');
		mouthArray.push('wa3');
		if(isAroused) this.setTachieHoppe(1);
		this.setTachieSweat(1);
	break;
	case 6:
		eyebrowsArray.push('kiri1');
		eyebrowsArray.push('oko1');
		eyebrowsArray.push('koma1');
		eyesArray.push('mae2');
		eyesArray.push('uru1');
		eyesArray.push('uru2');
		mouthArray.push('ho1');
		mouthArray.push('ho2');
		mouthArray.push('nico1');
		mouthArray.push('nico2');
		mouthArray.push('wa3');
		if(isAroused) this.setTachieHoppe(1);
		this.setTachieSweat(1);
	break;
	case 7:
		eyebrowsArray.push('kiri1');
		eyebrowsArray.push('oko1');
		eyebrowsArray.push('koma1');
		eyesArray.push('mae3');
		eyesArray.push('uru2');
		mouthArray.push('ho1');
		mouthArray.push('ho2');
		mouthArray.push('wa1');
		mouthArray.push('wa2');
		mouthArray.push('wa3');
		mouthArray.push('ahe1');
		if(isAroused) this.setTachieHoppe(1);
		this.setTachieSweat(2);
	break;
	case 8:
		eyebrowsArray.push('koma2');
		eyebrowsArray.push('oko1');
		eyebrowsArray.push('koma1');
		eyesArray.push('mae3');
		eyesArray.push('uru2');
		mouthArray.push('ho1');
		mouthArray.push('ho2');
		mouthArray.push('wa1');
		mouthArray.push('wa2');
		mouthArray.push('wa3');
		mouthArray.push('nico2');
		if(isAroused) this.setTachieHoppe(1);
		this.setTachieSweat(2);
	break;
	case 9:
		eyebrowsArray.push('kiri2');
		eyebrowsArray.push('nico1');
		eyebrowsArray.push('nico2');
		eyesArray.push('mae1');
		eyesArray.push('mae2');
		mouthArray.push('nico1');
		mouthArray.push('nico2');
		mouthArray.push('nico3');
		mouthArray.push('nico4');
		mouthArray.push('ho3');
		if(isAroused) this.setTachieHoppe(1);
	break;
	case 10:
		eyebrowsArray.push('kiri2');
		eyebrowsArray.push('nico1');
		eyebrowsArray.push('kiri1');
		eyesArray.push('mae2');
		eyesArray.push('heart1');
		mouthArray.push('nico1');
		mouthArray.push('nico2');
		mouthArray.push('nico3');
		mouthArray.push('nico4');
		mouthArray.push('pero1');
		mouthArray.push('ahe2');
		mouthArray.push('ahe3');
		if(isAroused) this.setTachieHoppe(1);
	break;
	case 11:
		eyebrowsArray.push('kiri2');
		eyebrowsArray.push('nico1');
		eyebrowsArray.push('nico2');
		eyesArray.push('mae1');
		eyesArray.push('mae2');
		eyesArray.push('uru1');
		eyesArray.push('uru2');
		mouthArray.push('wa1');
		mouthArray.push('wa2');
		mouthArray.push('wa3');
		mouthArray.push('ho1');
		mouthArray.push('ho2');
		if(isAroused) this.setTachieHoppe(1);
	break;
	case 12:
		eyebrowsArray.push('kiri2');
		eyebrowsArray.push('kiri1');
		eyesArray.push('mae2');
		eyesArray.push('heart1');
		eyesArray.push('heart2');
		mouthArray.push('nico1');
		mouthArray.push('nico2');
		mouthArray.push('nico3');
		mouthArray.push('nico4');
		mouthArray.push('pero1');
		mouthArray.push('ahe2');
		if(isAroused) this.setTachieHoppe(1);
	break;
	case 13:
		eyebrowsArray.push('kiri2');
		eyebrowsArray.push('koma1');
		eyebrowsArray.push('koma2');
		eyesArray.push('mae2');
		eyesArray.push('uru1');
		eyesArray.push('uru2');
		mouthArray.push('wa1');
		mouthArray.push('ho1');
		mouthArray.push('nico2');
		mouthArray.push('ho2');
		mouthArray.push('ho3');
		if(isAroused) this.setTachieHoppe(1);
		this.setTachieSweat(1);
	break;
	case 14:
		eyebrowsArray.push('kiri1');
		eyebrowsArray.push('kiri2');
		eyebrowsArray.push('koma1');
		eyesArray.push('mae2');
		eyesArray.push('uru1');
		eyesArray.push('uru2');
		eyesArray.push('heart1');
		eyesArray.push('heart2');
		mouthArray.push('ho1');
		mouthArray.push('ho2');
		mouthArray.push('ho3');
		mouthArray.push('nico1');
		mouthArray.push('nico2');
		mouthArray.push('nico3');
		mouthArray.push('nico4');
		if(isAroused) this.setTachieHoppe(1);
		this.setTachieSweat(1);
	break;
	case 15:
		eyebrowsArray.push('kiri2');
		eyebrowsArray.push('koma1');
		eyebrowsArray.push('koma2');
		eyesArray.push('mae3');
		eyesArray.push('uru2');
		eyesArray.push('heart2');
		mouthArray.push('ho1');
		mouthArray.push('ho2');
		mouthArray.push('ho3');
		mouthArray.push('nico1');
		mouthArray.push('nico2');
		mouthArray.push('nico3');
		if(isAroused) this.setTachieHoppe(1);
		this.setTachieSweat(2);
	break;
	case 16:
		eyebrowsArray.push('kiri1');
		eyebrowsArray.push('kiri2');
		eyebrowsArray.push('oko1');
		eyebrowsArray.push('oko2');
		eyesArray.push('mae1');
		eyesArray.push('mae2');
		eyesArray.push('sado1');
		mouthArray.push('nico1');
		mouthArray.push('nico2');
		mouthArray.push('nico3');
		mouthArray.push('nico4');
		mouthArray.push('nico5');
		mouthArray.push('pero1');
		mouthArray.push('ahe2');
		mouthArray.push('ahe3');
		this.setTachieHoppe(1);
	break;
	case 17:
		eyebrowsArray.push('kiri1');
		eyebrowsArray.push('oko1');
		eyebrowsArray.push('oko2');
		eyesArray.push('mae2');
		eyesArray.push('sado2');
		eyesArray.push('sado1');
		mouthArray.push('nico1');
		mouthArray.push('nico2');
		mouthArray.push('nico4');
		mouthArray.push('nico5');
		mouthArray.push('ahe2');
		mouthArray.push('ahe3');
		this.setTachieHoppe(1);
		this.setTachieSweat(1);
	break;
	
	}
	
	if(eyebrowsArray.length > 0) {
		this.setTachieEyebrows(eyebrowsArray[Math.randomInt(eyebrowsArray.length)]);
	}
	if(eyesArray.length > 0) {
		this.setTachieEyes(eyesArray[Math.randomInt(eyesArray.length)]);
	}
	if(mouthArray.length > 0) {
		this.setTachieMouth(mouthArray[Math.randomInt(mouthArray.length)]);
	}
	
	this.setAllowTachieEmoteUpdate(true);
};

/////////////////
// Emote Defend Pose
/////////////////
Game_Actor.prototype.emoteDefendPose = function() {
	this.setAllowTachieEmoteUpdate(false);
	let staminaPercent = this.currentPercentOfStamina_realMax();
	let pleasurePercent = this.currentPercentOfOrgasm(false);
	let justOrgasmed = this.didLastGetHitBySkillType(JUST_SKILLTYPE_KARRYN_ORGASM) || this.justOrgasmed();
	let isAroused = this.isAroused() || justOrgasmed;
	let isOffBalanced = this.isOffBalance;
	let isConfident = this.isConfident;
	let cockiness = this.cockiness;
	let masochismLvl = this.masochismLvl();
	let sadismLvl = this.sadismLvl();
	let hasHalberd = this.hasHalberd();
	
	let faceArray = [];
	this.resetTachieHoppe();
	this.resetTachieSweat();
	
	let generalReactionScore = this.getReactionScore();
	
	let generallvl3 = generalReactionScore >= VAR_DEF_RS_LV3_REQ;
	let generallvl2 = generalReactionScore >= VAR_DEF_RS_LV2_REQ;
	
	let fatigueLevel = this.getFatigueLevel();
	let fatigueLvl1 = fatigueLevel === 2 || (fatigueLevel === 1 && staminaPercent <= 66) || (staminaPercent <= 33);
	let fatigueLvl2 = fatigueLevel === 3 || (fatigueLevel === 2 && staminaPercent <= 66) || (fatigueLevel === 1 && staminaPercent <= 33);
	let fatigueLvl3 = fatigueLevel >= 4 || (fatigueLevel === 3 && staminaPercent <= 66) || (fatigueLevel === 2 && staminaPercent <= 33);

	if(hasHalberd) {
		if(!this.isWearingGlovesAndHat()) {
			this.setTachieLeftArm('halberd_naked');
			this.setTachieRightArm('halberd_naked');
			this.setTachieFrontA('rightarm_halberd_naked');
		}
		else {
			this.setTachieLeftArm('halberd');
			this.setTachieRightArm('halberd');
			this.setTachieFrontA('rightarm_halberd');
		}
		this.resetTachieSemenLeftArmExtension();
		this.resetTachieSemenRightArmExtension();
		this.setTachieSemenRightArmHasPCup(false);
		}
	else {
		if(!this.isWearingGlovesAndHat()) {
			this.setTachieLeftArm('unarmed_naked');
			this.setTachieRightArm('unarmed_naked');
			this.setTachieFrontB('rightarm_unarmed_naked');
		}
		else {
			this.setTachieLeftArm('unarmed');
			this.setTachieRightArm('unarmed');
			this.setTachieFrontB('rightarm_unarmed');
		}
		this.setTachieSemenLeftArmExtension('unarmed_');
		this.setTachieSemenRightArmExtension('unarmed_');
		this.setTachieFrontBHasPCup(true);
		this.setTachieSemenRightArmHasPCup(true);
	}
	
	if(!this.isWearingGlovesAndHat()) {
		if((isAroused)) 
			this.setTachieBoobs('naked_1_hard');
		else
			this.setTachieBoobs('naked_1');
	}
	else {
		this.setPoseClothing();
	}
	
	if(isOffBalanced) {
		if(fatigueLvl2 || fatigueLvl3) {
			faceArray.push(7);	
		}
		else {
			if(generallvl3) {
				faceArray.push(13);
			}
			else {
				faceArray.push(5);
			}
		}
	}
	else if(isConfident) {
		if(fatigueLvl3) {
			if(generallvl3) {
				faceArray.push(15);
			}
			else {
				faceArray.push(8);
			}
		}
		else if(fatigueLvl2) {
			if(generallvl3) {
				faceArray.push(14);
			}
			else {
				faceArray.push(6);
			}
		}
		else if(fatigueLvl1) {
			if(generallvl3) {
				faceArray.push(12);
			}
			else {
				faceArray.push(4);
			}
		}
		else {
			if(generallvl3) {
				faceArray.push(10);
			}
			else {
				faceArray.push(2);
			}
		}
	}
	else {
		if(fatigueLvl3) {
			faceArray.push(7);
		}
		else if(fatigueLvl2) {
			if(generallvl3) {
				faceArray.push(13);
			}
			else {
				faceArray.push(5);
			}
		}
		else if(fatigueLvl1) {
			if(generallvl3) {
				faceArray.push(11);
			}
			else {
				faceArray.push(3);
			}
		}
		else {
			if(generallvl3) {
				faceArray.push(9);
			}
			else {
				faceArray.push(1);
			}
		}
	}
	
	//Masochism
	if((masochismLvl - sadismLvl) >= 2 && isAroused && (isConfident || generallvl3)) {
		for(let i = 0; i < Math.ceil((masochismLvl - sadismLvl) / 4); ++i) {
			if(fatigueLvl2 || fatigueLvl3)
				faceArray.push(17);
			else
				faceArray.push(16);
		}
	}
	
	let faceId = faceArray[Math.randomInt(faceArray.length)];
	let eyebrowsArray = [];
	let eyesArray = [];
	let mouthArray = [];
	
	switch(faceId) {
	case 1:
		eyebrowsArray.push('kiri1');
		eyesArray.push('mae1');
		mouthArray.push('wa1');
		mouthArray.push('ho1');
		mouthArray.push('ho2');
		mouthArray.push('wa2');
		mouthArray.push('wa3');
		if(isAroused) this.setTachieHoppe(1);
		break;
	case 2:
		eyebrowsArray.push('kiri1');
		eyebrowsArray.push('kiri2');
		eyesArray.push('mae1');
		eyesArray.push('mae2');
		mouthArray.push('wa3');
		mouthArray.push('ho1');
		mouthArray.push('ho2');
		mouthArray.push('nico1');
		mouthArray.push('nico2');
		mouthArray.push('nico4');
		mouthArray.push('ku2');
		if(isAroused) this.setTachieHoppe(1);
		break;	
	case 3:
		eyebrowsArray.push('kiri1');
		eyesArray.push('mae1');
		eyesArray.push('mae2');
		mouthArray.push('wa1');
		mouthArray.push('wa2');
		mouthArray.push('wa3');
		mouthArray.push('ho1');
		mouthArray.push('ho2');
		if(isAroused) this.setTachieHoppe(1);
		break;		
	case 4:
		eyebrowsArray.push('kiri1');
		eyebrowsArray.push('kiri2');
		eyesArray.push('mae2');
		mouthArray.push('wa3');
		mouthArray.push('ho1');
		mouthArray.push('ho2');
		mouthArray.push('nico1');
		mouthArray.push('nico2');
		mouthArray.push('nico4');
		if(isAroused) this.setTachieHoppe(1);
		break;		
	case 5:
		eyebrowsArray.push('kiri1');
		eyebrowsArray.push('oko1');
		eyebrowsArray.push('koma1');
		eyesArray.push('mae2');
		eyesArray.push('uru2');
		mouthArray.push('wa1');
		mouthArray.push('ho1');
		mouthArray.push('ho2');
		mouthArray.push('wa2');
		mouthArray.push('wa3');
		if(isAroused) this.setTachieHoppe(1);
		this.setTachieSweat(1);
		break;
	case 6:
		eyebrowsArray.push('kiri1');
		eyebrowsArray.push('oko1');
		eyebrowsArray.push('koma1');
		eyesArray.push('mae2');
		eyesArray.push('uru1');
		eyesArray.push('uru2');
		mouthArray.push('wa3');
		mouthArray.push('ho1');
		mouthArray.push('ho2');
		mouthArray.push('nico1');
		mouthArray.push('nico2');
		if(isAroused) this.setTachieHoppe(1);
		this.setTachieSweat(1);
		break;			
	case 7:
		eyebrowsArray.push('koma1');
		eyebrowsArray.push('oko1');
		eyebrowsArray.push('koma2');
		eyesArray.push('mae3');
		eyesArray.push('uru2');
		mouthArray.push('wa1');
		mouthArray.push('wa2');
		mouthArray.push('wa3');
		mouthArray.push('ho1');
		mouthArray.push('ho2');
		mouthArray.push('ahe1');
		mouthArray.push('ku1');
		if(isAroused) this.setTachieHoppe(1);
		this.setTachieSweat(2);
		break;
	case 8:
		eyebrowsArray.push('koma1');
		eyebrowsArray.push('oko1');
		eyebrowsArray.push('koma2');
		eyesArray.push('mae3');
		eyesArray.push('uru2');
		mouthArray.push('wa1');
		mouthArray.push('wa2');
		mouthArray.push('wa3');
		mouthArray.push('ho1');
		mouthArray.push('ho2');
		mouthArray.push('nico2');
		mouthArray.push('ku2');
		if(isAroused) this.setTachieHoppe(1);
		this.setTachieSweat(2);
		break;
	case 9:
		eyebrowsArray.push('kiri2');
		eyebrowsArray.push('nico1');
		eyebrowsArray.push('nico2');
		eyesArray.push('mae1');
		eyesArray.push('mae2');
		mouthArray.push('nico1');
		mouthArray.push('nico2');
		mouthArray.push('nico3');
		mouthArray.push('nico4');
		mouthArray.push('ho3');
		if(isAroused) this.setTachieHoppe(1);
		break;	
	case 10:
		eyebrowsArray.push('kiri1');
		eyebrowsArray.push('kiri2');
		eyebrowsArray.push('nico1');
		eyesArray.push('mae2');
		eyesArray.push('mae3');
		eyesArray.push('heart1');
		mouthArray.push('nico2');
		mouthArray.push('nico3');
		mouthArray.push('nico4');
		mouthArray.push('nico5');
		mouthArray.push('pero1');
		mouthArray.push('ahe2');
		mouthArray.push('ahe3');
		if(isAroused) this.setTachieHoppe(1);
		break;	
	case 11:
		eyebrowsArray.push('kiri2');
		eyebrowsArray.push('nico2');
		eyebrowsArray.push('nico1');
		eyesArray.push('mae1');
		eyesArray.push('mae2');
		eyesArray.push('uru1');
		eyesArray.push('uru2');
		mouthArray.push('wa1');
		mouthArray.push('wa2');
		mouthArray.push('wa3');
		mouthArray.push('ho1');
		mouthArray.push('ho2');
		if(isAroused) this.setTachieHoppe(1);
		break;	
	case 12:
		eyebrowsArray.push('kiri2');
		eyebrowsArray.push('kiri1');
		eyesArray.push('mae2');
		eyesArray.push('heart1');
		eyesArray.push('heart2');
		mouthArray.push('nico1');
		mouthArray.push('nico2');
		mouthArray.push('nico3');
		mouthArray.push('nico4');
		mouthArray.push('pero1');
		mouthArray.push('ahe2');
		mouthArray.push('ku2');
		if(isAroused) this.setTachieHoppe(1);
		break;
	case 13:
		eyebrowsArray.push('kiri2');
		eyebrowsArray.push('koma1');
		eyebrowsArray.push('koma2');
		eyesArray.push('mae2');
		eyesArray.push('uru1');
		eyesArray.push('uru2');
		mouthArray.push('wa1');
		mouthArray.push('nico2');
		mouthArray.push('ho1');
		mouthArray.push('ho2');
		mouthArray.push('ho3');
		if(isAroused) this.setTachieHoppe(1);
		this.setTachieSweat(1);
		break;
	case 14:
		eyebrowsArray.push('kiri2');
		eyebrowsArray.push('koma1');
		eyebrowsArray.push('kiri1');
		eyesArray.push('mae2');
		eyesArray.push('uru1');
		eyesArray.push('uru2');
		eyesArray.push('heart1');
		eyesArray.push('heart2');
		mouthArray.push('nico1');
		mouthArray.push('nico2');
		mouthArray.push('nico3');
		mouthArray.push('nico5');
		mouthArray.push('ho1');
		mouthArray.push('ho2');
		mouthArray.push('ho3');
		if(isAroused) this.setTachieHoppe(1);
		this.setTachieSweat(1);
		break;		
	case 15:
		eyebrowsArray.push('kiri2');
		eyebrowsArray.push('koma1');
		eyebrowsArray.push('koma2');
		eyesArray.push('mae3');
		eyesArray.push('uru2');
		eyesArray.push('heart2');
		mouthArray.push('nico1');
		mouthArray.push('nico2');
		mouthArray.push('nico5');
		mouthArray.push('ho2');
		mouthArray.push('ho3');
		mouthArray.push('ku2');
		if(isAroused) this.setTachieHoppe(1);
		this.setTachieSweat(2);
		break;		
	case 16:
		eyebrowsArray.push('nico1');
		eyebrowsArray.push('nico2');
		eyesArray.push('maso1');
		eyesArray.push('heart1');
		eyesArray.push('heart2');
		mouthArray.push('nico3');
		mouthArray.push('nico4');
		mouthArray.push('nico5');
		mouthArray.push('pero1');
		mouthArray.push('ahe2');
		mouthArray.push('ahe3');
		mouthArray.push('ahe4');
		if(isAroused) this.setTachieHoppe(1);
		break;
	case 17:
		eyebrowsArray.push('koma1');
		eyebrowsArray.push('koma2');
		eyesArray.push('toji1');
		eyesArray.push('maso1');
		eyesArray.push('heart2');
		mouthArray.push('nico3');
		mouthArray.push('nico5');
		mouthArray.push('pero1');
		mouthArray.push('ahe1');
		mouthArray.push('ahe2');
		mouthArray.push('ahe3');
		mouthArray.push('ahe4');
		mouthArray.push('ku2');
		if(isAroused) this.setTachieHoppe(1);
		this.setTachieSweat(2);
		break;
	}
	
	if(eyebrowsArray.length > 0) {
		this.setTachieEyebrows(eyebrowsArray[Math.randomInt(eyebrowsArray.length)]);
	}
	if(eyesArray.length > 0) {
		this.setTachieEyes(eyesArray[Math.randomInt(eyesArray.length)]);
	}
	if(mouthArray.length > 0) {
		this.setTachieMouth(mouthArray[Math.randomInt(mouthArray.length)]);
	}
	
	this.setAllowTachieEmoteUpdate(true);
};

/////////////////
// Emote Evade Pose
/////////////////
Game_Actor.prototype.emoteEvadePose = function() {
	this.setAllowTachieEmoteUpdate(false);
	let staminaPercent = this.currentPercentOfStamina_realMax();
	let pleasurePercent = this.currentPercentOfOrgasm(false);
	let justOrgasmed = this.didLastGetHitBySkillType(JUST_SKILLTYPE_KARRYN_ORGASM) || this.justOrgasmed();
	let isAroused = this.isAroused() || justOrgasmed;
	let isOffBalanced = this.isOffBalance;
	let isConfident = this.isConfident;
	let cockiness = this.cockiness;
	let masochismLvl = this.masochismLvl();
	let sadismLvl = this.sadismLvl();
	let hasHalberd = this.hasHalberd();
	
	let generalReactionScore = this.getReactionScore();
	
	let generallvl3 = generalReactionScore >= VAR_DEF_RS_LV3_REQ;
	let generallvl2 = generalReactionScore >= VAR_DEF_RS_LV2_REQ;
	
	let fatigueLevel = this.getFatigueLevel();
	let fatigueLvl1 = fatigueLevel === 2 || (fatigueLevel === 1 && staminaPercent <= 66) || (staminaPercent <= 33);
	let fatigueLvl2 = fatigueLevel === 3 || (fatigueLevel === 2 && staminaPercent <= 66) || (fatigueLevel === 1 && staminaPercent <= 33);
	let fatigueLvl3 = fatigueLevel >= 4 || (fatigueLevel === 3 && staminaPercent <= 66) || (fatigueLevel === 2 && staminaPercent <= 33);
	
	let faceArray = [];
	this.resetTachieHoppe();
	this.resetTachieSweat();
	
	if(!this.isWearingGlovesAndHat()) {
		this.setTachieBody('naked_1')
		if((isAroused)) 
			this.setTachieBoobs('naked_1_hard');
		else
			this.setTachieBoobs('naked_1');
	}
	else {
		this.setPoseClothing();
		
		if(this.clothingStage === 1) {
			if(this.isWearingPussyToy() || this.isWearingClitToy() || this.isWearingAnalToy()) {
				this.setTachieHips('2');
			}
		}
	}
	
	let rightArmButtChance = 0;
	let leftarmButtChance = 0;
	
	if(hasHalberd) {
		if(!this.isWearingGlovesAndHat()) {
			this.setTachieRightArm('normal_naked');
		}
		else {
			this.setTachieRightArm('normal');
		}
		this.setTachieSemenRightArmExtension('normal_');
	}
	else {
		if(generallvl2) {
			if(isAroused) {
				rightArmButtChance += 25;
				leftarmButtChance += 25;
			}
			if(generallvl3) {
				rightArmButtChance += 44;
				leftarmButtChance += 44;
			}
		}

		const pussySemen = this.getBodyLiquid(BodyLiquidId.PUSSY_SEMEN).amount;
		if(pussySemen) {
			rightArmButtChance += pussySemen * 0.5;
			leftarmButtChance += pussySemen * 0.5;
 		}
		
		if(this.tachieHips == 1 && this.isWearingWardenClothing()) {
			rightArmButtChance = 0;
			leftarmButtChance = 0;
		}
		
		if(sadismLvl > masochismLvl) {
			rightArmButtChance -= (15 * (sadismLvl - masochismLvl));
			leftarmButtChance -= (15 * (sadismLvl - masochismLvl));
		}
		
		if(Math.randomInt(100) < rightArmButtChance) {
			if(!this.isWearingGlovesAndHat()) {
				this.setTachieRightArm('unarmed_butt_naked');
			}
			else {
				this.setTachieRightArm('unarmed_butt');
			}
			this.setTachieSemenRightArmExtension('unarmed_butt_');
		}
		else {
			if(!this.isWearingGlovesAndHat()) {
				this.setTachieRightArm('unarmed_naked');
			}
			else {
				this.setTachieRightArm('unarmed');
			}
			this.setTachieSemenRightArmExtension('unarmed_');
		}
	}
	
	if(Math.randomInt(100) < leftarmButtChance) {
		if(!this.isWearingGlovesAndHat()) {
			this.setTachieLeftArm('butt_naked');
		}
		else {
			this.setTachieLeftArm('butt');
		}
		this.setTachieSemenLeftArmExtension('butt_');
	}
	else {
		if(!this.isWearingGlovesAndHat()) {
			this.setTachieLeftArm('normal_naked');
		}
		else {
			this.setTachieLeftArm('normal');
		}
		this.setTachieSemenLeftArmExtension('normal_');
	}
	
	if(isOffBalanced) {
		if(fatigueLvl2 || fatigueLvl3) {
			faceArray.push(7);	
		}
		else {
			if(generallvl3) {
				faceArray.push(13);
			}
			else {
				faceArray.push(5);
			}
		}
	}
	else if(isConfident) {
		if(fatigueLvl3) {
			if(generallvl3) {
				faceArray.push(15);
			}
			else {
				faceArray.push(8);
			}
		}
		else if(fatigueLvl2) {
			if(generallvl3) {
				faceArray.push(14);
			}
			else {
				faceArray.push(6);
			}
		}
		else if(fatigueLvl1) {
			if(generallvl3) {
				faceArray.push(12);
			}
			else {
				faceArray.push(4);
			}
		}
		else {
			if(generallvl3) {
				faceArray.push(10);
			}
			else {
				faceArray.push(2);
			}
		}
	}
	else {
		if(fatigueLvl3) {
			faceArray.push(7);
		}
		else if(fatigueLvl2) {
			if(generallvl3) {
				faceArray.push(13);
			}
			else {
				faceArray.push(5);
			}
		}
		else if(fatigueLvl1) {
			if(generallvl3) {
				faceArray.push(11);
			}
			else {
				faceArray.push(3);
			}
		}
		else {
			if(generallvl3) {
				faceArray.push(9);
			}
			else {
				faceArray.push(1);
			}
		}
	}
	
	if(isAroused && (isConfident || generallvl3)) {
		//Masochism
		if((masochismLvl - sadismLvl) >= 2) {
			for(let i = 0; i < Math.ceil((masochismLvl - sadismLvl) / 4); ++i) {
				if(fatigueLvl2 || fatigueLvl3)
					faceArray.push(17);
				else
					faceArray.push(16);
			}
		}
		//Sadism
		else if((sadismLvl - masochismLvl) >= 2) {
			for(let i = 0; i < Math.ceil((sadismLvl - masochismLvl) / 4); ++i) {
				if(fatigueLvl2 || fatigueLvl3)
					faceArray.push(19);
				else
					faceArray.push(18);
			}
		}
	}
	
	let faceId = faceArray[Math.randomInt(faceArray.length)];
	let eyebrowsArray = [];
	let eyesArray = [];
	let mouthArray = [];
	
	switch(faceId) {
	case 1:
		eyebrowsArray.push('kiri1');
		eyebrowsArray.push('kiri2');
		eyesArray.push('mae1');
		mouthArray.push('wa1');
		mouthArray.push('ho1');
		mouthArray.push('ho2');
		mouthArray.push('ho3');
		mouthArray.push('wa2');
		mouthArray.push('nico1');
		mouthArray.push('nico2');
		if(isAroused) this.setTachieHoppe(1);
		break;
	case 2:
		eyebrowsArray.push('kiri1');
		eyebrowsArray.push('kiri2');
		eyesArray.push('mae1');
		eyesArray.push('mae2');
		mouthArray.push('wa1');
		mouthArray.push('nico1');
		mouthArray.push('nico2');
		mouthArray.push('nico3');
		mouthArray.push('ku4');
		if(isAroused) this.setTachieHoppe(1);
		break;	
	case 3:
		eyebrowsArray.push('kiri1');
		eyesArray.push('mae1');
		eyesArray.push('mae2');
		mouthArray.push('wa1');
		mouthArray.push('wa2');
		mouthArray.push('wa3');
		mouthArray.push('ho1');
		mouthArray.push('ho2');
		mouthArray.push('ho3');
		if(isAroused) this.setTachieHoppe(1);
		break;		
	case 4:
		eyebrowsArray.push('kiri2');
		eyesArray.push('mae2');
		mouthArray.push('wa1');
		mouthArray.push('wa2');
		mouthArray.push('ho4');
		mouthArray.push('ku4');
		mouthArray.push('nico1');
		mouthArray.push('nico2');
		if(isAroused) this.setTachieHoppe(1);
		break;		
	case 5:
		eyebrowsArray.push('kiri1');
		eyebrowsArray.push('oko1');
		eyebrowsArray.push('koma1');
		eyesArray.push('mae2');
		eyesArray.push('uru2');
		mouthArray.push('wa1');
		mouthArray.push('ku1');
		mouthArray.push('ku2');
		mouthArray.push('ku3');
		mouthArray.push('wa2');
		mouthArray.push('wa3');
		if(isAroused) this.setTachieHoppe(1);
		this.setTachieSweat(1);
		break;
	case 6:
		eyebrowsArray.push('kiri1');
		eyebrowsArray.push('oko1');
		eyebrowsArray.push('koma1');
		eyesArray.push('mae2');
		eyesArray.push('uru1');
		eyesArray.push('uru2');
		mouthArray.push('wa3');
		mouthArray.push('ho1');
		mouthArray.push('ho3');
		mouthArray.push('nico1');
		mouthArray.push('nico2');
		if(isAroused) this.setTachieHoppe(1);
		this.setTachieSweat(1);
		break;			
	case 7:
		eyebrowsArray.push('koma1');
		eyebrowsArray.push('oko1');
		eyebrowsArray.push('koma2');
		eyesArray.push('mae3');
		eyesArray.push('uru2');
		mouthArray.push('wa1');
		mouthArray.push('wa2');
		mouthArray.push('wa3');
		mouthArray.push('wa4');
		mouthArray.push('ho3');
		mouthArray.push('ho4');
		mouthArray.push('ahe1');
		mouthArray.push('ku1');
		mouthArray.push('ku2');
		mouthArray.push('ku3');
		if(isAroused) this.setTachieHoppe(1);
		this.setTachieSweat(2);
		break;
	case 8:
		eyebrowsArray.push('koma1');
		eyebrowsArray.push('oko1');
		eyebrowsArray.push('koma2');
		eyesArray.push('mae3');
		eyesArray.push('uru2');
		mouthArray.push('wa1');
		mouthArray.push('wa2');
		mouthArray.push('wa3');
		mouthArray.push('ho4');
		mouthArray.push('nico2');
		mouthArray.push('ahe1');
		mouthArray.push('ku3');
		mouthArray.push('ku4');
		if(isAroused) this.setTachieHoppe(1);
		this.setTachieSweat(2);
		break;
	case 9:
		eyebrowsArray.push('kiri2');
		eyebrowsArray.push('nico1');
		eyebrowsArray.push('nico2');
		eyesArray.push('mae1');
		eyesArray.push('mae2');
		mouthArray.push('nico1');
		mouthArray.push('nico2');
		mouthArray.push('ahe1');
		mouthArray.push('nico4');
		mouthArray.push('ho2');
		mouthArray.push('chu1');
		if(isAroused) this.setTachieHoppe(1);
		break;	
	case 10:
		eyebrowsArray.push('kiri2');
		eyebrowsArray.push('nico1');
		eyesArray.push('mae2');
		eyesArray.push('mae3');
		eyesArray.push('heart1');
		mouthArray.push('nico2');
		mouthArray.push('nico3');
		mouthArray.push('nico1');
		mouthArray.push('pero1');
		mouthArray.push('ahe2');
		mouthArray.push('chu1');
		if(isAroused) this.setTachieHoppe(1);
		break;	
	case 11:
		eyebrowsArray.push('kiri2');
		eyebrowsArray.push('nico2');
		eyebrowsArray.push('nico1');
		eyesArray.push('mae1');
		eyesArray.push('mae2');
		eyesArray.push('uru1');
		eyesArray.push('uru2');
		mouthArray.push('wa1');
		mouthArray.push('nico1');
		mouthArray.push('nico2');
		mouthArray.push('ahe1');
		mouthArray.push('chu1');
		mouthArray.push('ho2');
		if(isAroused) this.setTachieHoppe(1);
		break;	
	case 12:
		eyebrowsArray.push('kiri2');
		eyebrowsArray.push('kiri1');
		eyesArray.push('mae2');
		eyesArray.push('heart1');
		eyesArray.push('heart2');
		mouthArray.push('nico1');
		mouthArray.push('nico2');
		mouthArray.push('nico3');
		mouthArray.push('nico4');
		mouthArray.push('pero1');
		mouthArray.push('ku2');
		if(isAroused) this.setTachieHoppe(1);
		break;
	case 13:
		eyebrowsArray.push('kiri2');
		eyebrowsArray.push('koma1');
		eyebrowsArray.push('koma2');
		eyesArray.push('mae2');
		eyesArray.push('uru1');
		eyesArray.push('uru2');
		mouthArray.push('wa1');
		mouthArray.push('wa2');
		mouthArray.push('nico1');
		mouthArray.push('ho1');
		mouthArray.push('ho2');
		mouthArray.push('ho3');
		mouthArray.push('ho4');
		if(isAroused) this.setTachieHoppe(1);
		this.setTachieSweat(1);
		break;
	case 14:
		eyebrowsArray.push('kiri2');
		eyebrowsArray.push('koma1');
		eyebrowsArray.push('kiri1');
		eyesArray.push('mae2');
		eyesArray.push('uru1');
		eyesArray.push('uru2');
		eyesArray.push('heart1');
		eyesArray.push('heart2');
		mouthArray.push('nico1');
		mouthArray.push('nico2');
		mouthArray.push('nico3');
		mouthArray.push('ku3');
		mouthArray.push('ho1');
		mouthArray.push('ku4');
		mouthArray.push('ku5');
		if(isAroused) this.setTachieHoppe(1);
		this.setTachieSweat(1);
		break;		
	case 15:
		eyebrowsArray.push('kiri2');
		eyebrowsArray.push('koma1');
		eyebrowsArray.push('koma2');
		eyesArray.push('mae3');
		eyesArray.push('uru2');
		eyesArray.push('heart2');
		mouthArray.push('nico1');
		mouthArray.push('ahe1');
		mouthArray.push('ahe3');
		mouthArray.push('ho4');
		mouthArray.push('ku4');
		mouthArray.push('ku5');
		if(isAroused) this.setTachieHoppe(1);
		this.setTachieSweat(2);
		break;		
	case 16:
		eyebrowsArray.push('nico1');
		eyebrowsArray.push('nico2');
		eyesArray.push('maso1');
		eyesArray.push('heart1');
		eyesArray.push('heart2');
		mouthArray.push('nico4');
		mouthArray.push('nico5');
		mouthArray.push('pero1');
		mouthArray.push('ahe1');
		mouthArray.push('ahe3');
		mouthArray.push('ku5');
		mouthArray.push('chu1');
		if(isAroused) this.setTachieHoppe(1);
		break;
	case 17:
		eyebrowsArray.push('koma1');
		eyebrowsArray.push('koma2');
		eyesArray.push('heart2');
		eyesArray.push('maso1');
		eyesArray.push('mae3');
		mouthArray.push('nico4');
		mouthArray.push('nico5');
		mouthArray.push('pero1');
		mouthArray.push('ahe1');
		mouthArray.push('ahe2');
		mouthArray.push('ahe3');
		mouthArray.push('ku5');
		this.setTachieHoppe(1);
		this.setTachieSweat(2);
		break;
	case 18:
		eyebrowsArray.push('kiri1');
		eyebrowsArray.push('kiri2');
		eyebrowsArray.push('oko1');
		eyesArray.push('mae1');
		eyesArray.push('mae2');
		eyesArray.push('sado1');
		mouthArray.push('nico1');
		mouthArray.push('nico2');
		mouthArray.push('nico3');
		mouthArray.push('pero1');
		mouthArray.push('ku4');
		mouthArray.push('ku5');
		this.setTachieHoppe(1);
		break;
	case 19:
		eyebrowsArray.push('kiri1');
		eyebrowsArray.push('oko1');
		eyesArray.push('mae3');
		eyesArray.push('sado1');
		mouthArray.push('ku1');
		mouthArray.push('ku2');
		mouthArray.push('ku3');
		mouthArray.push('ku4');
		mouthArray.push('ku5');
		mouthArray.push('ho1');
		mouthArray.push('wa2');
		mouthArray.push('wa3');
		mouthArray.push('wa4');
		this.setTachieHoppe(1);
		this.setTachieSweat(1);
		break;
	}
	
	if(eyebrowsArray.length > 0) {
		this.setTachieEyebrows(eyebrowsArray[Math.randomInt(eyebrowsArray.length)]);
	}
	if(eyesArray.length > 0) {
		this.setTachieEyes(eyesArray[Math.randomInt(eyesArray.length)]);
	}
	if(mouthArray.length > 0) {
		this.setTachieMouth(mouthArray[Math.randomInt(mouthArray.length)]);
	}
	
	
	this.setAllowTachieEmoteUpdate(true);
};

/////////////////
// Emote Standby Pose
/////////////////
Game_Actor.prototype.emoteStandbyPose = function() {
	this.setAllowTachieEmoteUpdate(false);
	let justOrgasmed = this.didLastGetHitBySkillType(JUST_SKILLTYPE_KARRYN_ORGASM) || this.justOrgasmed();
	let isAroused = this.isAroused() || justOrgasmed;
	let isHorny = this.isHorny;
	let isOffBalanced = this.isOffBalance;
	let isConfident = this.isConfident;
	let karrynJustUsedCombatSkill = this.isStateAffected(STATE_STANDBY_EMOTE_USED_BATTLE_SKILLS_ID);
	let karrynJustUsedTaunt = this.isStateAffected(STATE_STANDBY_EMOTE_USED_TAUNT_ID);
	let karrynJustUsedFlaunt = this.isStateAffected(STATE_STANDBY_EMOTE_USED_FLAUNT_ID);
	let karrynJustUsedReleaseDesire = this.isStateAffected(STATE_STANDBY_EMOTE_USED_RELEASE_DESIRE_ID);
	let usingCounterStance = this.isStateAffected(STATE_COUNTER_STANCE_ID);
	let usingFocus = this.isStateAffected(STATE_FOCUS_ID);
	let usingEyeOfTheMind = this.isStateAffected(STATE_EYE_OF_THE_MIND_ID);
	let usingOpenPleasure = this.isUsingOpenPleasure();
	let usingEdgingControl = this.isStateAffected(STATE_KARRYN_EDGING_CONTROL_ID);
	let karrynJustUsedCockPet = this.didLastGetHitBySkillType(JUST_SKILLTYPE_KARRYN_PETTING);
	let karrynJustUsedCockStare = this.didLastGetHitBySkillType(JUST_SKILLTYPE_KARRYN_COCK_STARE);
	let karrynGotBukkaked = this.didLastGetHitBySkillType(JUST_SKILLTYPE_ENEMY_BUKKAKE);
	let justGotHarassed = this.didLastGetHitBySkillType(JUST_SKILLTYPE_ENEMY_PETTING) || this.didLastGetHitBySkillType(JUST_SKILLTYPE_ENEMY_TALK) || this.didLastGetHitBySkillType(JUST_SKILLTYPE_ENEMY_TOY_PLAY) || this.didLastGetHitBySkillType(JUST_SKILLTYPE_ENEMY_STRIP) || this.didLastGetHitBySkillType(JUST_SKILLTYPE_ENEMY_SPANKING) || this.didLastGetHitBySkillType(JUST_SKILLTYPE_ENEMY_SIGHT) || this.didLastGetHitBySkillType(JUST_SKILLTYPE_PASSIVE_TOY);
	let justGotKissed = this.didLastGetHitBySkillType(JUST_SKILLTYPE_ENEMY_KISS);
	let karrynJustUsedKiss =  this.didLastGetHitBySkillType(JUST_SKILLTYPE_KARRYN_KISSING);
	
	let generalReactionScore = this.getCombatPoseReactionScore(false);
	let bukkakeReactionScore = this.getBukkakeReactionScore();
	let orgasmReactionScore = this.getOrgasmReactionScore();
	let cockStareReactionScore = this.getCockStareReactionScore();
	let staminaPercent = this.currentPercentOfStamina_realMax();
	
	let generallvl3 = generalReactionScore >= VAR_DEF_RS_LV3_REQ;
	let generallvl2 = generalReactionScore >= VAR_DEF_RS_LV2_REQ;
	let generallvl1 = generalReactionScore >= VAR_DEF_RS_LV1_REQ;
	let bukkakelvl3 = bukkakeReactionScore  >= VAR_DEF_RS_LV3_REQ;
	let bukkakelvl2 = bukkakeReactionScore >= VAR_DEF_RS_LV2_REQ;
	let orgasmlvl3 = orgasmReactionScore >= VAR_DEF_RS_LV3_REQ;
	let orgasmlvl2 = orgasmReactionScore >= VAR_DEF_RS_LV2_REQ;
	let starelvl3 = cockStareReactionScore >= VAR_DEF_RS_LV3_REQ;
	let starelvl2 = cockStareReactionScore >= VAR_DEF_RS_LV2_REQ;
	
	let masochismLvl = this.masochismLvl();
	let sadismLvl = this.sadismLvl();
	let isSadist = sadismLvl - masochismLvl >= 3;
	let isMasochist = masochismLvl - sadismLvl >= 3;
	
	let fatigueLevel = this.getFatigueLevel();
	let fatigueLvl1 = fatigueLevel === 2 || (fatigueLevel === 1 && staminaPercent <= 66) || (staminaPercent <= 33);
	let fatigueLvl2 = fatigueLevel === 3 || (fatigueLevel === 2 && staminaPercent <= 66) || (fatigueLevel === 1 && staminaPercent <= 33);
	let fatigueLvl3 = fatigueLevel >= 4 || (fatigueLevel === 3 && staminaPercent <= 66) || (fatigueLevel === 2 && staminaPercent <= 33);
	

	let faceArray = [];
	this.resetTachieHoppe();
	this.resetTachieSweat();
	this.resetTachieFrontA();
	this.resetTachieFrontB();
	
	let standbyPoseType = "normal";
	if(isConfident) {
		standbyPoseType = "horizontal";
	}
	let tachieLeftArmName = '';
	let tachieRightArmName = '';
	let tachieHoppeName = '';
	let tachieSweatName = '';
	let displayTachieHoppe = false;
	let displayTachieSweat = false;
	let ignoreBukkakeEyes = false;
	
	
	if(!this.isWearingGlovesAndHat()) {
		this.setTachieHead('' + standbyPoseType);
		if(isAroused) {
			this.setTachieBoobs('naked_1_hard');
		}
		else {
			this.setTachieBoobs('naked_1');
		}
		tachieLeftArmName = 'naked_';
		tachieRightArmName = 'naked_';
		this.resetTachieHips();
	}
	else {
		this.setTachieHead('' + standbyPoseType);
		this.setPoseClothing();
	}
	
	this.setTachieHairExtension(standbyPoseType + '_');
	this.setTachieHatExtension(standbyPoseType + '_');
	this.setTachieStrayFaceExtension(standbyPoseType + '_');
	
	if(isConfident) {
		tachieLeftArmName += 'confident_1';
		tachieRightArmName += 'confident_1';

		//this.setTachieWeapon('confident_' + this.equips()[0].id);
		this.setTachieWeapon('confident_1');
		this.setTachieSemenLeftArmExtension('confident_');
		this.setTachieSemenRightArmExtension('confident_');
		this.setTachieSemenFaceExtension('horizontal_');
	}
	else {
		if(usingCounterStance || usingFocus || usingEyeOfTheMind) {
			tachieLeftArmName += '2';
		}
		else {
			tachieLeftArmName += '1';
		}
		tachieRightArmName += '1';
		
		this.setPoseWeapon();
		this.resetTachieSemenLeftArmExtension();
		this.resetTachieSemenRightArmExtension();
		this.setTachieSemenFaceExtension('normal_');
	}
	
	//frontA
	if(isOffBalanced) {
		if(isConfident) {
			this.setTachieFrontA('offbalanced_confident');
		}
		else {
			this.setTachieFrontA('offbalanced');
		}
	}
	
	//frontB
	if(isHorny) {
		this.setTachieFrontB('breath_1');
	}
	

	if(justOrgasmed) {
		if(orgasmlvl3)
			faceArray.push(50);
		else if(orgasmlvl2)
			faceArray.push(35);
		else
			faceArray.push(18);
	}
	else if(karrynJustUsedKiss) {
		if(generallvl3)
			faceArray.push(49);
		else if(generallvl2)
			faceArray.push(34);
		else
			faceArray.push(17);
	}
	else if(justGotKissed) {
		if(generallvl3)
			faceArray.push(48);
		else if(generallvl2)
			faceArray.push(33);
		else
			faceArray.push(16);
	}
	else if(usingOpenPleasure || karrynJustUsedReleaseDesire) {
		if(generallvl3)
			faceArray.push(47);
		else if(generallvl2)
			faceArray.push(32);
		else
			faceArray.push(3);
	}
	else if(karrynJustUsedCockStare) {
		if(generallvl3) 
			faceArray.push(45);
		else if(generallvl2)
			faceArray.push(31);
		else
			faceArray.push(13);
	}
	else if(karrynJustUsedTaunt) {
		if(starelvl3) 
			faceArray.push(46);
		else if(starelvl2)
			faceArray.push(31);
		else
			faceArray.push(14);
	}
	else if(karrynGotBukkaked) {
		if(bukkakelvl3) {
			faceArray.push(44);
		}
		else if(bukkakelvl2) {
			if(fatigueLvl3)
				faceArray.push(30);
			else if(fatigueLvl2)
				faceArray.push(29);
			else if(fatigueLvl1)
				faceArray.push(28);
			else
				faceArray.push(27);
		}
		else {
			if(fatigueLvl3)
				faceArray.push(12);
			else if(fatigueLvl2)
				faceArray.push(11);
			else if(fatigueLvl1)
				faceArray.push(10);
			else
				faceArray.push(9);
		}
	}
	else if(justGotHarassed) {
		if(generallvl3) {
			faceArray.push(44);
		}
		else if(generallvl2) {
			if(fatigueLvl3)
				faceArray.push(30);
			else if(fatigueLvl2)
				faceArray.push(29);
			else if(fatigueLvl1)
				faceArray.push(28);
			else
				faceArray.push(27);
		}
		else {
			if(fatigueLvl3)
				faceArray.push(12);
			else if(fatigueLvl2)
				faceArray.push(11);
			else if(fatigueLvl1)
				faceArray.push(10);
			else
				faceArray.push(9);
		}
	}
	else if(isHorny || karrynJustUsedFlaunt || karrynJustUsedCockPet) {
		if(generallvl3) {
			if(fatigueLvl3)
				faceArray.push(46);
			else if(fatigueLvl2)
				faceArray.push(45);
			else if(fatigueLvl1)
				faceArray.push(44);
			else
				faceArray.push(43);
		}
		else if(generallvl2) {
			if(fatigueLvl3)
				faceArray.push(30);
			else if(fatigueLvl2)
				faceArray.push(29);
			else if(fatigueLvl1)
				faceArray.push(28);
			else
				faceArray.push(27);
		}
		else {
			if(fatigueLvl3)
				faceArray.push(26);
			else if(fatigueLvl2)
				faceArray.push(25);
			else if(fatigueLvl1)
				faceArray.push(24);
			else
				faceArray.push(23);
		}
	}
	else if(isOffBalanced) {
		if(generallvl3) {
			if(fatigueLvl3 || fatigueLvl2)
				faceArray.push(39);
			else
				faceArray.push(38);
		}
		else if(generallvl2) {
			if(fatigueLvl3 || fatigueLvl2)
				faceArray.push(22);
			else
				faceArray.push(21);
		}
		else {
			if(fatigueLvl3 || fatigueLvl2)
				faceArray.push(4);
			else
				faceArray.push(3);
		}
	}
	else {
		if(generallvl3) {
			if(fatigueLvl3)
				faceArray.push(39);
			else if(fatigueLvl2)
				faceArray.push(38);
			else if(fatigueLvl1)
				faceArray.push(37);
			else
				faceArray.push(36);
		}
		else if(generallvl2) {
			if(fatigueLvl3)
				faceArray.push(22);
			else if(fatigueLvl2)
				faceArray.push(21);
			else if(fatigueLvl1)
				faceArray.push(20);
			else
				faceArray.push(19);
		}
		else {
			if(fatigueLvl3)
				faceArray.push(4);
			else if(fatigueLvl2)
				faceArray.push(3);
			else if(fatigueLvl1)
				faceArray.push(2);
			else
				faceArray.push(1);
		}
	}
	
	this.removeState(STATE_STANDBY_EMOTE_USED_BATTLE_SKILLS_ID);
	this.removeState(STATE_STANDBY_EMOTE_USED_TAUNT_ID);
	this.removeState(STATE_STANDBY_EMOTE_USED_FLAUNT_ID);
	this.removeState(STATE_STANDBY_EMOTE_USED_RELEASE_DESIRE_ID);
	
	
	let faceId = faceArray[Math.randomInt(faceArray.length)];
	let eyebrowsArray = [];
	let eyesArray = [];
	let mouthArray = [];

	
	switch(faceId) {
		case 1:
			eyebrowsArray.push('kiri1');
			eyesArray.push('mae1');
			eyesArray.push('mae2');
			if(!karrynJustUsedCombatSkill) {
				mouthArray.push('nico1');
				mouthArray.push('nico2');
				mouthArray.push('hu1');
			}
			else {
				mouthArray.push('skill_ho1');
				mouthArray.push('skill_ho2');
				mouthArray.push('skill_nico1');
			}
			if(isAroused) {
				tachieHoppeName += '1';
				displayTachieHoppe = true;
			}
			break;
		case 2:
			eyebrowsArray.push('kiri1');
			eyesArray.push('mae1');
			eyesArray.push('mae2');
			if(!karrynJustUsedCombatSkill) {
				mouthArray.push('mu2');
				mouthArray.push('mu3');
				mouthArray.push('hu1');
			}
			else {
				mouthArray.push('skill_ho1');
				mouthArray.push('skill_ho2');
			}
			if(isAroused) {
				tachieHoppeName += '1';
				displayTachieHoppe = true;
			}
			tachieSweatName += '1';
			displayTachieSweat = true;
			break;
		case 3:
			eyebrowsArray.push('oko1');
			eyebrowsArray.push('oko2');
			eyesArray.push('mae2');
			eyesArray.push('mae3');
			if(!karrynJustUsedCombatSkill) {
				mouthArray.push('ku1');
				mouthArray.push('mu3');
				mouthArray.push('mu4');
				mouthArray.push('wa1');
			}
			else {
				mouthArray.push('skill_wa1');
				mouthArray.push('skill_ho1');
				mouthArray.push('skill_ho2');
			}
			if(isAroused) {
				tachieHoppeName += '1';
				displayTachieHoppe = true;
			}
			tachieSweatName += '2';
			displayTachieSweat = true;
			break;
		case 4:
			eyebrowsArray.push('oko1');
			eyebrowsArray.push('koma1');
			eyebrowsArray.push('koma2');
			eyesArray.push('mae3');
			eyesArray.push('mae4');
			if(!karrynJustUsedCombatSkill) {
				mouthArray.push('ku2');
				mouthArray.push('ku3');
				mouthArray.push('mu4');
				mouthArray.push('wa2');
			}
			else {
				mouthArray.push('skill_wa1');
				mouthArray.push('skill_ho1');
				mouthArray.push('skill_ho2');
			}
			if(isAroused) {
				tachieHoppeName += '1';
				displayTachieHoppe = true;
			}
			tachieSweatName += '3';
			displayTachieSweat = true;
			break;
		case 5:
			eyebrowsArray.push('kiri2');
			eyesArray.push('mae2');
			if(!karrynJustUsedCombatSkill) {
				mouthArray.push('nico1');
				mouthArray.push('nico2');
				mouthArray.push('hu1');
				mouthArray.push('mu1');
			}
			else {
				mouthArray.push('skill_ho1');
				mouthArray.push('skill_ho2');
				mouthArray.push('skill_nico1');
				mouthArray.push('skill_nico2');
			}
			if(isAroused || isHorny) {
				tachieHoppeName += '1';
				displayTachieHoppe = true;
			}
			break;
		case 6:
			eyebrowsArray.push('kiri1');
			eyesArray.push('mae2');
			if(!karrynJustUsedCombatSkill) {
				mouthArray.push('nico1');
				mouthArray.push('mu2');
				mouthArray.push('mu3');
				mouthArray.push('hu1');
			}
			else {
				mouthArray.push('skill_ho1');
				mouthArray.push('skill_ho2');
			}
			if(isAroused || isHorny) {
				tachieHoppeName += '1';
				displayTachieHoppe = true;
			}
			tachieSweatName += '1';
			displayTachieSweat = true;
			break;	
		case 7:
			eyebrowsArray.push('oko2');
			eyesArray.push('mae2');
			eyesArray.push('mae3');
			if(!karrynJustUsedCombatSkill) {
				mouthArray.push('mu2');
				mouthArray.push('mu3');
				mouthArray.push('wa1');
			}
			else {
				mouthArray.push('skill_wa1');
				mouthArray.push('skill_ho1');
				mouthArray.push('skill_ho2');
			}
			if(isAroused || isHorny) {
				tachieHoppeName += '1';
				displayTachieHoppe = true;
			}
			tachieSweatName += '2';
			displayTachieSweat = true;
			break;	
		case 8:
			eyebrowsArray.push('oko1');
			eyebrowsArray.push('koma1');
			eyebrowsArray.push('koma2');
			eyesArray.push('mae3');
			if(!karrynJustUsedCombatSkill) {
				mouthArray.push('ku1');
				mouthArray.push('ku2');
				mouthArray.push('mu4');
				mouthArray.push('hu1');
			}
			else {
				mouthArray.push('skill_wa1');
				mouthArray.push('skill_ho1');
				mouthArray.push('skill_ho2');
			}
			if(isAroused || isHorny) {
				tachieHoppeName += '1';
				displayTachieHoppe = true;
			}
			tachieSweatName += '3';
			displayTachieSweat = true;
			break;	
		case 9:
			eyebrowsArray.push('oko1');
			eyesArray.push('mae2');
			eyesArray.push('mae3');
			mouthArray.push('ku1');
			mouthArray.push('ku2');
			mouthArray.push('wa1');
			mouthArray.push('wa2');
			if(isAroused ) {
				tachieHoppeName += '1';
				displayTachieHoppe = true;
			}
			break;
		case 10:
			eyebrowsArray.push('oko1');
			eyebrowsArray.push('oko2');
			eyesArray.push('mae3');
			eyesArray.push('mae4');
			mouthArray.push('ku1');
			mouthArray.push('ku2');
			mouthArray.push('wa1');
			mouthArray.push('wa2');
			if(isAroused ) {
				tachieHoppeName += '1';
				displayTachieHoppe = true;
			}
			tachieSweatName += '1';
			displayTachieSweat = true;
			break;				
		case 11:
			eyebrowsArray.push('oko2');
			eyebrowsArray.push('koma2');
			eyesArray.push('mae3');
			eyesArray.push('mae4');
			mouthArray.push('ku1');
			mouthArray.push('ku2');
			mouthArray.push('wa1');
			mouthArray.push('wa2');
			if(isAroused ) {
				tachieHoppeName += '1';
				displayTachieHoppe = true;
			}
			tachieSweatName += '2';
			displayTachieSweat = true;
			break;	
		case 12:
			eyebrowsArray.push('koma1');
			eyebrowsArray.push('koma2');
			eyesArray.push('mae4');
			eyesArray.push('toji1');
			mouthArray.push('ku2');
			mouthArray.push('ku3');
			mouthArray.push('wa2');
			if(isAroused ) {
				tachieHoppeName += '1';
				displayTachieHoppe = true;
			}
			tachieSweatName += '3';
			displayTachieSweat = true;
			break;	
		case 13:
			eyebrowsArray.push('oko1');
			eyesArray.push('mae2');
			eyesArray.push('mae3');
			mouthArray.push('ku2');
			mouthArray.push('wa1');
			mouthArray.push('wa2');
			if(isAroused ) {
				tachieHoppeName += '1';
				displayTachieHoppe = true;
			}
			if(fatigueLvl3 || fatigueLvl2) {
				tachieSweatName += '3';
				displayTachieSweat = true;
			}
			else {
				tachieSweatName += '2';
				displayTachieSweat = true;
			}
			break;	
		case 14:
			eyebrowsArray.push('kiri1');
			eyebrowsArray.push('oko1');
			eyesArray.push('mae2');
			eyesArray.push('mae3');
			mouthArray.push('nico2');
			mouthArray.push('nico3');
			mouthArray.push('skill_nico1');
			mouthArray.push('skill_taunt1');
			if(isAroused ) {
				tachieHoppeName += '1';
				displayTachieHoppe = true;
			}
			if(fatigueLvl3) {
				tachieSweatName += '3';
				displayTachieSweat = true;
			}
			else if(fatigueLvl2) {
				tachieSweatName += '2';
				displayTachieSweat = true;
			}
			else if(fatigueLvl1) {
				tachieSweatName += '1';
				displayTachieSweat = true;
			}
			break;
		case 15:
			eyebrowsArray.push('koma1');
			eyebrowsArray.push('koma2');
			eyesArray.push('mae2');
			eyesArray.push('mae3');
			mouthArray.push('nico2');
			mouthArray.push('skill_nico1');
			mouthArray.push('skill_nico2');
			mouthArray.push('skill_taunt1');
			tachieHoppeName += '1';
			displayTachieHoppe = true;			
			if(fatigueLvl3) {
				tachieSweatName += '3';
				displayTachieSweat = true;
			}
			else if(fatigueLvl2) {
				tachieSweatName += '2';
				displayTachieSweat = true;
			}
			else if(fatigueLvl1) {
				tachieSweatName += '1';
				displayTachieSweat = true;
			}
			break;
		case 16:
			eyebrowsArray.push('koma1');
			eyebrowsArray.push('koma2');
			eyebrowsArray.push('oko1');
			eyebrowsArray.push('oko2');
			eyesArray.push('mae4');
			eyesArray.push('toji1');
			mouthArray.push('chu1');
			mouthArray.push('chu2');
			mouthArray.push('hu1');
			mouthArray.push('mu1');
			tachieHoppeName += '1';
			displayTachieHoppe = true;			
			if(fatigueLvl3 || fatigueLvl2) {
				tachieSweatName += '3';
				displayTachieSweat = true;
			}
			else {
				tachieSweatName += '2';
				displayTachieSweat = true;
			}
			break;
		case 17:
			eyebrowsArray.push('koma1');
			eyebrowsArray.push('koma2');
			eyebrowsArray.push('kiri1');
			eyebrowsArray.push('kiri2');
			eyesArray.push('mae2');
			eyesArray.push('mae3');
			eyesArray.push('mae4');
			mouthArray.push('chu1');
			mouthArray.push('chu2');
			mouthArray.push('skill_chu1');
			mouthArray.push('skill_chu2');
			tachieHoppeName += '1';
			displayTachieHoppe = true;			
			if(fatigueLvl3) {
				tachieSweatName += '3';
				displayTachieSweat = true;
			}
			else if(fatigueLvl2) {
				tachieSweatName += '2';
				displayTachieSweat = true;
			}
			else if(fatigueLvl1) {
				tachieSweatName += '1';
				displayTachieSweat = true;
			}
			break;
		case 18:
			eyebrowsArray.push('koma1');
			eyebrowsArray.push('koma2');
			eyebrowsArray.push('oko1');
			eyebrowsArray.push('oko2');
			eyesArray.push('mae4');
			eyesArray.push('toji1');
			mouthArray.push('wa2');
			mouthArray.push('skill_ho2');
			mouthArray.push('skill_wa1');
			mouthArray.push('skill_ahe1');
			tachieHoppeName += '1';
			displayTachieHoppe = true;			
			if(fatigueLvl3 || fatigueLvl2) {
				tachieSweatName += '3';
				displayTachieSweat = true;
			}
			else {
				tachieSweatName += '2';
				displayTachieSweat = true;
			}
			break;
		case 19:
			eyebrowsArray.push('kiri1');
			eyebrowsArray.push('kiri2');
			eyesArray.push('mae1');
			eyesArray.push('mae2');
			if(!karrynJustUsedCombatSkill) {
				mouthArray.push('nico1');
				mouthArray.push('nico2');
				mouthArray.push('nico3');
			}
			else {
				mouthArray.push('skill_nico1');
				mouthArray.push('skill_nico2');
				mouthArray.push('skill_nico3');
			}
			if(isAroused) {
				tachieHoppeName += '1';
				displayTachieHoppe = true;
			}
			break;
		case 20:
			eyebrowsArray.push('kiri1');
			eyesArray.push('mae1');
			eyesArray.push('mae2');
			if(!karrynJustUsedCombatSkill) {
				mouthArray.push('nico1');
				mouthArray.push('nico2');
				mouthArray.push('hu1');
				mouthArray.push('mu1');
			}
			else {
				mouthArray.push('skill_nico1');
				mouthArray.push('skill_nico2');
				mouthArray.push('skill_ho2');
			}
			if(isAroused) {
				tachieHoppeName += '1';
				displayTachieHoppe = true;
			}
			break;
		case 21:
			if(!isMasochist) {
				eyebrowsArray.push('oko1');
				eyebrowsArray.push('oko2');
			}
			else {
				eyebrowsArray.push('koma1');
				eyebrowsArray.push('koma2');
			}
			eyesArray.push('mae2');
			eyesArray.push('mae3');
			if(!karrynJustUsedCombatSkill) {
				mouthArray.push('nico2');
				mouthArray.push('wa1');
				mouthArray.push('mu3');
				mouthArray.push('mu1');
			}
			else {
				mouthArray.push('skill_nico1');
				mouthArray.push('skill_ho1');
				mouthArray.push('skill_ho2');
			}
			if(isAroused) {
				tachieHoppeName += '1';
				displayTachieHoppe = true;
			}
			tachieSweatName += '2';
			displayTachieSweat = true;
			break;
		case 22:
			if(!isMasochist) {
				eyebrowsArray.push('oko1');
				eyebrowsArray.push('oko2');
				eyebrowsArray.push('koma1');
				eyebrowsArray.push('koma2');
			}
			else {
				eyebrowsArray.push('koma1');
			}
			eyesArray.push('mae3');
			eyesArray.push('mae4');
			if(!karrynJustUsedCombatSkill) {
				mouthArray.push('ku1');
				mouthArray.push('ku2');
				mouthArray.push('mu2');
				mouthArray.push('hu1');
			}
			else if(isMasochist) {
				mouthArray.push('ahe2');
			}
			else {
				mouthArray.push('skill_nico1');
				mouthArray.push('skill_ho1');
				mouthArray.push('skill_ho2');
			}
			if(isAroused) {
				tachieHoppeName += '1';
				displayTachieHoppe = true;
			}
			tachieSweatName += '3';
			displayTachieSweat = true;
			break;
		case 23:
			if(!isMasochist && !isSadist) {
				eyebrowsArray.push('nico1');
			}
			else if(isSadist) {
				eyebrowsArray.push('oko2');
			}
			else {
				eyebrowsArray.push('koma2');
			}
			if(!isSadist) {
				eyesArray.push('mae2');
			}
			else {
				eyesArray.push('sado1');
			}
			if(!karrynJustUsedCombatSkill) {
				mouthArray.push('nico1');
				mouthArray.push('nico2');
				mouthArray.push('nico3');
				mouthArray.push('pero1');
			}
			else {
				mouthArray.push('skill_nico1');
				mouthArray.push('skill_nico2');
				mouthArray.push('skill_nico3');
				mouthArray.push('pero2');
			}
			tachieHoppeName += '1';
			displayTachieHoppe = true;
			break;
		case 24:
			if(!isMasochist && !isSadist) {
				eyebrowsArray.push('kiri2');
			}
			else if(isSadist) {
				eyebrowsArray.push('oko2');
			}
			else {
				eyebrowsArray.push('koma2');
			}
			if(!isMasochist && !isSadist) {
				eyesArray.push('mae2');
			}
			else if(isSadist) {
				eyesArray.push('sado1');
			}
			else {
				eyesArray.push('mae1');
			}
			if(!karrynJustUsedCombatSkill) {
				mouthArray.push('nico1');
				mouthArray.push('nico2');
				mouthArray.push('mu1');
				mouthArray.push('pero4');
			}
			else {
				mouthArray.push('skill_nico1');
				mouthArray.push('skill_nico2');
			}
			tachieHoppeName += '1';
			displayTachieHoppe = true;
			tachieSweatName += '1';
			displayTachieSweat = true;
			break;
		case 25:
			if(!isMasochist && !isSadist) {
				eyebrowsArray.push('kiri1');
			}
			else if(isSadist) {
				eyebrowsArray.push('oko1');
			}
			else {
				eyebrowsArray.push('koma1');
			}
			if(!isMasochist && !isSadist) {
				eyesArray.push('mae3');
			}
			else if(isSadist) {
				eyesArray.push('sado2');
			}
			else {
				eyesArray.push('mae2');
			}
			if(!karrynJustUsedCombatSkill) {
				mouthArray.push('mu1');
				mouthArray.push('hu1');
				mouthArray.push('wa1');
			}
			else {
				mouthArray.push('skill_nico1');
				mouthArray.push('skill_ho1');
				mouthArray.push('skill_ho2');
			}
			tachieHoppeName += '1';
			displayTachieHoppe = true;
			tachieSweatName += '2';
			displayTachieSweat = true;
			break;
		case 26:
			eyebrowsArray.push('koma1');
			
			if(!isMasochist && !isSadist) {
				eyesArray.push('mae3');
			}
			else if(isSadist) {
				eyesArray.push('sado2');
			}
			else {
				eyesArray.push('maso1');
			}
			if(!karrynJustUsedCombatSkill && !isMasochist && !isSadist) {
				mouthArray.push('mu1');
				mouthArray.push('mu2');
				mouthArray.push('mu3');
				mouthArray.push('wa1');
			}
			else if(isSadist) {
				mouthArray.push('ku1');
				mouthArray.push('ku2');
				mouthArray.push('ku3');
			}
			else if(isMasochist) {
				mouthArray.push('nico3');
				mouthArray.push('pero1');
				mouthArray.push('pero2');
			}
			else {
				mouthArray.push('skill_wa1');
				mouthArray.push('skill_nico2');
				mouthArray.push('skill_ho2');
			}
			tachieHoppeName += '1';
			displayTachieHoppe = true;
			tachieSweatName += '2';
			displayTachieSweat = true;
			break;
		case 27:
			eyebrowsArray.push('kiri2');
			eyebrowsArray.push('oko2');
			eyebrowsArray.push('koma2');
			eyesArray.push('mae1');
			eyesArray.push('mae2');
			eyesArray.push('mae4');
			mouthArray.push('hu1');
			mouthArray.push('nico2');
			mouthArray.push('skill_ho1');
			tachieHoppeName += '1';
			displayTachieHoppe = true;
			break;	
		case 28:
			eyebrowsArray.push('kiri1');
			eyebrowsArray.push('kiri2');
			eyebrowsArray.push('oko2');
			eyebrowsArray.push('koma2');
			eyesArray.push('mae2');
			eyesArray.push('mae4');
			mouthArray.push('wa1');
			mouthArray.push('skill_ho1');
			mouthArray.push('skill_ho2');
			tachieHoppeName += '1';
			displayTachieHoppe = true;
			tachieSweatName += '1';
			displayTachieSweat = true;
			break;	
		case 29:
			eyebrowsArray.push('kiri1');
			eyebrowsArray.push('koma2');
			eyebrowsArray.push('oko2');
			eyebrowsArray.push('koma2');
			eyesArray.push('mae3');
			eyesArray.push('mae4');
			mouthArray.push('wa1');
			mouthArray.push('skill_ho1');
			mouthArray.push('skill_ho2');
			tachieHoppeName += '1';
			displayTachieHoppe = true;
			tachieSweatName += '2';
			displayTachieSweat = true;
			break;	
		case 30:
			eyebrowsArray.push('kiri1');
			eyebrowsArray.push('koma2');
			eyesArray.push('toji1');
			eyesArray.push('mae4');
			mouthArray.push('wa1');
			mouthArray.push('skill_ho1');
			mouthArray.push('skill_ho2');
			mouthArray.push('skill_wa1');
			mouthArray.push('ku1');
			tachieHoppeName += '1';
			displayTachieHoppe = true;
			tachieSweatName += '3';
			displayTachieSweat = true;
			break;	
		case 31:
			if(karrynJustUsedCockStare) {
				eyebrowsArray.push('koma1');
				eyebrowsArray.push('koma2');
			}
			else {
				eyebrowsArray.push('nico1');
				eyebrowsArray.push('nico2');
				eyebrowsArray.push('kiri2');
			}
			eyesArray.push('mae2');
			eyesArray.push('mae3');
			mouthArray.push('nico2');
			mouthArray.push('nico3');
			mouthArray.push('skill_nico1');
			mouthArray.push('skill_nico3');
			mouthArray.push('skill_taunt1');
			mouthArray.push('skill_taunt2');
			if(isAroused) {
				tachieHoppeName += '1';
				displayTachieHoppe = true;
			}
			if(fatigueLvl3) {
				tachieSweatName += '3';
				displayTachieSweat = true;
			}
			else if(fatigueLvl2) {
				tachieSweatName += '2';
				displayTachieSweat = true;
			}
			else if(fatigueLvl1) {
				tachieSweatName += '1';
				displayTachieSweat = true;
			}
			break;
		case 32:
			eyebrowsArray.push('koma1');
			eyebrowsArray.push('koma2');
			eyebrowsArray.push('nico1');
			eyebrowsArray.push('nico2');
			eyesArray.push('mae2');
			eyesArray.push('mae1');
			mouthArray.push('pero3');
			mouthArray.push('skill_nico2');
			mouthArray.push('skill_nico3');
			mouthArray.push('skill_taunt1');
			mouthArray.push('skill_nico4');
			tachieHoppeName += '1';
			displayTachieHoppe = true;
			if(fatigueLvl3) {
				tachieSweatName += '3';
				displayTachieSweat = true;
			}
			else if(fatigueLvl2) {
				tachieSweatName += '2';
				displayTachieSweat = true;
			}
			else if(fatigueLvl1) {
				tachieSweatName += '1';
				displayTachieSweat = true;
			}
			break;
		case 33:
			eyebrowsArray.push('koma2');
			eyebrowsArray.push('nico1');
			eyebrowsArray.push('nico2');
			eyesArray.push('mae2');
			eyesArray.push('mae3');
			eyesArray.push('mae4');
			eyesArray.push('toji1');
			mouthArray.push('chu1');
			mouthArray.push('chu2');
			mouthArray.push('skill_chu1');
			mouthArray.push('mu1');
			tachieHoppeName += '1';
			displayTachieHoppe = true;
			if(fatigueLvl3) {
				tachieSweatName += '3';
				displayTachieSweat = true;
			}
			else if(fatigueLvl2) {
				tachieSweatName += '2';
				displayTachieSweat = true;
			}
			else if(fatigueLvl1) {
				tachieSweatName += '1';
				displayTachieSweat = true;
			}
			break;	
		case 34:
			eyebrowsArray.push('kiri2');
			eyebrowsArray.push('nico1');
			eyebrowsArray.push('nico2');
			eyesArray.push('mae2');
			eyesArray.push('mae3');
			eyesArray.push('toji1');
			mouthArray.push('chu1');
			mouthArray.push('chu2');
			mouthArray.push('skill_chu1');
			mouthArray.push('skill_chu2');
			mouthArray.push('skill_chu3');
			tachieHoppeName += '1';
			displayTachieHoppe = true;
			if(fatigueLvl3) {
				tachieSweatName += '3';
				displayTachieSweat = true;
			}
			else if(fatigueLvl2) {
				tachieSweatName += '2';
				displayTachieSweat = true;
			}
			else if(fatigueLvl1) {
				tachieSweatName += '1';
				displayTachieSweat = true;
			}
			break;		
		case 35:
			eyebrowsArray.push('oko2');
			eyebrowsArray.push('koma1');
			eyebrowsArray.push('koma2');
			eyesArray.push('mae4');
			eyesArray.push('toji1');
			eyesArray.push('ahe1');
			eyesArray.push('heartahe1');
			mouthArray.push('wa2');
			mouthArray.push('ahe1');
			mouthArray.push('ahe2');
			mouthArray.push('skill_ho2');
			mouthArray.push('skill_wa1');
			mouthArray.push('skill_nico3');
			tachieHoppeName += '1';
			displayTachieHoppe = true;
			if(fatigueLvl3 || fatigueLvl2) {
				tachieSweatName += '3';
				displayTachieSweat = true;
			}
			else {
				tachieSweatName += '2';
				displayTachieSweat = true;
			}
			break;		
		case 36:
			eyebrowsArray.push('nico1');
			eyebrowsArray.push('nico2');
			eyebrowsArray.push('kiri2');
			if(!karrynJustUsedCombatSkill) {
				eyesArray.push('mae1');
				eyesArray.push('mae2');
			}
			else {
				eyesArray.push('mae2');
				eyesArray.push('mae3');
				eyesArray.push('mae4');
				eyesArray.push('toji1');
				eyesArray.push('toji2');
				eyesArray.push('heart1');
				eyesArray.push('heart2');
			}
			if(!karrynJustUsedCombatSkill) {
				mouthArray.push('nico1');
				mouthArray.push('nico2');
				mouthArray.push('nico3');
				mouthArray.push('mu1');
				mouthArray.push('pero1');
				mouthArray.push('pero4');
			}
			else {
				mouthArray.push('skill_nico1');
				mouthArray.push('skill_nico2');
				mouthArray.push('skill_nico3');
				mouthArray.push('skill_nico4');
				mouthArray.push('pero3');
			}
			if(isAroused) {
				tachieHoppeName += '1';
				displayTachieHoppe = true;
			}
			break;		
		case 37:
			eyebrowsArray.push('nico1');
			eyebrowsArray.push('kiri2');
			if(!karrynJustUsedCombatSkill) {
				eyesArray.push('mae1');
				eyesArray.push('mae2');
			}
			else {
				eyesArray.push('mae2');
				eyesArray.push('mae3');
				eyesArray.push('mae4');
				eyesArray.push('toji2');
				eyesArray.push('heart2');
			}
			if(!karrynJustUsedCombatSkill) {
				mouthArray.push('nico1');
				mouthArray.push('nico2');
				mouthArray.push('nico3');
				mouthArray.push('mu1');
				mouthArray.push('pero4');
			}
			else {
				mouthArray.push('skill_nico1');
				mouthArray.push('skill_nico2');
				mouthArray.push('skill_nico3');
				mouthArray.push('skill_nico4');
			}
			if(isAroused) {
				tachieHoppeName += '1';
				displayTachieHoppe = true;
			}
			tachieSweatName += '1';
			displayTachieSweat = true;
			break;	
		case 38:
			if(!isMasochist) {
				eyebrowsArray.push('oko2');
				eyebrowsArray.push('kiri1');
			}
			else {
				eyebrowsArray.push('koma1');
			}
			if(!karrynJustUsedCombatSkill && !isMasochist) {
				eyesArray.push('mae2');
				eyesArray.push('mae3');
			}
			else if(isMasochist) {
				eyesArray.push('maso1');
				eyesArray.push('maso2');
			}
			else {
				eyesArray.push('mae1');
				eyesArray.push('mae2');
				eyesArray.push('mae4');
				eyesArray.push('heart2');
			}
			if(!karrynJustUsedCombatSkill) {
				mouthArray.push('nico1');
				mouthArray.push('nico2');
				mouthArray.push('nico3');
				mouthArray.push('wa1');
			}
			else {
				mouthArray.push('skill_nico1');
				mouthArray.push('skill_nico2');
				mouthArray.push('skill_nico3');
				mouthArray.push('pero2');
			}
			if(isAroused) {
				tachieHoppeName += '1';
				displayTachieHoppe = true;
			}
			tachieSweatName += '2';
			displayTachieSweat = true;
			break;		
		case 39:
			eyebrowsArray.push('koma1');
			eyebrowsArray.push('koma2');
			if(!isMasochist) {
				eyesArray.push('mae3');
				eyesArray.push('mae4');
			}
			else {
				eyesArray.push('maso1');
				eyesArray.push('maso2');
			}
			if(!karrynJustUsedCombatSkill && !isMasochist) {
				mouthArray.push('ku1');
				mouthArray.push('mu1');
				mouthArray.push('mu4');
				mouthArray.push('hu1');
				mouthArray.push('wa1');
			}
			else if(isMasochist) {
				mouthArray.push('nico3');
				mouthArray.push('ahe2');
				mouthArray.push('pero1');
			}
			else {
				mouthArray.push('skill_nico1');
				mouthArray.push('skill_nico4');
				mouthArray.push('skill_ahe1');
				mouthArray.push('skill_ho2');
			}
			if(isAroused) {
				tachieHoppeName += '1';
				displayTachieHoppe = true;
			}
			tachieSweatName += '3';
			displayTachieSweat = true;
			break;	
		case 40:
			if(!isMasochist && !isSadist) {
				eyebrowsArray.push('nico1');
				eyebrowsArray.push('nico2');
				eyebrowsArray.push('kiri2');
			}
			else if(isSadist) {
				eyebrowsArray.push('oko2');
				eyebrowsArray.push('sado1');
			}
			else {
				eyebrowsArray.push('koma2');
				eyebrowsArray.push('koma1');
			}
			if(!isMasochist) {
				eyesArray.push('mae3');
				eyesArray.push('heart2');
			}
			else {
				eyesArray.push('sado1');
			}
			if(!karrynJustUsedCombatSkill) {
				mouthArray.push('nico3');
				mouthArray.push('pero1');
				mouthArray.push('pero2');
				mouthArray.push('pero3');
				mouthArray.push('pero4');
			}
			else {
				mouthArray.push('skill_nico3');
				mouthArray.push('skill_nico4');
				mouthArray.push('skill_ahe1');
				mouthArray.push('ahe1');
				mouthArray.push('ahe2');
			}
			tachieHoppeName += '1';
			displayTachieHoppe = true;
			break;
		case 41:
			if(!isMasochist && !isSadist) {
				eyebrowsArray.push('nico1');
				eyebrowsArray.push('kiri1');
				eyebrowsArray.push('kiri2');
			}
			else if(isSadist) {
				eyebrowsArray.push('oko2');
				eyebrowsArray.push('sado1');
			}
			else {
				eyebrowsArray.push('koma2');
			}
			if(!isMasochist && !isSadist) {
				eyesArray.push('mae3');
				eyesArray.push('mae2');
			}
			else if(isSadist) {
				eyesArray.push('sado1');
				eyesArray.push('sado2');
			}
			else {
				eyesArray.push('mae1');
			}
			if(!karrynJustUsedCombatSkill) {
				mouthArray.push('nico2');
				mouthArray.push('nico3');
				mouthArray.push('pero1');
				mouthArray.push('pero4');
			}
			else {
				mouthArray.push('skill_nico3');
				mouthArray.push('skill_nico4');
				mouthArray.push('skill_nico2');
				mouthArray.push('skill_nico1');
			}
			tachieHoppeName += '1';
			displayTachieHoppe = true;
			break;
		case 42:
			if(!isMasochist && !isSadist) {
				eyebrowsArray.push('kiri1');
				eyebrowsArray.push('kiri2');
			}
			else if(isSadist) {
				eyebrowsArray.push('oko1');
			}
			else {
				eyebrowsArray.push('koma1');
			}
			if(!isMasochist && !isSadist) {
				eyesArray.push('mae3');
				eyesArray.push('mae2');
			}
			else if(isSadist) {
				eyesArray.push('sado1');
				eyesArray.push('sado2');
			}
			else {
				eyesArray.push('maso1');
				eyesArray.push('heart2');
			}
			if(!karrynJustUsedCombatSkill) {
				mouthArray.push('nico2');
				mouthArray.push('nico3');
				mouthArray.push('nico1');
			}
			else {
				mouthArray.push('pero3');
				mouthArray.push('skill_nico4');
				mouthArray.push('skill_nico2');
				mouthArray.push('skill_nico1');
			}
			tachieHoppeName += '1';
			displayTachieHoppe = true;
			tachieSweatName += '1';
			displayTachieSweat = true;
			break;
		case 43:
			eyebrowsArray.push('koma1');
			eyebrowsArray.push('koma2');
			if(!isMasochist && !isSadist) {
				eyesArray.push('mae3');
				eyesArray.push('mae2');
				eyesArray.push('mae4');
			}
			else if(isSadist) {
				eyesArray.push('sado1');
				eyesArray.push('sado2');
			}
			else {
				eyesArray.push('maso1');
				eyesArray.push('maso2');
				eyesArray.push('heart1');
				eyesArray.push('heart2');
			}
			if(!karrynJustUsedCombatSkill && !isMasochist && !isSadist) {
				mouthArray.push('nico2');
				mouthArray.push('mu1');
				mouthArray.push('hu1');
				mouthArray.push('nico1');
			}
			else if(isSadist) {
				mouthArray.push('ku1');
				mouthArray.push('mu4');
				mouthArray.push('ku2');
			}
			else if(isMasochist) {
				mouthArray.push('nico3');
				mouthArray.push('pero4');
				mouthArray.push('ahe1');
				mouthArray.push('ahe2');
				mouthArray.push('skill_nico4');
			}
			else {
				mouthArray.push('skill_ho2');
				mouthArray.push('skill_ho1');
				mouthArray.push('skill_nico2');
				mouthArray.push('skill_nico1');
			}
			tachieHoppeName += '1';
			displayTachieHoppe = true;
			tachieSweatName += '2';
			displayTachieSweat = true;
			break;
		case 44:
			if(fatigueLvl3 || fatigueLvl2) {
				eyebrowsArray.push('nico1');
				eyebrowsArray.push('nico2');
				eyebrowsArray.push('koma2');
			}
			else {
				eyebrowsArray.push('koma1');
				eyebrowsArray.push('koma2');
				eyebrowsArray.push('kiri2');
			}
			if(isMasochist && Math.random() < 0.3) {
				eyesArray.push('maso1');
			}
			else {
				eyesArray.push('mae3');
				eyesArray.push('mae4');
				eyesArray.push('toji1');
				eyesArray.push('toji2');
				eyesArray.push('heart2');
			}
			mouthArray.push('nico3');
			mouthArray.push('pero1');
			mouthArray.push('pero2');
			mouthArray.push('pero3');
			mouthArray.push('pero4');
			mouthArray.push('ahe1');
			mouthArray.push('wa1');
			mouthArray.push('skill_nico2');
			mouthArray.push('skill_nico4');
			if(isAroused) {
				tachieHoppeName += '1';
				displayTachieHoppe = true;
			}
			if(fatigueLvl3) {
				tachieSweatName += '2';
				displayTachieSweat = true;
			}
			else if(fatigueLvl2) {
				tachieSweatName += '1';
				displayTachieSweat = true;
			}
			break;
		case 45:
			eyebrowsArray.push('nico1');
			eyebrowsArray.push('nico2');
			eyebrowsArray.push('kiri2');
			eyebrowsArray.push('koma2');
			eyesArray.push('mae2');
			eyesArray.push('heart1');
			eyesArray.push('heart2');
			mouthArray.push('skill_nico1');
			mouthArray.push('skill_nico2');
			mouthArray.push('skill_nico3');
			mouthArray.push('skill_nico4');
			mouthArray.push('pero1');
			mouthArray.push('pero2');
			mouthArray.push('pero3');
			mouthArray.push('pero4');
			mouthArray.push('hu1');
			mouthArray.push('wa1');
			mouthArray.push('mu1');
			if(isAroused) {
				tachieHoppeName += '1';
				displayTachieHoppe = true;
			}
			if(fatigueLvl3) {
				tachieSweatName += '2';
				displayTachieSweat = true;
			}
			else if(fatigueLvl2) {
				tachieSweatName += '1';
				displayTachieSweat = true;
			}
			break;
		case 46:
			if(!isSadist) {
				eyebrowsArray.push('nico2');
				eyebrowsArray.push('kiri2');
				eyebrowsArray.push('nico1');

			}
			else {
				eyebrowsArray.push('kiri1');
				eyebrowsArray.push('oko1');
				eyebrowsArray.push('sado1');
			}
			if(!isSadist) {
				eyesArray.push('mae2');
				eyesArray.push('mae3');
			}
			else {
				eyesArray.push('sado2');
			}
			mouthArray.push('skill_nico1');
			mouthArray.push('skill_nico3');
			mouthArray.push('skill_taunt1');
			mouthArray.push('skill_taunt2');
			mouthArray.push('skill_taunt3');
			if(isAroused) {
				tachieHoppeName += '1';
				displayTachieHoppe = true;
			}
			if(fatigueLvl3) {
				tachieSweatName += '2';
				displayTachieSweat = true;
			}
			else if(fatigueLvl2) {
				tachieSweatName += '1';
				displayTachieSweat = true;
			}
			break;
		case 47:
			eyebrowsArray.push('nico2');
			eyebrowsArray.push('nico1');
			eyebrowsArray.push('koma1');
			eyebrowsArray.push('koma2');
			eyesArray.push('mae1');
			eyesArray.push('mae2');
			eyesArray.push('mae3');
			eyesArray.push('mae4');
			eyesArray.push('heart1');
			eyesArray.push('heart2');
			mouthArray.push('skill_nico2');
			mouthArray.push('skill_nico3');
			mouthArray.push('skill_nico4');
			mouthArray.push('skill_taunt1');
			mouthArray.push('skill_ahe1');
			mouthArray.push('pero2');
			mouthArray.push('pero3');
			mouthArray.push('nico3');
			mouthArray.push('ahe2');
			tachieHoppeName += '1';
			displayTachieHoppe = true;
			if(fatigueLvl3) {
				tachieSweatName += '3';
				displayTachieSweat = true;
			}
			else if(fatigueLvl2) {
				tachieSweatName += '2';
				displayTachieSweat = true;
			}
			else if(fatigueLvl1) {
				tachieSweatName += '1';
				displayTachieSweat = true;
			}
			break;
		case 48:
			if(!isMasochist) {
				eyebrowsArray.push('nico2');
				eyebrowsArray.push('nico1');
			}
			else {
				eyebrowsArray.push('koma1');
				eyebrowsArray.push('koma2');
			}
			if(!isMasochist) {
				eyesArray.push('mae1');
				eyesArray.push('mae2');
				eyesArray.push('mae3');
				eyesArray.push('mae4');
				eyesArray.push('heart2');
			}
			else {
				eyesArray.push('maso1');
				eyesArray.push('maso2');
				eyesArray.push('heart2');
				eyesArray.push('toji1');
			}
			mouthArray.push('skill_chu1');
			mouthArray.push('skill_chu2');
			mouthArray.push('skill_chu3');
			mouthArray.push('skill_chu4');
			mouthArray.push('chu1');
			mouthArray.push('chu2');
			tachieHoppeName += '1';
			displayTachieHoppe = true;
			if(fatigueLvl3) {
				tachieSweatName += '2';
				displayTachieSweat = true;
			}
			else if(fatigueLvl2) {
				tachieSweatName += '1';
				displayTachieSweat = true;
			}
			break;
		case 49:
			eyebrowsArray.push('nico2');
			eyebrowsArray.push('nico1');
			eyebrowsArray.push('kiri2');
			eyesArray.push('mae2');
			eyesArray.push('mae3');
			eyesArray.push('heart1');
			eyesArray.push('heart2');
			eyesArray.push('toji1');
			eyesArray.push('toji2');
			mouthArray.push('skill_chu3');
			mouthArray.push('skill_chu4');
			tachieHoppeName += '1';
			displayTachieHoppe = true;
			if(fatigueLvl3) {
				tachieSweatName += '2';
				displayTachieSweat = true;
			}
			else if(fatigueLvl2) {
				tachieSweatName += '1';
				displayTachieSweat = true;
			}
			break;	
		case 50:
			eyebrowsArray.push('nico2');
			eyebrowsArray.push('nico1');
			eyebrowsArray.push('kiri1');
			eyebrowsArray.push('kiri2');
			eyebrowsArray.push('oko1');
			eyebrowsArray.push('oko2');
			eyebrowsArray.push('koma1');
			eyebrowsArray.push('koma2');
			eyebrowsArray.push('sado1');
			eyesArray.push('mae4');
			eyesArray.push('toji1');
			eyesArray.push('ahe1');
			eyesArray.push('sado2');
			eyesArray.push('maso1');
			eyesArray.push('heart1');
			eyesArray.push('heart2');
			eyesArray.push('heartahe1');
			mouthArray.push('pero2');
			mouthArray.push('ahe1');
			mouthArray.push('ahe2');
			mouthArray.push('wa2');
			mouthArray.push('skill_ho2');
			mouthArray.push('skill_wa1');
			mouthArray.push('skill_nico3');
			mouthArray.push('skill_nico4');
			mouthArray.push('skill_ahe1');
			tachieHoppeName += '1';
			displayTachieHoppe = true;
			if(fatigueLvl3) {
				tachieSweatName += '2';
				displayTachieSweat = true;
			}
			else if(fatigueLvl2) {
				tachieSweatName += '1';
				displayTachieSweat = true;
			}
			break;		
	}


	
	
	
	
	if(eyebrowsArray.length > 0) {
		this.setTachieEyebrows('' + standbyPoseType + '_' +  eyebrowsArray[Math.randomInt(eyebrowsArray.length)]);
	}
	if(eyesArray.length > 0) {
		this.setTachieEyes('' + standbyPoseType + '_' +  eyesArray[Math.randomInt(eyesArray.length)]);
	}
	if(mouthArray.length > 0) {
		this.setTachieMouth('' + standbyPoseType + '_' +  mouthArray[Math.randomInt(mouthArray.length)]);
	}
	if(displayTachieHoppe) this.setTachieHoppe('' + standbyPoseType + '_' +  tachieHoppeName);
	if(displayTachieSweat) this.setTachieSweat('' + standbyPoseType + '_' + tachieSweatName);
	this.setTachieLeftArm(tachieLeftArmName);
	this.setTachieRightArm(tachieRightArmName);
	this.setAllowTachieEmoteUpdate(true);
};

/////////////////
// Emote Unarmed Pose
/////////////////
Game_Actor.prototype.emoteUnarmedPose = function() {
	this.setAllowTachieEmoteUpdate(false);
	let justOrgasmed = this.didLastGetHitBySkillType(JUST_SKILLTYPE_KARRYN_ORGASM) || this.justOrgasmed();
	let isAroused = this.isAroused() || justOrgasmed;
	let isHorny = this.isHorny;
	let isOffBalanced = this.isOffBalance;
	let isConfident = this.isConfident;
	let karrynJustUsedCombatSkill = this.isStateAffected(STATE_STANDBY_EMOTE_USED_BATTLE_SKILLS_ID);
	let karrynJustUsedTaunt = this.isStateAffected(STATE_STANDBY_EMOTE_USED_TAUNT_ID);
	let karrynJustUsedFlaunt = this.isStateAffected(STATE_STANDBY_EMOTE_USED_FLAUNT_ID);
	let karrynJustUsedReleaseDesire = this.isStateAffected(STATE_STANDBY_EMOTE_USED_RELEASE_DESIRE_ID);
	let usingCounterStance = this.isStateAffected(STATE_COUNTER_STANCE_ID);
	let usingFocus = this.isStateAffected(STATE_FOCUS_ID);
	let usingEyeOfTheMind = this.isStateAffected(STATE_EYE_OF_THE_MIND_ID);
	let usingOpenPleasure = this.isUsingOpenPleasure();
	let usingEdgingControl = this.isStateAffected(STATE_KARRYN_EDGING_CONTROL_ID);
	let karrynJustUsedCockPet = this.didLastGetHitBySkillType(JUST_SKILLTYPE_KARRYN_PETTING);
	let karrynJustUsedCockStare = this.didLastGetHitBySkillType(JUST_SKILLTYPE_KARRYN_COCK_STARE);
	let karrynGotBukkaked = this.didLastGetHitBySkillType(JUST_SKILLTYPE_ENEMY_BUKKAKE);
	let justGotHarassed = this.didLastGetHitBySkillType(JUST_SKILLTYPE_ENEMY_PETTING) || this.didLastGetHitBySkillType(JUST_SKILLTYPE_ENEMY_TALK) || this.didLastGetHitBySkillType(JUST_SKILLTYPE_ENEMY_TOY_PLAY) || this.didLastGetHitBySkillType(JUST_SKILLTYPE_ENEMY_STRIP) || this.didLastGetHitBySkillType(JUST_SKILLTYPE_ENEMY_SPANKING) || this.didLastGetHitBySkillType(JUST_SKILLTYPE_ENEMY_SIGHT) || this.didLastGetHitBySkillType(JUST_SKILLTYPE_PASSIVE_TOY);
	let justGotKissed = this.didLastGetHitBySkillType(JUST_SKILLTYPE_ENEMY_KISS);
	let karrynJustUsedKiss =  this.didLastGetHitBySkillType(JUST_SKILLTYPE_KARRYN_KISSING);
	
	let generalReactionScore = this.getCombatPoseReactionScore(false);
	let bukkakeReactionScore = this.getBukkakeReactionScore();
	let orgasmReactionScore = this.getOrgasmReactionScore();
	let cockStareReactionScore = this.getCockStareReactionScore();
	let staminaPercent = this.currentPercentOfStamina_realMax();
	
	let generallvl3 = generalReactionScore >= VAR_DEF_RS_LV3_REQ;
	let generallvl2 = generalReactionScore >= VAR_DEF_RS_LV2_REQ;
	let generallvl1 = generalReactionScore >= VAR_DEF_RS_LV1_REQ;
	let bukkakelvl3 = bukkakeReactionScore  >= VAR_DEF_RS_LV3_REQ;
	let bukkakelvl2 = bukkakeReactionScore >= VAR_DEF_RS_LV2_REQ;
	let orgasmlvl3 = orgasmReactionScore >= VAR_DEF_RS_LV3_REQ;
	let orgasmlvl2 = orgasmReactionScore >= VAR_DEF_RS_LV2_REQ;
	let starelvl3 = cockStareReactionScore >= VAR_DEF_RS_LV3_REQ;
	let starelvl2 = cockStareReactionScore >= VAR_DEF_RS_LV2_REQ;
	
	let masochismLvl = this.masochismLvl();
	let sadismLvl = this.sadismLvl();
	let isSadist = sadismLvl - masochismLvl >= 3;
	let isMasochist = masochismLvl - sadismLvl >= 3;
	
	let fatigueLevel = this.getFatigueLevel();
	let fatigueLvl1 = fatigueLevel === 2 || (fatigueLevel === 1 && staminaPercent <= 66) || (staminaPercent <= 33);
	let fatigueLvl2 = fatigueLevel === 3 || (fatigueLevel === 2 && staminaPercent <= 66) || (fatigueLevel === 1 && staminaPercent <= 33);
	let fatigueLvl3 = fatigueLevel >= 4 || (fatigueLevel === 3 && staminaPercent <= 66) || (fatigueLevel === 2 && staminaPercent <= 33);
	

	let faceArray = [];
	this.resetTachieHoppe();
	this.resetTachieSweat();
	this.resetTachieFrontA();
	this.resetTachieFrontB();
	
	let tachieLeftArmName = '';
	let tachieRightArmName = '';
	let tachieHoppeName = '';
	let tachieSweatName = '';
	let displayTachieHoppe = false;
	let displayTachieSweat = false;
	let ignoreBukkakeEyes = false;
	
	
	if(!this.isWearingGlovesAndHat()) {
		this.setTachieBody('naked_1')
		if(isAroused) {
			this.setTachieBoobs('naked_1_hard');
		}
		else {
			this.setTachieBoobs('naked_1');
		}
		tachieLeftArmName = 'naked_';
		tachieRightArmName = 'naked_';
		this.resetTachieHips();
		this.resetTachieTie();
	}
	else {
		this.setPoseClothing();
		this.setTachieTie('1');
	}
	

	if(isConfident) {
		tachieLeftArmName += 'confident_1';
		tachieRightArmName += '1';

		this.setTachieSemenLeftArmExtension('confident_1_');
	}
	else {
		tachieLeftArmName += '1';
		tachieRightArmName += '1';
		
		this.resetTachieSemenLeftArmExtension();
	}
	
	//frontA
	if(isOffBalanced) {
		this.setTachieFrontA('offbalanced');
	}
	
	//frontB
	if(isHorny) {
		this.setTachieFrontB('breath_1');
	}
	

	if(justOrgasmed) {
		if(orgasmlvl3)
			faceArray.push(50);
		else if(orgasmlvl2)
			faceArray.push(35);
		else
			faceArray.push(18);
	}
	else if(karrynJustUsedKiss) {
		if(generallvl3)
			faceArray.push(49);
		else if(generallvl2)
			faceArray.push(34);
		else
			faceArray.push(17);
	}
	else if(justGotKissed) {
		if(generallvl3)
			faceArray.push(48);
		else if(generallvl2)
			faceArray.push(33);
		else
			faceArray.push(16);
	}
	else if(usingOpenPleasure || karrynJustUsedReleaseDesire) {
		if(generallvl3)
			faceArray.push(47);
		else if(generallvl2)
			faceArray.push(32);
		else
			faceArray.push(3);
	}
	else if(karrynJustUsedTaunt) {
		if(generallvl3) 
			faceArray.push(46);
		else if(generallvl2)
			faceArray.push(31);
		else
			faceArray.push(13);
	}
	else if(karrynJustUsedCockStare) {
		if(starelvl3) 
			faceArray.push(45);
		else if(starelvl2)
			faceArray.push(31);
		else
			faceArray.push(14);
	}
	else if(karrynGotBukkaked) {
		if(bukkakelvl3) {
			faceArray.push(44);
		}
		else if(bukkakelvl2) {
			if(fatigueLvl3)
				faceArray.push(30);
			else if(fatigueLvl2)
				faceArray.push(29);
			else if(fatigueLvl1)
				faceArray.push(28);
			else
				faceArray.push(27);
		}
		else {
			if(fatigueLvl3)
				faceArray.push(12);
			else if(fatigueLvl2)
				faceArray.push(11);
			else if(fatigueLvl1)
				faceArray.push(10);
			else
				faceArray.push(9);
		}
	}
	else if(justGotHarassed) {
		if(generallvl3) {
			faceArray.push(44);
		}
		else if(generallvl2) {
			if(fatigueLvl3)
				faceArray.push(30);
			else if(fatigueLvl2)
				faceArray.push(29);
			else if(fatigueLvl1)
				faceArray.push(28);
			else
				faceArray.push(27);
		}
		else {
			if(fatigueLvl3)
				faceArray.push(12);
			else if(fatigueLvl2)
				faceArray.push(11);
			else if(fatigueLvl1)
				faceArray.push(10);
			else
				faceArray.push(9);
		}
	}
	else if(isHorny || karrynJustUsedFlaunt || karrynJustUsedCockPet) {
		if(generallvl3) {
			if(fatigueLvl3)
				faceArray.push(46);
			else if(fatigueLvl2)
				faceArray.push(45);
			else if(fatigueLvl1)
				faceArray.push(44);
			else
				faceArray.push(43);
		}
		else if(generallvl2) {
			if(fatigueLvl3)
				faceArray.push(30);
			else if(fatigueLvl2)
				faceArray.push(29);
			else if(fatigueLvl1)
				faceArray.push(28);
			else
				faceArray.push(27);
		}
		else {
			if(fatigueLvl3)
				faceArray.push(26);
			else if(fatigueLvl2)
				faceArray.push(25);
			else if(fatigueLvl1)
				faceArray.push(24);
			else
				faceArray.push(23);
		}
	}
	else if(isOffBalanced) {
		if(generallvl3) {
			if(fatigueLvl3 || fatigueLvl2)
				faceArray.push(39);
			else
				faceArray.push(38);
		}
		else if(generallvl2) {
			if(fatigueLvl3 || fatigueLvl2)
				faceArray.push(22);
			else
				faceArray.push(21);
		}
		else {
			if(fatigueLvl3 || fatigueLvl2)
				faceArray.push(4);
			else
				faceArray.push(3);
		}
	}
	else {
		if(generallvl3) {
			if(fatigueLvl3)
				faceArray.push(39);
			else if(fatigueLvl2)
				faceArray.push(38);
			else if(fatigueLvl1)
				faceArray.push(37);
			else
				faceArray.push(36);
		}
		else if(generallvl2) {
			if(fatigueLvl3)
				faceArray.push(22);
			else if(fatigueLvl2)
				faceArray.push(21);
			else if(fatigueLvl1)
				faceArray.push(20);
			else
				faceArray.push(19);
		}
		else {
			if(fatigueLvl3)
				faceArray.push(4);
			else if(fatigueLvl2)
				faceArray.push(3);
			else if(fatigueLvl1)
				faceArray.push(2);
			else
				faceArray.push(1);
		}
	}
	
	this.removeState(STATE_STANDBY_EMOTE_USED_BATTLE_SKILLS_ID);
	this.removeState(STATE_STANDBY_EMOTE_USED_TAUNT_ID);
	this.removeState(STATE_STANDBY_EMOTE_USED_FLAUNT_ID);
	this.removeState(STATE_STANDBY_EMOTE_USED_RELEASE_DESIRE_ID);
	
	let faceId = faceArray[Math.randomInt(faceArray.length)];
	let eyebrowsArray = [];
	let eyesArray = [];
	let mouthArray = [];

	switch(faceId) {
		case 1:
			eyebrowsArray.push('kiri1');
			eyesArray.push('mae1');
			eyesArray.push('mae2');
			if(!karrynJustUsedCombatSkill) {
				mouthArray.push('nico1');
				mouthArray.push('nico2');
				mouthArray.push('hu1');
			}
			else {
				mouthArray.push('skill_ho1');
				mouthArray.push('skill_ho2');
				mouthArray.push('skill_nico1');
			}
			if(isAroused) {
				tachieHoppeName += '1';
				displayTachieHoppe = true;
			}
			break;
		case 2:
			eyebrowsArray.push('kiri1');
			eyesArray.push('mae1');
			eyesArray.push('mae2');
			if(!karrynJustUsedCombatSkill) {
				mouthArray.push('mu2');
				mouthArray.push('mu3');
				mouthArray.push('hu1');
			}
			else {
				mouthArray.push('skill_ho1');
				mouthArray.push('skill_ho2');
			}
			if(isAroused) {
				tachieHoppeName += '1';
				displayTachieHoppe = true;
			}
			tachieSweatName += '1';
			displayTachieSweat = true;
			break;
		case 3:
			eyebrowsArray.push('oko1');
			eyebrowsArray.push('oko2');
			eyesArray.push('mae2');
			eyesArray.push('mae3');
			if(!karrynJustUsedCombatSkill) {
				mouthArray.push('ku1');
				mouthArray.push('mu3');
				mouthArray.push('mu4');
				mouthArray.push('wa1');
			}
			else {
				mouthArray.push('skill_wa1');
				mouthArray.push('skill_ho1');
				mouthArray.push('skill_ho2');
			}
			if(isAroused) {
				tachieHoppeName += '1';
				displayTachieHoppe = true;
			}
			tachieSweatName += '2';
			displayTachieSweat = true;
			break;
		case 4:
			eyebrowsArray.push('oko1');
			eyebrowsArray.push('koma1');
			eyebrowsArray.push('koma2');
			eyesArray.push('mae3');
			eyesArray.push('mae4');
			if(!karrynJustUsedCombatSkill) {
				mouthArray.push('ku2');
				mouthArray.push('ku3');
				mouthArray.push('mu4');
				mouthArray.push('wa2');
			}
			else {
				mouthArray.push('skill_wa1');
				mouthArray.push('skill_ho1');
				mouthArray.push('skill_ho2');
			}
			if(isAroused) {
				tachieHoppeName += '1';
				displayTachieHoppe = true;
			}
			tachieSweatName += '3';
			displayTachieSweat = true;
			break;
		case 5:
			eyebrowsArray.push('kiri2');
			eyesArray.push('mae2');
			if(!karrynJustUsedCombatSkill) {
				mouthArray.push('nico1');
				mouthArray.push('nico2');
				mouthArray.push('hu1');
				mouthArray.push('mu1');
			}
			else {
				mouthArray.push('skill_ho1');
				mouthArray.push('skill_ho2');
				mouthArray.push('skill_nico1');
				mouthArray.push('skill_nico2');
			}
			if(isAroused || isHorny) {
				tachieHoppeName += '1';
				displayTachieHoppe = true;
			}
			break;
		case 6:
			eyebrowsArray.push('kiri1');
			eyesArray.push('mae2');
			if(!karrynJustUsedCombatSkill) {
				mouthArray.push('nico1');
				mouthArray.push('mu2');
				mouthArray.push('mu3');
				mouthArray.push('hu1');
			}
			else {
				mouthArray.push('skill_ho1');
				mouthArray.push('skill_ho2');
			}
			if(isAroused || isHorny) {
				tachieHoppeName += '1';
				displayTachieHoppe = true;
			}
			tachieSweatName += '1';
			displayTachieSweat = true;
			break;	
		case 7:
			eyebrowsArray.push('oko2');
			eyesArray.push('mae2');
			eyesArray.push('mae3');
			if(!karrynJustUsedCombatSkill) {
				mouthArray.push('mu2');
				mouthArray.push('mu3');
				mouthArray.push('wa1');
			}
			else {
				mouthArray.push('skill_wa1');
				mouthArray.push('skill_ho1');
				mouthArray.push('skill_ho2');
			}
			if(isAroused || isHorny) {
				tachieHoppeName += '1';
				displayTachieHoppe = true;
			}
			tachieSweatName += '2';
			displayTachieSweat = true;
			break;	
		case 8:
			eyebrowsArray.push('oko1');
			eyebrowsArray.push('koma1');
			eyebrowsArray.push('koma2');
			eyesArray.push('mae3');
			if(!karrynJustUsedCombatSkill) {
				mouthArray.push('ku1');
				mouthArray.push('ku2');
				mouthArray.push('mu4');
				mouthArray.push('hu1');
			}
			else {
				mouthArray.push('skill_wa1');
				mouthArray.push('skill_ho1');
				mouthArray.push('skill_ho2');
			}
			if(isAroused || isHorny) {
				tachieHoppeName += '1';
				displayTachieHoppe = true;
			}
			tachieSweatName += '3';
			displayTachieSweat = true;
			break;	
		case 9:
			eyebrowsArray.push('oko1');
			eyesArray.push('mae2');
			eyesArray.push('mae3');
			mouthArray.push('ku1');
			mouthArray.push('ku2');
			mouthArray.push('wa1');
			mouthArray.push('wa2');
			if(isAroused ) {
				tachieHoppeName += '1';
				displayTachieHoppe = true;
			}
			break;
		case 10:
			eyebrowsArray.push('oko1');
			eyebrowsArray.push('oko2');
			eyesArray.push('mae3');
			eyesArray.push('mae4');
			mouthArray.push('ku1');
			mouthArray.push('ku2');
			mouthArray.push('wa1');
			mouthArray.push('wa2');
			if(isAroused ) {
				tachieHoppeName += '1';
				displayTachieHoppe = true;
			}
			tachieSweatName += '1';
			displayTachieSweat = true;
			break;				
		case 11:
			eyebrowsArray.push('oko2');
			eyebrowsArray.push('koma2');
			eyesArray.push('mae3');
			eyesArray.push('mae4');
			mouthArray.push('ku1');
			mouthArray.push('ku2');
			mouthArray.push('wa1');
			mouthArray.push('wa2');
			if(isAroused ) {
				tachieHoppeName += '1';
				displayTachieHoppe = true;
			}
			tachieSweatName += '2';
			displayTachieSweat = true;
			break;	
		case 12:
			eyebrowsArray.push('koma1');
			eyebrowsArray.push('koma2');
			eyesArray.push('mae4');
			eyesArray.push('toji1');
			mouthArray.push('ku2');
			mouthArray.push('ku3');
			mouthArray.push('wa2');
			if(isAroused ) {
				tachieHoppeName += '1';
				displayTachieHoppe = true;
			}
			tachieSweatName += '3';
			displayTachieSweat = true;
			break;	
		case 13:
			eyebrowsArray.push('oko1');
			eyesArray.push('mae2');
			eyesArray.push('mae3');
			mouthArray.push('ku2');
			mouthArray.push('wa1');
			mouthArray.push('wa2');
			if(isAroused ) {
				tachieHoppeName += '1';
				displayTachieHoppe = true;
			}
			if(fatigueLvl3 || fatigueLvl2) {
				tachieSweatName += '3';
				displayTachieSweat = true;
			}
			else {
				tachieSweatName += '2';
				displayTachieSweat = true;
			}
			break;	
		case 14:
			eyebrowsArray.push('kiri1');
			eyebrowsArray.push('oko1');
			eyesArray.push('mae2');
			eyesArray.push('mae3');
			mouthArray.push('nico2');
			mouthArray.push('nico3');
			mouthArray.push('skill_nico1');
			mouthArray.push('skill_taunt1');
			if(isAroused ) {
				tachieHoppeName += '1';
				displayTachieHoppe = true;
			}
			if(fatigueLvl3) {
				tachieSweatName += '3';
				displayTachieSweat = true;
			}
			else if(fatigueLvl2) {
				tachieSweatName += '2';
				displayTachieSweat = true;
			}
			else if(fatigueLvl1) {
				tachieSweatName += '1';
				displayTachieSweat = true;
			}
			break;
		case 15:
			eyebrowsArray.push('koma1');
			eyebrowsArray.push('koma2');
			eyesArray.push('mae2');
			eyesArray.push('mae3');
			mouthArray.push('nico2');
			mouthArray.push('skill_nico1');
			mouthArray.push('skill_nico2');
			mouthArray.push('skill_taunt1');
			tachieHoppeName += '1';
			displayTachieHoppe = true;			
			if(fatigueLvl3) {
				tachieSweatName += '3';
				displayTachieSweat = true;
			}
			else if(fatigueLvl2) {
				tachieSweatName += '2';
				displayTachieSweat = true;
			}
			else if(fatigueLvl1) {
				tachieSweatName += '1';
				displayTachieSweat = true;
			}
			break;
		case 16:
			eyebrowsArray.push('koma1');
			eyebrowsArray.push('koma2');
			eyebrowsArray.push('oko1');
			eyebrowsArray.push('oko2');
			eyesArray.push('mae4');
			eyesArray.push('toji1');
			mouthArray.push('chu1');
			mouthArray.push('chu2');
			mouthArray.push('hu1');
			mouthArray.push('mu1');
			tachieHoppeName += '1';
			displayTachieHoppe = true;			
			if(fatigueLvl3 || fatigueLvl2) {
				tachieSweatName += '3';
				displayTachieSweat = true;
			}
			else {
				tachieSweatName += '2';
				displayTachieSweat = true;
			}
			break;
		case 17:
			eyebrowsArray.push('koma1');
			eyebrowsArray.push('koma2');
			eyebrowsArray.push('kiri1');
			eyebrowsArray.push('kiri2');
			eyesArray.push('mae2');
			eyesArray.push('mae3');
			eyesArray.push('mae4');
			mouthArray.push('chu1');
			mouthArray.push('chu2');
			mouthArray.push('skill_chu1');
			mouthArray.push('skill_chu2');
			tachieHoppeName += '1';
			displayTachieHoppe = true;			
			if(fatigueLvl3) {
				tachieSweatName += '3';
				displayTachieSweat = true;
			}
			else if(fatigueLvl2) {
				tachieSweatName += '2';
				displayTachieSweat = true;
			}
			else if(fatigueLvl1) {
				tachieSweatName += '1';
				displayTachieSweat = true;
			}
			break;
		case 18:
			eyebrowsArray.push('koma1');
			eyebrowsArray.push('koma2');
			eyebrowsArray.push('oko1');
			eyebrowsArray.push('oko2');
			eyesArray.push('mae4');
			eyesArray.push('toji1');
			mouthArray.push('wa2');
			mouthArray.push('skill_ho2');
			mouthArray.push('skill_wa1');
			mouthArray.push('skill_ahe1');
			tachieHoppeName += '1';
			displayTachieHoppe = true;			
			if(fatigueLvl3 || fatigueLvl2) {
				tachieSweatName += '3';
				displayTachieSweat = true;
			}
			else {
				tachieSweatName += '2';
				displayTachieSweat = true;
			}
			break;
		case 19:
			eyebrowsArray.push('kiri1');
			eyebrowsArray.push('kiri2');
			eyesArray.push('mae1');
			eyesArray.push('mae2');
			if(!karrynJustUsedCombatSkill) {
				mouthArray.push('nico1');
				mouthArray.push('nico2');
				mouthArray.push('nico3');
			}
			else {
				mouthArray.push('skill_nico1');
				mouthArray.push('skill_nico2');
				mouthArray.push('skill_nico3');
			}
			if(isAroused) {
				tachieHoppeName += '1';
				displayTachieHoppe = true;
			}
			break;
		case 20:
			eyebrowsArray.push('kiri1');
			eyesArray.push('mae1');
			eyesArray.push('mae2');
			if(!karrynJustUsedCombatSkill) {
				mouthArray.push('nico1');
				mouthArray.push('nico2');
				mouthArray.push('hu1');
				mouthArray.push('mu1');
			}
			else {
				mouthArray.push('skill_nico1');
				mouthArray.push('skill_nico2');
				mouthArray.push('skill_ho2');
			}
			if(isAroused) {
				tachieHoppeName += '1';
				displayTachieHoppe = true;
			}
			break;
		case 21:
			if(!isMasochist) {
				eyebrowsArray.push('oko1');
				eyebrowsArray.push('oko2');
			}
			else {
				eyebrowsArray.push('koma1');
				eyebrowsArray.push('koma2');
			}
			eyesArray.push('mae2');
			eyesArray.push('mae3');
			if(!karrynJustUsedCombatSkill) {
				mouthArray.push('nico2');
				mouthArray.push('wa1');
				mouthArray.push('mu3');
				mouthArray.push('mu1');
			}
			else {
				mouthArray.push('skill_nico1');
				mouthArray.push('skill_ho1');
				mouthArray.push('skill_ho2');
			}
			if(isAroused) {
				tachieHoppeName += '1';
				displayTachieHoppe = true;
			}
			tachieSweatName += '2';
			displayTachieSweat = true;
			break;
		case 22:
			if(!isMasochist) {
				eyebrowsArray.push('oko1');
				eyebrowsArray.push('oko2');
				eyebrowsArray.push('koma1');
				eyebrowsArray.push('koma2');
			}
			else {
				eyebrowsArray.push('koma1');
			}
			eyesArray.push('mae3');
			eyesArray.push('mae4');
			if(!karrynJustUsedCombatSkill) {
				mouthArray.push('ku1');
				mouthArray.push('ku2');
				mouthArray.push('mu2');
				mouthArray.push('hu1');
			}
			else if(isMasochist) {
				mouthArray.push('ahe2');
			}
			else {
				mouthArray.push('skill_nico1');
				mouthArray.push('skill_ho1');
				mouthArray.push('skill_ho2');
			}
			if(isAroused) {
				tachieHoppeName += '1';
				displayTachieHoppe = true;
			}
			tachieSweatName += '3';
			displayTachieSweat = true;
			break;
		case 23:
			if(!isMasochist && !isSadist) {
				eyebrowsArray.push('nico1');
			}
			else if(isSadist) {
				eyebrowsArray.push('oko2');
			}
			else {
				eyebrowsArray.push('koma2');
			}
			if(!isSadist) {
				eyesArray.push('mae2');
			}
			else {
				eyesArray.push('sado1');
			}
			if(!karrynJustUsedCombatSkill) {
				mouthArray.push('nico1');
				mouthArray.push('nico2');
				mouthArray.push('nico3');
				mouthArray.push('pero1');
			}
			else {
				mouthArray.push('skill_nico1');
				mouthArray.push('skill_nico2');
				mouthArray.push('skill_nico3');
				mouthArray.push('pero2');
			}
			tachieHoppeName += '1';
			displayTachieHoppe = true;
			break;
		case 24:
			if(!isMasochist && !isSadist) {
				eyebrowsArray.push('kiri2');
			}
			else if(isSadist) {
				eyebrowsArray.push('oko2');
			}
			else {
				eyebrowsArray.push('koma2');
			}
			if(!isMasochist && !isSadist) {
				eyesArray.push('mae2');
			}
			else if(isSadist) {
				eyesArray.push('sado1');
			}
			else {
				eyesArray.push('mae1');
			}
			if(!karrynJustUsedCombatSkill) {
				mouthArray.push('nico1');
				mouthArray.push('nico2');
				mouthArray.push('mu1');
				mouthArray.push('pero4');
			}
			else {
				mouthArray.push('skill_nico1');
				mouthArray.push('skill_nico2');
			}
			tachieHoppeName += '1';
			displayTachieHoppe = true;
			tachieSweatName += '1';
			displayTachieSweat = true;
			break;
		case 25:
			if(!isMasochist && !isSadist) {
				eyebrowsArray.push('kiri1');
			}
			else if(isSadist) {
				eyebrowsArray.push('oko1');
			}
			else {
				eyebrowsArray.push('koma1');
			}
			if(!isMasochist && !isSadist) {
				eyesArray.push('mae3');
			}
			else if(isSadist) {
				eyesArray.push('sado2');
			}
			else {
				eyesArray.push('mae2');
			}
			if(!karrynJustUsedCombatSkill) {
				mouthArray.push('mu1');
				mouthArray.push('hu1');
				mouthArray.push('wa1');
			}
			else {
				mouthArray.push('skill_nico1');
				mouthArray.push('skill_ho1');
				mouthArray.push('skill_ho2');
			}
			tachieHoppeName += '1';
			displayTachieHoppe = true;
			tachieSweatName += '2';
			displayTachieSweat = true;
			break;
		case 26:
			eyebrowsArray.push('koma1');
			
			if(!isMasochist && !isSadist) {
				eyesArray.push('mae3');
			}
			else if(isSadist) {
				eyesArray.push('sado2');
			}
			else {
				eyesArray.push('maso1');
			}
			if(!karrynJustUsedCombatSkill && !isMasochist && !isSadist) {
				mouthArray.push('mu1');
				mouthArray.push('mu2');
				mouthArray.push('mu3');
				mouthArray.push('wa1');
			}
			else if(isSadist) {
				mouthArray.push('ku1');
				mouthArray.push('ku2');
				mouthArray.push('ku3');
			}
			else if(isMasochist) {
				mouthArray.push('nico3');
				mouthArray.push('pero1');
				mouthArray.push('pero2');
			}
			else {
				mouthArray.push('skill_wa1');
				mouthArray.push('skill_nico2');
				mouthArray.push('skill_ho2');
			}
			tachieHoppeName += '1';
			displayTachieHoppe = true;
			tachieSweatName += '2';
			displayTachieSweat = true;
			break;
		case 27:
			eyebrowsArray.push('kiri2');
			eyebrowsArray.push('oko2');
			eyebrowsArray.push('koma2');
			eyesArray.push('mae1');
			eyesArray.push('mae2');
			eyesArray.push('mae4');
			mouthArray.push('hu1');
			mouthArray.push('nico2');
			mouthArray.push('skill_ho1');
			tachieHoppeName += '1';
			displayTachieHoppe = true;
			break;	
		case 28:
			eyebrowsArray.push('kiri1');
			eyebrowsArray.push('kiri2');
			eyebrowsArray.push('oko2');
			eyebrowsArray.push('koma2');
			eyesArray.push('mae2');
			eyesArray.push('mae4');
			mouthArray.push('wa1');
			mouthArray.push('skill_ho1');
			mouthArray.push('skill_ho2');
			tachieHoppeName += '1';
			displayTachieHoppe = true;
			tachieSweatName += '1';
			displayTachieSweat = true;
			break;	
		case 29:
			eyebrowsArray.push('kiri1');
			eyebrowsArray.push('koma2');
			eyebrowsArray.push('oko2');
			eyebrowsArray.push('koma2');
			eyesArray.push('mae3');
			eyesArray.push('mae4');
			mouthArray.push('wa1');
			mouthArray.push('skill_ho1');
			mouthArray.push('skill_ho2');
			tachieHoppeName += '1';
			displayTachieHoppe = true;
			tachieSweatName += '2';
			displayTachieSweat = true;
			break;	
		case 30:
			eyebrowsArray.push('kiri1');
			eyebrowsArray.push('koma2');
			eyesArray.push('toji1');
			eyesArray.push('mae4');
			mouthArray.push('wa1');
			mouthArray.push('skill_ho1');
			mouthArray.push('skill_ho2');
			mouthArray.push('skill_wa1');
			mouthArray.push('ku1');
			tachieHoppeName += '1';
			displayTachieHoppe = true;
			tachieSweatName += '3';
			displayTachieSweat = true;
			break;	
		case 31:
			if(karrynJustUsedCockStare) {
				eyebrowsArray.push('koma1');
				eyebrowsArray.push('koma2');
			}
			else {
				eyebrowsArray.push('nico1');
				eyebrowsArray.push('nico2');
				eyebrowsArray.push('kiri2');
			}
			eyesArray.push('mae2');
			eyesArray.push('mae3');
			mouthArray.push('nico2');
			mouthArray.push('nico3');
			mouthArray.push('skill_nico1');
			mouthArray.push('skill_nico3');
			mouthArray.push('skill_taunt1');
			mouthArray.push('skill_taunt2');
			if(isAroused) {
				tachieHoppeName += '1';
				displayTachieHoppe = true;
			}
			if(fatigueLvl3) {
				tachieSweatName += '3';
				displayTachieSweat = true;
			}
			else if(fatigueLvl2) {
				tachieSweatName += '2';
				displayTachieSweat = true;
			}
			else if(fatigueLvl1) {
				tachieSweatName += '1';
				displayTachieSweat = true;
			}
			break;
		case 32:
			eyebrowsArray.push('koma1');
			eyebrowsArray.push('koma2');
			eyebrowsArray.push('nico1');
			eyebrowsArray.push('nico2');
			eyesArray.push('mae2');
			eyesArray.push('mae1');
			mouthArray.push('pero3');
			mouthArray.push('skill_nico2');
			mouthArray.push('skill_nico3');
			mouthArray.push('skill_taunt1');
			mouthArray.push('skill_nico4');
			tachieHoppeName += '1';
			displayTachieHoppe = true;
			if(fatigueLvl3) {
				tachieSweatName += '3';
				displayTachieSweat = true;
			}
			else if(fatigueLvl2) {
				tachieSweatName += '2';
				displayTachieSweat = true;
			}
			else if(fatigueLvl1) {
				tachieSweatName += '1';
				displayTachieSweat = true;
			}
			break;
		case 33:
			eyebrowsArray.push('koma2');
			eyebrowsArray.push('nico1');
			eyebrowsArray.push('nico2');
			eyesArray.push('mae2');
			eyesArray.push('mae3');
			eyesArray.push('mae4');
			eyesArray.push('toji1');
			mouthArray.push('chu1');
			mouthArray.push('chu2');
			mouthArray.push('skill_chu1');
			mouthArray.push('mu1');
			tachieHoppeName += '1';
			displayTachieHoppe = true;
			if(fatigueLvl3) {
				tachieSweatName += '3';
				displayTachieSweat = true;
			}
			else if(fatigueLvl2) {
				tachieSweatName += '2';
				displayTachieSweat = true;
			}
			else if(fatigueLvl1) {
				tachieSweatName += '1';
				displayTachieSweat = true;
			}
			break;	
		case 34:
			eyebrowsArray.push('kiri2');
			eyebrowsArray.push('nico1');
			eyebrowsArray.push('nico2');
			eyesArray.push('mae2');
			eyesArray.push('mae3');
			eyesArray.push('toji1');
			mouthArray.push('chu1');
			mouthArray.push('chu2');
			mouthArray.push('skill_chu1');
			mouthArray.push('skill_chu2');
			mouthArray.push('skill_chu3');
			tachieHoppeName += '1';
			displayTachieHoppe = true;
			if(fatigueLvl3) {
				tachieSweatName += '3';
				displayTachieSweat = true;
			}
			else if(fatigueLvl2) {
				tachieSweatName += '2';
				displayTachieSweat = true;
			}
			else if(fatigueLvl1) {
				tachieSweatName += '1';
				displayTachieSweat = true;
			}
			break;		
		case 35:
			eyebrowsArray.push('oko2');
			eyebrowsArray.push('koma1');
			eyebrowsArray.push('koma2');
			eyesArray.push('mae4');
			eyesArray.push('toji1');
			eyesArray.push('ahe1');
			eyesArray.push('heartahe1');
			mouthArray.push('wa2');
			mouthArray.push('ahe1');
			mouthArray.push('ahe2');
			mouthArray.push('skill_ho2');
			mouthArray.push('skill_wa1');
			mouthArray.push('skill_nico3');
			tachieHoppeName += '1';
			displayTachieHoppe = true;
			if(fatigueLvl3 || fatigueLvl2) {
				tachieSweatName += '3';
				displayTachieSweat = true;
			}
			else {
				tachieSweatName += '2';
				displayTachieSweat = true;
			}
			break;		
		case 36:
			eyebrowsArray.push('nico1');
			eyebrowsArray.push('nico2');
			eyebrowsArray.push('kiri2');
			if(!karrynJustUsedCombatSkill) {
				eyesArray.push('mae1');
				eyesArray.push('mae2');
			}
			else {
				eyesArray.push('mae2');
				eyesArray.push('mae3');
				eyesArray.push('mae4');
				eyesArray.push('toji1');
				eyesArray.push('toji2');
				eyesArray.push('heart1');
				eyesArray.push('heart2');
			}
			if(!karrynJustUsedCombatSkill) {
				mouthArray.push('nico1');
				mouthArray.push('nico2');
				mouthArray.push('nico3');
				mouthArray.push('mu1');
				mouthArray.push('pero1');
				mouthArray.push('pero4');
			}
			else {
				mouthArray.push('skill_nico1');
				mouthArray.push('skill_nico2');
				mouthArray.push('skill_nico3');
				mouthArray.push('skill_nico4');
				mouthArray.push('pero3');
			}
			if(isAroused) {
				tachieHoppeName += '1';
				displayTachieHoppe = true;
			}
			break;		
		case 37:
			eyebrowsArray.push('nico1');
			eyebrowsArray.push('kiri2');
			if(!karrynJustUsedCombatSkill) {
				eyesArray.push('mae1');
				eyesArray.push('mae2');
			}
			else {
				eyesArray.push('mae2');
				eyesArray.push('mae3');
				eyesArray.push('mae4');
				eyesArray.push('toji2');
				eyesArray.push('heart2');
			}
			if(!karrynJustUsedCombatSkill) {
				mouthArray.push('nico1');
				mouthArray.push('nico2');
				mouthArray.push('nico3');
				mouthArray.push('mu1');
				mouthArray.push('pero4');
			}
			else {
				mouthArray.push('skill_nico1');
				mouthArray.push('skill_nico2');
				mouthArray.push('skill_nico3');
				mouthArray.push('skill_nico4');
			}
			if(isAroused) {
				tachieHoppeName += '1';
				displayTachieHoppe = true;
			}
			tachieSweatName += '1';
			displayTachieSweat = true;
			break;	
		case 38:
			if(!isMasochist) {
				eyebrowsArray.push('oko2');
				eyebrowsArray.push('kiri1');
			}
			else {
				eyebrowsArray.push('koma1');
			}
			if(!karrynJustUsedCombatSkill && !isMasochist) {
				eyesArray.push('mae2');
				eyesArray.push('mae3');
			}
			else if(isMasochist) {
				eyesArray.push('maso1');
				eyesArray.push('maso2');
			}
			else {
				eyesArray.push('mae1');
				eyesArray.push('mae2');
				eyesArray.push('mae4');
				eyesArray.push('heart2');
			}
			if(!karrynJustUsedCombatSkill) {
				mouthArray.push('nico1');
				mouthArray.push('nico2');
				mouthArray.push('nico3');
				mouthArray.push('wa1');
			}
			else {
				mouthArray.push('skill_nico1');
				mouthArray.push('skill_nico2');
				mouthArray.push('skill_nico3');
				mouthArray.push('pero2');
			}
			if(isAroused) {
				tachieHoppeName += '1';
				displayTachieHoppe = true;
			}
			tachieSweatName += '2';
			displayTachieSweat = true;
			break;		
		case 39:
			eyebrowsArray.push('koma1');
			eyebrowsArray.push('koma2');
			if(!isMasochist) {
				eyesArray.push('mae3');
				eyesArray.push('mae4');
			}
			else {
				eyesArray.push('maso1');
				eyesArray.push('maso2');
			}
			if(!karrynJustUsedCombatSkill && !isMasochist) {
				mouthArray.push('ku1');
				mouthArray.push('mu1');
				mouthArray.push('mu4');
				mouthArray.push('hu1');
				mouthArray.push('wa1');
			}
			else if(isMasochist) {
				mouthArray.push('nico3');
				mouthArray.push('ahe2');
				mouthArray.push('pero1');
			}
			else {
				mouthArray.push('skill_nico1');
				mouthArray.push('skill_nico4');
				mouthArray.push('skill_ahe1');
				mouthArray.push('skill_ho2');
			}
			if(isAroused) {
				tachieHoppeName += '1';
				displayTachieHoppe = true;
			}
			tachieSweatName += '3';
			displayTachieSweat = true;
			break;	
		case 40:
			if(!isMasochist && !isSadist) {
				eyebrowsArray.push('nico1');
				eyebrowsArray.push('nico2');
				eyebrowsArray.push('kiri2');
			}
			else if(isSadist) {
				eyebrowsArray.push('oko2');
				eyebrowsArray.push('sado1');
			}
			else {
				eyebrowsArray.push('koma2');
				eyebrowsArray.push('koma1');
			}
			if(!isMasochist) {
				eyesArray.push('mae3');
				eyesArray.push('heart2');
			}
			else {
				eyesArray.push('sado1');
			}
			if(!karrynJustUsedCombatSkill) {
				mouthArray.push('nico3');
				mouthArray.push('pero1');
				mouthArray.push('pero2');
				mouthArray.push('pero3');
				mouthArray.push('pero4');
			}
			else {
				mouthArray.push('skill_nico3');
				mouthArray.push('skill_nico4');
				mouthArray.push('skill_ahe1');
				mouthArray.push('ahe1');
				mouthArray.push('ahe2');
			}
			tachieHoppeName += '1';
			displayTachieHoppe = true;
			break;
		case 41:
			if(!isMasochist && !isSadist) {
				eyebrowsArray.push('nico1');
				eyebrowsArray.push('kiri1');
				eyebrowsArray.push('kiri2');
			}
			else if(isSadist) {
				eyebrowsArray.push('oko2');
				eyebrowsArray.push('sado1');
			}
			else {
				eyebrowsArray.push('koma2');
			}
			if(!isMasochist && !isSadist) {
				eyesArray.push('mae3');
				eyesArray.push('mae2');
			}
			else if(isSadist) {
				eyesArray.push('sado1');
				eyesArray.push('sado2');
			}
			else {
				eyesArray.push('mae1');
			}
			if(!karrynJustUsedCombatSkill) {
				mouthArray.push('nico2');
				mouthArray.push('nico3');
				mouthArray.push('pero1');
				mouthArray.push('pero4');
			}
			else {
				mouthArray.push('skill_nico3');
				mouthArray.push('skill_nico4');
				mouthArray.push('skill_nico2');
				mouthArray.push('skill_nico1');
			}
			tachieHoppeName += '1';
			displayTachieHoppe = true;
			break;
		case 42:
			if(!isMasochist && !isSadist) {
				eyebrowsArray.push('kiri1');
				eyebrowsArray.push('kiri2');
			}
			else if(isSadist) {
				eyebrowsArray.push('oko1');
			}
			else {
				eyebrowsArray.push('koma1');
			}
			if(!isMasochist && !isSadist) {
				eyesArray.push('mae3');
				eyesArray.push('mae2');
			}
			else if(isSadist) {
				eyesArray.push('sado1');
				eyesArray.push('sado2');
			}
			else {
				eyesArray.push('maso1');
				eyesArray.push('heart2');
			}
			if(!karrynJustUsedCombatSkill) {
				mouthArray.push('nico2');
				mouthArray.push('nico3');
				mouthArray.push('nico1');
			}
			else {
				mouthArray.push('pero3');
				mouthArray.push('skill_nico4');
				mouthArray.push('skill_nico2');
				mouthArray.push('skill_nico1');
			}
			tachieHoppeName += '1';
			displayTachieHoppe = true;
			tachieSweatName += '1';
			displayTachieSweat = true;
			break;
		case 43:
			eyebrowsArray.push('koma1');
			eyebrowsArray.push('koma2');
			if(!isMasochist && !isSadist) {
				eyesArray.push('mae3');
				eyesArray.push('mae2');
				eyesArray.push('mae4');
			}
			else if(isSadist) {
				eyesArray.push('sado1');
				eyesArray.push('sado2');
			}
			else {
				eyesArray.push('maso1');
				eyesArray.push('maso2');
				eyesArray.push('heart1');
				eyesArray.push('heart2');
			}
			if(!karrynJustUsedCombatSkill && !isMasochist && !isSadist) {
				mouthArray.push('nico2');
				mouthArray.push('mu1');
				mouthArray.push('hu1');
				mouthArray.push('nico1');
			}
			else if(isSadist) {
				mouthArray.push('ku1');
				mouthArray.push('mu4');
				mouthArray.push('ku2');
			}
			else if(isMasochist) {
				mouthArray.push('nico3');
				mouthArray.push('pero4');
				mouthArray.push('ahe1');
				mouthArray.push('ahe2');
				mouthArray.push('skill_nico4');
			}
			else {
				mouthArray.push('skill_ho2');
				mouthArray.push('skill_ho1');
				mouthArray.push('skill_nico2');
				mouthArray.push('skill_nico1');
			}
			tachieHoppeName += '1';
			displayTachieHoppe = true;
			tachieSweatName += '2';
			displayTachieSweat = true;
			break;
		case 44:
			if(fatigueLvl3 || fatigueLvl2) {
				eyebrowsArray.push('nico1');
				eyebrowsArray.push('nico2');
				eyebrowsArray.push('koma2');
			}
			else {
				eyebrowsArray.push('koma1');
				eyebrowsArray.push('koma2');
				eyebrowsArray.push('kiri2');
			}
			if(isMasochist && Math.random() < 0.3) {
				eyesArray.push('maso1');
			}
			else {
				eyesArray.push('mae3');
				eyesArray.push('mae4');
				eyesArray.push('toji1');
				eyesArray.push('toji2');
				eyesArray.push('heart2');
			}
			mouthArray.push('nico3');
			mouthArray.push('pero1');
			mouthArray.push('pero2');
			mouthArray.push('pero3');
			mouthArray.push('pero4');
			mouthArray.push('ahe1');
			mouthArray.push('wa1');
			mouthArray.push('skill_nico2');
			mouthArray.push('skill_nico4');
			if(isAroused) {
				tachieHoppeName += '1';
				displayTachieHoppe = true;
			}
			if(fatigueLvl3) {
				tachieSweatName += '2';
				displayTachieSweat = true;
			}
			else if(fatigueLvl2) {
				tachieSweatName += '1';
				displayTachieSweat = true;
			}
			break;
		case 45:
			eyebrowsArray.push('nico1');
			eyebrowsArray.push('nico2');
			eyebrowsArray.push('kiri2');
			eyebrowsArray.push('koma2');
			eyesArray.push('mae2');
			eyesArray.push('heart1');
			eyesArray.push('heart2');
			mouthArray.push('skill_nico1');
			mouthArray.push('skill_nico2');
			mouthArray.push('skill_nico3');
			mouthArray.push('skill_nico4');
			mouthArray.push('pero1');
			mouthArray.push('pero2');
			mouthArray.push('pero3');
			mouthArray.push('pero4');
			mouthArray.push('hu1');
			mouthArray.push('wa1');
			mouthArray.push('mu1');
			if(isAroused) {
				tachieHoppeName += '1';
				displayTachieHoppe = true;
			}
			if(fatigueLvl3) {
				tachieSweatName += '2';
				displayTachieSweat = true;
			}
			else if(fatigueLvl2) {
				tachieSweatName += '1';
				displayTachieSweat = true;
			}
			break;
		case 46:
			if(!isSadist) {
				eyebrowsArray.push('nico2');
				eyebrowsArray.push('kiri2');
				eyebrowsArray.push('nico1');

			}
			else {
				eyebrowsArray.push('kiri1');
				eyebrowsArray.push('oko1');
				eyebrowsArray.push('sado1');
			}
			if(!isSadist) {
				eyesArray.push('mae2');
				eyesArray.push('mae3');
			}
			else {
				eyesArray.push('sado2');
			}
			mouthArray.push('skill_nico1');
			mouthArray.push('skill_nico3');
			mouthArray.push('skill_taunt1');
			mouthArray.push('skill_taunt2');
			mouthArray.push('skill_taunt3');
			if(isAroused) {
				tachieHoppeName += '1';
				displayTachieHoppe = true;
			}
			if(fatigueLvl3) {
				tachieSweatName += '2';
				displayTachieSweat = true;
			}
			else if(fatigueLvl2) {
				tachieSweatName += '1';
				displayTachieSweat = true;
			}
			break;
		case 47:
			eyebrowsArray.push('nico2');
			eyebrowsArray.push('nico1');
			eyebrowsArray.push('koma1');
			eyebrowsArray.push('koma2');
			eyesArray.push('mae1');
			eyesArray.push('mae2');
			eyesArray.push('mae3');
			eyesArray.push('mae4');
			eyesArray.push('heart1');
			eyesArray.push('heart2');
			mouthArray.push('skill_nico2');
			mouthArray.push('skill_nico3');
			mouthArray.push('skill_nico4');
			mouthArray.push('skill_taunt1');
			mouthArray.push('skill_ahe1');
			mouthArray.push('pero2');
			mouthArray.push('pero3');
			mouthArray.push('nico3');
			mouthArray.push('ahe2');
			tachieHoppeName += '1';
			displayTachieHoppe = true;
			if(fatigueLvl3) {
				tachieSweatName += '3';
				displayTachieSweat = true;
			}
			else if(fatigueLvl2) {
				tachieSweatName += '2';
				displayTachieSweat = true;
			}
			else if(fatigueLvl1) {
				tachieSweatName += '1';
				displayTachieSweat = true;
			}
			break;
		case 48:
			if(!isMasochist) {
				eyebrowsArray.push('nico2');
				eyebrowsArray.push('nico1');
			}
			else {
				eyebrowsArray.push('koma1');
				eyebrowsArray.push('koma2');
			}
			if(!isMasochist) {
				eyesArray.push('mae1');
				eyesArray.push('mae2');
				eyesArray.push('mae3');
				eyesArray.push('mae4');
				eyesArray.push('heart2');
			}
			else {
				eyesArray.push('maso1');
				eyesArray.push('maso2');
				eyesArray.push('heart2');
				eyesArray.push('toji1');
			}
			mouthArray.push('skill_chu1');
			mouthArray.push('skill_chu2');
			mouthArray.push('skill_chu3');
			mouthArray.push('skill_chu4');
			mouthArray.push('chu1');
			mouthArray.push('chu2');
			tachieHoppeName += '1';
			displayTachieHoppe = true;
			if(fatigueLvl3) {
				tachieSweatName += '2';
				displayTachieSweat = true;
			}
			else if(fatigueLvl2) {
				tachieSweatName += '1';
				displayTachieSweat = true;
			}
			break;
		case 49:
			eyebrowsArray.push('nico2');
			eyebrowsArray.push('nico1');
			eyebrowsArray.push('kiri2');
			eyesArray.push('mae2');
			eyesArray.push('mae3');
			eyesArray.push('heart1');
			eyesArray.push('heart2');
			eyesArray.push('toji1');
			eyesArray.push('toji2');
			mouthArray.push('skill_chu3');
			mouthArray.push('skill_chu4');
			tachieHoppeName += '1';
			displayTachieHoppe = true;
			if(fatigueLvl3) {
				tachieSweatName += '2';
				displayTachieSweat = true;
			}
			else if(fatigueLvl2) {
				tachieSweatName += '1';
				displayTachieSweat = true;
			}
			break;	
		case 50:
			eyebrowsArray.push('nico2');
			eyebrowsArray.push('nico1');
			eyebrowsArray.push('kiri1');
			eyebrowsArray.push('kiri2');
			eyebrowsArray.push('oko1');
			eyebrowsArray.push('oko2');
			eyebrowsArray.push('koma1');
			eyebrowsArray.push('koma2');
			eyebrowsArray.push('sado1');
			eyesArray.push('mae4');
			eyesArray.push('toji1');
			eyesArray.push('ahe1');
			eyesArray.push('sado2');
			eyesArray.push('maso1');
			eyesArray.push('heart1');
			eyesArray.push('heart2');
			eyesArray.push('heartahe1');
			mouthArray.push('pero2');
			mouthArray.push('ahe1');
			mouthArray.push('ahe2');
			mouthArray.push('wa2');
			mouthArray.push('skill_ho2');
			mouthArray.push('skill_wa1');
			mouthArray.push('skill_nico3');
			mouthArray.push('skill_nico4');
			mouthArray.push('skill_ahe1');
			tachieHoppeName += '1';
			displayTachieHoppe = true;
			if(fatigueLvl3) {
				tachieSweatName += '2';
				displayTachieSweat = true;
			}
			else if(fatigueLvl2) {
				tachieSweatName += '1';
				displayTachieSweat = true;
			}
			break;		
	}


	if(eyebrowsArray.length > 0) {
		this.setTachieEyebrows('' + eyebrowsArray[Math.randomInt(eyebrowsArray.length)]);
	}
	if(eyesArray.length > 0) {
		this.setTachieEyes('' + eyesArray[Math.randomInt(eyesArray.length)]);
	}
	if(mouthArray.length > 0) {
		this.setTachieMouth('' + mouthArray[Math.randomInt(mouthArray.length)]);
	}
	if(displayTachieHoppe) this.setTachieHoppe('' +  tachieHoppeName);
	if(displayTachieSweat) this.setTachieSweat('' + tachieSweatName);
	this.setTachieLeftArm(tachieLeftArmName);
	this.setTachieRightArm(tachieRightArmName);
	this.setAllowTachieEmoteUpdate(true);
};

/////////////////
// Emote Down Stamina Pose 
/////////////////
Game_Actor.prototype.emoteDownStaminaPose = function() {
	this.setAllowTachieEmoteUpdate(false);
	let justOrgasmed = this.didLastGetHitBySkillType(JUST_SKILLTYPE_KARRYN_ORGASM) || this.justOrgasmed();
	let isAroused = this.isAroused() || justOrgasmed;
	let isHorny = this.isHorny;
	let isWearingPanties = this.isWearingPanties();
	let lastHitClothesPull = this.didLastGetHitBySkillType(JUST_SKILLTYPE_ENEMY_ATTACK);
	let karrynJustUsedSkills = this.isStateAffected(STATE_STANDBY_EMOTE_USED_BATTLE_SKILLS_ID) || this.isStateAffected(STATE_STANDBY_EMOTE_USED_FLAUNT_ID);
	
	let energyPercent = this.currentPercentOfEnergy_realMax();
	let energyAt100To41 = energyPercent >= 41;
	let energyAt40To0 = energyPercent < 41;
	let generalReactionScore = this.getDownPoseReactionScore();
	let generallvl3 = generalReactionScore >= VAR_DEF_RS_LV3_REQ;
	let generallvl2 = generalReactionScore >= VAR_DEF_RS_LV2_REQ;
	let orgasmReactionScore = this.getOrgasmReactionScore();
	let orgasmlvl3 = orgasmReactionScore >= VAR_DEF_RS_LV3_REQ;
	let orgasmlvl2 = orgasmReactionScore >= VAR_DEF_RS_LV2_REQ;
	
	let tachieBodyType = '1';
	if(!isWearingPanties && generallvl3) {
		tachieBodyType = '2';
		this.setTachiePubicExtension('kupa_');
	}
	
	if(!this.isWearingGlovesAndHat()) {
		if(Karryn.isCensored())
			this.setTachieBody('naked_' + tachieBodyType + '_cen');
		else
			this.setTachieBody('naked_' + tachieBodyType);
		
		this.setTachieLeftArm('naked_' + tachieBodyType);
		this.setTachieRightArm('naked_1');
		
		if((isAroused)) 
			this.setTachieBoobs('naked_1_hard');
		else
			this.setTachieBoobs('naked_1');
	}
	else {
		if(Karryn.isCensored())
			this.setTachieBody('' + tachieBodyType + '_cen');
		else
			this.setTachieBody(tachieBodyType);
		this.setPoseClothing();
		
		this.setTachieLeftArm('' + tachieBodyType);
		this.setTachieRightArm('1');
	}
	
	let faceArray = [];
	this.resetTachieHoppe();
	this.resetTachieSweat();
	
	if(justOrgasmed) {
		if(orgasmlvl3)
			faceArray.push(20);
		else if(orgasmlvl2)
			faceArray.push(17);
		else
			faceArray.push(15);
	}
	else if(lastHitClothesPull) {
		if(generallvl3)
			faceArray.push(18);
		else if(generallvl2)
			faceArray.push(16);
		else
			faceArray.push(13);
	}
	else if(karrynJustUsedSkills) {
		if(generallvl3)
			faceArray.push(19);
		else
			faceArray.push(14);
	}	
	else if(isHorny) {
		if(generallvl3) {
			if(energyAt100To41)
				faceArray.push(11);
			else
				faceArray.push(12);
		}
		else if(generallvl2) {
			if(energyAt100To41)
				faceArray.push(9);
			else
				faceArray.push(10);
		}
		else {
			if(energyAt100To41)
				faceArray.push(7);
			else
				faceArray.push(8);
		}
	}
	else {
		if(generallvl3) {
			if(energyAt100To41)
				faceArray.push(5);
			else
				faceArray.push(6);
		}
		else if(generallvl2) {
			if(energyAt100To41)
				faceArray.push(3);
			else
				faceArray.push(4);
		}
		else {
			if(energyAt100To41)
				faceArray.push(1);
			else
				faceArray.push(2);
		}
	}
	
	this.removeState(STATE_STANDBY_EMOTE_USED_BATTLE_SKILLS_ID);
	this.removeState(STATE_STANDBY_EMOTE_USED_FLAUNT_ID);
	
	let faceId = faceArray[Math.randomInt(faceArray.length)];
	let eyebrowsArray = [];
	let eyesArray = [];
	let mouthArray = [];
	
	switch(faceId) {
	case 1:
		eyebrowsArray.push('oko1');
		eyebrowsArray.push('oko2');
		eyesArray.push('camera1');
		eyesArray.push('camera2');
		mouthArray.push('ku1');
		mouthArray.push('ku2');
		mouthArray.push('mu3');
		if(isAroused) this.setTachieHoppe(1);
		this.setTachieSweat(1);
	break;
	case 2:
		eyebrowsArray.push('koma1');
		eyebrowsArray.push('koma2');
		eyesArray.push('camera2');
		eyesArray.push('camera3');
		eyesArray.push('toji1');
		mouthArray.push('wa1');
		mouthArray.push('wa2');
		mouthArray.push('ho2');
		if(isAroused) this.setTachieHoppe(1);
		this.setTachieSweat(2);
	break;
	case 3:
		eyebrowsArray.push('oko1');
		eyebrowsArray.push('oko2');
		eyesArray.push('camera2');
		eyesArray.push('camera1');
		mouthArray.push('mu1');
		mouthArray.push('mu2');
		mouthArray.push('mu3');
		mouthArray.push('ho1');
		if(isAroused) this.setTachieHoppe(1);
		this.setTachieSweat(1);
	break;
	case 4:
		eyebrowsArray.push('koma1');
		eyebrowsArray.push('koma2');
		eyesArray.push('camera2');
		eyesArray.push('camera3');
		eyesArray.push('toji1');
		mouthArray.push('wa1');
		mouthArray.push('ho2');
		mouthArray.push('ho3');
		mouthArray.push('ku1');
		mouthArray.push('ku2');
		if(isAroused) this.setTachieHoppe(1);
		this.setTachieSweat(2);
	break;
	case 5:
		eyebrowsArray.push('nico1');
		eyebrowsArray.push('nico2');
		eyesArray.push('camera2');
		eyesArray.push('camera1');
		mouthArray.push('nico1');
		mouthArray.push('nico2');
		mouthArray.push('wara1');
		mouthArray.push('wara2');
		mouthArray.push('mu2');
		if(isAroused) this.setTachieHoppe(1);
		this.setTachieSweat(1);
	break;
	case 6:
		eyebrowsArray.push('nico1');
		eyebrowsArray.push('nico2');
		eyebrowsArray.push('koma1');
		eyesArray.push('camera2');
		eyesArray.push('camera3');
		eyesArray.push('toji1');
		mouthArray.push('ahe1');
		mouthArray.push('ahe2');
		mouthArray.push('nico2');
		mouthArray.push('ho3');
		mouthArray.push('wara2');
		mouthArray.push('wara1');
		if(isAroused) this.setTachieHoppe(1);
		this.setTachieSweat(2);
	break;
	case 7:
		eyebrowsArray.push('oko1');
		eyebrowsArray.push('oko2');
		eyesArray.push('camera1');
		mouthArray.push('pero1');
		mouthArray.push('nico2');
		mouthArray.push('wara1');
		mouthArray.push('wara2');
		this.setTachieHoppe(1);
	break;
	case 8:
		eyebrowsArray.push('koma1');
		eyesArray.push('camera2');
		mouthArray.push('ho2');
		mouthArray.push('ho3');
		mouthArray.push('ahe2');
		this.setTachieHoppe(1);
		this.setTachieSweat(1);
	break;
	case 9:
		eyebrowsArray.push('kiri1');
		eyesArray.push('uru1');
		eyesArray.push('uru2');
		mouthArray.push('nico1');
		mouthArray.push('nico2');
		mouthArray.push('wara1');
		mouthArray.push('wara2');
		mouthArray.push('pero1');
		this.setTachieHoppe(1);
	break;
	case 10:
		eyebrowsArray.push('oko1');
		eyebrowsArray.push('oko2');
		eyesArray.push('uru2');
		mouthArray.push('mu2');
		mouthArray.push('ho2');
		mouthArray.push('ho3');
		mouthArray.push('ahe1');
		this.setTachieHoppe(1);
	break;
	case 11:
		eyebrowsArray.push('nico1');
		eyebrowsArray.push('nico2');
		eyesArray.push('heart1');
		eyesArray.push('heart2');
		mouthArray.push('ahe2');
		mouthArray.push('ahe3');
		mouthArray.push('nico2');
		mouthArray.push('wara2');
		mouthArray.push('pero1');
		this.setTachieHoppe(1);
	break;
	case 12:
		eyebrowsArray.push('koma1');
		eyebrowsArray.push('koma2');
		eyesArray.push('heart2');
		mouthArray.push('ahe1');
		mouthArray.push('ahe3');
		mouthArray.push('nico2');
		mouthArray.push('nico1');
		mouthArray.push('wara1');
		this.setTachieHoppe(1);
		this.setTachieSweat(1);
	break;
	case 13:
		eyebrowsArray.push('oko1');
		eyesArray.push('camera2');
		eyesArray.push('camera3');
		eyesArray.push('toji1');
		mouthArray.push('wa1');
		mouthArray.push('wa2');
		mouthArray.push('ho2');
		this.setTachieHoppe(1);
		this.setTachieSweat(1);
	break;
	case 14:
		eyebrowsArray.push('kiri1');
		eyesArray.push('camera2');
		eyesArray.push('camera1');
		mouthArray.push('ku2');
		mouthArray.push('mu1');
		mouthArray.push('mu3');
		mouthArray.push('ho1');
		if(isAroused) this.setTachieHoppe(1);
		this.setTachieSweat(1);
	break;
	case 15:
		eyebrowsArray.push('oko1');
		eyebrowsArray.push('oko2');
		eyesArray.push('camera3');
		eyesArray.push('toji1');
		mouthArray.push('ku1');
		mouthArray.push('wa2');
		mouthArray.push('ho3');
		mouthArray.push('ahe1');
		this.setTachieHoppe(1);
		this.setTachieSweat(2);
	break;
	case 16:
		eyebrowsArray.push('kiri1');
		eyebrowsArray.push('oko2');
		eyebrowsArray.push('koma2');
		eyesArray.push('camera2');
		eyesArray.push('camera3');
		mouthArray.push('mu1');
		mouthArray.push('mu2');
		mouthArray.push('mu3');
		mouthArray.push('ho1');
		mouthArray.push('wa1');
		this.setTachieHoppe(1);
		this.setTachieSweat(1);
	break;
	case 17:
		eyebrowsArray.push('koma1');
		eyebrowsArray.push('koma2');
		eyesArray.push('camera3');
		eyesArray.push('uru1');
		eyesArray.push('uru2');
		eyesArray.push('toji1');
		eyesArray.push('ahe1');
		mouthArray.push('wa2');
		mouthArray.push('ho2');
		mouthArray.push('ho3');
		mouthArray.push('ahe1');
		mouthArray.push('ahe2');
		this.setTachieHoppe(1);
		this.setTachieSweat(2);
	break;
	case 18:
		eyebrowsArray.push('nico1');
		eyebrowsArray.push('nico2');
		eyesArray.push('camera2');
		eyesArray.push('camera3');
		eyesArray.push('uru1');
		eyesArray.push('uru2');
		eyesArray.push('heart1');
		eyesArray.push('heart2');
		mouthArray.push('nico1');
		mouthArray.push('nico2');
		mouthArray.push('pero1');
		mouthArray.push('wara1');
		this.setTachieHoppe(1);
	break;
	case 19:
		eyebrowsArray.push('kiri1');
		eyesArray.push('camera1');
		eyesArray.push('camera2');
		eyesArray.push('camera3');
		eyesArray.push('uru2');
		mouthArray.push('nico1');
		mouthArray.push('nico2');
		mouthArray.push('pero1');
		mouthArray.push('wara1');
		mouthArray.push('mu1');
		if(isAroused) this.setTachieHoppe(1);
	break;
	case 20:
		eyebrowsArray.push('oko1');
		eyebrowsArray.push('oko2');
		eyebrowsArray.push('koma1');
		eyebrowsArray.push('koma2');
		eyebrowsArray.push('nico1');
		eyebrowsArray.push('nico2');
		eyesArray.push('camera3');
		eyesArray.push('heart1');
		eyesArray.push('heart2');
		eyesArray.push('heartahe1');
		eyesArray.push('toji1');
		eyesArray.push('ahe1');
		mouthArray.push('wara2');
		mouthArray.push('ho2');
		mouthArray.push('ho3');
		mouthArray.push('ahe1');
		mouthArray.push('ahe2');
		mouthArray.push('ahe3');
		this.setTachieHoppe(1);
		this.setTachieSweat(1);
	break;
	}
		
	if(eyebrowsArray.length > 0) {
		this.setTachieEyebrows(eyebrowsArray[Math.randomInt(eyebrowsArray.length)]);
	}
	if(eyesArray.length > 0) {
		this.setTachieEyes(eyesArray[Math.randomInt(eyesArray.length)]);
	}
	if(mouthArray.length > 0) {
		this.setTachieMouth(mouthArray[Math.randomInt(mouthArray.length)]);
	}	
	
	this.setAllowTachieEmoteUpdate(true);
};

/////////////////
// Emote Down Falldown Pose 
/////////////////
Game_Actor.prototype.emoteDownFalldownPose = function() {
	this.setAllowTachieEmoteUpdate(false);
	let justOrgasmed = this.didLastGetHitBySkillType(JUST_SKILLTYPE_KARRYN_ORGASM) || this.justOrgasmed();
	let isAroused = this.isAroused() || justOrgasmed;
	let isHorny = this.isHorny;
	let staminaPercent = this.currentPercentOfStamina_realMax();
	let highStamina = staminaPercent >= 61;
	let medStamina = staminaPercent >= 21 && staminaPercent < 61
	let lowStamina = staminaPercent < 21;
	let masochismLvl = this.masochismLvl();
	
	let generalReactionScore = this.getDownPoseReactionScore();
	let generallvl3 = generalReactionScore >= VAR_DEF_RS_LV3_REQ;
	let generallvl2 = generalReactionScore >= VAR_DEF_RS_LV2_REQ;
	let isMasochist = (this.masochismLvl() + 3 > this.sadismLvl() && generallvl3) || (this.masochismLvl() + 6 > this.sadismLvl() && generallvl2);

	let fatigueLevel = this.getFatigueLevel();
	let fatigueLvl1 = fatigueLevel === 2 || (fatigueLevel === 1 && staminaPercent <= 66) || (staminaPercent <= 33);
	let fatigueLvl2 = fatigueLevel === 3 || (fatigueLevel === 2 && staminaPercent <= 66) || (fatigueLevel === 1 && staminaPercent <= 33);
	let fatigueLvl3 = fatigueLevel >= 4 || (fatigueLevel === 3 && staminaPercent <= 66) || (fatigueLevel === 2 && staminaPercent <= 33);

	if(!this.isWearingGlovesAndHat()) {
		if(Karryn.isCensored())
			this.setTachieBody('naked_1_cen');
		else
			this.setTachieBody('naked_1');
		
		if(isAroused) 
			this.setTachieBoobs('naked_1_hard');
		else
			this.setTachieBoobs('naked_1');
	}
	else {
		if(Karryn.isCensored())
			this.setTachieBody('1_cen');
		else
			this.setTachieBody('1');
		this.setPoseClothing();
	}
	
	if(this.isWearingPanties() && ConfigManager.KarrynPubicStyle === PUBIC_STYLE_BUSHY_ID) {
		this.setTachiePubicExtension('panties_');
	}
	else {
		this.resetTachiePubicExtension();
	}

	let faceArray = [];
	this.resetTachieHoppe();
	this.resetTachieSweat();
	
	if(isHorny) {
		if(generallvl3) {
			if(highStamina)
				faceArray.push(17);
			else if(medStamina)
				faceArray.push(18);
			else
				faceArray.push(19);
		}
		else if(generallvl2) {
			if(highStamina)
				faceArray.push(14);
			else if(medStamina)
				faceArray.push(15);
			else
				faceArray.push(16);
		}
		else {
			if(highStamina)
				faceArray.push(11);
			else if(medStamina)
				faceArray.push(12);
			else
				faceArray.push(13);
		}
	}
	else if(isMasochist) {
		faceArray.push(10);
	}
	else if(generallvl3) {
		if(highStamina)
			faceArray.push(7);
		else if(medStamina)
			faceArray.push(8);
		else
			faceArray.push(9);
	}
	else if(generallvl2) {
		if(highStamina)
			faceArray.push(4);
		else if(medStamina)
			faceArray.push(5);
		else
			faceArray.push(6);
	}
	else {
		if(highStamina)
			faceArray.push(1);
		else if(medStamina)
			faceArray.push(2);
		else
			faceArray.push(3);
	}
	
	let faceId = faceArray[Math.randomInt(faceArray.length)];
	let eyebrowsArray = [];
	let eyesArray = [];
	let mouthArray = [];
	
	if(faceId === 1) {
		eyebrowsArray.push('oko1');
		eyebrowsArray.push('ku1');
		eyesArray.push('mae1');
		mouthArray.push('gugi1');
		mouthArray.push('mu1');
		mouthArray.push('au1');
		if(isAroused) this.setTachieHoppe(1);
		this.setTachieSweat(1);
	}
	else if(faceId === 2) {
		eyebrowsArray.push('oko1');
		eyebrowsArray.push('ku1');
		eyebrowsArray.push('koma1');
		eyesArray.push('mae2');
		eyesArray.push('toji2');
		mouthArray.push('gugi1');
		mouthArray.push('mu1');
		mouthArray.push('au1');
		if(isAroused) this.setTachieHoppe(1);
		this.setTachieSweat(1);
	}
	else if(faceId === 3) {
		eyebrowsArray.push('ku1');
		eyebrowsArray.push('koma2');
		eyesArray.push('toji1');
		eyesArray.push('toji2');
		mouthArray.push('gugi1');
		mouthArray.push('mu1');
		mouthArray.push('au1');
		if(isAroused) this.setTachieHoppe(1);
		this.setTachieSweat(2);
	}
	else if(faceId === 4) {
		eyebrowsArray.push('ku1');
		eyebrowsArray.push('ku2');
		eyesArray.push('mae1');
		mouthArray.push('mu2');
		mouthArray.push('au2');
		mouthArray.push('au1');
		if(isAroused) this.setTachieHoppe(1);
		this.setTachieSweat(1);
	}
	else if(faceId === 5) {
		eyebrowsArray.push('ku1');
		eyebrowsArray.push('ku2');
		eyebrowsArray.push('koma1');
		eyesArray.push('mae2');
		eyesArray.push('toji2');
		mouthArray.push('au2');
		mouthArray.push('ahe1');
		mouthArray.push('wa2');
		if(isAroused) this.setTachieHoppe(1);
		this.setTachieSweat(1);
	}
	else if(faceId === 6) {
		eyebrowsArray.push('ku1');
		eyebrowsArray.push('koma2');
		eyesArray.push('toji3');
		eyesArray.push('toji2');
		mouthArray.push('ahe2');
		mouthArray.push('ahe1');
		if(isAroused) this.setTachieHoppe(1);
		this.setTachieSweat(2);
	}
	else if(faceId === 7) {
		eyebrowsArray.push('nico1');
		eyesArray.push('mae1');
		mouthArray.push('nico1');
		mouthArray.push('nico2');
		mouthArray.push('nico3');
		mouthArray.push('mu2');
		this.setTachieHoppe(1);
		this.setTachieSweat(1);
	}
	else if(faceId === 8) {
		eyebrowsArray.push('nico1');
		eyesArray.push('mae2');
		eyesArray.push('toji2');
		mouthArray.push('nico1');
		mouthArray.push('nico2');
		mouthArray.push('nico3');
		mouthArray.push('ahe1');
		mouthArray.push('ahe2');
		this.setTachieHoppe(1);
		this.setTachieSweat(1);
	}
	else if(faceId === 9) {
		eyebrowsArray.push('nico1');
		eyesArray.push('toji3');
		eyesArray.push('toji2');
		mouthArray.push('wa1');
		mouthArray.push('wa2');
		mouthArray.push('ahe1');
		mouthArray.push('ahe2');
		this.setTachieHoppe(1);
		this.setTachieSweat(2);
	}
	else if(faceId === 10) {
		eyebrowsArray.push('nico1');
		eyebrowsArray.push('koma2');
		eyesArray.push('mae2');
		eyesArray.push('toji1');
		eyesArray.push('toji2');
		eyesArray.push('toji3');
		mouthArray.push('nico1');
		mouthArray.push('nico2');
		mouthArray.push('nico3');
		mouthArray.push('ahe3');
		mouthArray.push('au2');
		mouthArray.push('mu2');
		this.setTachieHoppe(1);
	}
	else if(faceId === 11) {
		eyebrowsArray.push('kiri1');
		eyebrowsArray.push('kiri2');
		eyesArray.push('mae1');
		mouthArray.push('nico1');
		mouthArray.push('nico2');
		mouthArray.push('nico3');
		this.setTachieHoppe(1);
	}
	else if(faceId === 12) {
		eyebrowsArray.push('oko1');
		eyesArray.push('mae2');
		mouthArray.push('mu2');
		mouthArray.push('mu3');
		mouthArray.push('au1');
		this.setTachieHoppe(1);
		this.setTachieSweat(1);
	}
	else if(faceId === 13) {
		eyebrowsArray.push('ku1');
		eyebrowsArray.push('ku2');
		eyesArray.push('uru2');
		mouthArray.push('mu1');
		mouthArray.push('ahe1');
		mouthArray.push('au2');
		this.setTachieHoppe(1);
		this.setTachieSweat(2);
	}
	else if(faceId === 14) {
		eyebrowsArray.push('nico1');
		eyebrowsArray.push('kiri2');
		eyesArray.push('uru1');
		mouthArray.push('pero1');
		mouthArray.push('nico2');
		this.setTachieHoppe(1);
	}
	else if(faceId === 15) {
		eyebrowsArray.push('kiri1');
		eyesArray.push('uru2');
		mouthArray.push('nico2');
		mouthArray.push('nico3');
		this.setTachieHoppe(1);
		this.setTachieSweat(1);
	}
	else if(faceId === 16) {
		eyebrowsArray.push('koma2');
		eyesArray.push('uru2');
		eyesArray.push('toji1');
		mouthArray.push('wa2');
		mouthArray.push('ahe2');
		mouthArray.push('mu3');
		this.setTachieHoppe(1);
		this.setTachieSweat(2);
	}
	else if(faceId === 17) {
		eyebrowsArray.push('nico1');
		eyesArray.push('heart1');
		mouthArray.push('ahe3');
		mouthArray.push('ahe4');
		this.setTachieHoppe(1);
	}
	else if(faceId === 18) {
		eyebrowsArray.push('nico1');
		eyebrowsArray.push('oko1');
		eyebrowsArray.push('koma2');
		eyesArray.push('heart1');
		eyesArray.push('heart2');
		mouthArray.push('pero1');
		mouthArray.push('nico1');
		this.setTachieHoppe(1);
		this.setTachieSweat(1);
	}
	else if(faceId === 19) {
		eyebrowsArray.push('koma1');
		eyebrowsArray.push('koma2');
		eyesArray.push('heart2');
		mouthArray.push('ahe4');
		mouthArray.push('nico2');
		mouthArray.push('nico3');
		this.setTachieHoppe(1);
		this.setTachieSweat(2);
	}
	
	
	if(eyebrowsArray.length > 0) {
		this.setTachieEyebrows(eyebrowsArray[Math.randomInt(eyebrowsArray.length)]);
	}
	if(eyesArray.length > 0) {
		this.setTachieEyes(eyesArray[Math.randomInt(eyesArray.length)]);
	}
	if(mouthArray.length > 0) {
		this.setTachieMouth(mouthArray[Math.randomInt(mouthArray.length)]);
	}	
	
	this.setAllowTachieEmoteUpdate(true);
};

/////////////////
// Emote Down Orgasm Pose
/////////////////
Game_Actor.prototype.emoteDownOrgasmPose = function() {
	if(this.isWearingPanties() && ConfigManager.KarrynPubicStyle === PUBIC_STYLE_BUSHY_ID) {
		this.setAllowTachieEmoteUpdate(false);
		this.setTachiePubicExtension('panties_');
		this.setAllowTachieEmoteUpdate(true);
	}
	else {
		this.setAllowTachieEmoteUpdate(false);
		this.resetTachiePubicExtension();
		this.setAllowTachieEmoteUpdate(true);
	}
};

/////////////////
// Emote Standing Handjob Human Pose
/////////////////
Game_Actor.prototype.emoteStandingHandjobPose = function() {
	this.setAllowTachieEmoteUpdate(false);
	let justOrgasmed = this.didLastGetHitBySkillType(JUST_SKILLTYPE_KARRYN_ORGASM) || this.justOrgasmed();
	let isAroused = this.isAroused() || justOrgasmed;
	let hasLeftHandjob = this.isBodySlotPenis(LEFT_HAND_ID);
	let justGotHarassed = this.didLastGetHitBySkillType(JUST_SKILLTYPE_ENEMY_TOY_PLAY) || this.didLastGetHitBySkillType(JUST_SKILLTYPE_PASSIVE_TOY) || this.didLastGetHitBySkillType(JUST_SKILLTYPE_ENEMY_PETTING);
	let lastHitHandjob = this.didLastGetHitBySkillType(JUST_SKILLTYPE_KARRYN_HANDJOB) || this.didLastGetHitBySkillType(JUST_SKILLTYPE_ENEMY_HANDJOB);
	let lastHandjobIsToRight = this._lastHandUsedForHandjob === RIGHT_HAND_ID;
	let lastHandjobIsToLeft = this._lastHandUsedForHandjob === LEFT_HAND_ID;
	let karrynGotBukkaked = this.didLastGetHitBySkillType(JUST_SKILLTYPE_ENEMY_BUKKAKE);
	let enemyCummingFromLeftHJ = $gameTroop._lastEnemySlotToCum === LEFT_HAND_ID;
	let enemyCummingFromRightHJ = $gameTroop._lastEnemySlotToCum === RIGHT_HAND_ID;
	
	let generalReactionScore = this.getReactionScore();
	let orgasmReactionScore = this.getOrgasmReactionScore();
	let bukkakeReactionScore = this.getBukkakeReactionScore();
	let generallvl3 = generalReactionScore >= VAR_DEF_RS_LV3_REQ;
	let generallvl2 = generalReactionScore >= VAR_DEF_RS_LV2_REQ;
	let orgasmlvl3 = orgasmReactionScore >= VAR_DEF_RS_LV3_REQ;
	let orgasmlvl2 = orgasmReactionScore >= VAR_DEF_RS_LV2_REQ;
	let bukkakelvl3 = bukkakeReactionScore >= VAR_DEF_RS_LV3_REQ;
	let bukkakelvl2 = bukkakeReactionScore >= VAR_DEF_RS_LV2_REQ;
	
	if(!this.isWearingGlovesAndHat()) {
		this.setTachieRightArm('hj_naked');
		if(hasLeftHandjob)
			this.setTachieLeftArm('hj_naked');
		else 
			this.setTachieLeftArm('normal_naked');
	}
	else {
		this.setTachieRightArm('hj');
		if(hasLeftHandjob)
			this.setTachieLeftArm('hj');
		else 
			this.setTachieLeftArm('normal');
	}
	
	let faceArray = [];
	this.resetTachieHoppe();
	this.resetTachieSweat();
	
	if(justOrgasmed) {
		if(orgasmlvl3)
			faceArray.push(15);
		else if(orgasmlvl2)
			faceArray.push(10);
		else
			faceArray.push(5);
	}
	else if(enemyCummingFromLeftHJ) {
		if(bukkakelvl3)
			faceArray.push(14);
		if(bukkakelvl2)
			faceArray.push(9);
		else
			faceArray.push(4);
	}
	else if(enemyCummingFromRightHJ) {
		if(bukkakelvl3)
			faceArray.push(13);
		if(bukkakelvl2)
			faceArray.push(8);
		else
			faceArray.push(3);
	}
	else if(karrynGotBukkaked) {
		if(bukkakelvl3)
			faceArray.push(13);
		if(bukkakelvl2)
			faceArray.push(8);
		else
			faceArray.push(3);
	}
	else if(justGotHarassed) {
		if(generallvl3)
			faceArray.push(13);
		if(generallvl2)
			faceArray.push(8);
		else
			faceArray.push(3);
	}
	else if(lastHitHandjob) {
		if(lastHandjobIsToLeft) {
			if(generallvl3)
				faceArray.push(12);
			else if(generallvl2)
				faceArray.push(7);
			else
				faceArray.push(2);
		}
		else {
			if(generallvl3)
				faceArray.push(11);
			else if(generallvl2)
				faceArray.push(6);
			else
				faceArray.push(1);
		}
	}
	else {
		if(generallvl3)
			faceArray.push(11);
		else if(generallvl2)
			faceArray.push(6);
		else
			faceArray.push(1);
	}
	
	let faceId = faceArray[Math.randomInt(faceArray.length)];
	let eyebrowsArray = [];
	let eyesArray = [];
	let mouthArray = [];
	
	if(faceId === 1) {
		eyebrowsArray.push('oko1');
		eyebrowsArray.push('koma1');
		eyebrowsArray.push('koma2');
		eyesArray.push('mae1');
		eyesArray.push('mae2');
		mouthArray.push('ku1');
		mouthArray.push('ku2');
		mouthArray.push('mu1');
		mouthArray.push('ho1');
		mouthArray.push('wa1');
		this.setTachieHoppe(1);
		this.setTachieSweat(1);
	}
	else if(faceId === 2) {
		eyebrowsArray.push('oko1');
		eyebrowsArray.push('koma1');
		eyebrowsArray.push('koma2');
		eyesArray.push('yoko1');
		eyesArray.push('yoko2');
		mouthArray.push('ku1');
		mouthArray.push('ku2');
		mouthArray.push('mu1');
		mouthArray.push('ho1');
		mouthArray.push('wa1');
		this.setTachieHoppe(1);
		this.setTachieSweat(1);
	}
	else if(faceId === 3) {
		eyebrowsArray.push('oko1');
		eyebrowsArray.push('koma1');
		eyebrowsArray.push('koma2');
		eyesArray.push('mae2');
		eyesArray.push('mae3');
		eyesArray.push('urumae2');
		mouthArray.push('ku1');
		mouthArray.push('ku2');
		mouthArray.push('ho1');
		mouthArray.push('wa1');
		mouthArray.push('wa2');
		this.setTachieHoppe(1);
		this.setTachieSweat(1);
	}
	else if(faceId === 4) {
		eyebrowsArray.push('oko1');
		eyebrowsArray.push('koma1');
		eyebrowsArray.push('koma2');
		eyesArray.push('yoko2');
		eyesArray.push('yoko3');
		eyesArray.push('uruyoko2');
		mouthArray.push('ku1');
		mouthArray.push('ku2');
		mouthArray.push('ho1');
		mouthArray.push('wa1');
		mouthArray.push('wa2');
		this.setTachieHoppe(1);
		this.setTachieSweat(1);
	}
	else if(faceId === 5) {
		eyebrowsArray.push('oko1');
		eyebrowsArray.push('koma1');
		eyebrowsArray.push('koma2');
		eyesArray.push('mae3');
		eyesArray.push('urumae1');
		eyesArray.push('urumae2');
		eyesArray.push('toji1');
		mouthArray.push('ahe1');
		mouthArray.push('ku1');
		mouthArray.push('ku2');
		mouthArray.push('wa1');
		mouthArray.push('wa2');
		this.setTachieHoppe(1);
		this.setTachieSweat(1);
	}
	else if(faceId === 6) {
		eyebrowsArray.push('kiri1');
		eyebrowsArray.push('kiri2');
		eyesArray.push('mae1');
		eyesArray.push('mae2');
		mouthArray.push('mu1');
		mouthArray.push('mu2');
		mouthArray.push('ho1');
		mouthArray.push('wa1');
		mouthArray.push('nico2');
		this.setTachieHoppe(1);
	}
	else if(faceId === 7) {
		eyebrowsArray.push('kiri1');
		eyebrowsArray.push('kiri2');
		eyesArray.push('yoko1');
		eyesArray.push('yoko2');
		mouthArray.push('mu1');
		mouthArray.push('mu2');
		mouthArray.push('ho1');
		mouthArray.push('wa1');
		mouthArray.push('nico2');
		this.setTachieHoppe(1);
	}
	else if(faceId === 8) {
		eyebrowsArray.push('kiri1');
		eyebrowsArray.push('kiri2');
		eyebrowsArray.push('koma1');
		eyesArray.push('mae1');
		eyesArray.push('mae2');
		eyesArray.push('mae3');
		eyesArray.push('urumae1');
		eyesArray.push('urumae2');
		mouthArray.push('mu1');
		mouthArray.push('mu2');
		mouthArray.push('ho1');
		mouthArray.push('wa1');
		mouthArray.push('nico1');
		mouthArray.push('nico2');
		this.setTachieHoppe(1);
		this.setTachieSweat(1);
	}
	else if(faceId === 9) {
		eyebrowsArray.push('kiri1');
		eyebrowsArray.push('kiri2');
		eyebrowsArray.push('koma1');
		eyesArray.push('yoko1');
		eyesArray.push('yoko2');
		eyesArray.push('yoko3');
		eyesArray.push('uruyoko1');
		eyesArray.push('uruyoko2');
		mouthArray.push('mu1');
		mouthArray.push('mu2');
		mouthArray.push('ho1');
		mouthArray.push('wa1');
		mouthArray.push('nico1');
		mouthArray.push('nico2');
		this.setTachieHoppe(1);
		this.setTachieSweat(1);
	}
	else if(faceId === 10) {
		eyebrowsArray.push('kiri1');
		eyebrowsArray.push('kiri2');
		eyebrowsArray.push('koma2');
		eyesArray.push('mae2');
		eyesArray.push('mae3');
		eyesArray.push('urumae1');
		eyesArray.push('urumae2');
		eyesArray.push('ahe1');
		mouthArray.push('ahe1');
		mouthArray.push('ku1');
		mouthArray.push('ku2');
		mouthArray.push('wa2');
		mouthArray.push('wara1');
		mouthArray.push('ho1');
		this.setTachieHoppe(1);
		this.setTachieSweat(1);
	}
	else if(faceId === 11) {
		eyebrowsArray.push('nico1');
		eyebrowsArray.push('nico2');
		eyebrowsArray.push('kiri2');
		eyesArray.push('mae1');
		eyesArray.push('mae2');
		eyesArray.push('urumae1');
		eyesArray.push('urumae2');
		mouthArray.push('mu2');
		mouthArray.push('ho1');
		mouthArray.push('nico1');
		mouthArray.push('nico2');
		mouthArray.push('nico3');
		mouthArray.push('pero1');
		mouthArray.push('pero2');
		if(isAroused) this.setTachieHoppe(1);
	}
	else if(faceId === 12) {
		eyebrowsArray.push('nico1');
		eyebrowsArray.push('nico2');
		eyebrowsArray.push('kiri2');
		eyesArray.push('yoko1');
		eyesArray.push('yoko2');
		eyesArray.push('uruyoko1');
		eyesArray.push('uruyoko2');
		mouthArray.push('mu2');
		mouthArray.push('ho1');
		mouthArray.push('nico1');
		mouthArray.push('nico2');
		mouthArray.push('nico3');
		mouthArray.push('pero1');
		mouthArray.push('pero2');
		if(isAroused) this.setTachieHoppe(1);
	}
	else if(faceId === 13) {
		eyebrowsArray.push('nico1');
		eyebrowsArray.push('nico2');
		eyebrowsArray.push('kiri1');
		eyebrowsArray.push('kiri2');
		eyebrowsArray.push('koma1');
		eyesArray.push('mae1');
		eyesArray.push('mae2');
		eyesArray.push('mae3');
		eyesArray.push('urumae1');
		eyesArray.push('urumae2');
		eyesArray.push('heartmae2');
		mouthArray.push('ahe2');
		mouthArray.push('ho1');
		mouthArray.push('nico2');
		mouthArray.push('nico3');
		mouthArray.push('pero1');
		mouthArray.push('pero2');
		mouthArray.push('wara1');
		mouthArray.push('wara2');
		if(isAroused) this.setTachieHoppe(1);
		if(Math.randomInt(2) === 0) this.setTachieSweat(1);
	}
	else if(faceId === 14) {
		eyebrowsArray.push('nico1');
		eyebrowsArray.push('nico2');
		eyebrowsArray.push('kiri1');
		eyebrowsArray.push('kiri2');
		eyebrowsArray.push('koma1');
		eyesArray.push('yoko1');
		eyesArray.push('yoko2');
		eyesArray.push('yoko3');
		eyesArray.push('uruyoko1');
		eyesArray.push('uruyoko2');
		eyesArray.push('heartyoko2');
		mouthArray.push('ahe2');
		mouthArray.push('ho1');
		mouthArray.push('nico2');
		mouthArray.push('nico3');
		mouthArray.push('pero1');
		mouthArray.push('pero2');
		mouthArray.push('wara1');
		mouthArray.push('wara2');
		if(isAroused) this.setTachieHoppe(1);
		if(Math.randomInt(2) === 0) this.setTachieSweat(1);
	}
	else if(faceId === 15) {
		eyebrowsArray.push('nico1');
		eyebrowsArray.push('kiri1');
		eyebrowsArray.push('kiri2');
		eyebrowsArray.push('koma2');
		eyebrowsArray.push('oko1');
		eyesArray.push('mae3');
		eyesArray.push('toji1');
		eyesArray.push('ahe1');
		eyesArray.push('urumae2');
		eyesArray.push('heartmae1');
		eyesArray.push('heartmae2');
		eyesArray.push('heartahe1');
		mouthArray.push('ahe1');
		mouthArray.push('ahe2');
		mouthArray.push('ahe3');
		mouthArray.push('ho1');
		mouthArray.push('pero1');
		mouthArray.push('pero2');
		mouthArray.push('wara1');
		mouthArray.push('wara2');
		this.setTachieHoppe(1);
		this.setTachieSweat(1);
	}
	
	
	if(eyebrowsArray.length > 0) {
		this.setTachieEyebrows(eyebrowsArray[Math.randomInt(eyebrowsArray.length)]);
	}
	if(eyesArray.length > 0) {
		this.setTachieEyes(eyesArray[Math.randomInt(eyesArray.length)]);
	}
	if(mouthArray.length > 0) {
		this.setTachieMouth(mouthArray[Math.randomInt(mouthArray.length)]);
	}
	
	this.setAllowTachieEmoteUpdate(true);
};

Game_Actor.prototype.emoteKneelingBlowjobPose = function() {
	this.setAllowTachieEmoteUpdate(false);
	let justOrgasmed = this.didLastGetHitBySkillType(JUST_SKILLTYPE_KARRYN_ORGASM) || this.justOrgasmed();
	let isAroused = this.isAroused() || justOrgasmed;
	
	let hasLeftHandjob = this.isBodySlotPenis(LEFT_HAND_ID);
	let lastHitKarrynBlowjob = this.didLastGetHitBySkillType(JUST_SKILLTYPE_KARRYN_BLOWJOB);
	let lastHitEnemyBlowjob = this.didLastGetHitBySkillType(JUST_SKILLTYPE_ENEMY_BLOWJOB);
	let lastHitBlowjob = this.didLastGetHitBySkillType(JUST_SKILLTYPE_KARRYN_BLOWJOB) || this.didLastGetHitBySkillType(JUST_SKILLTYPE_ENEMY_BLOWJOB);
	let lastHitHandjob = this.didLastGetHitBySkillType(JUST_SKILLTYPE_KARRYN_HANDJOB) || this.didLastGetHitBySkillType(JUST_SKILLTYPE_ENEMY_HANDJOB);
	let justGotHarassed = this.didLastGetHitBySkillType(JUST_SKILLTYPE_ENEMY_TOY_PLAY) || this.didLastGetHitBySkillType(JUST_SKILLTYPE_PASSIVE_TOY) || this.didLastGetHitBySkillType(JUST_SKILLTYPE_ENEMY_PETTING);
	let karrynSwallowingCum = this.didLastGetHitBySkillType(JUST_SKILLTYPE_ENEMY_CUM_SWALLOW);
	let karrynGotBukkaked = this.didLastGetHitBySkillType(JUST_SKILLTYPE_ENEMY_BUKKAKE);
	
	let enemyCummingFromMouth = $gameTroop._lastEnemySlotToCum === MOUTH_ID;
	let enemyCummingFromLeftHJ = $gameTroop._lastEnemySlotToCum === LEFT_HAND_ID;

	let generalReactionScore = this.getReactionScore();
	let orgasmReactionScore = this.getOrgasmReactionScore();
	let bukkakeReactionScore = this.getBukkakeReactionScore();
	let swallowReactionScore = this.getSwallowReactionScore();
	let generallvl3 = generalReactionScore >= VAR_DEF_RS_LV3_REQ;
	let generallvl2 = generalReactionScore >= VAR_DEF_RS_LV2_REQ;
	let orgasmlvl3 = orgasmReactionScore >= VAR_DEF_RS_LV3_REQ;
	let orgasmlvl2 = orgasmReactionScore >= VAR_DEF_RS_LV2_REQ;
	let bukkakelvl3 = bukkakeReactionScore >= VAR_DEF_RS_LV3_REQ;
	let bukkakelvl2 = bukkakeReactionScore >= VAR_DEF_RS_LV2_REQ;
	let swallowlvl3 = swallowReactionScore  >= VAR_DEF_RS_LV3_REQ;
	let swallowlvl2 = swallowReactionScore >= VAR_DEF_RS_LV2_REQ;
	
	if(!this.isWearingGlovesAndHat()) {
		if(lastHitKarrynBlowjob) {
			this.setTachieRightArm('hj_naked');
			this.setMaxTachieSemenRightArmId(0);
		}
		else if(lastHitEnemyBlowjob) {
			this.setTachieRightArm('normal_naked');
			this.setMaxTachieSemenRightArmId(1);
		}
	}
	else {
		if(lastHitKarrynBlowjob) {
			this.setTachieRightArm('hj');
			this.setMaxTachieSemenRightArmId(0);
		}
		else if(lastHitEnemyBlowjob) {
			this.setTachieRightArm('normal');
			this.setMaxTachieSemenRightArmId(1);
		}
	}
	
	
	let faceArray = [];
	this.resetTachieHoppe();
	this.resetTachieSweat();
	
	if(justOrgasmed) {
		if(orgasmlvl3)
			faceArray.push(15);
		else if(orgasmlvl2)
			faceArray.push(10);
		else
			faceArray.push(5);
	}
	else if(enemyCummingFromMouth || karrynSwallowingCum) {
		if(swallowlvl3)
			faceArray.push(13);
		if(swallowlvl2)
			faceArray.push(8);
		else
			faceArray.push(3);
	}
	else if(enemyCummingFromLeftHJ) {
		if(bukkakelvl3)
			faceArray.push(14);
		if(bukkakelvl2)
			faceArray.push(9);
		else
			faceArray.push(4);
	}
	else if(karrynGotBukkaked) {
		if(bukkakelvl3)
			faceArray.push(13);
		if(bukkakelvl2)
			faceArray.push(8);
		else
			faceArray.push(3);
	}
	else if(lastHitHandjob) {
		if(generallvl3)
			faceArray.push(12);
		else if(generallvl2)
			faceArray.push(7);
		else
			faceArray.push(2);
	}
	else if(justGotHarassed) {
		if(generallvl3)
			faceArray.push(13);
		if(generallvl2)
			faceArray.push(8);
		else
			faceArray.push(3);
	}
	else {
		if(generallvl3)
			faceArray.push(11);
		else if(generallvl2)
			faceArray.push(6);
		else
			faceArray.push(1);
	}
	
	let faceId = faceArray[Math.randomInt(faceArray.length)];
	let eyebrowsArray = [];
	let eyesArray = [];
	let mouthArray = [];
	
	if(faceId === 1) {
		eyebrowsArray.push('oko1');
		eyebrowsArray.push('koma1');
		eyebrowsArray.push('koma2');
		eyesArray.push('sita1');
		eyesArray.push('sita2');
		mouthArray.push('fera1');
		mouthArray.push('fera2');
		this.setTachieHoppe(1);
		this.setTachieSweat(1);
	}
	else if(faceId === 2) {
		eyebrowsArray.push('oko1');
		eyebrowsArray.push('koma1');
		eyebrowsArray.push('koma2');
		eyesArray.push('yoko1');
		eyesArray.push('yoko2');
		mouthArray.push('fera1');
		mouthArray.push('fera2');
		this.setTachieHoppe(1);
		this.setTachieSweat(1);
	}
	else if(faceId === 3) {
		eyebrowsArray.push('oko1');
		eyesArray.push('sita3');
		eyesArray.push('urusita2');
		mouthArray.push('fera1');
		this.setTachieHoppe(1);
		this.setTachieSweat(1);
	}
	else if(faceId === 4) {
		eyebrowsArray.push('oko1');
		eyebrowsArray.push('koma1');
		eyebrowsArray.push('koma2');
		eyesArray.push('yoko1');
		eyesArray.push('yoko2');
		mouthArray.push('fera1');
		mouthArray.push('fera2');
		this.setTachieHoppe(1);
		this.setTachieSweat(1);
	}
	else if(faceId === 5) {
		eyebrowsArray.push('koma1');
		eyebrowsArray.push('koma2');
		eyesArray.push('ue3');
		eyesArray.push('toji1');
		mouthArray.push('fera1');
		mouthArray.push('fera2');
		this.setTachieHoppe(1);
		this.setTachieSweat(1);
	}
	else if(faceId === 6) {
		eyebrowsArray.push('kiri1');
		eyebrowsArray.push('kiri2');
		eyesArray.push('sita1');
		eyesArray.push('sita2');
		eyesArray.push('ue1');
		eyesArray.push('ue2');
		mouthArray.push('fera2');
		mouthArray.push('fera3');
		mouthArray.push('fera4');
		this.setTachieHoppe(1);
	}
	else if(faceId === 7) {
		eyebrowsArray.push('kiri1');
		eyebrowsArray.push('kiri2');
		eyesArray.push('yoko1');
		eyesArray.push('yoko2');
		mouthArray.push('fera2');
		mouthArray.push('fera3');
		mouthArray.push('fera4');
		this.setTachieHoppe(1);
	}
	else if(faceId === 8) {
		eyebrowsArray.push('kiri1');
		eyebrowsArray.push('koma1');
		eyebrowsArray.push('koma2');
		eyesArray.push('sita3');
		eyesArray.push('ue3');
		eyesArray.push('urusita1');
		eyesArray.push('urusita2');
		eyesArray.push('uruue1');
		mouthArray.push('fera3');
		mouthArray.push('fera4');
		this.setTachieHoppe(1);
		this.setTachieSweat(1);
	}
	else if(faceId === 9) {
		eyebrowsArray.push('kiri1');
		eyebrowsArray.push('koma1');
		eyebrowsArray.push('koma2');
		eyesArray.push('yoko3');
		eyesArray.push('uruyoko1');
		eyesArray.push('uruyoko2');
		mouthArray.push('fera3');
		mouthArray.push('fera4');
		this.setTachieHoppe(1);
		this.setTachieSweat(1);
	}
	else if(faceId === 10) {
		eyebrowsArray.push('oko1');
		eyebrowsArray.push('koma1');
		eyebrowsArray.push('koma2');
		eyesArray.push('ahe1');
		eyesArray.push('sita3');
		eyesArray.push('ue3');
		eyesArray.push('urusita1');
		eyesArray.push('urusita2');
		eyesArray.push('uruue1');
		eyesArray.push('uruue2');
		mouthArray.push('fera1');
		mouthArray.push('fera2');
		mouthArray.push('fera3');
		mouthArray.push('fera4');
		this.setTachieHoppe(1);
		this.setTachieSweat(1);
	}
	else if(faceId === 11) {
		eyebrowsArray.push('nico1');
		eyebrowsArray.push('nico2');
		eyebrowsArray.push('kiri2');
		eyesArray.push('sita1');
		eyesArray.push('sita2');
		eyesArray.push('ue1');
		eyesArray.push('ue2');
		eyesArray.push('urusita1');
		eyesArray.push('urusita2');
		eyesArray.push('uruue1');
		eyesArray.push('uruue2');
		eyesArray.push('heartsita1');
		eyesArray.push('heartue1');
		mouthArray.push('fera2');
		mouthArray.push('fera3');
		mouthArray.push('fera4');
		mouthArray.push('fera5');
		mouthArray.push('fera6');
		if(isAroused) this.setTachieHoppe(1);
	}
	else if(faceId === 12) {
		eyebrowsArray.push('nico1');
		eyebrowsArray.push('nico2');
		eyebrowsArray.push('kiri2');
		eyesArray.push('yoko1');
		eyesArray.push('yoko2');
		eyesArray.push('uruyoko1');
		eyesArray.push('uruyoko2');
		eyesArray.push('heartyoko1');
		mouthArray.push('fera2');
		mouthArray.push('fera3');
		mouthArray.push('fera4');
		mouthArray.push('fera5');
		mouthArray.push('fera6');
		if(isAroused) this.setTachieHoppe(1);
	}
	else if(faceId === 13) {
		eyebrowsArray.push('nico1');
		eyebrowsArray.push('nico2');
		eyebrowsArray.push('kiri1');
		eyebrowsArray.push('kiri2');
		eyebrowsArray.push('koma1');
		eyesArray.push('urusita2');
		eyesArray.push('uruue2');
		eyesArray.push('heartsita1');
		eyesArray.push('heartsita2');
		eyesArray.push('heartue1');
		eyesArray.push('heartue2');
		mouthArray.push('fera4');
		mouthArray.push('fera5');
		mouthArray.push('fera6');
		if(isAroused) this.setTachieHoppe(1);
		if(Math.randomInt(2) === 0) this.setTachieSweat(1);
	}
	else if(faceId === 14) {
		eyebrowsArray.push('nico1');
		eyebrowsArray.push('nico2');
		eyebrowsArray.push('kiri1');
		eyebrowsArray.push('kiri2');
		eyebrowsArray.push('koma1');
		eyesArray.push('yoko2');
		eyesArray.push('uruyoko2');
		eyesArray.push('heartyoko1');
		eyesArray.push('heartyoko2');
		mouthArray.push('fera2');
		mouthArray.push('fera3');
		mouthArray.push('fera4');
		mouthArray.push('fera5');
		mouthArray.push('fera6');
		if(isAroused) this.setTachieHoppe(1);
		if(Math.randomInt(2) === 0) this.setTachieSweat(1);
	}
	else if(faceId === 15) {
		eyebrowsArray.push('nico1');
		eyebrowsArray.push('nico2');
		eyebrowsArray.push('kiri1');
		eyebrowsArray.push('kiri2');
		eyebrowsArray.push('koma1');
		eyebrowsArray.push('koma2');
		eyebrowsArray.push('oko1');
		eyesArray.push('toji1');
		eyesArray.push('ahe1');
		eyesArray.push('ue3');
		eyesArray.push('urusita1');
		eyesArray.push('urusita2');
		eyesArray.push('uruue1');
		eyesArray.push('uruue2');
		eyesArray.push('heartsita1');
		eyesArray.push('heartsita2');
		eyesArray.push('heartue1');
		eyesArray.push('heartue2');
		eyesArray.push('heartahe1');
		mouthArray.push('fera2');
		mouthArray.push('fera3');
		mouthArray.push('fera4');
		mouthArray.push('fera5');
		mouthArray.push('fera6');
		this.setTachieHoppe(1);
		this.setTachieSweat(1);
	}
	
	if(eyebrowsArray.length > 0) {
		this.setTachieEyebrows(eyebrowsArray[Math.randomInt(eyebrowsArray.length)]);
	}
	if(eyesArray.length > 0) {
		this.setTachieEyes(eyesArray[Math.randomInt(eyesArray.length)]);
	}
	if(mouthArray.length > 0) {
		this.setTachieMouth(mouthArray[Math.randomInt(mouthArray.length)]);
	}
	
	this.setTachieStrayFaceExtension(ConfigManager.convertedTachieMouthName(this) + '_');
	
	this.setAllowTachieEmoteUpdate(true);
};

/////////////////
// Emote Thug Gangbang Pose
/////////////////
Game_Actor.prototype.emoteThugGangbangPose = function() {
	this.setAllowTachieEmoteUpdate(false);
	let justOrgasmed = this.didLastGetHitBySkillType(JUST_SKILLTYPE_KARRYN_ORGASM) || this.justOrgasmed();
	let isAroused = this.isAroused() || justOrgasmed;
	let givingBJ = this.isBodySlotPenis(MOUTH_ID);
	let givingHJ = this.isBodySlotPenis(LEFT_HAND_ID);
	
	let justGotHarassed = this.didLastGetHitBySkillType(JUST_SKILLTYPE_ENEMY_TOY_PLAY) || this.didLastGetHitBySkillType(JUST_SKILLTYPE_PASSIVE_TOY) || this.didLastGetHitBySkillType(JUST_SKILLTYPE_ENEMY_PETTING);
	let lastHitPussySex = this.didLastGetHitBySkillType(JUST_SKILLTYPE_ENEMY_PUSSY_SEX) || this.didLastGetHitBySkillType(JUST_SKILLTYPE_KARRYN_PUSSY_SEX);
	let lastHitTittyFuck = this.didLastGetHitBySkillType(JUST_SKILLTYPE_ENEMY_TITTYFUCK) || this.didLastGetHitBySkillType(JUST_SKILLTYPE_KARRYN_TITTYFUCK);
	let lastHitHandjob = this.didLastGetHitBySkillType(JUST_SKILLTYPE_KARRYN_HANDJOB) || this.didLastGetHitBySkillType(JUST_SKILLTYPE_ENEMY_HANDJOB);
	let lastHitBlowjob = this.didLastGetHitBySkillType(JUST_SKILLTYPE_KARRYN_BLOWJOB) || this.didLastGetHitBySkillType(JUST_SKILLTYPE_ENEMY_BLOWJOB);
	
	let karrynSwallowingCum = this.didLastGetHitBySkillType(JUST_SKILLTYPE_ENEMY_CUM_SWALLOW);
	let justGotPussyCreampie = this.didLastGetHitBySkillType(JUST_SKILLTYPE_ENEMY_PUSSY_CREAMPIE);
	let karrynGotBukkaked = this.didLastGetHitBySkillType(JUST_SKILLTYPE_ENEMY_BUKKAKE);
	
	let enemyCummingFromMouth = $gameTroop._lastEnemySlotToCum === MOUTH_ID;
	let enemyCummingFromLeftHJ = $gameTroop._lastEnemySlotToCum === LEFT_HAND_ID;
	let enemyCummingFromBoobs = $gameTroop._lastEnemySlotToCum === BOOBS_ID;
	
	let generalReactionScore = this.getReactionScore();
	let orgasmReactionScore = this.getOrgasmReactionScore();
	let pussyCreampieReactionScore = this.getPussyCreampieReactionScore();
	let swallowReactionScore = this.getSwallowReactionScore();
	let bukkakeReactionScore = this.getBukkakeReactionScore();
	let generallvl3 = generalReactionScore >= VAR_DEF_RS_LV3_REQ;
	let generallvl2 = generalReactionScore >= VAR_DEF_RS_LV2_REQ;
	let orgasmlvl3 = orgasmReactionScore >= VAR_DEF_RS_LV3_REQ;
	let orgasmlvl2 = orgasmReactionScore >= VAR_DEF_RS_LV2_REQ;
	let pussyCreampielvl3 = pussyCreampieReactionScore  >= VAR_DEF_RS_LV3_REQ;
	let pussyCreampielvl2 = pussyCreampieReactionScore >= VAR_DEF_RS_LV2_REQ;
	let swallowlvl3 = swallowReactionScore  >= VAR_DEF_RS_LV3_REQ;
	let swallowlvl2 = swallowReactionScore >= VAR_DEF_RS_LV2_REQ;
	let bukkakelvl3 = bukkakeReactionScore  >= VAR_DEF_RS_LV3_REQ;
	let bukkakelvl2 = bukkakeReactionScore >= VAR_DEF_RS_LV2_REQ;
	
	if(!this.isWearingGlovesAndHat()) {
		if(givingHJ) {
			this.setTachieLeftArm('hj_naked');
		}
		else {
			this.setTachieLeftArm('empty_naked');
		}
		if(givingBJ) {
			this.setTachieRightArm('hj_naked');
		}
		else {
			this.setTachieRightArm('empty_naked');
		}
	}
	else {
		if(givingHJ) {
			this.setTachieLeftArm('hj');
		}
		else {
			this.setTachieLeftArm('empty');
		}
		if(givingBJ) {
			this.setTachieRightArm('hj');
		}
		else {
			this.setTachieRightArm('empty');
		}
	}
	
	let faceArray = [];
	this.resetTachieHoppe();
	this.resetTachieSweat();
	
	if(justOrgasmed) {
		if(orgasmlvl3) 
			faceArray.push(30);
		else if(orgasmlvl2) 
			faceArray.push(20);
		else
			faceArray.push(10);
	}
	else if(karrynSwallowingCum) {
		if(swallowlvl3) 
			faceArray.push(28);
		else if(swallowlvl2) 
			faceArray.push(18);
		else
			faceArray.push(8);
	}
	else if(justGotPussyCreampie) {
		if(pussyCreampielvl3) 
			faceArray.push(26);
		else if(pussyCreampielvl2) 
			faceArray.push(16);
		else
			faceArray.push(6);
	}
	else if(enemyCummingFromBoobs) {
		if(bukkakelvl3) 
			faceArray.push(26);
		else if(bukkakelvl2) 
			faceArray.push(16);
		else
			faceArray.push(6);
	}
	else if(enemyCummingFromLeftHJ) {
		if(bukkakelvl3) 
			faceArray.push(27);
		else if(bukkakelvl2) 
			faceArray.push(17);
		else
			faceArray.push(7);
	}
	else if(enemyCummingFromMouth) {
		if(bukkakelvl3) 
			faceArray.push(28);
		else if(bukkakelvl2) 
			faceArray.push(18);
		else
			faceArray.push(8);
	}
	else if(karrynGotBukkaked) {
		if(bukkakelvl3) 
			faceArray.push(22);
		else if(bukkakelvl2) 
			faceArray.push(12);
		else
			faceArray.push(2);
	}
	else if(lastHitPussySex) {
		if(generallvl3) 
			faceArray.push(21);
		else if(generallvl2) 
			faceArray.push(11);
		else
			faceArray.push(1);
	}
	else if(lastHitTittyFuck) {
		if(generallvl3) 
			faceArray.push(23);
		else if(generallvl2) 
			faceArray.push(13);
		else
			faceArray.push(3);
	}
	else if(lastHitHandjob) {
		if(generallvl3) 
			faceArray.push(24);
		else if(generallvl2) 
			faceArray.push(14);
		else
			faceArray.push(4);
	}
	else if(lastHitBlowjob) {
		if(generallvl3) 
			faceArray.push(29);
		else if(generallvl2) 
			faceArray.push(19);
		else
			faceArray.push(9);
	}
	else if(justGotHarassed) {
		if(generallvl3) 
			faceArray.push(22);
		else if(generallvl2) 
			faceArray.push(12);
		else
			faceArray.push(2);
	}
	else {
		if(generallvl3) 
			faceArray.push(21);
		else if(generallvl2) 
			faceArray.push(11);
		else
			faceArray.push(1);
	}
	
	let faceId = faceArray[Math.randomInt(faceArray.length)];
	let eyebrowsArray = [];
	let eyesArray = [];
	let mouthArray = [];
	
	if(faceId === 1) {
		eyebrowsArray.push('koma1');
		eyebrowsArray.push('koma2');
		eyebrowsArray.push('oko1');
		eyesArray.push('sita1');
		eyesArray.push('sita2');
		if(!givingBJ) {
			mouthArray.push('ku1');
			mouthArray.push('ku2');
			mouthArray.push('ho1');
			mouthArray.push('ho2');
			mouthArray.push('wa1');
		}
		else {
			mouthArray.push('fera1');
			mouthArray.push('fera2');
		}
		this.setTachieHoppe(1);
		this.setTachieSweat(1);
	}
	else if(faceId === 2) {
		eyebrowsArray.push('koma1');
		eyebrowsArray.push('koma2');
		eyebrowsArray.push('oko1');
		eyesArray.push('sita2');
		eyesArray.push('sita3');
		if(!givingBJ) {
			mouthArray.push('ahe1');
			mouthArray.push('ku1');
			mouthArray.push('ho2');
			mouthArray.push('ho3');
			mouthArray.push('wa1');
		}
		else {
			mouthArray.push('fera1');
			mouthArray.push('fera2');
		}
		this.setTachieHoppe(1);
		this.setTachieSweat(1);
	}
	else if(faceId === 3) {
		eyebrowsArray.push('koma1');
		eyebrowsArray.push('koma2');
		eyebrowsArray.push('oko1');
		eyesArray.push('sita1');
		eyesArray.push('sita2');
		if(!givingBJ) {
			mouthArray.push('ku2');
			mouthArray.push('ho2');
			mouthArray.push('ho3');
			mouthArray.push('wa1');
			mouthArray.push('wa2');
			mouthArray.push('wa3');
		}
		else {
			mouthArray.push('fera1');
			mouthArray.push('fera2');
		}
		this.setTachieHoppe(1);
		this.setTachieSweat(1);
	}
	else if(faceId === 4) {
		eyebrowsArray.push('koma1');
		eyebrowsArray.push('koma2');
		eyebrowsArray.push('oko1');
		eyesArray.push('left1');
		eyesArray.push('left2');
		if(!givingBJ) {
			mouthArray.push('ku2');
			mouthArray.push('ho2');
			mouthArray.push('ho3');
			mouthArray.push('wa1');
			mouthArray.push('wa2');
			mouthArray.push('wa3');
		}
		else {
			mouthArray.push('fera1');
			mouthArray.push('fera2');
		}
		this.setTachieHoppe(1);
		this.setTachieSweat(1);
	}
	else if(faceId === 5) {
		eyebrowsArray.push('koma1');
		eyebrowsArray.push('koma2');
		eyebrowsArray.push('oko1');
		eyesArray.push('right1');
		eyesArray.push('right2');
		if(!givingBJ) {
			mouthArray.push('ku1');
			mouthArray.push('ho2');
			mouthArray.push('ho3');
			mouthArray.push('wa1');
			mouthArray.push('wa2');
			mouthArray.push('wa3');
		}
		else {
			mouthArray.push('fera1');
			mouthArray.push('fera2');
		}
		this.setTachieHoppe(1);
		this.setTachieSweat(1);
	}
	else if(faceId === 6) {
		eyebrowsArray.push('koma1');
		eyebrowsArray.push('koma2');
		eyesArray.push('sita1');
		eyesArray.push('sita2');
		eyesArray.push('sita3');
		eyesArray.push('urusita2');
		if(!givingBJ) {
			mouthArray.push('ho3');
			mouthArray.push('wa1');
			mouthArray.push('wa2');
			mouthArray.push('wa3');
			mouthArray.push('ahe1');
		}
		else {
			mouthArray.push('fera1');
			mouthArray.push('fera2');
		}
		this.setTachieHoppe(1);
		this.setTachieSweat(1);
	}
	else if(faceId === 7) {
		eyebrowsArray.push('koma1');
		eyebrowsArray.push('koma2');
		eyesArray.push('left1');
		eyesArray.push('left2');
		eyesArray.push('left3');
		eyesArray.push('uruleft2');
		if(!givingBJ) {
			mouthArray.push('ho3');
			mouthArray.push('wa1');
			mouthArray.push('wa2');
			mouthArray.push('wa3');
			mouthArray.push('ahe1');
		}
		else {
			mouthArray.push('fera1');
			mouthArray.push('fera2');
		}
		this.setTachieHoppe(1);
		this.setTachieSweat(1);
	}
	else if(faceId === 8) {
		eyebrowsArray.push('koma1');
		eyebrowsArray.push('koma2');
		eyesArray.push('right1');
		eyesArray.push('right2');
		eyesArray.push('right3');
		eyesArray.push('ururight2');
		if(!givingBJ) {
			mouthArray.push('ho3');
			mouthArray.push('wa1');
			mouthArray.push('wa2');
			mouthArray.push('wa3');
			mouthArray.push('ahe1');
		}
		else {
			mouthArray.push('fera1');
			mouthArray.push('fera2');
		}
		this.setTachieHoppe(1);
		this.setTachieSweat(1);
	}
	else if(faceId === 9) {
		eyebrowsArray.push('koma1');
		eyebrowsArray.push('koma2');
		eyebrowsArray.push('oko1');
		eyesArray.push('right1');
		eyesArray.push('right2');
		eyesArray.push('right3');
		eyesArray.push('ururight2');
		mouthArray.push('fera1');
		mouthArray.push('fera2');
		this.setTachieHoppe(1);
		this.setTachieSweat(1);
	}
	else if(faceId === 10) {
		eyebrowsArray.push('koma1');
		eyebrowsArray.push('koma2');
		eyebrowsArray.push('oko1');
		eyesArray.push('sita2');
		eyesArray.push('sita3');
		eyesArray.push('toji1');
		eyesArray.push('urusita2');
		if(!givingBJ) {
			mouthArray.push('ku1');
			mouthArray.push('ho3');
			mouthArray.push('wa1');
			mouthArray.push('wa2');
			mouthArray.push('wa3');
			mouthArray.push('ahe1');
		}
		else {
			mouthArray.push('fera1');
			mouthArray.push('fera2');
		}
		this.setTachieHoppe(1);
		this.setTachieSweat(1);
	}
	else if(faceId === 11) {
		eyebrowsArray.push('kiri1');
		eyebrowsArray.push('kiri2');
		eyesArray.push('sita1');
		eyesArray.push('sita2');
		if(!givingBJ) {
			mouthArray.push('ku2');
			mouthArray.push('ho1');
			mouthArray.push('ho2');
			mouthArray.push('chu1');
			mouthArray.push('wa1');
		}
		else {
			mouthArray.push('fera2');
			mouthArray.push('fera3');
			mouthArray.push('fera4');
		}
		this.setTachieHoppe(1);
	}
	else if(faceId === 12) {
		eyebrowsArray.push('kiri1');
		eyebrowsArray.push('kiri2');
		eyesArray.push('sita2');
		eyesArray.push('urusita1');
		eyesArray.push('urusita2');
		if(!givingBJ) {
			mouthArray.push('nico2');
			mouthArray.push('ho2');
			mouthArray.push('chu1');
			mouthArray.push('wa1');
			mouthArray.push('wa2');
			mouthArray.push('ahe1');
		}
		else {
			mouthArray.push('fera2');
			mouthArray.push('fera3');
			mouthArray.push('fera4');
		}
		this.setTachieHoppe(1);
	}
	else if(faceId === 13) {
		eyebrowsArray.push('kiri1');
		eyebrowsArray.push('kiri2');
		eyebrowsArray.push('koma2');
		eyesArray.push('sita1');
		eyesArray.push('sita2');
		if(!givingBJ) {
			mouthArray.push('ku2');
			mouthArray.push('ho1');
			mouthArray.push('ho2');
			mouthArray.push('nico1');
			mouthArray.push('wa2');
			mouthArray.push('chu1');
			mouthArray.push('ahe1');
		}
		else {
			mouthArray.push('fera2');
			mouthArray.push('fera3');
			mouthArray.push('fera4');
		}
		this.setTachieHoppe(1);
	}
	else if(faceId === 14) {
		eyebrowsArray.push('kiri1');
		eyebrowsArray.push('kiri2');
		eyebrowsArray.push('koma2');
		eyesArray.push('left1');
		eyesArray.push('left2');
		if(!givingBJ) {
			mouthArray.push('ku2');
			mouthArray.push('ho1');
			mouthArray.push('ho2');
			mouthArray.push('nico1');
			mouthArray.push('wa2');
			mouthArray.push('chu1');
			mouthArray.push('ahe1');
		}
		else {
			mouthArray.push('fera2');
			mouthArray.push('fera3');
			mouthArray.push('fera4');
		}
		this.setTachieHoppe(1);
	}
	else if(faceId === 15) {
		eyebrowsArray.push('kiri1');
		eyebrowsArray.push('kiri2');
		eyebrowsArray.push('koma2');
		eyesArray.push('right1');
		eyesArray.push('right2');
		if(!givingBJ) {
			mouthArray.push('ku2');
			mouthArray.push('ho1');
			mouthArray.push('ho2');
			mouthArray.push('nico1');
			mouthArray.push('wa2');
			mouthArray.push('chu1');
			mouthArray.push('ahe1');
		}
		else {
			mouthArray.push('fera2');
			mouthArray.push('fera3');
			mouthArray.push('fera4');
		}
		this.setTachieHoppe(1);
	}
	else if(faceId === 16) {
		eyebrowsArray.push('kiri1');
		eyebrowsArray.push('kiri2');
		eyebrowsArray.push('koma1');
		eyesArray.push('sita1');
		eyesArray.push('sita2');
		eyesArray.push('sita3');
		eyesArray.push('urusita1');
		eyesArray.push('urusita2');
		if(!givingBJ) {
			mouthArray.push('ho2');
			mouthArray.push('ho3');
			mouthArray.push('wa2');
			mouthArray.push('ahe1');
			mouthArray.push('ahe2');
			mouthArray.push('ahe3');
			mouthArray.push('ahe4');
			mouthArray.push('chu2');
		}
		else {
			mouthArray.push('fera2');
			mouthArray.push('fera3');
			mouthArray.push('fera4');
		}
		this.setTachieHoppe(1);
		this.setTachieSweat(1);
	}
	else if(faceId === 17) {
		eyebrowsArray.push('kiri1');
		eyebrowsArray.push('kiri2');
		eyebrowsArray.push('koma1');
		eyesArray.push('left1');
		eyesArray.push('left2');
		eyesArray.push('left3');
		eyesArray.push('uruleft1');
		eyesArray.push('uruleft2');
		if(!givingBJ) {
			mouthArray.push('ho2');
			mouthArray.push('ho3');
			mouthArray.push('wa2');
			mouthArray.push('ahe1');
			mouthArray.push('ahe2');
			mouthArray.push('ahe3');
			mouthArray.push('ahe4');
			mouthArray.push('chu2');
		}
		else {
			mouthArray.push('fera2');
			mouthArray.push('fera3');
			mouthArray.push('fera4');
		}
		this.setTachieHoppe(1);
		this.setTachieSweat(1);
	}
	else if(faceId === 18) {
		eyebrowsArray.push('kiri1');
		eyebrowsArray.push('kiri2');
		eyebrowsArray.push('koma1');
		eyesArray.push('right1');
		eyesArray.push('right2');
		eyesArray.push('right3');
		eyesArray.push('ururight1');
		eyesArray.push('ururight2');
		if(!givingBJ) {
			mouthArray.push('ho2');
			mouthArray.push('ho3');
			mouthArray.push('wa2');
			mouthArray.push('ahe1');
			mouthArray.push('ahe2');
			mouthArray.push('ahe3');
			mouthArray.push('ahe4');
			mouthArray.push('chu2');
		}
		else {
			mouthArray.push('fera2');
			mouthArray.push('fera3');
			mouthArray.push('fera4');
		}
		this.setTachieHoppe(1);
		this.setTachieSweat(1);
	}
	else if(faceId === 19) {
		eyebrowsArray.push('kiri1');
		eyebrowsArray.push('kiri2');
		eyesArray.push('right1');
		eyesArray.push('right2');
		eyesArray.push('right3');
		eyesArray.push('ururight1');
		eyesArray.push('ururight2');
		mouthArray.push('fera2');
		mouthArray.push('fera3');
		mouthArray.push('fera4');
		this.setTachieHoppe(1);
	}
	else if(faceId === 20) {
		eyebrowsArray.push('kiri1');
		eyebrowsArray.push('kiri2');
		eyebrowsArray.push('oko1');
		eyebrowsArray.push('koma1');
		eyesArray.push('sita2');
		eyesArray.push('sita3');
		eyesArray.push('ahe1');
		eyesArray.push('toji1');
		eyesArray.push('urusita2');
		eyesArray.push('heartsita2');
		if(!givingBJ) {
			mouthArray.push('ho2');
			mouthArray.push('ho3');
			mouthArray.push('wa2');
			mouthArray.push('wa3');
			mouthArray.push('ahe1');
			mouthArray.push('ahe2');
			mouthArray.push('ahe3');
			mouthArray.push('ahe4');
		}
		else {
			mouthArray.push('fera2');
			mouthArray.push('fera3');
			mouthArray.push('fera4');
		}
		this.setTachieHoppe(1);
		this.setTachieSweat(1);
	}
	else if(faceId === 21) {
		eyebrowsArray.push('nico1');
		eyebrowsArray.push('nico2');
		eyebrowsArray.push('kiri2');
		eyesArray.push('sita1');
		eyesArray.push('sita2');
		eyesArray.push('urusita1');
		eyesArray.push('urusita2');
		if(!givingBJ) {
			mouthArray.push('ku3');
			mouthArray.push('nico1');
			mouthArray.push('nico2');
			mouthArray.push('nico3');
			mouthArray.push('chu2');
			mouthArray.push('pero1');
			mouthArray.push('ho1');
			mouthArray.push('ahe5');
		}
		else {
			mouthArray.push('fera2');
			mouthArray.push('fera3');
			mouthArray.push('fera4');
			mouthArray.push('fera5');
			mouthArray.push('fera6');
		}
		if(isAroused) this.setTachieHoppe(1);
	}
	else if(faceId === 22) {
		eyebrowsArray.push('nico1');
		eyebrowsArray.push('nico2');
		eyebrowsArray.push('kiri2');
		eyesArray.push('sita1');
		eyesArray.push('sita2');
		eyesArray.push('sita3');
		eyesArray.push('urusita1');
		eyesArray.push('urusita2');
		eyesArray.push('heartsita1');
		if(!givingBJ) {
			mouthArray.push('nico2');
			mouthArray.push('nico3');
			mouthArray.push('wa2');
			mouthArray.push('ho2');
			mouthArray.push('ahe1');
			mouthArray.push('ahe2');
		}
		else {
			mouthArray.push('fera2');
			mouthArray.push('fera3');
			mouthArray.push('fera4');
			mouthArray.push('fera5');
			mouthArray.push('fera6');
		}
		if(isAroused) this.setTachieHoppe(1);
	}
	else if(faceId === 23) {
		eyebrowsArray.push('nico1');
		eyebrowsArray.push('nico2');
		eyebrowsArray.push('kiri2');
		eyesArray.push('sita1');
		eyesArray.push('sita2');
		eyesArray.push('urusita1');
		eyesArray.push('heartsita2');
		if(!givingBJ) {
			mouthArray.push('nico1');
			mouthArray.push('nico2');
			mouthArray.push('nico3');
			mouthArray.push('pero1');
			mouthArray.push('chu2');
			mouthArray.push('ahe2');
			mouthArray.push('ahe3');
			mouthArray.push('ahe4');
		}
		else {
			mouthArray.push('fera2');
			mouthArray.push('fera3');
			mouthArray.push('fera4');
			mouthArray.push('fera5');
			mouthArray.push('fera6');
		}
		if(isAroused) this.setTachieHoppe(1);
	}
	else if(faceId === 24) {
		eyebrowsArray.push('nico1');
		eyebrowsArray.push('nico2');
		eyebrowsArray.push('kiri2');
		eyesArray.push('left1');
		eyesArray.push('left2');
		eyesArray.push('uruleft1');
		eyesArray.push('heartleft2');
		if(!givingBJ) {
			mouthArray.push('nico1');
			mouthArray.push('nico2');
			mouthArray.push('nico3');
			mouthArray.push('pero1');
			mouthArray.push('chu2');
			mouthArray.push('ahe2');
			mouthArray.push('ahe3');
			mouthArray.push('ahe4');
		}
		else {
			mouthArray.push('fera2');
			mouthArray.push('fera3');
			mouthArray.push('fera4');
			mouthArray.push('fera5');
			mouthArray.push('fera6');
		}
		if(isAroused) this.setTachieHoppe(1);
	}
	else if(faceId === 25) {
		eyebrowsArray.push('nico1');
		eyebrowsArray.push('nico2');
		eyebrowsArray.push('kiri2');
		eyesArray.push('right1');
		eyesArray.push('right2');
		eyesArray.push('ururight1');
		eyesArray.push('heartright2');
		if(!givingBJ) {
			mouthArray.push('nico1');
			mouthArray.push('nico2');
			mouthArray.push('nico3');
			mouthArray.push('pero1');
			mouthArray.push('chu2');
			mouthArray.push('ahe2');
			mouthArray.push('ahe3');
			mouthArray.push('ahe4');
		}
		else {
			mouthArray.push('fera2');
			mouthArray.push('fera3');
			mouthArray.push('fera4');
			mouthArray.push('fera5');
			mouthArray.push('fera6');
		}
		if(isAroused) this.setTachieHoppe(1);
	}
	else if(faceId === 26) {
		eyebrowsArray.push('nico1');
		eyebrowsArray.push('nico2');
		eyebrowsArray.push('kiri1');
		eyebrowsArray.push('kiri2');
		eyebrowsArray.push('koma2');
		eyesArray.push('sita2');
		eyesArray.push('toji1');
		eyesArray.push('urusita1');
		eyesArray.push('urusita1');
		eyesArray.push('heartsita2');
		if(!givingBJ) {
			mouthArray.push('ho1');
			mouthArray.push('ho2');
			mouthArray.push('ho3');
			mouthArray.push('wa2');
			mouthArray.push('ahe4');
			mouthArray.push('ahe5');
			mouthArray.push('ahe6');
			mouthArray.push('nico3');
		}
		else {
			mouthArray.push('fera2');
			mouthArray.push('fera3');
			mouthArray.push('fera4');
			mouthArray.push('fera5');
			mouthArray.push('fera6');
		}
		this.setTachieHoppe(1);
		if(Math.randomInt(2) === 0) this.setTachieSweat(1);
	}
	else if(faceId === 27) {
		eyebrowsArray.push('nico1');
		eyebrowsArray.push('nico2');
		eyebrowsArray.push('kiri1');
		eyebrowsArray.push('kiri2');
		eyebrowsArray.push('koma2');
		eyesArray.push('left2');
		eyesArray.push('left3');
		eyesArray.push('uruleft1');
		eyesArray.push('uruleft1');
		eyesArray.push('heartleft2');
		if(!givingBJ) {
			mouthArray.push('ho1');
			mouthArray.push('ho2');
			mouthArray.push('ho3');
			mouthArray.push('wa2');
			mouthArray.push('ahe4');
			mouthArray.push('ahe5');
			mouthArray.push('ahe6');
			mouthArray.push('nico3');
		}
		else {
			mouthArray.push('fera2');
			mouthArray.push('fera3');
			mouthArray.push('fera4');
			mouthArray.push('fera5');
			mouthArray.push('fera6');
		}
		this.setTachieHoppe(1);
		if(Math.randomInt(2) === 0) this.setTachieSweat(1);
	}
	else if(faceId === 28) {
		eyebrowsArray.push('nico1');
		eyebrowsArray.push('nico2');
		eyebrowsArray.push('kiri1');
		eyebrowsArray.push('kiri2');
		eyebrowsArray.push('koma2');
		eyesArray.push('right2');
		eyesArray.push('right3');
		eyesArray.push('ururight1');
		eyesArray.push('ururight2');
		eyesArray.push('heartright2');
		if(!givingBJ) {
			mouthArray.push('ho1');
			mouthArray.push('ho2');
			mouthArray.push('ho3');
			mouthArray.push('wa2');
			mouthArray.push('ahe4');
			mouthArray.push('ahe5');
			mouthArray.push('ahe6');
			mouthArray.push('nico3');
		}
		else {
			mouthArray.push('fera2');
			mouthArray.push('fera3');
			mouthArray.push('fera4');
			mouthArray.push('fera5');
			mouthArray.push('fera6');
		}
		this.setTachieHoppe(1);
		if(Math.randomInt(2) === 0) this.setTachieSweat(1);
	}
	else if(faceId === 29) {
		eyebrowsArray.push('nico1');
		eyebrowsArray.push('nico2');
		eyebrowsArray.push('kiri2');
		eyesArray.push('right1');
		eyesArray.push('right2');
		eyesArray.push('ururight1');
		eyesArray.push('ururight2');
		eyesArray.push('heartright1');
		mouthArray.push('fera2');
		mouthArray.push('fera3');
		mouthArray.push('fera4');
		mouthArray.push('fera5');
		mouthArray.push('fera6');
		if(isAroused) this.setTachieHoppe(1);
	}
	else if(faceId === 30) {
		eyebrowsArray.push('nico1');
		eyebrowsArray.push('nico2');
		eyebrowsArray.push('oko1');
		eyebrowsArray.push('kiri2');
		eyebrowsArray.push('koma2');
		eyesArray.push('ahe1');
		eyesArray.push('toji1');
		eyesArray.push('urusita1');
		eyesArray.push('urusita1');
		eyesArray.push('heartsita1');
		eyesArray.push('heartsita2');
		eyesArray.push('heartahe1');
		if(!givingBJ) {
			mouthArray.push('ku1');
			mouthArray.push('ku3');
			mouthArray.push('nico2');
			mouthArray.push('nico3');
			mouthArray.push('wa2');
			mouthArray.push('wa3');
			mouthArray.push('ahe1');
			mouthArray.push('ahe2');
			mouthArray.push('ahe3');
			mouthArray.push('ahe4');
			mouthArray.push('ahe5');
			mouthArray.push('ahe6');
		}
		else {
			mouthArray.push('fera2');
			mouthArray.push('fera3');
			mouthArray.push('fera4');
			mouthArray.push('fera5');
			mouthArray.push('fera6');
		}
		this.setTachieHoppe(1);
		if(Math.randomInt(2) === 0) this.setTachieSweat(1);
	}
	
	
	if(eyebrowsArray.length > 0) {
		this.setTachieEyebrows(eyebrowsArray[Math.randomInt(eyebrowsArray.length)]);
	}
	if(eyesArray.length > 0) {
		this.setTachieEyes(eyesArray[Math.randomInt(eyesArray.length)]);
	}
	if(mouthArray.length > 0) {
		this.setTachieMouth(mouthArray[Math.randomInt(mouthArray.length)]);
	}
	
	if(this.tachieHoppe && this.tachieMouth.includes('fera'))
		this.setTachieHoppe('fera_1');

	if(this.tachieMouth.includes('fera'))
		this.setTachieStrayFaceExtension(ConfigManager.convertedTachieMouthName(this) + '_');
	else
		this.resetTachieStrayFaceExtension();

	this.setAllowTachieEmoteUpdate(true);
};

/////////////////
// Emote Goblin Cunnilingus Pose
/////////////////
Game_Actor.prototype.emoteGoblinCunnilingusPose = function() {
	this.setAllowTachieEmoteUpdate(false);
	let justOrgasmed = this.didLastGetHitBySkillType(JUST_SKILLTYPE_KARRYN_ORGASM) || this.justOrgasmed();
	let isAroused = this.isAroused() || justOrgasmed;
	let givingBJ = this.isBodySlotPenis(MOUTH_ID);
	let karrynSwallowingCum = this.didLastGetHitBySkillType(JUST_SKILLTYPE_ENEMY_CUM_SWALLOW);
	let pussyInserted = this.isBodySlotPenis(PUSSY_ID);
	let lastHitPussySex = this.didLastGetHitBySkillType(JUST_SKILLTYPE_ENEMY_PUSSY_SEX) || this.didLastGetHitBySkillType(JUST_SKILLTYPE_KARRYN_PUSSY_SEX);
	let justGotPussyCreampie = this.didLastGetHitBySkillType(JUST_SKILLTYPE_ENEMY_PUSSY_CREAMPIE);
	let givingPaizuri = this.isBodySlotPenis(BOOBS_ID);
	let lastHitTittyFuck = this.didLastGetHitBySkillType(JUST_SKILLTYPE_ENEMY_TITTYFUCK) || this.didLastGetHitBySkillType(JUST_SKILLTYPE_KARRYN_TITTYFUCK);
	let karrynGotBukkaked = this.didLastGetHitBySkillType(JUST_SKILLTYPE_ENEMY_BUKKAKE);
	let enemyCummingFromBoobs = $gameTroop._lastEnemySlotToCum === BOOBS_ID;
	let lastHitCunnilingus = this.didLastGetHitBySkillType(JUST_SKILLTYPE_ENEMY_CUNNILINGUS);
	let orgasmFromPaizuri = this._gotOrgasmFromSkillType === JUST_SKILLTYPE_ENEMY_TITTYFUCK || this._gotOrgasmFromSkillType === JUST_SKILLTYPE_KARRYN_TITTYFUCK;
	
	let generalReactionScore = this.getReactionScore();
	let orgasmReactionScore = this.getOrgasmReactionScore();
	let bukkakeReactionScore = this.getBukkakeReactionScore();
	let swallowReactionScore = this.getSwallowReactionScore();
	let pussyCreampieReactionScore = this.getPussyCreampieReactionScore();
	
	let generallvl3 = generalReactionScore >= VAR_DEF_RS_LV3_REQ;
	let generallvl2 = generalReactionScore >= VAR_DEF_RS_LV2_REQ;
	let orgasmlvl3 = orgasmReactionScore >= VAR_DEF_RS_LV3_REQ;
	let orgasmlvl2 = orgasmReactionScore >= VAR_DEF_RS_LV2_REQ;
	let bukkakelvl3 = bukkakeReactionScore  >= VAR_DEF_RS_LV3_REQ;
	let bukkakelvl2 = bukkakeReactionScore >= VAR_DEF_RS_LV2_REQ;
	let pussyCreampielvl3 = pussyCreampieReactionScore  >= VAR_DEF_RS_LV3_REQ;
	let pussyCreampielvl2 = pussyCreampieReactionScore >= VAR_DEF_RS_LV2_REQ;
	let swallowlvl3 = swallowReactionScore  >= VAR_DEF_RS_LV3_REQ;
	let swallowlvl2 = swallowReactionScore >= VAR_DEF_RS_LV2_REQ;
	
	let faceArray = [];
	this.resetTachieHoppe();
	this.resetTachieSweat();
	
	if(!this.isWearingGlovesAndHat()) {
		if(givingPaizuri) {
			this.setTachieBoobs('paizuri_1');
			this.setTachieLeftArm('paizuri_naked_1');
			this.setTachieRightArm('paizuri_naked_1');
		}
		else {
			this.setTachieBoobs('1');
			this.setTachieLeftArm('naked_1');
			this.setTachieRightArm('naked_1');
		}
		if(Karryn.isCensored())
			this.setTachieBody('1_cen');
		else
			this.setTachieBody('1');
	}
	else {
		if(givingPaizuri) {
			this.setTachieBoobs('paizuri_1');
			this.setTachieLeftArm('paizuri_1');
			this.setTachieRightArm('paizuri_1');
		}
		else {
			this.setTachieBoobs('1');
			this.setTachieLeftArm('1');
			this.setTachieRightArm('1');
		}
		if(Karryn.isCensored())
			this.setTachieBody('1_cen');
		else
			this.setTachieBody('1');
	}
	
	if(givingBJ) {
		if(karrynSwallowingCum) {
			if(swallowlvl3) 
				faceArray.push(21);
			else if(swallowlvl2) 
				faceArray.push(14);
			else
				faceArray.push(7);
		}
		else if(justOrgasmed) {
			if(orgasmlvl3) 
				faceArray.push(21);
			else if(orgasmlvl2) 
				faceArray.push(14);
			else
				faceArray.push(7);
		}
		else {
			if(generallvl3) 
				faceArray.push(20);
			else if(generallvl2) 
				faceArray.push(13);
			else
				faceArray.push(6);
		}
	}
	else if(justGotPussyCreampie) {
		if(pussyCreampielvl3) 
			faceArray.push(17);
		else if(pussyCreampielvl2) 
			faceArray.push(10);
		else
			faceArray.push(3);
	}
	else if(justOrgasmed) {
		if(orgasmFromPaizuri) {
			if(bukkakelvl3) 
				faceArray.push(17);
			else if(bukkakelvl2) 
				faceArray.push(10);
			else
				faceArray.push(3);
		}
		else {
			if(orgasmlvl3) 
				faceArray.push(17);
			else if(orgasmlvl2) 
				faceArray.push(10);
			else
				faceArray.push(3);
		}
	}
	else if(karrynGotBukkaked && enemyCummingFromBoobs) {
		if(bukkakelvl3) 
			faceArray.push(19);
		else if(bukkakelvl2) 
			faceArray.push(12);
		else
			faceArray.push(5);
	}
	else if(lastHitPussySex) {
		if(generallvl3) 
			faceArray.push(16);
		else if(generallvl2) 
			faceArray.push(9);
		else
			faceArray.push(2);
	}
	else if(lastHitTittyFuck) {
		if(generallvl3) 
			faceArray.push(18);
		else if(generallvl2) 
			faceArray.push(11);
		else
			faceArray.push(4);
	}
	else if(lastHitCunnilingus) {
		if(generallvl3) 
			faceArray.push(15);
		else if(generallvl2) 
			faceArray.push(8);
		else
			faceArray.push(1);
	}
	else if(pussyInserted) {
		if(generallvl3) 
			faceArray.push(16);
		else if(generallvl2) 
			faceArray.push(9);
		else
			faceArray.push(2);
	}
	else if(givingPaizuri) {
		if(generallvl3) 
			faceArray.push(18);
		else if(generallvl2) 
			faceArray.push(11);
		else
			faceArray.push(4);
	}
	else {
		if(generallvl3) 
			faceArray.push(15);
		else if(generallvl2) 
			faceArray.push(8);
		else
			faceArray.push(1);
	}
	
	
	let faceId = faceArray[Math.randomInt(faceArray.length)];
	let eyebrowsArray = [];
	let eyesArray = [];
	let mouthArray = [];
	
	if(faceId === 1) {
		eyebrowsArray.push('koma1');
		eyebrowsArray.push('koma2');
		eyebrowsArray.push('oko1');
		eyesArray.push('sita1');
		eyesArray.push('sita2');
		mouthArray.push('ku1');
		mouthArray.push('ku2');
		mouthArray.push('ho1');
		mouthArray.push('wa1');
		this.setTachieHoppe(1);
		this.setTachieSweat(1);
	}
	else if(faceId === 2) {
		eyebrowsArray.push('koma1');
		eyebrowsArray.push('koma2');
		eyebrowsArray.push('oko1');
		eyesArray.push('sita1');
		eyesArray.push('sita2');
		mouthArray.push('ku1');
		mouthArray.push('ku2');
		mouthArray.push('ho1');
		mouthArray.push('wa1');
		mouthArray.push('wa2');
		this.setTachieHoppe(1);
		this.setTachieSweat(1);
	}
	else if(faceId === 3) {
		eyebrowsArray.push('koma1');
		eyebrowsArray.push('koma2');
		eyebrowsArray.push('oko1');
		eyesArray.push('toji1');
		eyesArray.push('sita2');
		eyesArray.push('urusita2');
		mouthArray.push('ku1');
		mouthArray.push('wa1');
		mouthArray.push('wa2');
		mouthArray.push('ahe1');
		mouthArray.push('ahe3');
		this.setTachieHoppe(1);
		this.setTachieSweat(1);
	}
	else if(faceId === 4) {
		eyebrowsArray.push('koma1');
		eyebrowsArray.push('koma2');
		eyesArray.push('mae1');
		eyesArray.push('mae2');
		mouthArray.push('ku1');
		mouthArray.push('ku2');
		mouthArray.push('wa1');
		this.setTachieHoppe(1);
		this.setTachieSweat(1);
	}
	else if(faceId === 5) {
		eyebrowsArray.push('koma1');
		eyebrowsArray.push('koma2');
		eyebrowsArray.push('oko1');
		eyesArray.push('mae2');
		eyesArray.push('urumae2');
		eyesArray.push('toji1');
		mouthArray.push('ku1');
		mouthArray.push('wa1');
		mouthArray.push('wa2');
		mouthArray.push('ahe1');
		mouthArray.push('ahe3');
		this.setTachieHoppe(1);
		this.setTachieSweat(1);
	}
	else if(faceId === 6) {
		eyebrowsArray.push('koma1');
		eyebrowsArray.push('koma2');
		eyesArray.push('mae2');
		eyesArray.push('mae1');
		mouthArray.push('fera1');
		mouthArray.push('fera2');
		this.setTachieHoppe(1);
		this.setTachieSweat(1);
	}
	else if(faceId === 7) {
		eyebrowsArray.push('koma1');
		eyebrowsArray.push('koma2');
		eyebrowsArray.push('oko1');
		eyesArray.push('toji1');
		eyesArray.push('mae2');
		eyesArray.push('urumae2');
		mouthArray.push('fera1');
		this.setTachieHoppe(1);
		this.setTachieSweat(1);
	}
	else if(faceId === 8) {
		eyebrowsArray.push('kiri1');
		eyebrowsArray.push('kiri2');
		eyesArray.push('mae1');
		eyesArray.push('mae2');
		mouthArray.push('ku2');
		mouthArray.push('ho1');
		mouthArray.push('ho2');
		mouthArray.push('nico1');
		this.setTachieHoppe(1);
	}
	else if(faceId === 9) {
		eyebrowsArray.push('kiri1');
		eyebrowsArray.push('kiri2');
		eyesArray.push('sita1');
		eyesArray.push('sita2');
		mouthArray.push('ku2');
		mouthArray.push('ho1');
		mouthArray.push('ho2');
		mouthArray.push('nico1');
		this.setTachieHoppe(1);
		this.setTachieSweat(1);
	}
	else if(faceId === 10) {
		eyebrowsArray.push('koma1');
		eyebrowsArray.push('kiri1');
		eyebrowsArray.push('kiri2');
		eyesArray.push('sita2');
		eyesArray.push('toji1');
		eyesArray.push('ahe1');
		eyesArray.push('urusita1');
		eyesArray.push('urusita2');
		mouthArray.push('ku2');
		mouthArray.push('wa2');
		mouthArray.push('ho1');
		mouthArray.push('ahe1');
		mouthArray.push('ahe3');
		this.setTachieHoppe(1);
		this.setTachieSweat(1);
	}
	else if(faceId === 11) {
		eyebrowsArray.push('kiri1');
		eyebrowsArray.push('kiri2');
		eyesArray.push('mae1');
		eyesArray.push('mae2');
		mouthArray.push('ku2');
		mouthArray.push('ho1');
		mouthArray.push('ho2');
		mouthArray.push('nico1');
		mouthArray.push('ahe3');
		this.setTachieHoppe(1);
	}
	else if(faceId === 12) {
		eyebrowsArray.push('koma1');
		eyebrowsArray.push('kiri1');
		eyebrowsArray.push('kiri2');
		eyesArray.push('mae2');
		eyesArray.push('toji1');
		eyesArray.push('urumae1');
		eyesArray.push('urumae2');
		mouthArray.push('ku2');
		mouthArray.push('wa2');
		mouthArray.push('ho1');
		mouthArray.push('ahe1');
		mouthArray.push('ahe3');
		this.setTachieHoppe(1);
		this.setTachieSweat(1);
	}
	else if(faceId === 13) {
		eyebrowsArray.push('kiri1');
		eyebrowsArray.push('kiri2');
		eyesArray.push('mae2');
		eyesArray.push('mae1');
		mouthArray.push('fera2');
		mouthArray.push('fera3');
		mouthArray.push('fera4');
		this.setTachieHoppe(1);
	}
	else if(faceId === 14) {
		eyebrowsArray.push('koma1');
		eyebrowsArray.push('kiri1');
		eyebrowsArray.push('kiri2');
		eyesArray.push('mae2');
		eyesArray.push('toji1');
		eyesArray.push('urumae1');
		eyesArray.push('urumae2');
		eyesArray.push('ahe1');
		mouthArray.push('fera3');
		mouthArray.push('fera4');
		this.setTachieHoppe(1);
		this.setTachieSweat(1);
	}
	else if(faceId === 15) {
		eyebrowsArray.push('nico1');
		eyebrowsArray.push('nico2');
		eyesArray.push('sita2');
		eyesArray.push('sita1');
		eyesArray.push('urusita2');
		eyesArray.push('urusita1');
		eyesArray.push('heartsita1');
		mouthArray.push('nico1');
		if(isAroused) this.setTachieHoppe(1);
	}
	else if(faceId === 16) {
		eyebrowsArray.push('nico1');
		eyebrowsArray.push('nico2');
		eyesArray.push('sita2');
		eyesArray.push('sita1');
		eyesArray.push('urusita2');
		eyesArray.push('urusita1');
		mouthArray.push('nico1');
		mouthArray.push('nico2');
		mouthArray.push('ho1');
		mouthArray.push('ho2');
		mouthArray.push('ahe2');
		this.setTachieHoppe(1);
	}
	else if(faceId === 17) {
		eyebrowsArray.push('nico1');
		eyebrowsArray.push('nico2');
		eyebrowsArray.push('kiri1');
		eyebrowsArray.push('koma2');
		eyebrowsArray.push('oko1');
		eyesArray.push('ahe1');
		eyesArray.push('urusita1');
		eyesArray.push('urusita2');
		eyesArray.push('heartsita1');
		eyesArray.push('heartsita2');
		eyesArray.push('heartahe1');
		mouthArray.push('ahe1');
		mouthArray.push('ahe2');
		mouthArray.push('ahe3');
		mouthArray.push('nico2');
		mouthArray.push('ho1');
		mouthArray.push('wa2');
		this.setTachieHoppe(1);
		this.setTachieSweat(1);
	}
	else if(faceId === 18) {
		eyebrowsArray.push('nico1');
		eyebrowsArray.push('nico2');
		eyesArray.push('mae2');
		eyesArray.push('mae1');
		eyesArray.push('heartmae2');
		eyesArray.push('urumae1');
		mouthArray.push('nico1');
		mouthArray.push('nico2');
		mouthArray.push('ho1');
		mouthArray.push('ho2');
		mouthArray.push('ahe2');
		if(isAroused) this.setTachieHoppe(1);
	}
	else if(faceId === 19) {
		eyebrowsArray.push('koma1');
		eyebrowsArray.push('kiri1');
		eyebrowsArray.push('oko1');
		eyebrowsArray.push('nico1');
		eyebrowsArray.push('nico2');
		eyesArray.push('urumae1');
		eyesArray.push('urumae2');
		eyesArray.push('heartmae1');
		eyesArray.push('heartmae2');
		eyesArray.push('heartahe1');
		mouthArray.push('ahe1');
		mouthArray.push('ahe2');
		mouthArray.push('ahe3');
		mouthArray.push('nico1');
		mouthArray.push('nico2');
		mouthArray.push('ho1');
		this.setTachieHoppe(1);
		this.setTachieSweat(1);
	}
	else if(faceId === 20) {
		eyebrowsArray.push('nico1');
		eyebrowsArray.push('nico2');
		eyesArray.push('mae2');
		eyesArray.push('mae1');
		eyesArray.push('urumae2');
		eyesArray.push('heartmae1');
		mouthArray.push('fera2');
		mouthArray.push('fera3');
		mouthArray.push('fera4');
		mouthArray.push('fera5');
		mouthArray.push('fera6');
		if(isAroused) this.setTachieHoppe(1);
	}
	else if(faceId === 21) {
		eyebrowsArray.push('koma1');
		eyebrowsArray.push('koma2');
		eyebrowsArray.push('oko1');
		eyebrowsArray.push('nico1');
		eyebrowsArray.push('nico2');
		eyebrowsArray.push('kiri1');
		eyesArray.push('ahe1');
		eyesArray.push('urumae1');
		eyesArray.push('urumae2');
		eyesArray.push('heartmae1');
		eyesArray.push('heartmae2');
		eyesArray.push('heartahe1');
		mouthArray.push('fera4');
		mouthArray.push('fera5');
		mouthArray.push('fera6');
		this.setTachieHoppe(1);
		this.setTachieSweat(1);
	}
	
	if(eyebrowsArray.length > 0) {
		this.setTachieEyebrows(eyebrowsArray[Math.randomInt(eyebrowsArray.length)]);
	}
	if(eyesArray.length > 0) {
		this.setTachieEyes(eyesArray[Math.randomInt(eyesArray.length)]);
	}
	if(mouthArray.length > 0) {
		this.setTachieMouth(mouthArray[Math.randomInt(mouthArray.length)]);
	}
	
	if(this.tachieMouth.includes('fera'))
		this.setTachieStrayFaceExtension(ConfigManager.convertedTachieMouthName(this) + '_');
	else
		this.resetTachieStrayFaceExtension();
	
	this.setAllowTachieEmoteUpdate(true);
};

/////////////////
// Emote Guard Gangbang Pose
/////////////////
Game_Actor.prototype.emoteGuardGangbangPose = function() {
	this.setAllowTachieEmoteUpdate(false);
	let justOrgasmed = this.didLastGetHitBySkillType(JUST_SKILLTYPE_KARRYN_ORGASM) || this.justOrgasmed();
	let isAroused = this.isAroused() || justOrgasmed;
	let justGotHarassed = this.didLastGetHitBySkillType(JUST_SKILLTYPE_ENEMY_TOY_PLAY) || this.didLastGetHitBySkillType(JUST_SKILLTYPE_PASSIVE_TOY) || this.didLastGetHitBySkillType(JUST_SKILLTYPE_ENEMY_PETTING);
	let givingBJ = this.isBodySlotPenis(MOUTH_ID);
	let analInserted = this.isBodySlotPenis(ANAL_ID);
	let karrynGotBukkaked = this.didLastGetHitBySkillType(JUST_SKILLTYPE_ENEMY_BUKKAKE);
	let justGotPussyCreampie = this.didLastGetHitBySkillType(JUST_SKILLTYPE_ENEMY_PUSSY_CREAMPIE);
	let justGotAnalCreampie = this.didLastGetHitBySkillType(JUST_SKILLTYPE_ENEMY_ANAL_CREAMPIE);
	let karrynSwallowingCum = this.didLastGetHitBySkillType(JUST_SKILLTYPE_ENEMY_CUM_SWALLOW);
	let lastHitPussySex = this.didLastGetHitBySkillType(JUST_SKILLTYPE_ENEMY_PUSSY_SEX) || this.didLastGetHitBySkillType(JUST_SKILLTYPE_KARRYN_PUSSY_SEX);
	let lastHitAnalSex = this.didLastGetHitBySkillType(JUST_SKILLTYPE_ENEMY_ANAL_SEX) || this.didLastGetHitBySkillType(JUST_SKILLTYPE_KARRYN_ANAL_SEX);
	
	let generalReactionScore = this.getReactionScore();
	let orgasmReactionScore = this.getOrgasmReactionScore();
	let pussyCreampieReactionScore = this.getPussyCreampieReactionScore();
	let analCreampieReactionScore = this.getAnalCreampieReactionScore();
	let swallowReactionScore = this.getSwallowReactionScore();
	let bukkakeReactionScore = this.getBukkakeReactionScore();
	
	let generallvl3 = generalReactionScore >= VAR_DEF_RS_LV3_REQ;
	let generallvl2 = generalReactionScore >= VAR_DEF_RS_LV2_REQ;
	let orgasmlvl3 = orgasmReactionScore >= VAR_DEF_RS_LV3_REQ;
	let orgasmlvl2 = orgasmReactionScore >= VAR_DEF_RS_LV2_REQ;
	let pussyCreampielvl3 = pussyCreampieReactionScore  >= VAR_DEF_RS_LV3_REQ;
	let pussyCreampielvl2 = pussyCreampieReactionScore >= VAR_DEF_RS_LV2_REQ;
	let analCreampielvl3 = analCreampieReactionScore  >= VAR_DEF_RS_LV3_REQ;
	let analCreampielvl2 = analCreampieReactionScore >= VAR_DEF_RS_LV2_REQ;
	let swallowlvl3 = swallowReactionScore  >= VAR_DEF_RS_LV3_REQ;
	let swallowlvl2 = swallowReactionScore >= VAR_DEF_RS_LV2_REQ;
	let bukkakelvl3 = bukkakeReactionScore >= VAR_DEF_RS_LV3_REQ;
	let bukkakelvl2 = bukkakeReactionScore >= VAR_DEF_RS_LV2_REQ;
	
	let faceArray = [];
	this.resetTachieHoppe();
	this.resetTachieSweat();

	if(givingBJ) {
		if(karrynSwallowingCum) {
			if(swallowlvl3) 
				faceArray.push(15);
			else if(swallowlvl2) 
				faceArray.push(10);
			else
				faceArray.push(5);
		}
		else if(justOrgasmed) {
			if(orgasmlvl3) 
				faceArray.push(15);
			else if(orgasmlvl2) 
				faceArray.push(10);
			else
				faceArray.push(5);
		}
		else if(karrynGotBukkaked) {
			if(bukkakelvl3) 
				faceArray.push(12);
			else if(bukkakelvl2) 
				faceArray.push(7);
			else
				faceArray.push(2);
		}
		else if(lastHitPussySex || lastHitAnalSex) {
			if(generallvl3) 
				faceArray.push(12);
			else if(generallvl2) 
				faceArray.push(7);
			else
				faceArray.push(2);
		}
		else if(justGotHarassed) {
			if(generallvl3) 
				faceArray.push(12);
			else if(generallvl2) 
				faceArray.push(7);
			else
				faceArray.push(2);
		}
		else {
			if(generallvl3) 
				faceArray.push(14);
			else if(generallvl2) 
				faceArray.push(9);
			else
				faceArray.push(4);
		}
	}
	else if(justGotPussyCreampie || justGotAnalCreampie || justOrgasmed) {
		if(justGotPussyCreampie) {
			if(pussyCreampielvl3) 
				faceArray.push(13);
			else if(pussyCreampielvl2) 
				faceArray.push(8);
			else
				faceArray.push(3);
		}
		else if(justGotAnalCreampie) {
			if(analCreampielvl3) 
				faceArray.push(13);
			else if(analCreampielvl2) 
				faceArray.push(8);
			else
				faceArray.push(3);
		}
		else if(justOrgasmed) {
			if(orgasmlvl3) 
				faceArray.push(13);
			else if(orgasmlvl2) 
				faceArray.push(8);
			else
				faceArray.push(3);
		}
	}
	else if(karrynGotBukkaked) {
		if(bukkakelvl3) 
			faceArray.push(12);
		else if(bukkakelvl2) 
			faceArray.push(7);
		else
			faceArray.push(2);
	}
	else if(lastHitPussySex) {
		if(generallvl3) 
			faceArray.push(11);
		else if(generallvl2) 
			faceArray.push(6);
		else
			faceArray.push(1);
	}
	else if(lastHitAnalSex) {
		if(generallvl3) 
			faceArray.push(12);
		else if(generallvl2) 
			faceArray.push(7);
		else
			faceArray.push(2);
	}
	else if(justGotHarassed) {
		if(generallvl3) 
			faceArray.push(12);
		else if(generallvl2) 
			faceArray.push(7);
		else
			faceArray.push(2);
	}
	else {
		if(generallvl3) 
			faceArray.push(11);
		else if(generallvl2) 
			faceArray.push(6);
		else
			faceArray.push(1);
	}
	
	let faceId = faceArray[Math.randomInt(faceArray.length)];
	let eyebrowsArray = [];
	let eyesArray = [];
	let mouthArray = [];
	
	if(faceId === 1) {
		eyebrowsArray.push('koma1');
		eyebrowsArray.push('koma2');
		eyebrowsArray.push('oko1');
		eyesArray.push('yoko1');
		eyesArray.push('yoko2');
		mouthArray.push('ku1');
		mouthArray.push('ho2');
		mouthArray.push('ho3');
		mouthArray.push('wa1');
		this.setTachieHoppe(1);
		this.setTachieSweat(1);
	}
	else if(faceId === 2) {
		eyebrowsArray.push('koma1');
		eyebrowsArray.push('koma2');
		eyebrowsArray.push('oko1');
		eyesArray.push('yoko1');
		eyesArray.push('yoko2');
		eyesArray.push('uruyoko2');
		if(givingBJ) {
			mouthArray.push('fera1');
			mouthArray.push('fera2');
		}
		else {
			mouthArray.push('ku1');
			mouthArray.push('ho3');
			mouthArray.push('wa2');
			mouthArray.push('ahe1');
		}
		this.setTachieHoppe(1);
		this.setTachieSweat(1);
	}
	else if(faceId === 3) {
		eyebrowsArray.push('koma1');
		eyebrowsArray.push('koma2');
		eyebrowsArray.push('oko1');
		eyesArray.push('toji1');
		eyesArray.push('toji3');
		eyesArray.push('uruyoko2');
		mouthArray.push('wa1');
		mouthArray.push('wa3');
		mouthArray.push('wa2');
		mouthArray.push('ahe1');
		this.setTachieHoppe(1);
		this.setTachieSweat(1);
	}
	else if(faceId === 4) {
		eyebrowsArray.push('koma1');
		eyebrowsArray.push('koma2');
		eyebrowsArray.push('oko1');
		eyesArray.push('sita1');
		eyesArray.push('sita2');
		mouthArray.push('fera1');
		mouthArray.push('fera2');
		this.setTachieHoppe(1);
		this.setTachieSweat(1);
	}
	else if(faceId === 5) {
		eyebrowsArray.push('koma1');
		eyebrowsArray.push('koma2');
		eyebrowsArray.push('oko1');
		eyesArray.push('toji1');
		eyesArray.push('toji2');
		eyesArray.push('urusita2');
		mouthArray.push('fera1');
		this.setTachieHoppe(1);
		this.setTachieSweat(1);
	}
	else if(faceId === 6) {
		eyebrowsArray.push('koma2');
		eyebrowsArray.push('oko1');
		eyebrowsArray.push('oko2');
		eyesArray.push('yoko1');
		eyesArray.push('yoko2');
		mouthArray.push('ho1');
		mouthArray.push('ho2');
		mouthArray.push('ho3');
		mouthArray.push('ku2');
		this.setTachieHoppe(1);
	}
	else if(faceId === 7) {
		eyebrowsArray.push('koma1');
		eyebrowsArray.push('koma2');
		eyebrowsArray.push('oko1');
		eyebrowsArray.push('oko2');
		eyesArray.push('yoko1');
		eyesArray.push('yoko2');
		eyesArray.push('uruyoko2');
		if(givingBJ) {
			mouthArray.push('fera2');
			mouthArray.push('fera3');
			mouthArray.push('fera4');
		}
		else {
			mouthArray.push('ku1');
			mouthArray.push('ku2');
			mouthArray.push('wa2');
			mouthArray.push('ahe1');
		}
		this.setTachieHoppe(1);
	}
	else if(faceId === 8) {
		eyebrowsArray.push('koma1');
		eyebrowsArray.push('koma2');
		eyebrowsArray.push('oko1');
		eyesArray.push('yoko2');
		eyesArray.push('uruyoko1');
		eyesArray.push('uruyoko2');
		eyesArray.push('toji1');
		eyesArray.push('toji3');
		eyesArray.push('ahe1');
		mouthArray.push('ku1');
		mouthArray.push('wa2');
		mouthArray.push('wa3');
		mouthArray.push('ahe2');
		this.setTachieHoppe(1);
		this.setTachieSweat(1);
	}
	else if(faceId === 9) {
		eyebrowsArray.push('koma1');
		eyebrowsArray.push('oko2');
		eyebrowsArray.push('oko1');
		eyesArray.push('sita1');
		eyesArray.push('sita2');
		eyesArray.push('urusita2');
		mouthArray.push('fera2');
		mouthArray.push('fera3');
		mouthArray.push('fera4');
		this.setTachieHoppe(1);
	}
	else if(faceId === 10) {
		eyebrowsArray.push('koma1');
		eyebrowsArray.push('koma2');
		eyebrowsArray.push('oko1');
		eyesArray.push('sita2');
		eyesArray.push('urusita1');
		eyesArray.push('urusita2');
		eyesArray.push('toji1');
		eyesArray.push('toji2');
		eyesArray.push('ahe1');
		mouthArray.push('fera3');
		mouthArray.push('fera4');
		this.setTachieHoppe(1);
		this.setTachieSweat(1);
	}
	else if(faceId === 11) {
		eyebrowsArray.push('nico1');
		eyebrowsArray.push('nico2');
		eyesArray.push('yoko1');
		eyesArray.push('yoko2');
		eyesArray.push('uruyoko1');
		eyesArray.push('uruyoko2');
		mouthArray.push('nico1');
		mouthArray.push('nico2');
		mouthArray.push('wa3');
		mouthArray.push('ahe3');
		if(isAroused) this.setTachieHoppe(1);
	}
	else if(faceId === 12) {
		eyebrowsArray.push('nico1');
		eyebrowsArray.push('nico2');
		eyesArray.push('yoko1');
		eyesArray.push('yoko2');
		eyesArray.push('uruyoko1');
		eyesArray.push('uruyoko2');
		if(givingBJ) {
			mouthArray.push('fera2');
			mouthArray.push('fera3');
			mouthArray.push('fera4');
			mouthArray.push('fera5');
			mouthArray.push('fera6');
		}
		else {
			mouthArray.push('nico1');
			mouthArray.push('nico2');
			mouthArray.push('wa1');
			mouthArray.push('ahe3');
		}
		if(isAroused) this.setTachieHoppe(1);
	}
	else if(faceId === 13) {
		eyebrowsArray.push('nico1');
		eyebrowsArray.push('nico2');
		eyebrowsArray.push('oko2');
		eyesArray.push('toji1');
		eyesArray.push('toji3');
		eyesArray.push('ahe1');
		eyesArray.push('uruyoko1');
		eyesArray.push('uruyoko2');
		eyesArray.push('heartyoko1');
		eyesArray.push('heartyoko2');
		eyesArray.push('heartahe1');
		mouthArray.push('nico1');
		mouthArray.push('nico2');
		mouthArray.push('wa1');
		mouthArray.push('ahe2');
		mouthArray.push('ahe3');
		this.setTachieHoppe(1);
		this.setTachieSweat(1);
	}
	else if(faceId === 14) {
		eyebrowsArray.push('nico1');
		eyebrowsArray.push('nico2');
		eyesArray.push('sita1');
		eyesArray.push('sita2');
		eyesArray.push('urusita1');
		eyesArray.push('urusita2');
		mouthArray.push('fera2');
		mouthArray.push('fera3');
		mouthArray.push('fera4');
		mouthArray.push('fera5');
		mouthArray.push('fera6');
		if(isAroused) this.setTachieHoppe(1);
	}
	else if(faceId === 15) {
		eyebrowsArray.push('nico1');
		eyebrowsArray.push('nico2');
		eyebrowsArray.push('oko2');
		eyesArray.push('toji1');
		eyesArray.push('toji2');
		eyesArray.push('ahe1');
		eyesArray.push('urusita1');
		eyesArray.push('urusita2');
		eyesArray.push('heartsita1');
		eyesArray.push('heartsita2');
		eyesArray.push('heartahe1');
		mouthArray.push('fera4');
		mouthArray.push('fera5');
		mouthArray.push('fera6');
		this.setTachieHoppe(1);
		this.setTachieSweat(1);
	}
	
	if(eyebrowsArray.length > 0) {
		this.setTachieEyebrows(eyebrowsArray[Math.randomInt(eyebrowsArray.length)]);
	}
	if(eyesArray.length > 0) {
		this.setTachieEyes(eyesArray[Math.randomInt(eyesArray.length)]);
	}
	if(mouthArray.length > 0) {
		this.setTachieMouth(mouthArray[Math.randomInt(mouthArray.length)]);
	}
	
	if(this.tachieMouth.includes('fera') && this.tachieHoppe === '1')
		this.setTachieHoppe('fera_1');
	
	if(this.tachieMouth.includes('fera'))
		this.setTachieStrayFaceExtension(ConfigManager.convertedTachieMouthName(this) + '_');
	else
		this.resetTachieStrayFaceExtension();
	
	this.setAllowTachieEmoteUpdate(true);
};

/////////////////
// Emote Karryn Cowgirl Pose
/////////////////
Game_Actor.prototype.emoteKarrynCowgirlPose = function() {
	this.setAllowTachieEmoteUpdate(false);
	let ranNum = Math.randomInt(2);
	let bodyIsClose = ranNum === 1;
	let bodyIsFar = ranNum === 0;
	let justOrgasmed = this.didLastGetHitBySkillType(JUST_SKILLTYPE_KARRYN_ORGASM) || this.justOrgasmed();
	let isAroused = this.isAroused() || justOrgasmed;
	let givingBJ = this.isBodySlotPenis(MOUTH_ID);
	let givingPaizuri = this.isBodySlotPenis(BOOBS_ID);
	let justGotClitToyPlay = this.didLastGetHitBySkillType(JUST_SKILLTYPE_ENEMY_TOY_PLAY_CLIT)
	let lastHitPussySex = this.didLastGetHitBySkillType(JUST_SKILLTYPE_ENEMY_PUSSY_SEX) || this.didLastGetHitBySkillType(JUST_SKILLTYPE_KARRYN_PUSSY_SEX);
	let lastHitTittyFuck = this.didLastGetHitBySkillType(JUST_SKILLTYPE_ENEMY_TITTYFUCK) || this.didLastGetHitBySkillType(JUST_SKILLTYPE_KARRYN_TITTYFUCK);
	let karrynSwallowingCum = this.didLastGetHitBySkillType(JUST_SKILLTYPE_ENEMY_CUM_SWALLOW);
	let justGotPussyCreampie = this.didLastGetHitBySkillType(JUST_SKILLTYPE_ENEMY_PUSSY_CREAMPIE);
	let karrynGotBukkaked = this.didLastGetHitBySkillType(JUST_SKILLTYPE_ENEMY_BUKKAKE);
	
	let generalReactionScore = this.getReactionScore();
	let orgasmReactionScore = this.getOrgasmReactionScore();
	let bukkakeReactionScore = this.getBukkakeReactionScore();
	let pussyCreampieReactionScore = this.getPussyCreampieReactionScore();
	let swallowReactionScore = this.getSwallowReactionScore();
	
	let generallvl3 = generalReactionScore >= VAR_DEF_RS_LV3_REQ;
	let generallvl2 = generalReactionScore >= VAR_DEF_RS_LV2_REQ;
	let orgasmlvl3 = orgasmReactionScore >= VAR_DEF_RS_LV3_REQ;
	let orgasmlvl2 = orgasmReactionScore >= VAR_DEF_RS_LV2_REQ;
	let bukkakelvl3 = bukkakeReactionScore  >= VAR_DEF_RS_LV3_REQ;
	let bukkakelvl2 = bukkakeReactionScore >= VAR_DEF_RS_LV2_REQ;
	let pussyCreampielvl3 = pussyCreampieReactionScore  >= VAR_DEF_RS_LV3_REQ;
	let pussyCreampielvl2 = pussyCreampieReactionScore >= VAR_DEF_RS_LV2_REQ;
	let swallowlvl3 = swallowReactionScore  >= VAR_DEF_RS_LV3_REQ;
	let swallowlvl2 = swallowReactionScore >= VAR_DEF_RS_LV2_REQ;
	
	let useDomVersion = this.sadismLvl() > this.masochismLvl();
	
	let enemyBodyName = 'human_normal';
	if(this._cockPussyTarget) {
		let enemyCock = this._cockPussyTarget.enemyCock();
		if(this._cockPussyTarget.isNerdType) {
			if(enemyCock.includes('pale'))
				enemyBodyName = 'nerd_pale';
			else if(enemyCock.includes('black'))
				enemyBodyName = 'nerd_black';
			else
				enemyBodyName = 'nerd_normal';
		}
		else if(enemyCock.includes('human')) {
			if(enemyCock.includes('pale'))
				enemyBodyName = 'human_pale';
			else if(enemyCock.includes('black'))
				enemyBodyName = 'human_black';
			else
				enemyBodyName = 'human_normal';
		}
		else if(this._cockPussyTarget.isGoblinType) {
			if(enemyCock.includes('dark'))
				enemyBodyName = 'goblin_dark';
			else
				enemyBodyName = 'goblin_normal';
		}
		else if(this._cockPussyTarget.isOrcType) {
			if(enemyCock.includes('dark'))
				enemyBodyName = 'orc_dark';
			else
				enemyBodyName = 'orc_normal';
		}
		else if(this._cockPussyTarget.isLizardmanType) {
			if(enemyCock.includes('dark'))
				enemyBodyName = 'lizardman_dark';
			else
				enemyBodyName = 'lizardman_normal';
		}
		else
			enemyBodyName = 'human_normal';
		
		if(useDomVersion) {
			this.setTachieBackA(enemyBodyName);
			this.resetTachieBackB();
		}
		else {
			this.resetTachieBackA();
			this.setTachieBackB(enemyBodyName);
		}
		
		if(this._cockPussyTarget.isNerdType) {
			let nerdCockName = 'human_fat';
			
			if(enemyCock.includes('cut'))
				nerdCockName += '_cut';
			else if(enemyCock.includes('half'))
				nerdCockName += '_half';
			else
				nerdCockName += '_skin';
			
			if(enemyCock.includes('pale'))
				nerdCockName += '_pale';
			else if(enemyCock.includes('black'))
				nerdCockName += '_black';
			else
				nerdCockName += '_normal';
			
			if(Karryn.isCensored())
				this.setTachieCockPussy(nerdCockName + '_cen');
			else
				this.setTachieCockPussy(nerdCockName);
		}
		else {
			if(Karryn.isCensored())
				this.setTachieCockPussy(enemyCock + '_cen');
			else
				this.setTachieCockPussy(enemyCock);
		}
	}
	
	if(givingPaizuri) {
		if(this.isWearingGlovesAndHat())
			this.setTachieBoobs('paizuri_1');
		else
			this.setTachieBoobs('paizuri_naked_1');
		
		if(useDomVersion) {
			this.setTachieFrontA(enemyBodyName);
		}
		else {
			this.resetTachieFrontA();
		}
		
		this.resetTachieFrontB();
		this.resetTachieFrontC();
		
		this.setTachieSemenBoobsExtension('zuri_');
		this.setTachieSemenLeftArmExtension('zuri_');
		this.setTachieSemenRightArmExtension('zuri_');
		this.setTachieStrayBoobsExtension('zuri_');
		this.setTachieSemenLeftArmHasPCup(true);
		this.setTachieSemenRightArmHasPCup(true);
	}
	else {
		if(useDomVersion) {
			if(this.isWearingGlovesAndHat())
				this.setTachieFrontC('arms_legs');
			else
				this.setTachieFrontC('arms_legs_naked');
			
			this.setTachieFrontA('arms_' + enemyBodyName);
			this.setTachieBoobs('legs_1');
			
			this.resetTachieFrontB();
			
			this.setTachieSemenLeftArmExtension('legs_');
			this.setTachieSemenRightArmExtension('legs_');
			this.setTachieSemenBoobsExtension('legs_');
			this.setTachieStrayBoobsExtension('legs_');
		}
		else {
			if(this.isWearingGlovesAndHat())
				this.setTachieFrontB('arms_normal');
			else
				this.setTachieFrontB('arms_normal_naked');
			
			this.setTachieBoobs('normal_1');
			
			this.resetTachieFrontA();
			this.resetTachieFrontC();
			
			this.setTachieSemenLeftArmExtension('normal_');
			this.setTachieSemenRightArmExtension('normal_');
			this.setTachieSemenBoobsExtension('normal_');
			this.setTachieStrayBoobsExtension('normal_');
		}
		
		this.setTachieSemenLeftArmHasPCup(false);
		this.setTachieSemenRightArmHasPCup(false);
	}
	
	let tachieSemenCockName = '';
	if(bodyIsClose) {
		if(this.tachieBody.includes('far')) 
			AudioManager.playSe({name:'+Sex02_Close', pan:0, pitch:65, volume:90});
		
		if(this.isWearingGlovesAndHat()) {
			this.setTachieBody('close_1');
		}
		else {
			this.setTachieBody('close_naked_1');
		}
		this.setTachiePubicExtension('close_');
		this.setTachieSemenBellyExtension('close_');
		this.setTachieSemenCrotchExtension('close_');
		this.setTachieStrayGroinExtension('close_');
		tachieSemenCockName = 'close_';
	}
	else if(bodyIsFar) {
		if(this.tachieBody.includes('close')) 
			AudioManager.playSe({name:'+Sex03_Far', pan:0, pitch:65, volume:90});
		
		if(this.isWearingGlovesAndHat()) {
			this.setTachieBody('far_1');
		}
		else {
			this.setTachieBody('far_naked_1');
		}
		this.setTachiePubicExtension('far_');
		this.setTachieSemenBellyExtension('far_');
		this.setTachieSemenCrotchExtension('far_');
		this.setTachieStrayGroinExtension('far_');
		tachieSemenCockName = 'far_';
	}
	
	if(this._cockPussyTarget) {
		if(this._cockPussyTarget.isGoblinType) {
			tachieSemenCockName += 'goblin_';
		}
		else if(this._cockPussyTarget.isOrcType) {
			tachieSemenCockName += 'fat_';
		}
		else if(this._cockPussyTarget.isLizardmanType) {
			tachieSemenCockName += 'human_';
		}
		else if(this._cockPussyTarget.isNerdType) {
			tachieSemenCockName += 'fat_';
		}
		else {
			tachieSemenCockName += 'human_';
		}
		
		this.setTachieSemenCockPussyExtension(tachieSemenCockName);
		this.setMaxTachieSemenCockPussyId(1);
	}
	
	let faceArray = [];
	this.resetTachieHoppe();
	this.resetTachieSweat();
	
	if(givingBJ) {
		if(karrynSwallowingCum) {
			if(swallowlvl3) 
				faceArray.push(22);
			else if(swallowlvl2) 
				faceArray.push(14);
			else
				faceArray.push(6);
		}
		else if(justOrgasmed) {
			if(orgasmlvl3) 
				faceArray.push(24);
			else if(orgasmlvl2) 
				faceArray.push(16);
			else
				faceArray.push(8);
		}
		else if(justGotPussyCreampie) {
			if(pussyCreampielvl3) 
				faceArray.push(24);
			else if(pussyCreampielvl2) 
				faceArray.push(16);
			else
				faceArray.push(8);
		}
		else {
			if(generallvl3) 
				faceArray.push(20);
			else if(generallvl2) 
				faceArray.push(12);
			else
				faceArray.push(4);
		}
	}
	//not fera
	else {
		if(justOrgasmed) {
			if(orgasmlvl3) 
				faceArray.push(23);
			else if(orgasmlvl2) 
				faceArray.push(15);
			else
				faceArray.push(7);
		}
		else if(justGotPussyCreampie) {
			if(pussyCreampielvl3) 
				faceArray.push(21);
			else if(pussyCreampielvl2) 
				faceArray.push(13);
			else
				faceArray.push(5);
		}
		else if(karrynGotBukkaked) {
			if(bukkakelvl3) 
				faceArray.push(21);
			else if(bukkakelvl2) 
				faceArray.push(13);
			else
				faceArray.push(5);
		}
		else if(lastHitPussySex) {
			if(generallvl3) 
				faceArray.push(17);
			else if(generallvl2) 
				faceArray.push(9);
			else
				faceArray.push(1);
		}
		else if(lastHitTittyFuck) {
			if(generallvl3) 
				faceArray.push(19);
			else if(generallvl2) 
				faceArray.push(11);
			else
				faceArray.push(3);
		}
		else if(justGotClitToyPlay) {
			if(generallvl3) 
				faceArray.push(18);
			else if(generallvl2) 
				faceArray.push(10);
			else
				faceArray.push(2);
		}
		else {
			if(generallvl3) 
				faceArray.push(17);
			else if(generallvl2) 
				faceArray.push(9);
			else
				faceArray.push(1);
		}
	}
	
	let faceId = faceArray[Math.randomInt(faceArray.length)];
	let eyebrowsArray = [];
	let eyesArray = [];
	let mouthArray = [];
	
	if(faceId === 1) {
		eyebrowsArray.push('kiri1');
		eyebrowsArray.push('kiri2');
		eyesArray.push('mae1');
		eyesArray.push('mae2');
		mouthArray.push('pero1');
		mouthArray.push('nico1');
		mouthArray.push('nico2');
		mouthArray.push('nico3');
		if(isAroused) this.setTachieHoppe(1);
	}
	else if(faceId === 2) {
		eyebrowsArray.push('kiri1');
		eyebrowsArray.push('kiri2');
		eyesArray.push('sita1');
		eyesArray.push('sita2');
		mouthArray.push('ho1');
		mouthArray.push('ho2');
		mouthArray.push('nico1');
		mouthArray.push('nico2');
		mouthArray.push('nico3');
		if(isAroused) this.setTachieHoppe(1);
	}
	else if(faceId === 3) {
		eyebrowsArray.push('kiri1');
		eyebrowsArray.push('kiri2');
		eyesArray.push('sita1');
		eyesArray.push('sita2');
		mouthArray.push('pero1');
		mouthArray.push('nico1');
		mouthArray.push('nico2');
		mouthArray.push('nico3');
		if(isAroused) this.setTachieHoppe(1);
	}
	else if(faceId === 4) {
		eyebrowsArray.push('kiri1');
		eyebrowsArray.push('kiri2');
		eyesArray.push('mae1');
		eyesArray.push('mae2');
		eyesArray.push('sita1');
		eyesArray.push('sita2');
		mouthArray.push('fera1');
		mouthArray.push('fera2');
		if(isAroused) this.setTachieHoppe('fera_1');
	}
	else if(faceId === 5) {
		eyebrowsArray.push('koma1');
		eyebrowsArray.push('koma2');
		eyesArray.push('mae3');
		eyesArray.push('mae2');
		eyesArray.push('sita3');
		eyesArray.push('sita2');
		mouthArray.push('ho3');
		mouthArray.push('nico3');
		mouthArray.push('ahe1');
		this.setTachieHoppe(1);
		this.setTachieSweat(1);
	}
	else if(faceId === 6) {
		eyebrowsArray.push('koma1');
		eyebrowsArray.push('koma2');
		eyesArray.push('sita3');
		eyesArray.push('sita2');
		mouthArray.push('fera1');
		this.setTachieHoppe('fera_1');
		this.setTachieSweat(1);
	}
	else if(faceId === 7) {
		eyebrowsArray.push('koma1');
		eyebrowsArray.push('koma2');
		eyesArray.push('mae3');
		eyesArray.push('toji1');
		eyesArray.push('sita3');
		mouthArray.push('ho3');
		mouthArray.push('ahe2');
		mouthArray.push('ahe1');
		mouthArray.push('ahe3');
		this.setTachieHoppe(1);
		this.setTachieSweat(1);
	}
	else if(faceId === 8) {
		eyebrowsArray.push('koma1');
		eyebrowsArray.push('koma2');
		eyesArray.push('toji1');
		eyesArray.push('sita3');
		mouthArray.push('fera1');
		mouthArray.push('fera2');
		this.setTachieHoppe('fera_1');
		this.setTachieSweat(1);
	}
	else if(faceId === 9) {
		eyebrowsArray.push('kiri1');
		eyebrowsArray.push('kiri2');
		eyebrowsArray.push('nico1');
		eyebrowsArray.push('nico2');
		eyesArray.push('mae1');
		eyesArray.push('mae2');
		mouthArray.push('pero1');
		mouthArray.push('nico1');
		mouthArray.push('nico2');
		mouthArray.push('nico3');
		if(isAroused) this.setTachieHoppe(1);
	}
	else if(faceId === 10) {
		eyebrowsArray.push('kiri1');
		eyebrowsArray.push('kiri2');
		eyebrowsArray.push('nico1');
		eyebrowsArray.push('nico2');
		eyesArray.push('sita1');
		eyesArray.push('sita2');
		mouthArray.push('ho1');
		mouthArray.push('ho2');
		mouthArray.push('nico1');
		mouthArray.push('nico2');
		mouthArray.push('nico3');
		if(isAroused) this.setTachieHoppe(1);
	}
	else if(faceId === 11) {
		eyebrowsArray.push('kiri1');
		eyebrowsArray.push('kiri2');
		eyebrowsArray.push('nico1');
		eyebrowsArray.push('nico2');
		eyesArray.push('sita1');
		eyesArray.push('sita2');
		mouthArray.push('pero1');
		mouthArray.push('nico1');
		mouthArray.push('ahe2');
		mouthArray.push('nico3');
		if(isAroused) this.setTachieHoppe(1);
	}
	else if(faceId === 12) {
		eyebrowsArray.push('kiri1');
		eyebrowsArray.push('kiri2');
		eyebrowsArray.push('nico1');
		eyebrowsArray.push('nico2');
		eyesArray.push('mae1');
		eyesArray.push('mae2');
		eyesArray.push('sita1');
		eyesArray.push('sita2');
		mouthArray.push('fera2');
		mouthArray.push('fera3');
		mouthArray.push('fera4');
		if(isAroused) this.setTachieHoppe('fera_1');
	}
	else if(faceId === 13) {
		eyebrowsArray.push('koma1');
		eyebrowsArray.push('kiri1');
		eyebrowsArray.push('kiri2');
		eyesArray.push('mae3');
		eyesArray.push('mae2');
		eyesArray.push('sita3');
		eyesArray.push('sita2');
		mouthArray.push('ho3');
		mouthArray.push('nico1');
		mouthArray.push('ahe2');
		mouthArray.push('ahe1');
		mouthArray.push('ahe3');
		this.setTachieHoppe(1);
		this.setTachieSweat(1);
	}
	else if(faceId === 14) {
		eyebrowsArray.push('koma1');
		eyebrowsArray.push('kiri1');
		eyebrowsArray.push('kiri2');
		eyesArray.push('sita3');
		eyesArray.push('sita2');
		mouthArray.push('fera3');
		mouthArray.push('fera4');
		this.setTachieHoppe('fera_1');
		this.setTachieSweat(1);
	}
	else if(faceId === 15) {
		eyebrowsArray.push('koma1');
		eyebrowsArray.push('koma2');
		eyebrowsArray.push('kiri1');
		eyebrowsArray.push('kiri2');
		eyesArray.push('mae3');
		eyesArray.push('urusita2');
		eyesArray.push('urumae2');
		eyesArray.push('toji1');
		mouthArray.push('ho3');
		mouthArray.push('nico1');
		mouthArray.push('ahe2');
		mouthArray.push('ahe1');
		mouthArray.push('ahe3');
		this.setTachieHoppe(1);
		this.setTachieSweat(1);
	}
	else if(faceId === 16) {
		eyebrowsArray.push('koma1');
		eyebrowsArray.push('koma2');
		eyebrowsArray.push('kiri1');
		eyebrowsArray.push('kiri2');
		eyesArray.push('sita3');
		eyesArray.push('urusita2');
		eyesArray.push('toji1');
		mouthArray.push('fera2');
		mouthArray.push('fera3');
		mouthArray.push('fera4');
		this.setTachieHoppe('fera_1');
		this.setTachieSweat(1);
	}
	else if(faceId === 17) {
		eyebrowsArray.push('kiri1');
		eyebrowsArray.push('nico1');
		eyebrowsArray.push('nico2');
		eyesArray.push('mae1');
		eyesArray.push('mae2');
		eyesArray.push('urumae2');
		mouthArray.push('pero1');
		mouthArray.push('nico1');
		mouthArray.push('nico2');
		mouthArray.push('nico3');
		mouthArray.push('ahe2');
		if(isAroused) this.setTachieHoppe(1);
	}
	else if(faceId === 18) {
		eyebrowsArray.push('kiri1');
		eyebrowsArray.push('nico1');
		eyebrowsArray.push('nico2');
		eyesArray.push('sita1');
		eyesArray.push('sita2');
		eyesArray.push('urumae2');
		mouthArray.push('pero2');
		mouthArray.push('nico1');
		mouthArray.push('nico2');
		mouthArray.push('nico3');
		mouthArray.push('ho2');
		if(isAroused) this.setTachieHoppe(1);
	}
	else if(faceId === 19) {
		eyebrowsArray.push('kiri1');
		eyebrowsArray.push('nico1');
		eyebrowsArray.push('nico2');
		eyesArray.push('sita1');
		eyesArray.push('sita2');
		eyesArray.push('urumae2');
		mouthArray.push('pero2');
		mouthArray.push('nico1');
		mouthArray.push('nico2');
		mouthArray.push('ahe2');
		if(isAroused) this.setTachieHoppe(1);
	}
	else if(faceId === 20) {
		eyebrowsArray.push('kiri1');
		eyebrowsArray.push('nico1');
		eyebrowsArray.push('nico2');
		eyesArray.push('mae2');
		eyesArray.push('sita2');
		eyesArray.push('urumae2');
		eyesArray.push('urusita2');
		mouthArray.push('fera2');
		mouthArray.push('fera3');
		mouthArray.push('fera4');
		mouthArray.push('fera5');
		mouthArray.push('fera6');
		if(isAroused) this.setTachieHoppe('fera_1');
	}
	else if(faceId === 21) {
		eyebrowsArray.push('kiri1');
		eyebrowsArray.push('nico1');
		eyebrowsArray.push('nico2');
		eyebrowsArray.push('koma1');
		eyesArray.push('urusita1');
		eyesArray.push('urusita2');
		eyesArray.push('urumae1');
		eyesArray.push('urumae2');
		mouthArray.push('pero2');
		mouthArray.push('pero1');
		mouthArray.push('ahe3');
		mouthArray.push('ahe4');
		if(isAroused) this.setTachieHoppe(1);
		if(Math.randomInt(2) === 0) this.setTachieSweat(1);
	}
	else if(faceId === 22) {
		eyebrowsArray.push('kiri1');
		eyebrowsArray.push('nico1');
		eyebrowsArray.push('nico2');
		eyebrowsArray.push('koma1');
		eyesArray.push('urusita1');
		eyesArray.push('urusita2');
		mouthArray.push('fera4');
		mouthArray.push('fera5');
		mouthArray.push('fera6');
		if(isAroused) this.setTachieHoppe('fera_1');
		if(Math.randomInt(2) === 0) this.setTachieSweat(1);
	}
	else if(faceId === 23) {
		eyebrowsArray.push('kiri2');
		eyebrowsArray.push('nico1');
		eyebrowsArray.push('nico2');
		eyebrowsArray.push('koma1');
		eyesArray.push('urusita1');
		eyesArray.push('heartmae1');
		eyesArray.push('urumae1');
		eyesArray.push('heartsita1');
		eyesArray.push('ahe1');
		mouthArray.push('pero2');
		mouthArray.push('nico3');
		mouthArray.push('ahe2');
		mouthArray.push('ahe3');
		mouthArray.push('ahe4');
		this.setTachieHoppe(1);
		if(Math.randomInt(2) === 0) this.setTachieSweat(1);
	}
	else if(faceId === 24) {
		eyebrowsArray.push('kiri2');
		eyebrowsArray.push('nico1');
		eyebrowsArray.push('nico2');
		eyebrowsArray.push('koma1');
		eyesArray.push('urusita2');
		eyesArray.push('sita3');
		eyesArray.push('ahe1');
		eyesArray.push('heartsita1');
		mouthArray.push('fera2');
		mouthArray.push('fera3');
		mouthArray.push('fera4');
		mouthArray.push('fera5');
		mouthArray.push('fera6');
		this.setTachieHoppe('fera_1');
		if(Math.randomInt(2) === 0) this.setTachieSweat(1);
	}
	
	
	if(eyebrowsArray.length > 0) {
		this.setTachieEyebrows(eyebrowsArray[Math.randomInt(eyebrowsArray.length)]);
	}
	if(eyesArray.length > 0) {
		this.setTachieEyes(eyesArray[Math.randomInt(eyesArray.length)]);
	}
	if(mouthArray.length > 0) {
		this.setTachieMouth(mouthArray[Math.randomInt(mouthArray.length)]);
	}
	
	if(this.tachieMouth.includes('fera'))
		this.setTachieStrayFaceExtension(ConfigManager.convertedTachieMouthName(this) + '_');
	else
		this.resetTachieStrayFaceExtension();
	
	this.setAllowTachieEmoteUpdate(true);
};

/////////////////
// Emote Reverse Cowgirl Pose
/////////////////
Game_Actor.prototype.emoteReverseCowgirlPose = function(target) {
	this.setAllowTachieEmoteUpdate(false);
	let ranNum = Math.randomInt(2);
	let buttIsClose = ranNum === 1;
	let buttIsFar = ranNum === 0;
	let justOrgasmed = this.didLastGetHitBySkillType(JUST_SKILLTYPE_KARRYN_ORGASM) || this.justOrgasmed();
	let isAroused = this.isAroused() || justOrgasmed;
	let givingBJ = this.isBodySlotPenis(MOUTH_ID);
	let hasLeftHandjob = this.isBodySlotPenis(LEFT_HAND_ID);
	let hasRightHandjob = this.isBodySlotPenis(RIGHT_HAND_ID);
	let analEnemyCock = 'human_cut_normal';
	let analCockTarget = false;
	if(this._cockAnalTarget) analCockTarget = this._cockAnalTarget;
	else if(target) analCockTarget = target;

	if(analCockTarget) {
		analEnemyCock = analCockTarget.enemyCock();
		
		let enemyBodyName = 'human_normal';
		
		if(analCockTarget.isNerdType) {
			if(analEnemyCock.includes('pale'))
				enemyBodyName = 'fat_pale';
			else if(analEnemyCock.includes('black'))
				enemyBodyName = 'fat_black';
			else
				enemyBodyName = 'fat_normal';
		}
		else if(analEnemyCock.includes('human')) {
			if(analEnemyCock.includes('pale'))
				enemyBodyName = 'human_pale';
			else if(analEnemyCock.includes('black'))
				enemyBodyName = 'human_black';
			else
				enemyBodyName = 'human_normal';
		}
		else if(analCockTarget.isGoblinType) {
			if(analEnemyCock.includes('dark'))
				enemyBodyName = 'goblin_dark';
			else
				enemyBodyName = 'goblin_normal';
		}
		else if(analCockTarget.isOrcType) {
			if(analEnemyCock.includes('dark'))
				enemyBodyName = 'orc_dark';
			else
				enemyBodyName = 'orc_normal';
		}
		else if(analCockTarget.isLizardmanType) {
			if(analEnemyCock.includes('dark'))
				enemyBodyName = 'lizardman_dark';
			else
				enemyBodyName = 'lizardman_normal';
		}
		else
			enemyBodyName = 'human_normal';
		
		
		this.setTachieBackA(enemyBodyName);
	}
	
	let semenCockAnalExtension = '';
	if(buttIsClose) {
		if(this.tachieButt.includes('far')) 
			AudioManager.playSe({name:'+Sex02_Close', pan:0, pitch:65, volume:90});
		if(!this.isWearingGlovesAndHat())
			this.setTachieButt('close_naked');
		else
			this.setTachieButt('close');
		this.setTachieStrayButtExtension('close_');
		this.setTachieSemenButtExtension('close_');
		semenCockAnalExtension = 'close_';
		

		if(Karryn.isCensored())
			this.setTachieCockAnal('close_' + analEnemyCock + '_cen');
		else
			this.setTachieCockAnal('close_' + analEnemyCock);
		
	}
	else if(buttIsFar) {
		if(this.tachieButt.includes('close')) 
			AudioManager.playSe({name:'+Sex03_Far', pan:0, pitch:65, volume:90});
		if(!this.isWearingGlovesAndHat())
			this.setTachieButt('far_naked');
		else
			this.setTachieButt('far');
		this.setTachieStrayButtExtension('far_');
		this.setTachieSemenButtExtension('far_');
		semenCockAnalExtension = 'far_';
		
		if(Karryn.isCensored())
			this.setTachieCockAnal('far_' + analEnemyCock + '_cen');
		else
			this.setTachieCockAnal('far_' + analEnemyCock);
	}
	
	if(analEnemyCock.isOrcType) {
		semenCockAnalExtension += 'orc_';
	}
	else if(analEnemyCock.isGoblinType) {
		semenCockAnalExtension += 'goblin_';
	}
	else {
		semenCockAnalExtension += 'human_';
	}
	this.setTachieSemenCockAnalExtension(semenCockAnalExtension);
	this.setMaxTachieSemenCockAnalId(1);
	
	if(this.isWearingGlovesAndHat()) {
		if(hasLeftHandjob) {
			this.setTachieLeftArmHasHCup(false);
			this.setTachieLeftArm('hj');
		}
		else {
			this.setTachieLeftArm('normal');
			this.setTachieLeftArmHasHCup(true);
		}
		
		if(hasRightHandjob)
			this.setTachieRightArm('hj');
		else
			this.resetTachieRightArm();
	}
	else {
		if(hasLeftHandjob) {
			this.setTachieLeftArmHasHCup(false);
			this.setTachieLeftArm('hj_naked');
		}
		else {
			this.setTachieLeftArm('normal_naked');
			this.setTachieLeftArmHasHCup(true);
		}
		
		if(hasRightHandjob)
			this.setTachieRightArm('hj_naked');
		else
			this.resetTachieRightArm();
	}
	
	
	this.setAllowTachieEmoteUpdate(true);
};

/////////////////
// Emote Lizardman Cowgirl Pose
/////////////////
Game_Actor.prototype.emoteLizardmanCowgirlPose = function() {
	this.setAllowTachieEmoteUpdate(false);
	let justOrgasmed = this.didLastGetHitBySkillType(JUST_SKILLTYPE_KARRYN_ORGASM) || this.justOrgasmed();
	let isAroused = this.isAroused() || justOrgasmed;
	let givingBJ = this.isBodySlotPenis(MOUTH_ID);
	let givingHJ = this.isBodySlotPenis(RIGHT_HAND_ID);
	let analInserted = this.isBodySlotPenis(ANAL_ID);
	let justGotPussyCreampie = this.didLastGetHitBySkillType(JUST_SKILLTYPE_ENEMY_PUSSY_CREAMPIE);
	let justGotAnalCreampie = this.didLastGetHitBySkillType(JUST_SKILLTYPE_ENEMY_ANAL_CREAMPIE);
	let karrynSwallowingCum = this.didLastGetHitBySkillType(JUST_SKILLTYPE_ENEMY_CUM_SWALLOW);
	let karrynGotBukkaked = this.didLastGetHitBySkillType(JUST_SKILLTYPE_ENEMY_BUKKAKE);
	let lastHitHandjob = this.didLastGetHitBySkillType(JUST_SKILLTYPE_KARRYN_HANDJOB) || this.didLastGetHitBySkillType(JUST_SKILLTYPE_ENEMY_HANDJOB);
	let lastHitAnalSex = this.didLastGetHitBySkillType(JUST_SKILLTYPE_ENEMY_ANAL_SEX) || this.didLastGetHitBySkillType(JUST_SKILLTYPE_KARRYN_ANAL_SEX) || this.didLastGetHitBySkillType(JUST_SKILLTYPE_ENEMY_TOY_PLAY_ANAL);
	
	let generalReactionScore = this.getReactionScore();
	let orgasmReactionScore = this.getOrgasmReactionScore();
	let bukkakeReactionScore = this.getBukkakeReactionScore();
	let swallowReactionScore = this.getSwallowReactionScore();
	let pussyCreampieReactionScore = this.getPussyCreampieReactionScore();
	let analCreampieReactionScore = this.getAnalCreampieReactionScore();
	
	let generallvl3 = generalReactionScore >= VAR_DEF_RS_LV3_REQ;
	let generallvl2 = generalReactionScore >= VAR_DEF_RS_LV2_REQ;
	let orgasmlvl3 = orgasmReactionScore >= VAR_DEF_RS_LV3_REQ;
	let orgasmlvl2 = orgasmReactionScore >= VAR_DEF_RS_LV2_REQ;
	let bukkakelvl3 = bukkakeReactionScore >= VAR_DEF_RS_LV3_REQ;
	let bukkakelvl2 = bukkakeReactionScore >= VAR_DEF_RS_LV2_REQ;
	let pussyCreampielvl3 = pussyCreampieReactionScore  >= VAR_DEF_RS_LV3_REQ;
	let pussyCreampielvl2 = pussyCreampieReactionScore >= VAR_DEF_RS_LV2_REQ;
	let analCreampielvl3 = analCreampieReactionScore  >= VAR_DEF_RS_LV3_REQ;
	let analCreampielvl2 = analCreampieReactionScore >= VAR_DEF_RS_LV2_REQ;
	let swallowlvl3 = swallowReactionScore  >= VAR_DEF_RS_LV3_REQ;
	let swallowlvl2 = swallowReactionScore >= VAR_DEF_RS_LV2_REQ;
	
	
	let headType = "normal";
	if(givingBJ) {
		headType = 'fera'
		this.setTachieHead(headType);
		this.setTachieHatExtension('fera_');
		this.setTachieHairExtension('fera_');
	}
	else {
		this.setTachieHead(headType);
		this.setTachieHatExtension('normal_');
		this.setTachieHairExtension('normal_');
	}
	
	if(givingHJ) {
		if(this.isWearingGlovesAndHat()) 
			this.setTachieRightArm('hj');
		else
			this.setTachieRightArm('hj_naked');
	}
	else {
		if(this.isWearingGlovesAndHat()) 
			this.setTachieRightArm('normal');
		else
			this.setTachieRightArm('normal_naked');
	}
	
	let faceArray = [];
	this.resetTachieHoppe();
	this.resetTachieSweat();
	
	if(givingBJ) {
		if(justOrgasmed) {
			if(orgasmlvl3)
				faceArray.push(24);
			else if(orgasmlvl2)
				faceArray.push(16);
			else
				faceArray.push(8);
		}
		else if(karrynGotBukkaked) {
			if(bukkakelvl3)
				faceArray.push(22);
			else if(bukkakelvl2)
				faceArray.push(14);
			else
				faceArray.push(6);
		}
		else if(justGotPussyCreampie) {
			if(pussyCreampielvl3)
				faceArray.push(22);
			else if(pussyCreampielvl2)
				faceArray.push(14);
			else
				faceArray.push(6);
		}
		else if(justGotAnalCreampie) {
			if(analCreampielvl3)
				faceArray.push(22);
			else if(analCreampielvl2)
				faceArray.push(14);
			else
				faceArray.push(6);
		}
		else {
			if(generallvl3)
				faceArray.push(20);
			else if(generallvl2)
				faceArray.push(12);
			else
				faceArray.push(4);
		}
	}
	//not BJ
	else {
		if(justOrgasmed) {
			if(orgasmlvl3)
				faceArray.push(23);
			else if(orgasmlvl2)
				faceArray.push(15);
			else
				faceArray.push(7);
		}
		else if(karrynGotBukkaked) {
			if(bukkakelvl3)
				faceArray.push(21);
			else if(bukkakelvl2)
				faceArray.push(13);
			else
				faceArray.push(5);
		}
		else if(justGotPussyCreampie) {
			if(pussyCreampielvl3)
				faceArray.push(21);
			else if(pussyCreampielvl2)
				faceArray.push(13);
			else
				faceArray.push(5);
		}
		else if(justGotAnalCreampie) {
			if(analCreampielvl3)
				faceArray.push(21);
			else if(analCreampielvl2)
				faceArray.push(13);
			else
				faceArray.push(5);
		}
		else if(lastHitAnalSex) {
			if(generallvl3)
				faceArray.push(19);
			else if(generallvl2)
				faceArray.push(11);
			else
				faceArray.push(3);
		}
		else if(lastHitHandjob) {
			if(generallvl3)
				faceArray.push(18);
			else if(generallvl2)
				faceArray.push(10);
			else
				faceArray.push(2);
		}
		else {
			if(generallvl3)
				faceArray.push(17);
			else if(generallvl2)
				faceArray.push(9);
			else
				faceArray.push(1);
		}
	}
	
	let faceId = faceArray[Math.randomInt(faceArray.length)];
	let eyebrowsArray = [];
	let eyesArray = [];
	let mouthArray = [];
	let tachieHoppeName = '';
	let tachieSweatName = '';
	let displayTachieHoppe = false;
	let displayTachieSweat = false;
	
	if(faceId === 1) {
		eyebrowsArray.push('ku1');
		eyebrowsArray.push('koma1');
		eyebrowsArray.push('koma2');
		eyesArray.push('yoko1');
		eyesArray.push('yoko2');
		mouthArray.push('gugi1');
		mouthArray.push('gugi2');
		mouthArray.push('ho1');
		tachieHoppeName += '1';
		displayTachieHoppe = true;
		tachieSweatName += '1';
		displayTachieSweat = true;
	}
	else if(faceId === 2) {
		eyebrowsArray.push('ku1');
		eyebrowsArray.push('koma1');
		eyebrowsArray.push('koma2');
		eyesArray.push('sage1');
		eyesArray.push('sage2');
		mouthArray.push('gugi1');
		mouthArray.push('gugi2');
		mouthArray.push('ho1');
		tachieHoppeName += '1';
		displayTachieHoppe = true;
		tachieSweatName += '1';
		displayTachieSweat = true;
	}
	else if(faceId === 3) {
		eyebrowsArray.push('koma1');
		eyebrowsArray.push('koma2');
		eyesArray.push('yoko1');
		eyesArray.push('yoko2');
		mouthArray.push('gugi1');
		mouthArray.push('ho1');
		mouthArray.push('ho2');
		mouthArray.push('ho3');
		mouthArray.push('wa2');
		tachieHoppeName += '1';
		displayTachieHoppe = true;
		tachieSweatName += '1';
		displayTachieSweat = true;
	}
	else if(faceId === 4) {
		eyebrowsArray.push('oko1');
		eyebrowsArray.push('koma1');
		eyebrowsArray.push('koma2');
		eyesArray.push('mae1');
		eyesArray.push('yoko1');
		mouthArray.push('1');
		mouthArray.push('2');
		tachieHoppeName += '1';
		displayTachieHoppe = true;
		tachieSweatName += '1';
		displayTachieSweat = true;
	}
	else if(faceId === 5) {
		eyebrowsArray.push('ku1');
		eyebrowsArray.push('koma1');
		eyebrowsArray.push('koma2');
		eyesArray.push('sage3');
		eyesArray.push('yoko3');
		eyesArray.push('toji1');
		mouthArray.push('gugi1');
		mouthArray.push('ho2');
		mouthArray.push('wa1');
		mouthArray.push('wa2');
		mouthArray.push('name1');
		tachieHoppeName += '1';
		displayTachieHoppe = true;
		tachieSweatName += '1';
		displayTachieSweat = true;
	}
	else if(faceId === 6) {
		eyebrowsArray.push('oko1');
		eyebrowsArray.push('koma2');
		eyesArray.push('ahe1');
		eyesArray.push('toji1');
		mouthArray.push('1');
		tachieHoppeName += '1';
		displayTachieHoppe = true;
		tachieSweatName += '1';
		displayTachieSweat = true;
	}
	else if(faceId === 7) {
		eyebrowsArray.push('ku1');
		eyebrowsArray.push('koma1');
		eyebrowsArray.push('koma2');
		eyesArray.push('sage3');
		eyesArray.push('yoko3');
		eyesArray.push('toji1');
		mouthArray.push('gugi1');
		mouthArray.push('ho2');
		mouthArray.push('ho3');
		mouthArray.push('wa1');
		mouthArray.push('wa2');
		mouthArray.push('name1');
		tachieHoppeName += '1';
		displayTachieHoppe = true;
		tachieSweatName += '1';
		displayTachieSweat = true;
	}
	else if(faceId === 8) {
		eyebrowsArray.push('koma1');
		eyebrowsArray.push('koma2');
		eyesArray.push('ahe1');
		eyesArray.push('toji1');
		mouthArray.push('1');
		mouthArray.push('2');
		tachieHoppeName += '1';
		displayTachieHoppe = true;
		tachieSweatName += '1';
		displayTachieSweat = true;
	}
	else if(faceId === 9) {
		eyebrowsArray.push('ku1');
		eyebrowsArray.push('koma2');
		eyebrowsArray.push('kiri1');
		eyesArray.push('yoko1');
		eyesArray.push('yoko2');
		mouthArray.push('gugi1');
		mouthArray.push('ho2');
		mouthArray.push('ho1');
		tachieHoppeName += '1';
		displayTachieHoppe = true;
	}
	else if(faceId === 10) {
		eyebrowsArray.push('ku1');
		eyebrowsArray.push('koma2');
		eyebrowsArray.push('kiri1');
		eyesArray.push('sage1');
		eyesArray.push('sage2');
		mouthArray.push('gugi2');
		mouthArray.push('ho2');
		mouthArray.push('ho1');
		mouthArray.push('wa1');
		tachieHoppeName += '1';
		displayTachieHoppe = true;
	}
	else if(faceId === 11) {
		eyebrowsArray.push('ku1');
		eyebrowsArray.push('koma1');
		eyebrowsArray.push('koma2');
		eyesArray.push('yoko1');
		eyesArray.push('yoko2');
		mouthArray.push('ho2');
		mouthArray.push('ho3');
		mouthArray.push('wa1');
		mouthArray.push('wa2');
		mouthArray.push('ho1');
		tachieHoppeName += '1';
		displayTachieHoppe = true;
		tachieSweatName += '1';
		displayTachieSweat = true;
	}
	else if(faceId === 12) {
		eyebrowsArray.push('koma2');
		eyebrowsArray.push('koma1');
		eyebrowsArray.push('hu1');
		eyesArray.push('yoko1');
		eyesArray.push('mae1');
		mouthArray.push('2');
		mouthArray.push('3');
		mouthArray.push('4');
		tachieHoppeName += '1';
		displayTachieHoppe = true;
	}
	else if(faceId === 13) {
		eyebrowsArray.push('ku1');
		eyebrowsArray.push('koma1');
		eyebrowsArray.push('koma2');
		eyesArray.push('sage3');
		eyesArray.push('yoko3');
		eyesArray.push('toji1');
		mouthArray.push('ho2');
		mouthArray.push('ho1');
		mouthArray.push('wa1');
		mouthArray.push('wa2');
		mouthArray.push('name1');
		tachieHoppeName += '1';
		displayTachieHoppe = true;
		tachieSweatName += '1';
		displayTachieSweat = true;
	}
	else if(faceId === 14) {
		eyebrowsArray.push('koma2');
		eyebrowsArray.push('koma1');
		eyebrowsArray.push('hu1');
		eyesArray.push('ahe1');
		eyesArray.push('toji1');
		eyesArray.push('yoko1');
		mouthArray.push('3');
		mouthArray.push('4');
		tachieHoppeName += '1';
		displayTachieHoppe = true;
		tachieSweatName += '1';
		displayTachieSweat = true;
	}
	else if(faceId === 15) {
		eyebrowsArray.push('ku1');
		eyebrowsArray.push('koma1');
		eyebrowsArray.push('koma2');
		eyesArray.push('sage3');
		eyesArray.push('yoko3');
		eyesArray.push('toji1');
		mouthArray.push('ho2');
		mouthArray.push('ho1');
		mouthArray.push('ho3');
		mouthArray.push('wa1');
		mouthArray.push('wa2');
		mouthArray.push('name1');
		tachieHoppeName += '1';
		displayTachieHoppe = true;
		tachieSweatName += '1';
		displayTachieSweat = true;
	}
	else if(faceId === 16) {
		eyebrowsArray.push('koma2');
		eyebrowsArray.push('koma1');
		eyebrowsArray.push('hu1');
		eyesArray.push('ahe1');
		eyesArray.push('toji1');
		eyesArray.push('ahe2');
		mouthArray.push('2');
		mouthArray.push('3');
		mouthArray.push('4');
		tachieHoppeName += '1';
		displayTachieHoppe = true;
		tachieSweatName += '1';
		displayTachieSweat = true;
	}
	else if(faceId === 17) {
		eyebrowsArray.push('nico1');
		eyebrowsArray.push('kiri1');
		eyesArray.push('yoko1');
		eyesArray.push('yoko2');
		mouthArray.push('nico1');
		mouthArray.push('nico2');
		mouthArray.push('nico3');
		if(isAroused) {
			tachieHoppeName += '1';
			displayTachieHoppe = true;
		}
	}
	else if(faceId === 18) {
		eyebrowsArray.push('nico1');
		eyebrowsArray.push('kiri1');
		eyesArray.push('sage1');
		eyesArray.push('sage2');
		mouthArray.push('name1');
		mouthArray.push('chu1');
		mouthArray.push('nico2');
		mouthArray.push('nico3');
		if(isAroused) {
			tachieHoppeName += '1';
			displayTachieHoppe = true;
		}
	}
	else if(faceId === 19) {
		eyebrowsArray.push('nico1');
		eyebrowsArray.push('kiri1');
		eyesArray.push('yoko1');
		eyesArray.push('yoko2');
		mouthArray.push('name1');
		mouthArray.push('chu1');
		mouthArray.push('nico2');
		mouthArray.push('nico3');
		if(isAroused) {
			tachieHoppeName += '1';
			displayTachieHoppe = true;
		}
	}
	else if(faceId === 20) {
		eyebrowsArray.push('nico1');
		eyebrowsArray.push('nico2');
		eyebrowsArray.push('hu1');
		eyesArray.push('mae1');
		eyesArray.push('yoko1');
		mouthArray.push('2');
		mouthArray.push('3');
		mouthArray.push('4');
		mouthArray.push('5');
		mouthArray.push('6');
		if(isAroused) {
			tachieHoppeName += '1';
			displayTachieHoppe = true;
		}
	}
	else if(faceId === 21) {
		eyebrowsArray.push('nico1');
		eyebrowsArray.push('kiri1');
		eyesArray.push('yoko1');
		eyesArray.push('yoko2');
		eyesArray.push('yoko3');
		eyesArray.push('toji1');
		mouthArray.push('name2');
		mouthArray.push('chu1');
		mouthArray.push('nico2');
		mouthArray.push('nico3');
		tachieHoppeName += '1';
		displayTachieHoppe = true;
		tachieSweatName += '1';
		displayTachieSweat = true;
	}
	else if(faceId === 22) {
		eyebrowsArray.push('nico2');
		eyebrowsArray.push('hu1');
		eyebrowsArray.push('koma1');
		eyesArray.push('yoko1');
		eyesArray.push('mae1');
		eyesArray.push('ahe1');
		mouthArray.push('4');
		mouthArray.push('5');
		mouthArray.push('6');
		tachieHoppeName += '1';
		displayTachieHoppe = true;
		tachieSweatName += '1';
		displayTachieSweat = true;
	}
	else if(faceId === 23) {
		eyebrowsArray.push('nico1');
		eyebrowsArray.push('koma1');
		eyebrowsArray.push('koma2');
		eyesArray.push('heart1');
		eyesArray.push('ahe2');
		eyesArray.push('yoko3');
		eyesArray.push('sage3');
		mouthArray.push('ho3');
		mouthArray.push('chu1');
		mouthArray.push('nico2');
		mouthArray.push('nico3');
		mouthArray.push('wa1');
		mouthArray.push('name1');
		mouthArray.push('name2');
		tachieHoppeName += '1';
		displayTachieHoppe = true;
		tachieSweatName += '1';
		displayTachieSweat = true;
	}
	else if(faceId === 24) {
		eyebrowsArray.push('nico1');
		eyebrowsArray.push('nico2');
		eyebrowsArray.push('hu1');
		eyebrowsArray.push('koma1');
		eyebrowsArray.push('koma2');
		eyesArray.push('heart1');
		eyesArray.push('ahe2');
		eyesArray.push('toji1');
		mouthArray.push('1');
		mouthArray.push('2');
		mouthArray.push('3');
		mouthArray.push('4');
		mouthArray.push('5');
		mouthArray.push('6');
		tachieHoppeName += '1';
		displayTachieHoppe = true;
		tachieSweatName += '1';
		displayTachieSweat = true;
	}
	
	if(eyebrowsArray.length > 0) {
		this.setTachieEyebrows('' + headType + '_' + eyebrowsArray[Math.randomInt(eyebrowsArray.length)]);
	}
	if(eyesArray.length > 0) {
		this.setTachieEyes('' + headType + '_' +  eyesArray[Math.randomInt(eyesArray.length)]);
	}
	if(mouthArray.length > 0) {
		this.setTachieMouth('' + headType + '_' +  mouthArray[Math.randomInt(mouthArray.length)]);
	}
	
	if(displayTachieHoppe) this.setTachieHoppe('' + headType + '_' +  tachieHoppeName);
	if(displayTachieSweat) this.setTachieSweat('' + headType + '_' +  tachieSweatName);
	
	if(this.tachieMouth === 'normal_name2') {
		this.setMaxTachieSemenMouthId(1);
		this.setTachieSemenMouthExtension('name2_');
	}
	else if(this.tachieMouth === 'normal_wa2') {
		this.setMaxTachieSemenMouthId(1);
		this.setTachieSemenMouthExtension('wa2_');
	}
	else {
		this.setMaxTachieSemenMouthId(0);
		this.resetTachieSemenMouthExtension();
	}
	
	if(this.tachieMouth.includes('fera'))
		this.setTachieStrayFaceExtension(ConfigManager.convertedTachieMouthName(this) + '_');
	else
		this.setTachieStrayFaceExtension('normal_');
	
	this.setAllowTachieEmoteUpdate(true);
};


/////////////////
// Emote Yeti Carry Pose
/////////////////
Game_Actor.prototype.emoteYetiCarryPose = function(setKissingOn, setKissingOff, karrynSkillUsage) {
	this.setAllowTachieEmoteUpdate(false);
	let justOrgasmed = this.didLastGetHitBySkillType(JUST_SKILLTYPE_KARRYN_ORGASM) || this.justOrgasmed();
	let isAroused = this.isAroused() || justOrgasmed;
	let analInserted = this.isBodySlotPenis(ANAL_ID);
	let karrynGotBukkaked = this.didLastGetHitBySkillType(JUST_SKILLTYPE_ENEMY_BUKKAKE);
	let justGotPussyCreampie = this.didLastGetHitBySkillType(JUST_SKILLTYPE_ENEMY_PUSSY_CREAMPIE);
	let justGotAnalCreampie = this.didLastGetHitBySkillType(JUST_SKILLTYPE_ENEMY_ANAL_CREAMPIE);
	let lastHitPussySex = this.didLastGetHitBySkillType(JUST_SKILLTYPE_ENEMY_PUSSY_SEX) || this.didLastGetHitBySkillType(JUST_SKILLTYPE_KARRYN_PUSSY_SEX);
	let lastHitAnalSex = this.didLastGetHitBySkillType(JUST_SKILLTYPE_ENEMY_ANAL_SEX) || this.didLastGetHitBySkillType(JUST_SKILLTYPE_KARRYN_ANAL_SEX) || this.didLastGetHitBySkillType(JUST_SKILLTYPE_ENEMY_TOY_PLAY_ANAL);
	
	let isKissing = setKissingOn || (!setKissingOff && this.tachieFrontA == 'tongue'); 
	let lightKickCountered = this.isStateAffected(STATE_LIGHT_KICK_COUNTERED_ID);
	
	let generalReactionScore = this.getReactionScore();
	let orgasmReactionScore = this.getOrgasmReactionScore();
	let pussyCreampieReactionScore = this.getPussyCreampieReactionScore();
	let analCreampieReactionScore = this.getAnalCreampieReactionScore();
	let bukkakeReactionScore = this.getBukkakeReactionScore();

	let generallvl3 = generalReactionScore >= VAR_DEF_RS_LV3_REQ;
	let generallvl2 = generalReactionScore >= VAR_DEF_RS_LV2_REQ;
	let orgasmlvl3 = orgasmReactionScore >= VAR_DEF_RS_LV3_REQ;
	let orgasmlvl2 = orgasmReactionScore >= VAR_DEF_RS_LV2_REQ;
	let pussyCreampielvl3 = pussyCreampieReactionScore  >= VAR_DEF_RS_LV3_REQ;
	let pussyCreampielvl2 = pussyCreampieReactionScore >= VAR_DEF_RS_LV2_REQ;
	let analCreampielvl3 = analCreampieReactionScore  >= VAR_DEF_RS_LV3_REQ;
	let analCreampielvl2 = analCreampieReactionScore >= VAR_DEF_RS_LV2_REQ;
	let bukkakelvl3 = bukkakeReactionScore  >= VAR_DEF_RS_LV3_REQ;
	let bukkakelvl2 = bukkakeReactionScore >= VAR_DEF_RS_LV2_REQ;
	
	if(isKissing) {
		this.setTachieFrontA('tongue');
	}
	else {
		this.resetTachieFrontA();
	}
	
	let faceArray = [];
	this.resetTachieHoppe();
	this.resetTachieSweat();
	
	if(isKissing) {
		if(justOrgasmed) {
			if(orgasmlvl3) 
				faceArray.push(18);
			else if(orgasmlvl2)
				faceArray.push(12);
			else
				faceArray.push(6);
		}
		else {
			if(generallvl3) 
				faceArray.push(17);
			else if(generallvl2) 
				faceArray.push(11);
			else
				faceArray.push(5);
		}
	}
	else {
		if(justOrgasmed) {
			if(orgasmlvl3) 
				faceArray.push(16);
			else if(orgasmlvl2)
				faceArray.push(10);
			else
				faceArray.push(4);
		}
		else if(karrynGotBukkaked) {
			if(bukkakelvl3) 
				faceArray.push(15);
			else if(bukkakelvl2) 
				faceArray.push(9);
			else
				faceArray.push(3);
		}
		else if(justGotPussyCreampie) {
			if(pussyCreampielvl3) 
				faceArray.push(15);
			else if(pussyCreampielvl2) 
				faceArray.push(9);
			else
				faceArray.push(3);
		}
		else if(justGotAnalCreampie) {
			if(analCreampielvl3) 
				faceArray.push(15);
			else if(analCreampielvl2) 
				faceArray.push(9);
			else
				faceArray.push(3);
		}
		else if(lastHitAnalSex) {
			if(generallvl3) 
				faceArray.push(14);
			else if(generallvl2) 
				faceArray.push(8);
			else
				faceArray.push(2);
		}
		else {
			if(generallvl3) 
				faceArray.push(13);
			else if(generallvl2) 
				faceArray.push(7);
			else
				faceArray.push(1);
		}
		
	}
	
	let faceId = faceArray[Math.randomInt(faceArray.length)];
	let eyebrowsArray = [];
	let eyesArray = [];
	let mouthArray = [];
	
	if(faceId === 1) {
		eyebrowsArray.push('oko1');
		eyebrowsArray.push('koma1');
		eyebrowsArray.push('koma2');
		eyesArray.push('sita1');
		eyesArray.push('sita2');
		mouthArray.push('ahe1');
		mouthArray.push('ahe2');
		mouthArray.push('ku1');
		mouthArray.push('ku2');
		this.setTachieHoppe(1);
		this.setTachieSweat(1);
	}
	else if(faceId === 2) {
		eyebrowsArray.push('oko1');
		eyebrowsArray.push('koma1');
		eyebrowsArray.push('koma2');
		eyesArray.push('sita1');
		eyesArray.push('sita2');
		mouthArray.push('ho1');
		mouthArray.push('ahe2');
		mouthArray.push('ku1');
		mouthArray.push('ku2');
		this.setTachieHoppe(1);
		this.setTachieSweat(1);
	}
	else if(faceId === 3) {
		eyebrowsArray.push('oko1');
		eyebrowsArray.push('koma1');
		eyebrowsArray.push('koma2');
		eyesArray.push('urusita1');
		eyesArray.push('sita2');
		mouthArray.push('ho1');
		mouthArray.push('ahe1');
		mouthArray.push('ahe2');
		mouthArray.push('ku1');
		mouthArray.push('ku2');
		this.setTachieHoppe(1);
		this.setTachieSweat(1);
	}
	else if(faceId === 4) {
		eyebrowsArray.push('oko1');
		eyebrowsArray.push('koma1');
		eyebrowsArray.push('koma2');
		eyesArray.push('urumae1');
		eyesArray.push('toji1');
		mouthArray.push('ho1');
		mouthArray.push('ahe1');
		mouthArray.push('ahe2');
		mouthArray.push('ku1');
		mouthArray.push('ku2');
		this.setTachieHoppe(1);
		this.setTachieSweat(1);
	}
	else if(faceId === 5) {
		eyebrowsArray.push('oko1');
		eyebrowsArray.push('koma1');
		eyebrowsArray.push('koma2');
		eyesArray.push('mae1');
		eyesArray.push('mae2');
		mouthArray.push('kiss1');
		this.setTachieHoppe(1);
		this.setTachieSweat(1);
	}
	else if(faceId === 6) {
		eyebrowsArray.push('oko1');
		eyebrowsArray.push('koma1');
		eyebrowsArray.push('koma2');
		eyesArray.push('mae2');
		eyesArray.push('toji1');
		mouthArray.push('kiss1');
		this.setTachieHoppe(1);
		this.setTachieSweat(1);
	}
	else if(faceId === 7) {
		eyebrowsArray.push('kiri1');
		eyebrowsArray.push('kiri2');
		eyesArray.push('sita1');
		eyesArray.push('sita2');
		mouthArray.push('ho1');
		mouthArray.push('ahe1');
		mouthArray.push('ho2');
		mouthArray.push('ku1');
		this.setTachieHoppe(1);
	}
	else if(faceId === 8) {
		eyebrowsArray.push('kiri1');
		eyebrowsArray.push('kiri2');
		eyebrowsArray.push('koma1');
		eyebrowsArray.push('koma2');
		eyesArray.push('sita1');
		eyesArray.push('sita2');
		mouthArray.push('ho1');
		mouthArray.push('ho2');
		mouthArray.push('ahe2');
		mouthArray.push('ku2');
		this.setTachieHoppe(1);
	}
	else if(faceId === 9) {
		eyebrowsArray.push('oko1');
		eyebrowsArray.push('kiri1');
		eyebrowsArray.push('kiri2');
		eyebrowsArray.push('koma1');
		eyebrowsArray.push('koma2');
		eyesArray.push('urusita1');
		eyesArray.push('urusita2');
		eyesArray.push('sita2');
		mouthArray.push('ho1');
		mouthArray.push('ku1');
		mouthArray.push('ahe1');
		mouthArray.push('ahe2');
		mouthArray.push('ku2');
		this.setTachieHoppe(1);
		this.setTachieSweat(1);
	}
	else if(faceId === 10) {
		eyebrowsArray.push('oko1');
		eyebrowsArray.push('kiri1');
		eyebrowsArray.push('kiri2');
		eyebrowsArray.push('koma1');
		eyebrowsArray.push('koma2');
		eyesArray.push('urumae1');
		eyesArray.push('urumae2');
		eyesArray.push('toji1');
		eyesArray.push('ahe1');
		mouthArray.push('ho1');
		mouthArray.push('ku1');
		mouthArray.push('ahe1');
		mouthArray.push('ahe3');
		mouthArray.push('ku2');
		this.setTachieHoppe(1);
		this.setTachieSweat(1);
	}
	else if(faceId === 11) {
		eyebrowsArray.push('kiri1');
		eyebrowsArray.push('kiri2');
		eyesArray.push('urumae2');
		eyesArray.push('mae1');
		eyesArray.push('mae2');
		mouthArray.push('kiss1');
		mouthArray.push('kiss2');
		this.setTachieHoppe(1);
	}
	else if(faceId === 12) {
		eyebrowsArray.push('oko1');
		eyebrowsArray.push('kiri1');
		eyebrowsArray.push('kiri2');
		eyebrowsArray.push('koma1');
		eyebrowsArray.push('koma2');
		eyesArray.push('urumae1');
		eyesArray.push('urumae2');
		eyesArray.push('toji1');
		mouthArray.push('kiss1');
		mouthArray.push('kiss2');
		this.setTachieHoppe(1);
		this.setTachieSweat(1);
	}
	else if(faceId === 13) {
		eyebrowsArray.push('kiri1');
		eyebrowsArray.push('kiri2');
		eyebrowsArray.push('nico1');
		eyebrowsArray.push('nico2');
		eyesArray.push('mae1');
		eyesArray.push('mae2');
		eyesArray.push('sita1');
		eyesArray.push('sita2');
		mouthArray.push('nico1');
		mouthArray.push('nico2');
		mouthArray.push('pero1');
		mouthArray.push('ho2');
		if(isAroused) this.setTachieHoppe(1);
	}
	else if(faceId === 14) {
		eyebrowsArray.push('kiri1');
		eyebrowsArray.push('kiri2');
		eyebrowsArray.push('nico1');
		eyebrowsArray.push('nico2');
		eyesArray.push('urusita1');
		eyesArray.push('urusita2');
		eyesArray.push('sita1');
		eyesArray.push('sita2');
		mouthArray.push('nico1');
		mouthArray.push('nico2');
		mouthArray.push('pero1');
		mouthArray.push('ahe3');
		mouthArray.push('ahe4');
		if(isAroused) this.setTachieHoppe(1);
	}
	else if(faceId === 15) {
		eyebrowsArray.push('kiri1');
		eyebrowsArray.push('kiri2');
		eyebrowsArray.push('nico1');
		eyebrowsArray.push('nico2');
		eyesArray.push('urusita1');
		eyesArray.push('urusita2');
		eyesArray.push('sita2');
		mouthArray.push('nico1');
		mouthArray.push('nico2');
		mouthArray.push('pero1');
		mouthArray.push('ahe3');
		mouthArray.push('ahe4');
		if(isAroused) this.setTachieHoppe(1);
		if(Math.randomInt(2) === 0) this.setTachieSweat(1);
	}
	else if(faceId === 16) {
		eyebrowsArray.push('koma1');
		eyebrowsArray.push('koma2');
		eyebrowsArray.push('oko1');
		eyebrowsArray.push('kiri1');
		eyebrowsArray.push('kiri2');
		eyebrowsArray.push('nico1');
		eyebrowsArray.push('nico2');
		eyesArray.push('heartsita1');
		eyesArray.push('heartsita2');
		eyesArray.push('heartahe1');
		eyesArray.push('toji1');
		mouthArray.push('nico1');
		mouthArray.push('nico2');
		mouthArray.push('pero1');
		mouthArray.push('ahe1');
		mouthArray.push('ahe2');
		mouthArray.push('ahe3');
		mouthArray.push('ahe4');
		this.setTachieHoppe(1);
		if(Math.randomInt(2) === 0) this.setTachieSweat(1);
	}
	else if(faceId === 17) {
		eyebrowsArray.push('kiri1');
		eyebrowsArray.push('kiri2');
		eyebrowsArray.push('nico1');
		eyebrowsArray.push('nico2');
		eyesArray.push('mae1');
		eyesArray.push('mae2');
		eyesArray.push('urumae1');
		eyesArray.push('urumae2');
		mouthArray.push('kiss1');
		mouthArray.push('kiss2');
		mouthArray.push('kiss3');
		if(isAroused) this.setTachieHoppe(1);
	}
	else if(faceId === 18) {
		eyebrowsArray.push('koma1');
		eyebrowsArray.push('koma2');
		eyebrowsArray.push('oko1');
		eyebrowsArray.push('kiri1');
		eyebrowsArray.push('kiri2');
		eyebrowsArray.push('nico1');
		eyebrowsArray.push('nico2');
		eyesArray.push('heartmae1');
		eyesArray.push('heartmae2');
		eyesArray.push('heartahe1');
		eyesArray.push('toji1');
		mouthArray.push('kiss1');
		mouthArray.push('kiss2');
		mouthArray.push('kiss3');
		this.setTachieHoppe(1);
		if(Math.randomInt(2) === 0) this.setTachieSweat(1);
	}
	
	
	if(eyebrowsArray.length > 0) {
		this.setTachieEyebrows(eyebrowsArray[Math.randomInt(eyebrowsArray.length)]);
	}
	if(eyesArray.length > 0) {
		this.setTachieEyes(eyesArray[Math.randomInt(eyesArray.length)]);
	}
	if(mouthArray.length > 0) {
		this.setTachieMouth(mouthArray[Math.randomInt(mouthArray.length)]);
	}
	
	if(this.tachieMouth.includes('kiss'))
		this.setTachieStrayFaceExtension(ConfigManager.convertedTachieMouthName(this) + '_');
	else
		this.resetTachieStrayFaceExtension();
	
	this.setAllowTachieEmoteUpdate(true);
};

/////////////////
// Emote Orc Paizuri Pose
/////////////////
Game_Actor.prototype.emoteOrcPaizuriPose = function() {
	this.setAllowTachieEmoteUpdate(false);
	let justOrgasmed = this.didLastGetHitBySkillType(JUST_SKILLTYPE_KARRYN_ORGASM) || this.justOrgasmed();
	let isAroused = this.isAroused() || justOrgasmed;
	let givingBJ = this.isBodySlotPenis(MOUTH_ID);
	
	let lastHitHandjob = this.didLastGetHitBySkillType(JUST_SKILLTYPE_ENEMY_HANDJOB) || this.didLastGetHitBySkillType(JUST_SKILLTYPE_KARRYN_HANDJOB);
	let lastHitBlowjob = this.didLastGetHitBySkillType(JUST_SKILLTYPE_KARRYN_BLOWJOB) || this.didLastGetHitBySkillType(JUST_SKILLTYPE_ENEMY_BLOWJOB);
	let lastHitTittyFuck = this.didLastGetHitBySkillType(JUST_SKILLTYPE_ENEMY_TITTYFUCK) || this.didLastGetHitBySkillType(JUST_SKILLTYPE_KARRYN_TITTYFUCK);
	let karrynSwallowingCum = this.didLastGetHitBySkillType(JUST_SKILLTYPE_ENEMY_CUM_SWALLOW);
	let karrynGotBukkaked = this.didLastGetHitBySkillType(JUST_SKILLTYPE_ENEMY_BUKKAKE);
	let karrynHasJustGokkundState = this.isStateAffected(STATE_JUST_GOKKUND_ID);
	
	let lastHandjobIsToRight = this._lastHandUsedForHandjob === RIGHT_HAND_ID;
	let lastHandjobIsToLeft = this._lastHandUsedForHandjob === LEFT_HAND_ID;
	
	let enemyCummingFromBoobs = $gameTroop._lastEnemySlotToCum === BOOBS_ID;
	let enemyCummingFromMouth = $gameTroop._lastEnemySlotToCum === MOUTH_ID;
	let enemyCummingFromRightHJ = $gameTroop._lastEnemySlotToCum === RIGHT_HAND_ID;
	let enemyCummingFromLeftHJ = $gameTroop._lastEnemySlotToCum === LEFT_HAND_ID;
	
	let generalReactionScore = this.getReactionScore();
	let orgasmReactionScore = this.getOrgasmReactionScore();
	let bukkakeReactionScore = this.getBukkakeReactionScore();
	let swallowReactionScore = this.getSwallowReactionScore();
	
	let generallvl3 = generalReactionScore >= VAR_DEF_RS_LV3_REQ;
	let generallvl2 = generalReactionScore >= VAR_DEF_RS_LV2_REQ;
	let orgasmlvl3 = orgasmReactionScore >= VAR_DEF_RS_LV3_REQ;
	let orgasmlvl2 = orgasmReactionScore >= VAR_DEF_RS_LV2_REQ;
	let bukkakelvl3 = bukkakeReactionScore  >= VAR_DEF_RS_LV3_REQ;
	let bukkakelvl2 = bukkakeReactionScore >= VAR_DEF_RS_LV2_REQ;
	let swallowlvl3 = swallowReactionScore  >= VAR_DEF_RS_LV3_REQ;
	let swallowlvl2 = swallowReactionScore >= VAR_DEF_RS_LV2_REQ;
	
	let faceArray = [];
	this.resetTachieHoppe();
	this.resetTachieSweat();
	this.setMaxTachieSemenMouthId(0);
	
	if(justOrgasmed) {
		if(orgasmlvl3) 
			faceArray.push(10);
		else if(orgasmlvl3) 
			faceArray.push(20);
		else
			faceArray.push(30);
	}
	else if(givingBJ && karrynSwallowingCum) {
		if(swallowlvl3) 
			faceArray.push(28);
		else if(swallowlvl2) 
			faceArray.push(18);
		else
			faceArray.push(8);
	}
	else if(karrynHasJustGokkundState) {
		if(swallowlvl3) 
			faceArray.push(29);
		else if(swallowlvl2) 
			faceArray.push(19);
		else
			faceArray.push(9);
	}
	else if(lastHitBlowjob && givingBJ) {
		if(generallvl3) 
			faceArray.push(27);
		else if(generallvl2) 
			faceArray.push(17);
		else
			faceArray.push(7);
	}
	else if(enemyCummingFromBoobs) {
		if(bukkakelvl3) 
			faceArray.push(22);
		else if(bukkakelvl2) 
			faceArray.push(12);
		else
			faceArray.push(2);
	}
	else if(karrynGotBukkaked) {
		if(enemyCummingFromRightHJ) {
			if(bukkakelvl3) 
				faceArray.push(24);
			else if(bukkakelvl2) 
				faceArray.push(14);
			else
				faceArray.push(4);
		}
		else if(enemyCummingFromLeftHJ) {
			if(bukkakelvl3) 
				faceArray.push(26);
			else if(bukkakelvl2) 
				faceArray.push(16);
			else
				faceArray.push(6);
		}
		else {
			if(bukkakelvl3) {
				faceArray.push(26);
				faceArray.push(24);
			}
			else if(bukkakelvl2) {
				faceArray.push(16);
				faceArray.push(14);
			}
			else {
				faceArray.push(6);
				faceArray.push(4);
			}
		}
	}
	else if(lastHitHandjob) {
		if(lastHandjobIsToRight) {
			if(generallvl3) 
				faceArray.push(23);
			else if(generallvl2) 
				faceArray.push(13);
			else
				faceArray.push(3);
		}
		else if(lastHandjobIsToLeft) {
			if(generallvl3) 
				faceArray.push(25);
			else if(generallvl2) 
				faceArray.push(15);
			else
				faceArray.push(5);
		}
	}
	else if(lastHitTittyFuck) {
		if(generallvl3) 
			faceArray.push(21);
		else if(generallvl2) 
			faceArray.push(11);
		else
			faceArray.push(1);
	}
	else {
		if(generallvl3) {
			faceArray.push(23);
			faceArray.push(25);
		}
		else if(generallvl2) {
			faceArray.push(13);
			faceArray.push(15);
		}
		else {
			faceArray.push(3);
			faceArray.push(5);
		}
	}
	
	let faceId = faceArray[Math.randomInt(faceArray.length)];
	let eyebrowsArray = [];
	let eyesArray = [];
	let mouthArray = [];
	
	if(faceId === 1) {
		eyebrowsArray.push('koma1');
		eyebrowsArray.push('koma2');
		eyebrowsArray.push('oko1');
		eyesArray.push('mae1');
		eyesArray.push('mae2');
		if(!givingBJ) {
			mouthArray.push('ku1');
			mouthArray.push('mu1');
			mouthArray.push('ho1');
		}
		else {
			mouthArray.push('fera1');
			mouthArray.push('fera2');
		}
		this.setTachieHoppe(1);
		this.setTachieSweat(1);
	}
	else if(faceId === 2) {
		eyebrowsArray.push('koma1');
		eyebrowsArray.push('koma2');
		eyebrowsArray.push('oko1');
		eyesArray.push('mae2');
		eyesArray.push('mae3');
		if(!givingBJ) {
			mouthArray.push('wa1');
			mouthArray.push('wa2');
			mouthArray.push('ho2');
		}
		else {
			mouthArray.push('fera1');
			mouthArray.push('fera2');
		}
		this.setTachieHoppe(1);
		this.setTachieSweat(1);
	}
	else if(faceId === 3) {
		eyebrowsArray.push('koma1');
		eyebrowsArray.push('koma2');
		eyebrowsArray.push('oko1');
		eyesArray.push('right1');
		eyesArray.push('right2');
		if(!givingBJ) {
			mouthArray.push('ku1');
			mouthArray.push('mu1');
			mouthArray.push('ho1');
		}
		else {
			mouthArray.push('fera1');
			mouthArray.push('fera2');
		}
		this.setTachieHoppe(1);
		this.setTachieSweat(1);
	}
	else if(faceId === 4) {
		eyebrowsArray.push('koma1');
		eyebrowsArray.push('koma2');
		eyebrowsArray.push('oko1');
		eyesArray.push('right2');
		eyesArray.push('right3');
		if(!givingBJ) {
			mouthArray.push('wa1');
			mouthArray.push('wa2');
			mouthArray.push('ho2');
		}
		else {
			mouthArray.push('fera1');
			mouthArray.push('fera2');
		}
		this.setTachieHoppe(1);
		this.setTachieSweat(1);
	}
	else if(faceId === 5) {
		eyebrowsArray.push('koma1');
		eyebrowsArray.push('koma2');
		eyebrowsArray.push('oko1');
		eyesArray.push('left1');
		eyesArray.push('left2');
		if(!givingBJ) {
			mouthArray.push('ku1');
			mouthArray.push('mu1');
			mouthArray.push('ho1');
		}
		else {
			mouthArray.push('fera1');
			mouthArray.push('fera2');
		}
		this.setTachieHoppe(1);
		this.setTachieSweat(1);
	}
	else if(faceId === 6) {
		eyebrowsArray.push('koma1');
		eyebrowsArray.push('koma2');
		eyebrowsArray.push('oko1');
		eyesArray.push('left2');
		eyesArray.push('left3');
		if(!givingBJ) {
			mouthArray.push('wa1');
			mouthArray.push('wa2');
			mouthArray.push('ho2');
		}
		else {
			mouthArray.push('fera1');
			mouthArray.push('fera2');
		}
		this.setTachieHoppe(1);
		this.setTachieSweat(1);
	}
	else if(faceId === 7) {
		eyebrowsArray.push('koma1');
		eyebrowsArray.push('koma2');
		eyebrowsArray.push('oko1');
		eyesArray.push('mae1');
		eyesArray.push('mae2');
		mouthArray.push('fera1');
		mouthArray.push('fera2');
		this.setTachieHoppe('fera_1');
		this.setTachieSweat(1);
	}
	else if(faceId === 8) {
		eyebrowsArray.push('koma1');
		eyebrowsArray.push('koma2');
		eyesArray.push('mae3');
		eyesArray.push('mae2');
		eyesArray.push('toji1');
		eyesArray.push('urumae2');
		mouthArray.push('fera1');
		this.setTachieHoppe('fera_1');
		this.setTachieSweat(1);
	}
	else if(faceId === 9) {
		eyebrowsArray.push('koma1');
		eyebrowsArray.push('koma2');
		eyesArray.push('mae3');
		eyesArray.push('mae2');
		eyesArray.push('urumae1');
		eyesArray.push('urumae2');
		if(!givingBJ) {
			mouthArray.push('cum1');
		}
		else {
			mouthArray.push('fera1');
		}
		this.setTachieHoppe(1);
		this.setTachieSweat(1);
	}
	else if(faceId === 10) {
		eyebrowsArray.push('koma1');
		eyebrowsArray.push('koma2');
		eyebrowsArray.push('oko1');
		eyesArray.push('mae3');
		eyesArray.push('toji1');
		eyesArray.push('urumae2');
		if(!givingBJ) {
			mouthArray.push('ho2');
			mouthArray.push('wa1');
			mouthArray.push('wa2');
			mouthArray.push('wa3');
			mouthArray.push('ahe1');
		}
		else {
			mouthArray.push('fera1');
		}
		this.setTachieHoppe(1);
		this.setTachieSweat(1);
	}
	else if(faceId === 11) {
		eyebrowsArray.push('kiri1');
		eyebrowsArray.push('kiri2');
		eyesArray.push('mae1');
		eyesArray.push('mae2');
		if(!givingBJ) {
			mouthArray.push('mu1');
			mouthArray.push('mu2');
			mouthArray.push('ku2');
			mouthArray.push('ho1');
		}
		else {
			mouthArray.push('fera2');
			mouthArray.push('fera3');
			mouthArray.push('fera4');
		}
		this.setTachieHoppe(1);
	}
	else if(faceId === 12) {
		eyebrowsArray.push('kiri1');
		eyebrowsArray.push('kiri2');
		eyebrowsArray.push('koma1');
		eyesArray.push('mae2');
		eyesArray.push('mae3');
		eyesArray.push('urumae2');
		if(!givingBJ) {
			mouthArray.push('ahe1');
			mouthArray.push('wa2');
			mouthArray.push('ho2');
		}
		else {
			mouthArray.push('fera2');
			mouthArray.push('fera3');
			mouthArray.push('fera4');
		}
		this.setTachieHoppe(1);
		this.setTachieSweat(1);
	}
	else if(faceId === 13) {
		eyebrowsArray.push('kiri1');
		eyebrowsArray.push('kiri2');
		eyesArray.push('right1');
		eyesArray.push('right2');
		if(!givingBJ) {
			mouthArray.push('mu1');
			mouthArray.push('mu2');
			mouthArray.push('ku2');
			mouthArray.push('ho1');
		}
		else {
			mouthArray.push('fera2');
			mouthArray.push('fera3');
			mouthArray.push('fera4');
		}
		this.setTachieHoppe(1);
	}
	else if(faceId === 14) {
		eyebrowsArray.push('kiri1');
		eyebrowsArray.push('kiri2');
		eyebrowsArray.push('koma1');
		eyesArray.push('right2');
		eyesArray.push('right3');
		eyesArray.push('ururight2');
		if(!givingBJ) {
			mouthArray.push('ahe1');
			mouthArray.push('wa2');
			mouthArray.push('ho2');
		}
		else {
			mouthArray.push('fera2');
			mouthArray.push('fera3');
			mouthArray.push('fera4');
		}
		this.setTachieHoppe(1);
		this.setTachieSweat(1);
	}
	else if(faceId === 15) {
		eyebrowsArray.push('kiri1');
		eyebrowsArray.push('kiri2');
		eyesArray.push('left1');
		eyesArray.push('left2');
		if(!givingBJ) {
			mouthArray.push('mu1');
			mouthArray.push('mu2');
			mouthArray.push('ku2');
			mouthArray.push('ho1');
		}
		else {
			mouthArray.push('fera2');
			mouthArray.push('fera3');
			mouthArray.push('fera4');
		}
		this.setTachieHoppe(1);
	}
	else if(faceId === 16) {
		eyebrowsArray.push('kiri1');
		eyebrowsArray.push('kiri2');
		eyebrowsArray.push('koma1');
		eyesArray.push('left2');
		eyesArray.push('left3');
		if(!givingBJ) {
			mouthArray.push('ahe1');
			mouthArray.push('wa2');
			mouthArray.push('ho2');
		}
		else {
			mouthArray.push('fera2');
			mouthArray.push('fera3');
			mouthArray.push('fera4');
		}
		this.setTachieHoppe(1);
		this.setTachieSweat(1);
	}
	else if(faceId === 17) {
		eyebrowsArray.push('kiri1');
		eyebrowsArray.push('kiri2');
		eyesArray.push('mae1');
		eyesArray.push('mae2');
		mouthArray.push('fera2');
		mouthArray.push('fera3');
		mouthArray.push('fera4');
		this.setTachieHoppe('fera_1');
	}
	else if(faceId === 18) {
		eyebrowsArray.push('kiri1');
		eyebrowsArray.push('kiri2');
		eyebrowsArray.push('koma1');
		eyesArray.push('mae2');
		eyesArray.push('mae3');
		eyesArray.push('urumae1');
		eyesArray.push('urumae2');
		mouthArray.push('fera3');
		mouthArray.push('fera4');
		this.setTachieHoppe('fera_1');
		this.setTachieSweat(1);
	}
	else if(faceId === 19) {
		eyebrowsArray.push('kiri1');
		eyebrowsArray.push('kiri2');
		eyebrowsArray.push('koma1');
		eyesArray.push('mae2');
		eyesArray.push('mae3');
		eyesArray.push('urumae2');
		if(!givingBJ) {
			mouthArray.push('cum2');
		}
		else {
			mouthArray.push('fera3');
			mouthArray.push('fera4');
		}
		this.setTachieHoppe(1);
		this.setTachieSweat(1);
	}
	else if(faceId === 20) {
		eyebrowsArray.push('kiri1');
		eyebrowsArray.push('kiri2');
		eyebrowsArray.push('koma1');
		eyebrowsArray.push('oko1');
		eyesArray.push('mae3');
		eyesArray.push('toji1');
		eyesArray.push('urumae1');
		eyesArray.push('urumae2');
		eyesArray.push('ahe1');
		if(!givingBJ) {
			mouthArray.push('ho2');
			mouthArray.push('wa1');
			mouthArray.push('wa2');
			mouthArray.push('wa3');
			mouthArray.push('ahe1');
		}
		else {
			mouthArray.push('fera3');
			mouthArray.push('fera4');
		}
		this.setTachieHoppe(1);
		this.setTachieSweat(1);
	}
	else if(faceId === 21) {
		eyebrowsArray.push('nico1');
		eyebrowsArray.push('nico2');
		eyesArray.push('mae1');
		eyesArray.push('mae2');
		eyesArray.push('urumae1');
		eyesArray.push('urumae2');
		if(!givingBJ) {
			mouthArray.push('nico1');
			mouthArray.push('nico2');
			mouthArray.push('ho1');
		}
		else {
			mouthArray.push('fera2');
			mouthArray.push('fera3');
			mouthArray.push('fera4');
			mouthArray.push('fera5');
			mouthArray.push('fera6');
		}
		if(isAroused) this.setTachieHoppe(1);
	}
	else if(faceId === 22) {
		eyebrowsArray.push('nico1');
		eyebrowsArray.push('nico2');
		eyebrowsArray.push('kiri2');
		eyesArray.push('mae2');
		eyesArray.push('mae3');
		eyesArray.push('urumae2');
		eyesArray.push('heartmae2');
		if(!givingBJ) {
			mouthArray.push('pero1');
			mouthArray.push('nico2');
			mouthArray.push('nico3');
			mouthArray.push('ho2');
			mouthArray.push('ahe1');
			mouthArray.push('wa3');
		}
		else {
			mouthArray.push('fera2');
			mouthArray.push('fera3');
			mouthArray.push('fera4');
			mouthArray.push('fera5');
			mouthArray.push('fera6');
		}
		this.setTachieHoppe(1);
		if(Math.randomInt(2) === 0) this.setTachieSweat(1);
	}
	else if(faceId === 23) {
		eyebrowsArray.push('nico1');
		eyebrowsArray.push('nico2');
		eyesArray.push('right1');
		eyesArray.push('right2');
		eyesArray.push('ururight2');
		if(!givingBJ) {
			mouthArray.push('pero1');
			mouthArray.push('nico1');
			mouthArray.push('nico2');
			mouthArray.push('nico3');
		}
		else {
			mouthArray.push('fera2');
			mouthArray.push('fera3');
			mouthArray.push('fera4');
			mouthArray.push('fera5');
			mouthArray.push('fera6');
		}
		if(isAroused) this.setTachieHoppe(1);
	}
	else if(faceId === 24) {
		eyebrowsArray.push('nico1');
		eyebrowsArray.push('nico2');
		eyebrowsArray.push('kiri1');
		eyebrowsArray.push('kiri2');
		eyesArray.push('right1');
		eyesArray.push('right2');
		eyesArray.push('right3');
		eyesArray.push('ururight1');
		eyesArray.push('ururight2');
		if(!givingBJ) {
			mouthArray.push('pero1');
			mouthArray.push('nico2');
			mouthArray.push('nico3');
			mouthArray.push('ho2');
			mouthArray.push('ahe1');
			mouthArray.push('wa3');
		}
		else {
			mouthArray.push('fera2');
			mouthArray.push('fera3');
			mouthArray.push('fera4');
			mouthArray.push('fera5');
			mouthArray.push('fera6');
		}
		this.setTachieHoppe(1);
		if(Math.randomInt(2) === 0) this.setTachieSweat(1);
	}
	else if(faceId === 25) {
		eyebrowsArray.push('nico1');
		eyebrowsArray.push('nico2');
		eyesArray.push('left1');
		eyesArray.push('left2');
		eyesArray.push('uruleft2');
		if(!givingBJ) {
			mouthArray.push('pero1');
			mouthArray.push('nico1');
			mouthArray.push('nico2');
			mouthArray.push('nico3');
		}
		else {
			mouthArray.push('fera2');
			mouthArray.push('fera3');
			mouthArray.push('fera4');
			mouthArray.push('fera5');
			mouthArray.push('fera6');
		}
		if(isAroused) this.setTachieHoppe(1);
	}
	else if(faceId === 26) {
		eyebrowsArray.push('nico1');
		eyebrowsArray.push('nico2');
		eyebrowsArray.push('kiri1');
		eyebrowsArray.push('kiri2');
		eyesArray.push('left1');
		eyesArray.push('left2');
		eyesArray.push('left3');
		eyesArray.push('uruleft1');
		eyesArray.push('uruleft2');
		if(!givingBJ) {
			mouthArray.push('pero1');
			mouthArray.push('nico2');
			mouthArray.push('nico3');
			mouthArray.push('ho2');
			mouthArray.push('ahe1');
			mouthArray.push('wa3');
		}
		else {
			mouthArray.push('fera2');
			mouthArray.push('fera3');
			mouthArray.push('fera4');
			mouthArray.push('fera5');
			mouthArray.push('fera6');
		}
		this.setTachieHoppe(1);
		if(Math.randomInt(2) === 0) this.setTachieSweat(1);
	}
	else if(faceId === 27) {
		eyebrowsArray.push('nico1');
		eyebrowsArray.push('nico2');
		eyebrowsArray.push('kiri2');
		eyesArray.push('mae1');
		eyesArray.push('mae2');
		eyesArray.push('urumae1');
		eyesArray.push('urumae2');
		eyesArray.push('heartmae1');
		mouthArray.push('fera2');
		mouthArray.push('fera3');
		mouthArray.push('fera4');
		mouthArray.push('fera5');
		mouthArray.push('fera6');
		if(isAroused) this.setTachieHoppe('fera_1');
	}
	else if(faceId === 28) {
		eyebrowsArray.push('nico1');
		eyebrowsArray.push('nico2');
		eyebrowsArray.push('koma2');
		eyebrowsArray.push('kiri2');
		eyesArray.push('mae2');
		eyesArray.push('mae3');
		eyesArray.push('urumae1');
		eyesArray.push('urumae2');
		eyesArray.push('heartmae2');
		mouthArray.push('fera4');
		mouthArray.push('fera5');
		mouthArray.push('fera6');
		if(isAroused) this.setTachieHoppe('fera_1');
		if(Math.randomInt(2) === 0) this.setTachieSweat(1);
	}
	else if(faceId === 29) {
		eyebrowsArray.push('nico1');
		eyebrowsArray.push('nico2');
		eyebrowsArray.push('koma2');
		eyebrowsArray.push('kiri2');
		eyesArray.push('mae1');
		eyesArray.push('mae2');
		eyesArray.push('urumae1');
		eyesArray.push('urumae2');
		eyesArray.push('heartmae1');
		eyesArray.push('heartmae2');
		if(!givingBJ) {
			mouthArray.push('cum3');
		}
		else {
			mouthArray.push('fera4');
			mouthArray.push('fera5');
			mouthArray.push('fera6');
		}
		this.setTachieHoppe(1);
		if(Math.randomInt(2) === 0) this.setTachieSweat(1);
	}
	else if(faceId === 30) {
		eyebrowsArray.push('nico1');
		eyebrowsArray.push('nico2');
		eyebrowsArray.push('koma1');
		eyebrowsArray.push('kiri1');
		eyebrowsArray.push('kiri2');
		eyebrowsArray.push('oko1');
		eyesArray.push('mae3');
		eyesArray.push('toji1');
		eyesArray.push('ahe1');
		eyesArray.push('urumae1');
		eyesArray.push('urumae2');
		eyesArray.push('heartmae1');
		eyesArray.push('heartmae2');
		eyesArray.push('heartahe1');
		if(!givingBJ) {
			mouthArray.push('ho2');
			mouthArray.push('ahe1');
			mouthArray.push('ahe2');
			mouthArray.push('wa1');
			mouthArray.push('wa2');
			mouthArray.push('wa3');
			mouthArray.push('nico3');
			mouthArray.push('pero1');
		}
		else {
			mouthArray.push('fera4');
			mouthArray.push('fera5');
			mouthArray.push('fera6');
		}
		this.setTachieHoppe(1);
		this.setTachieSweat(1);
	}
	
	
	if(eyebrowsArray.length > 0) {
		this.setTachieEyebrows(eyebrowsArray[Math.randomInt(eyebrowsArray.length)]);
	}
	if(eyesArray.length > 0) {
		this.setTachieEyes(eyesArray[Math.randomInt(eyesArray.length)]);
	}
	if(mouthArray.length > 0) {
		this.setTachieMouth(mouthArray[Math.randomInt(mouthArray.length)]);
	}

	if(this.tachieHoppe && this.tachieMouth.includes('fera'))
		this.setTachieHoppe('fera_1');
	
	if(this.tachieMouth.includes('fera'))
		this.setTachieStrayFaceExtension(ConfigManager.convertedTachieMouthName(this) + '_');
	else
		this.resetTachieStrayFaceExtension();
	
	this.setAllowTachieEmoteUpdate(true);
};

/////////////////
// Emote Yeti Paizuri Pose
/////////////////
Game_Actor.prototype.emoteYetiPaizuriPose = function() {
	this.setAllowTachieEmoteUpdate(false);
	let justOrgasmed = this.didLastGetHitBySkillType(JUST_SKILLTYPE_KARRYN_ORGASM) || this.justOrgasmed();
	let isAroused = this.isAroused() || justOrgasmed;
	let givingBJ = this.isBodySlotPenis(MOUTH_ID);

	let lastHitTittyFuck = this.didLastGetHitBySkillType(JUST_SKILLTYPE_ENEMY_TITTYFUCK) || this.didLastGetHitBySkillType(JUST_SKILLTYPE_KARRYN_TITTYFUCK);
	let lastHitSex = this.didLastGetHitBySkillType(JUST_SKILLTYPE_ENEMY_PUSSY_SEX) || this.didLastGetHitBySkillType(JUST_SKILLTYPE_ENEMY_ANAL_SEX) || this.didLastGetHitBySkillType(JUST_SKILLTYPE_KARRYN_PUSSY_SEX) || this.didLastGetHitBySkillType(JUST_SKILLTYPE_KARRYN_ANAL_SEX) || this.didLastGetHitBySkillType(JUST_SKILLTYPE_ENEMY_TOY_PLAY_PUSSY);
	
	let karrynSwallowingCum = this.didLastGetHitBySkillType(JUST_SKILLTYPE_ENEMY_CUM_SWALLOW);
	let karrynGotBukkaked = this.didLastGetHitBySkillType(JUST_SKILLTYPE_ENEMY_BUKKAKE);
	let justGotPussyCreampie = this.didLastGetHitBySkillType(JUST_SKILLTYPE_ENEMY_PUSSY_CREAMPIE);
	let justGotAnalCreampie = this.didLastGetHitBySkillType(JUST_SKILLTYPE_ENEMY_ANAL_CREAMPIE);
	let holeInserted = this.isBodySlotPenis(ANAL_ID) || this.isBodySlotPenis(PUSSY_ID) || this.isBodySlotToy(PUSSY_ID) || this.isBodySlotToy(ANAL_ID);
	let enemyCummingFromBoobs = $gameTroop._lastEnemySlotToCum === BOOBS_ID;
	
	let generalReactionScore = this.getReactionScore();
	let orgasmReactionScore = this.getOrgasmReactionScore();
	let bukkakeReactionScore = this.getBukkakeReactionScore();
	let swallowReactionScore = this.getSwallowReactionScore();
	let pussyCreampieReactionScore = this.getPussyCreampieReactionScore();
	let analCreampieReactionScore = this.getAnalCreampieReactionScore();
	
	let generallvl3 = generalReactionScore >= VAR_DEF_RS_LV3_REQ;
	let generallvl2 = generalReactionScore >= VAR_DEF_RS_LV2_REQ;
	let orgasmlvl3 = orgasmReactionScore >= VAR_DEF_RS_LV3_REQ;
	let orgasmlvl2 = orgasmReactionScore >= VAR_DEF_RS_LV2_REQ;
	let bukkakelvl3 = bukkakeReactionScore >= VAR_DEF_RS_LV3_REQ;
	let bukkakelvl2 = bukkakeReactionScore >= VAR_DEF_RS_LV2_REQ;
	let pussyCreampielvl3 = pussyCreampieReactionScore  >= VAR_DEF_RS_LV3_REQ;
	let pussyCreampielvl2 = pussyCreampieReactionScore >= VAR_DEF_RS_LV2_REQ;
	let analCreampielvl3 = analCreampieReactionScore  >= VAR_DEF_RS_LV3_REQ;
	let analCreampielvl2 = analCreampieReactionScore >= VAR_DEF_RS_LV2_REQ;
	let swallowlvl3 = swallowReactionScore  >= VAR_DEF_RS_LV3_REQ;
	let swallowlvl2 = swallowReactionScore >= VAR_DEF_RS_LV2_REQ;
	
	if(!this.isWearingGlovesAndHat()) {
		this.setTachieBody('naked_1');
	}
	else {
		this.setTachieBody('1');
	}
	
	let tachieHeadType = 'far';
	if(givingBJ) {
		this.setTachieHead('close');
		this.setTachieBackA('hair_' + this.getHairColorName() + '_close_1');
		this.setTachieHatExtension('close_');
		this.setTachieHairExtension('close_');
		this.setTachieSemenFaceExtension('close_');
		
		tachieHeadType = 'close';
	}
	else {
		this.setTachieHead('far');
		this.setTachieBackA('hair_' + this.getHairColorName() + '_far_1');
		this.setTachieHatExtension('far_');
		this.setTachieHairExtension('far_');
		this.setTachieSemenFaceExtension('far_');
	}
	
	this.setMaxTachieSemenFaceId(1);
	
	let faceArray = [];
	this.resetTachieHoppe();
	this.resetTachieSweat();
	
	if(givingBJ) {
		if(karrynSwallowingCum) {
			if(swallowlvl3) 
				faceArray.push(26);
			else if(swallowlvl2) 
				faceArray.push(17);
			else
				faceArray.push(8);
		}
		else if(justOrgasmed) {
			if(orgasmlvl3) 
				faceArray.push(27);
			else if(orgasmlvl2) 
				faceArray.push(18);
			else
				faceArray.push(9);
		}
		else if(lastHitSex) {
			if(generallvl3) 
				faceArray.push(25);
			else if(generallvl2) 
				faceArray.push(16);
			else
				faceArray.push(7);
		}
		else {
			if(generallvl3) 
				faceArray.push(24);
			else if(generallvl2) 
				faceArray.push(15);
			else
				faceArray.push(6);
		}
	}
	else if(karrynGotBukkaked) {
		if(enemyCummingFromBoobs) {
			if(bukkakelvl3) 
				faceArray.push(21);
			else if(bukkakelvl2) 
				faceArray.push(12);
			else
				faceArray.push(3);
		}
		else {
			if(bukkakelvl3) 
				faceArray.push(22);
			else if(bukkakelvl2) 
				faceArray.push(13);
			else
				faceArray.push(4);
		}
	}
	else if(justGotPussyCreampie) {
		if(pussyCreampielvl3) 
			faceArray.push(22);
		else if(pussyCreampielvl2) 
			faceArray.push(13);
		else
			faceArray.push(4);
	}
	else if(justGotAnalCreampie) {
		if(analCreampielvl3) 
			faceArray.push(22);
		else if(analCreampielvl2) 
			faceArray.push(13);
		else
			faceArray.push(4);
	}
	else if(justOrgasmed) {
		if(orgasmlvl3) 
			faceArray.push(23);
		else if(orgasmlvl2) 
			faceArray.push(14);
		else
			faceArray.push(5);
	}
	else if(lastHitSex) {
		if(generallvl3) 
			faceArray.push(20);
		else if(generallvl2) 
			faceArray.push(11);
		else
			faceArray.push(2);
	}
	else {
		if(generallvl3) 
			faceArray.push(19);
		else if(generallvl2) 
			faceArray.push(10);
		else
			faceArray.push(1);
	}
	
	let faceId = faceArray[Math.randomInt(faceArray.length)];
	let eyebrowsArray = [];
	let eyesArray = [];
	let mouthArray = [];
	let tachieHoppeName = false;
	let tachieSweatName = false;
	
	if(faceId === 1) {
		eyebrowsArray.push('oko1');
		eyebrowsArray.push('koma1');
		eyebrowsArray.push('koma2');
		eyesArray.push('mae1');
		eyesArray.push('mae2');
		mouthArray.push('ku1');
		mouthArray.push('ku2');
		mouthArray.push('ho1');
		mouthArray.push('ho2');
		tachieHoppeName = '1';
		tachieSweatName = '1';
	}
	else if(faceId === 2) {
		eyebrowsArray.push('oko1');
		eyebrowsArray.push('koma1');
		eyebrowsArray.push('koma2');
		eyesArray.push('sita1');
		eyesArray.push('sita2');
		mouthArray.push('ku1');
		mouthArray.push('ku2');
		mouthArray.push('ho1');
		mouthArray.push('ho2');
		mouthArray.push('ahe1');
		mouthArray.push('ahe2');
		tachieHoppeName = '1';
		tachieSweatName = '1';
	}
	else if(faceId === 3) {
		eyebrowsArray.push('oko1');
		eyebrowsArray.push('koma1');
		eyebrowsArray.push('koma2');
		eyesArray.push('mae2');
		mouthArray.push('ku1');
		mouthArray.push('ku2');
		mouthArray.push('ho2');
		mouthArray.push('ahe1');
		mouthArray.push('ahe2');
		tachieHoppeName = '1';
		tachieSweatName = '1';
	}
	else if(faceId === 4) {
		eyebrowsArray.push('oko1');
		eyebrowsArray.push('koma1');
		eyebrowsArray.push('koma2');
		eyesArray.push('sita1');
		eyesArray.push('urusita1');
		eyesArray.push('urusita2');
		mouthArray.push('ku1');
		mouthArray.push('ku2');
		mouthArray.push('ahe1');
		mouthArray.push('ahe2');
		tachieHoppeName = '1';
		tachieSweatName = '1';
	}
	else if(faceId === 5) {
		eyebrowsArray.push('oko1');
		eyebrowsArray.push('koma1');
		eyebrowsArray.push('koma2');
		eyesArray.push('toji1');
		eyesArray.push('mae2');
		eyesArray.push('urumae1');
		mouthArray.push('ho1');
		mouthArray.push('ho2');
		mouthArray.push('ahe1');
		mouthArray.push('ahe2');
		tachieHoppeName = '1';
		tachieSweatName = '1';
	}
	else if(faceId === 6) {
		eyebrowsArray.push('oko1');
		eyebrowsArray.push('koma1');
		eyebrowsArray.push('koma2');
		eyesArray.push('mae1');
		eyesArray.push('mae2');
		mouthArray.push('fera1');
		tachieHoppeName = '1';
		tachieSweatName = '1';
	}
	else if(faceId === 7) {
		eyebrowsArray.push('oko1');
		eyebrowsArray.push('koma1');
		eyebrowsArray.push('koma2');
		eyesArray.push('sita1');
		eyesArray.push('sita2');
		mouthArray.push('fera1');
		mouthArray.push('fera2');
		tachieHoppeName = '1';
		tachieSweatName = '1';
	}
	else if(faceId === 8) {
		eyebrowsArray.push('oko1');
		eyebrowsArray.push('koma1');
		eyebrowsArray.push('koma2');
		eyesArray.push('mae2');
		eyesArray.push('urumae1');
		eyesArray.push('urumae2');
		mouthArray.push('fera1');
		tachieHoppeName = '1';
		tachieSweatName = '1';
	}
	else if(faceId === 9) {
		eyebrowsArray.push('oko1');
		eyebrowsArray.push('koma1');
		eyebrowsArray.push('koma2');
		eyesArray.push('toji1');
		eyesArray.push('urumae1');
		eyesArray.push('mae2');
		mouthArray.push('fera1');
		mouthArray.push('fera2');
		tachieHoppeName = '1';
		tachieSweatName = '1';
	}
	else if(faceId === 10) {
		eyebrowsArray.push('kiri1');
		eyebrowsArray.push('kiri2');
		eyesArray.push('mae1');
		eyesArray.push('mae2');
		mouthArray.push('fu1');
		mouthArray.push('fu2');
		mouthArray.push('ho1');
		mouthArray.push('ho2');
		tachieHoppeName = '1';
	}
	else if(faceId === 11) {
		eyebrowsArray.push('kiri1');
		eyebrowsArray.push('kiri2');
		eyesArray.push('sita1');
		eyesArray.push('sita2');
		mouthArray.push('fu1');
		mouthArray.push('fu2');
		mouthArray.push('ho1');
		mouthArray.push('ho2');
		mouthArray.push('ahe1');
		mouthArray.push('ahe2');
		tachieHoppeName = '1';
	}
	else if(faceId === 12) {
		eyebrowsArray.push('kiri1');
		eyebrowsArray.push('kiri2');
		eyebrowsArray.push('koma1');
		eyebrowsArray.push('koma2');
		eyesArray.push('mae1');
		eyesArray.push('mae2');
		mouthArray.push('fu1');
		mouthArray.push('fu2');
		mouthArray.push('ho2');
		mouthArray.push('ahe1');
		mouthArray.push('ahe2');
		tachieHoppeName = '1';
		tachieSweatName = '1';
	}
	else if(faceId === 13) {
		eyebrowsArray.push('kiri1');
		eyebrowsArray.push('koma1');
		eyebrowsArray.push('koma2');
		eyesArray.push('sita2');
		eyesArray.push('urusita1');
		eyesArray.push('urusita2');
		mouthArray.push('fu1');
		mouthArray.push('ku1');
		mouthArray.push('ahe1');
		mouthArray.push('ahe2');
		tachieHoppeName = '1';
		tachieSweatName = '1';
	}
	else if(faceId === 14) {
		eyebrowsArray.push('kiri1');
		eyebrowsArray.push('koma1');
		eyebrowsArray.push('koma2');
		eyesArray.push('toji1');
		eyesArray.push('mae1');
		eyesArray.push('mae2');
		eyesArray.push('urumae1');
		eyesArray.push('urumae2');
		eyesArray.push('ahe1');
		mouthArray.push('fu1');
		mouthArray.push('ku2');
		mouthArray.push('ho2');
		mouthArray.push('ahe1');
		mouthArray.push('ahe2');
		tachieHoppeName = '1';
		tachieSweatName = '1';
	}
	else if(faceId === 15) {
		eyebrowsArray.push('kiri1');
		eyebrowsArray.push('kiri2');
		eyesArray.push('mae1');
		eyesArray.push('mae2');
		mouthArray.push('fera2');
		mouthArray.push('fera3');
		tachieHoppeName = '1';
	}
	else if(faceId === 16) {
		eyebrowsArray.push('kiri1');
		eyebrowsArray.push('kiri2');
		eyesArray.push('sita1');
		eyesArray.push('sita2');
		mouthArray.push('fera2');
		mouthArray.push('fera3');
		tachieHoppeName = '1';
	}
	else if(faceId === 17) {
		eyebrowsArray.push('kiri1');
		eyebrowsArray.push('kiri2');
		eyebrowsArray.push('koma1');
		eyebrowsArray.push('koma2');
		eyesArray.push('mae1');
		eyesArray.push('mae2');
		eyesArray.push('urumae1');
		eyesArray.push('urumae2');
		mouthArray.push('fera2');
		tachieHoppeName = '1';
		tachieSweatName = '1';
	}
	else if(faceId === 18) {
		eyebrowsArray.push('kiri1');
		eyebrowsArray.push('koma1');
		eyebrowsArray.push('koma2');
		eyesArray.push('toji1');
		eyesArray.push('mae2');
		eyesArray.push('urumae1');
		eyesArray.push('urumae2');
		eyesArray.push('ahe1');
		mouthArray.push('fera2');
		mouthArray.push('fera3');
		tachieHoppeName = '1';
		tachieSweatName = '1';
	}
	else if(faceId === 19) {
		eyebrowsArray.push('kiri1');
		eyebrowsArray.push('nico1');
		eyebrowsArray.push('nico2');
		eyesArray.push('mae1');
		eyesArray.push('mae2');
		mouthArray.push('fu1');
		mouthArray.push('fu2');
		mouthArray.push('ho1');
		mouthArray.push('nico1');
		if(isAroused) tachieHoppeName = '1';
	}
	else if(faceId === 20) {
		eyebrowsArray.push('kiri1');
		eyebrowsArray.push('kiri2');
		eyebrowsArray.push('nico1');
		eyebrowsArray.push('nico2');
		eyesArray.push('sita1');
		eyesArray.push('sita2');
		mouthArray.push('fu1');
		mouthArray.push('fu2');
		mouthArray.push('ho1');
		mouthArray.push('nico1');
		mouthArray.push('ahe2');
		mouthArray.push('ahe3');
		if(isAroused) tachieHoppeName = '1';
	}
	else if(faceId === 21) {
		eyebrowsArray.push('kiri2');
		eyebrowsArray.push('nico1');
		eyebrowsArray.push('nico2');
		eyesArray.push('mae1');
		eyesArray.push('mae2');
		eyesArray.push('urumae1');
		eyesArray.push('urumae2');
		eyesArray.push('heartmae1');
		eyesArray.push('heartmae2');
		mouthArray.push('fu1');
		mouthArray.push('fu2');
		mouthArray.push('ho1');
		mouthArray.push('nico1');
		if(isAroused) tachieHoppeName = '1';
		if(Math.random() < 0.5) tachieSweatName = '1';
	}
	else if(faceId === 22) {
		eyebrowsArray.push('kiri2');
		eyebrowsArray.push('nico1');
		eyebrowsArray.push('nico2');
		eyesArray.push('urusita1');
		eyesArray.push('urusita2');
		eyesArray.push('heartsita1');
		eyesArray.push('heartsita2');
		mouthArray.push('fu1');
		mouthArray.push('fu2');
		mouthArray.push('ho1');
		mouthArray.push('nico1');
		mouthArray.push('ahe2');
		mouthArray.push('ahe3');
		tachieHoppeName = '1';
		if(Math.random() < 0.5) tachieSweatName = '1';
	}
	else if(faceId === 23) {
		eyebrowsArray.push('kiri1');
		eyebrowsArray.push('nico1');
		eyebrowsArray.push('nico2');
		eyebrowsArray.push('koma1');
		eyebrowsArray.push('oko1');
		eyesArray.push('toji1');
		eyesArray.push('urumae1');
		eyesArray.push('urumae2');
		eyesArray.push('heartmae1');
		eyesArray.push('heartmae2');
		eyesArray.push('heartahe1');
		mouthArray.push('fu1');
		mouthArray.push('fu2');
		mouthArray.push('ho1');
		mouthArray.push('ho2');
		mouthArray.push('nico1');
		mouthArray.push('ahe1');
		mouthArray.push('ahe2');
		mouthArray.push('ahe3');
		tachieHoppeName = '1';
		if(Math.random() < 0.5) tachieSweatName = '1';
	}
	else if(faceId === 24) {
		eyebrowsArray.push('kiri2');
		eyebrowsArray.push('nico1');
		eyebrowsArray.push('nico2');
		eyesArray.push('mae1');
		eyesArray.push('mae2');
		eyesArray.push('urumae1');
		eyesArray.push('urumae2');
		eyesArray.push('ahe1');
		mouthArray.push('fera1');
		mouthArray.push('fera2');
		mouthArray.push('fera3');
		mouthArray.push('fera4');
		mouthArray.push('fera5');
		if(isAroused) tachieHoppeName = '1';
	}
	else if(faceId === 25) {
		eyebrowsArray.push('kiri1');
		eyebrowsArray.push('kiri2');
		eyebrowsArray.push('nico1');
		eyebrowsArray.push('nico2');
		eyesArray.push('sita1');
		eyesArray.push('sita2');
		eyesArray.push('urusita1');
		eyesArray.push('urusita2');
		mouthArray.push('fera4');
		mouthArray.push('fera5');
		if(isAroused) tachieHoppeName = '1';
	}
	else if(faceId === 26) {
		eyebrowsArray.push('kiri2');
		eyebrowsArray.push('nico1');
		eyebrowsArray.push('nico2');
		eyesArray.push('mae1');
		eyesArray.push('mae2');
		eyesArray.push('urumae1');
		eyesArray.push('urumae2');
		eyesArray.push('heartmae1');
		eyesArray.push('heartmae2');
		mouthArray.push('fera5');
		tachieHoppeName = '1';
		if(Math.random() < 0.5) tachieSweatName = '1';
	}
	else if(faceId === 27) {
		eyebrowsArray.push('kiri1');
		eyebrowsArray.push('nico1');
		eyebrowsArray.push('nico2');
		eyebrowsArray.push('koma1');
		eyebrowsArray.push('oko1');
		eyesArray.push('toji1');
		eyesArray.push('urumae1');
		eyesArray.push('urumae2');
		eyesArray.push('heartmae1');
		eyesArray.push('heartmae2');
		eyesArray.push('heartahe1');
		mouthArray.push('fera4');
		mouthArray.push('fera5');
		tachieHoppeName = '1';
		if(Math.random() < 0.5) tachieSweatName = '1';
	}
	
	
	if(eyebrowsArray.length > 0) {
		this.setTachieEyebrows('' + tachieHeadType + '_' + eyebrowsArray[Math.randomInt(eyebrowsArray.length)]);
	}
	if(eyesArray.length > 0) {
		this.setTachieEyes('' + tachieHeadType + '_' + eyesArray[Math.randomInt(eyesArray.length)]);
	}
	if(mouthArray.length > 0) {
		this.setTachieMouth('' + tachieHeadType + '_' + mouthArray[Math.randomInt(mouthArray.length)]);
	}
	
	if(tachieHoppeName) this.setTachieHoppe('' + tachieHeadType + '_' + tachieHoppeName);
	if(tachieSweatName) this.setTachieSweat('' + tachieHeadType + '_' + tachieSweatName);	

	if(this.tachieMouth.includes('fera'))
		this.setTachieStrayFaceExtension(ConfigManager.convertedTachieMouthName(this) + '_');
	else
		this.setTachieStrayFaceExtension('far_');

	this.setAllowTachieEmoteUpdate(true);
};

/////////////////
// Emote Laying Paizuri Pose
/////////////////
Game_Actor.prototype.emoteLayingPaizuriPose = function() {
	this.setAllowTachieEmoteUpdate(false);
	let justOrgasmed = this.didLastGetHitBySkillType(JUST_SKILLTYPE_KARRYN_ORGASM) || this.justOrgasmed();
	let isAroused = this.isAroused() || justOrgasmed;
	let justGotHarassed = this.didLastGetHitBySkillType(JUST_SKILLTYPE_ENEMY_TOY_PLAY) || this.didLastGetHitBySkillType(JUST_SKILLTYPE_PASSIVE_TOY) || this.didLastGetHitBySkillType(JUST_SKILLTYPE_ENEMY_PETTING);
	let givingBJ = this.isBodySlotPenis(MOUTH_ID);
	let givingRightHJ = this.isBodySlotPenis(RIGHT_HAND_ID);
	let lastHitHandjob = this.didLastGetHitBySkillType(JUST_SKILLTYPE_ENEMY_HANDJOB) || this.didLastGetHitBySkillType(JUST_SKILLTYPE_KARRYN_HANDJOB);
	let lastHitBlowjob = this.didLastGetHitBySkillType(JUST_SKILLTYPE_KARRYN_BLOWJOB) || this.didLastGetHitBySkillType(JUST_SKILLTYPE_ENEMY_BLOWJOB);
	let lastHitTittyFuck = this.didLastGetHitBySkillType(JUST_SKILLTYPE_ENEMY_TITTYFUCK) || this.didLastGetHitBySkillType(JUST_SKILLTYPE_KARRYN_TITTYFUCK);
	let lastHitSex = this.didLastGetHitBySkillType(JUST_SKILLTYPE_ENEMY_PUSSY_SEX) || this.didLastGetHitBySkillType(JUST_SKILLTYPE_ENEMY_ANAL_SEX) || this.didLastGetHitBySkillType(JUST_SKILLTYPE_KARRYN_PUSSY_SEX) || this.didLastGetHitBySkillType(JUST_SKILLTYPE_KARRYN_ANAL_SEX) || this.didLastGetHitBySkillType(JUST_SKILLTYPE_ENEMY_TOY_PLAY_PUSSY);
	let karrynSwallowingCum = this.didLastGetHitBySkillType(JUST_SKILLTYPE_ENEMY_CUM_SWALLOW);
	let karrynGotBukkaked = this.didLastGetHitBySkillType(JUST_SKILLTYPE_ENEMY_BUKKAKE);
	let justGotPussyCreampie = this.didLastGetHitBySkillType(JUST_SKILLTYPE_ENEMY_PUSSY_CREAMPIE);
	let justGotAnalCreampie = this.didLastGetHitBySkillType(JUST_SKILLTYPE_ENEMY_ANAL_CREAMPIE);
	let holeInserted = this.isBodySlotPenis(ANAL_ID) || this.isBodySlotPenis(PUSSY_ID) || this.isBodySlotToy(PUSSY_ID) || this.isBodySlotToy(ANAL_ID);
	let enemyCummingFromBoobs = $gameTroop._lastEnemySlotToCum === BOOBS_ID;
	let enemyCummingFromRightHJ = $gameTroop._lastEnemySlotToCum === RIGHT_HAND_ID;
	
	let generalReactionScore = this.getReactionScore();
	let orgasmReactionScore = this.getOrgasmReactionScore();
	let bukkakeReactionScore = this.getBukkakeReactionScore();
	let swallowReactionScore = this.getSwallowReactionScore();
	let pussyCreampieReactionScore = this.getPussyCreampieReactionScore();
	let analCreampieReactionScore = this.getAnalCreampieReactionScore();
	
	let generallvl3 = generalReactionScore >= VAR_DEF_RS_LV3_REQ;
	let generallvl2 = generalReactionScore >= VAR_DEF_RS_LV2_REQ;
	let orgasmlvl3 = orgasmReactionScore >= VAR_DEF_RS_LV3_REQ;
	let orgasmlvl2 = orgasmReactionScore >= VAR_DEF_RS_LV2_REQ;
	let bukkakelvl3 = bukkakeReactionScore >= VAR_DEF_RS_LV3_REQ;
	let bukkakelvl2 = bukkakeReactionScore >= VAR_DEF_RS_LV2_REQ;
	let pussyCreampielvl3 = pussyCreampieReactionScore  >= VAR_DEF_RS_LV3_REQ;
	let pussyCreampielvl2 = pussyCreampieReactionScore >= VAR_DEF_RS_LV2_REQ;
	let analCreampielvl3 = analCreampieReactionScore  >= VAR_DEF_RS_LV3_REQ;
	let analCreampielvl2 = analCreampieReactionScore >= VAR_DEF_RS_LV2_REQ;
	let swallowlvl3 = swallowReactionScore  >= VAR_DEF_RS_LV3_REQ;
	let swallowlvl2 = swallowReactionScore >= VAR_DEF_RS_LV2_REQ;
	
	let faceArray = [];
	this.resetTachieHoppe();
	this.resetTachieSweat();
	
	if(justOrgasmed) {
		if(givingBJ) {
			if(orgasmlvl3) 
				faceArray.push(30);
			else if(orgasmlvl2) 
				faceArray.push(20);
			else
				faceArray.push(10);
		}
		else {
			if(orgasmlvl3) 
				faceArray.push(27);
			else if(orgasmlvl2) 
				faceArray.push(17);
			else
				faceArray.push(7);
		}
	}
	else if(givingBJ && karrynSwallowingCum) {
		if(swallowlvl3) 
			faceArray.push(29);
		else if(swallowlvl2) 
			faceArray.push(19);
		else
			faceArray.push(9);
	}
	else if(lastHitBlowjob && givingBJ) {
		if(generallvl3) 
			faceArray.push(28);
		else if(generallvl2) 
			faceArray.push(18);
		else
			faceArray.push(8);
	}
	else if(justGotPussyCreampie || justGotAnalCreampie) {
		if(justGotPussyCreampie) {
			if(pussyCreampielvl3) 
				faceArray.push(26);
			else if(pussyCreampielvl2) 
				faceArray.push(16);
			else
				faceArray.push(6);
		}
		else if(justGotAnalCreampie) {
			if(analCreampielvl3) 
				faceArray.push(26);
			else if(analCreampielvl2) 
				faceArray.push(16);
			else
				faceArray.push(6);
		}
	}
	else if(karrynGotBukkaked) {
		if(enemyCummingFromRightHJ) {
			if(bukkakelvl3) 
				faceArray.push(24);
			else if(bukkakelvl2) 
				faceArray.push(14);
			else
				faceArray.push(4);
		}
		else if(enemyCummingFromBoobs) {
			if(bukkakelvl3) 
				faceArray.push(22);
			else if(bukkakelvl2) 
				faceArray.push(12);
			else
				faceArray.push(2);
		}
		else {
			if(givingBJ) {
				if(bukkakelvl3) 
				faceArray.push(29);
				else if(bukkakelvl2) 
					faceArray.push(19);
				else
					faceArray.push(9);
			}
			else {
				if(bukkakelvl3) 
					faceArray.push(22);
				else if(bukkakelvl2) 
					faceArray.push(12);
				else
					faceArray.push(2);
			}
		}
	}
	else if(lastHitHandjob) {
		if(generallvl3) 
			faceArray.push(23);
		else if(generallvl2) 
			faceArray.push(13);
		else
			faceArray.push(3);
	}
	else if(lastHitTittyFuck) {
		if(generallvl3) 
			faceArray.push(21);
		else if(generallvl2) 
			faceArray.push(11);
		else
			faceArray.push(1);
	}
	else if(lastHitSex) {
		if(generallvl3) 
			faceArray.push(25);
		else if(generallvl2) 
			faceArray.push(15);
		else
			faceArray.push(5);
	}
	else if(justGotHarassed) {
		if(givingBJ) {
			if(generallvl3) 
			faceArray.push(29);
			else if(generallvl2) 
				faceArray.push(19);
			else
				faceArray.push(9);
		}
		else {
			if(generallvl3) 
				faceArray.push(22);
			else if(generallvl2) 
				faceArray.push(12);
			else
				faceArray.push(2);
		}
	}
	else {
		if(generallvl3) {
			faceArray.push(21);
		}
		else if(generallvl2) {
			faceArray.push(11);
		}
		else {
			faceArray.push(1);
		}
	}
	
	let faceId = faceArray[Math.randomInt(faceArray.length)];
	let eyebrowsArray = [];
	let eyesArray = [];
	let mouthArray = [];
	
	
	if(faceId === 1) {
		eyebrowsArray.push('koma1');
		eyebrowsArray.push('koma2');
		eyebrowsArray.push('oko1');
		eyesArray.push('sita1');
		eyesArray.push('sita2');
		if(givingBJ) {
			mouthArray.push('fera1');
			mouthArray.push('fera2');
		}
		else {
			mouthArray.push('ku1');
			mouthArray.push('ho1');
			mouthArray.push('ho2');
			mouthArray.push('wa1');
		}
		this.setTachieHoppe(1);
		this.setTachieSweat(1);
	}
	else if(faceId === 2) {
		eyebrowsArray.push('koma1');
		eyebrowsArray.push('koma2');
		eyesArray.push('sita2');
		eyesArray.push('sita3');
		eyesArray.push('urusita2');
		if(givingBJ) {
			mouthArray.push('fera1');
			mouthArray.push('fera2');
		}
		else {
			mouthArray.push('ku1');
			mouthArray.push('ho1');
			mouthArray.push('ho2');
			mouthArray.push('wa1');
			mouthArray.push('wa2');
		}
		this.setTachieHoppe(1);
		this.setTachieSweat(1);
	}
	else if(faceId === 3) {
		eyebrowsArray.push('koma1');
		eyebrowsArray.push('koma2');
		eyebrowsArray.push('oko1');
		eyesArray.push('right1');
		eyesArray.push('right2');
		if(givingBJ) {
			mouthArray.push('fera1');
			mouthArray.push('fera2');
		}
		else {
			mouthArray.push('ku1');
			mouthArray.push('ku2');
			mouthArray.push('ho1');
			mouthArray.push('wa1');
		}
		this.setTachieHoppe(1);
		this.setTachieSweat(1);
	}
	else if(faceId === 4) {
		eyebrowsArray.push('koma1');
		eyebrowsArray.push('koma2');
		eyesArray.push('right2');
		eyesArray.push('right3');
		eyesArray.push('ururight2');
		if(givingBJ) {
			mouthArray.push('fera1');
			mouthArray.push('fera2');
		}
		else {
			mouthArray.push('ku1');
			mouthArray.push('ku2');
			mouthArray.push('ho1');
			mouthArray.push('ho2');
			mouthArray.push('wa1');
		}
		this.setTachieHoppe(1);
		this.setTachieSweat(1);
	}
	else if(faceId === 5) {
		eyebrowsArray.push('koma1');
		eyebrowsArray.push('koma2');
		eyebrowsArray.push('oko1');
		eyesArray.push('left1');
		eyesArray.push('left2');
		if(givingBJ) {
			mouthArray.push('fera1');
			mouthArray.push('fera2');
		}
		else {
			mouthArray.push('ku1');
			mouthArray.push('ho1');
			mouthArray.push('ho2');
			mouthArray.push('wa1');
			mouthArray.push('wa2');
		}
		this.setTachieHoppe(1);
		this.setTachieSweat(1);
	}
	else if(faceId === 6) {
		eyebrowsArray.push('koma1');
		eyebrowsArray.push('koma2');
		eyesArray.push('left2');
		eyesArray.push('left3');
		eyesArray.push('uruleft2');
		if(givingBJ) {
			mouthArray.push('fera1');
		}
		else {
			mouthArray.push('ku1');
			mouthArray.push('ho1');
			mouthArray.push('ho2');
			mouthArray.push('wa1');
			mouthArray.push('wa2');
		}
		this.setTachieHoppe(1);
		this.setTachieSweat(1);
	}
	else if(faceId === 7) {
		eyebrowsArray.push('koma1');
		eyebrowsArray.push('koma2');
		eyebrowsArray.push('oko1');
		eyesArray.push('sita3');
		eyesArray.push('toji1');
		eyesArray.push('urusita1');
		eyesArray.push('urusita2');
		mouthArray.push('ahe1');
		mouthArray.push('ahe2');
		mouthArray.push('ho1');
		mouthArray.push('ho2');
		mouthArray.push('wa1');
		mouthArray.push('wa2');
		this.setTachieHoppe(1);
		this.setTachieSweat(1);
	}
	else if(faceId === 8) {
		eyebrowsArray.push('koma1');
		eyebrowsArray.push('koma2');
		eyebrowsArray.push('oko1');
		eyesArray.push('sita1');
		eyesArray.push('sita2');
		mouthArray.push('fera1');
		mouthArray.push('fera2');
		this.setTachieHoppe(1);
		this.setTachieSweat(1);
	}
	else if(faceId === 9) {
		eyebrowsArray.push('koma1');
		eyebrowsArray.push('koma2');
		eyebrowsArray.push('oko1');
		eyesArray.push('sita2');
		eyesArray.push('sita3');
		eyesArray.push('urusita2');
		mouthArray.push('fera1');
		this.setTachieHoppe(1);
		this.setTachieSweat(1);
	}
	else if(faceId === 10) {
		eyebrowsArray.push('koma1');
		eyebrowsArray.push('koma2');
		eyebrowsArray.push('oko1');
		eyesArray.push('toji1');
		eyesArray.push('sita3');
		eyesArray.push('urusita2');
		mouthArray.push('fera1');
		mouthArray.push('fera2');
		this.setTachieHoppe(1);
		this.setTachieSweat(1);
	}
	else if(faceId === 11) {
		eyebrowsArray.push('kiri1');
		eyebrowsArray.push('kiri2');
		eyesArray.push('sita1');
		eyesArray.push('sita2');
		if(givingBJ) {
			mouthArray.push('fera2');
			mouthArray.push('fera3');
			mouthArray.push('fera4');
		}
		else {
			mouthArray.push('ku2');
			mouthArray.push('ho3');
			mouthArray.push('chu1');
			mouthArray.push('ahe3');
		}
		this.setTachieHoppe(1);
	}
	else if(faceId === 12) {
		eyebrowsArray.push('kiri1');
		eyebrowsArray.push('kiri2');
		eyebrowsArray.push('koma1');
		eyesArray.push('sita2');
		eyesArray.push('sita3');
		eyesArray.push('urusita2');
		if(givingBJ) {
			mouthArray.push('fera2');
			mouthArray.push('fera3');
			mouthArray.push('fera4');
		}
		else {
			mouthArray.push('ho1');
			mouthArray.push('ho2');
			mouthArray.push('ho3');
			mouthArray.push('wa2');
			mouthArray.push('ahe1');
		}
		this.setTachieHoppe(1);
		this.setTachieSweat(1);
	}
	else if(faceId === 13) {
		eyebrowsArray.push('kiri1');
		eyebrowsArray.push('kiri2');
		eyesArray.push('right1');
		eyesArray.push('right2');
		if(givingBJ) {
			mouthArray.push('fera2');
			mouthArray.push('fera3');
			mouthArray.push('fera4');
		}
		else {
			mouthArray.push('ku2');
			mouthArray.push('ho1');
			mouthArray.push('ho2');
			mouthArray.push('ho3');
			mouthArray.push('wa2');
			mouthArray.push('chu1');
			mouthArray.push('nico1');
		}
		this.setTachieHoppe(1);
	}
	else if(faceId === 14) {
		eyebrowsArray.push('kiri1');
		eyebrowsArray.push('kiri2');
		eyebrowsArray.push('koma2');
		eyesArray.push('right2');
		eyesArray.push('right3');
		eyesArray.push('ururight2');
		if(givingBJ) {
			mouthArray.push('fera2');
			mouthArray.push('fera3');
			mouthArray.push('fera4');
		}
		else {
			mouthArray.push('ho1');
			mouthArray.push('ho2');
			mouthArray.push('ho3');
			mouthArray.push('wa1');
			mouthArray.push('wa2');
			mouthArray.push('chu2');
		}
		this.setTachieHoppe(1);
		this.setTachieSweat(1);
	}
	else if(faceId === 15) {
		eyebrowsArray.push('kiri1');
		eyebrowsArray.push('kiri2');
		eyesArray.push('left1');
		eyesArray.push('left2');
		if(givingBJ) {
			mouthArray.push('fera2');
			mouthArray.push('fera3');
			mouthArray.push('fera4');
		}
		else {
			mouthArray.push('ku2');
			mouthArray.push('ho1');
			mouthArray.push('ho3');
			mouthArray.push('chu1');
		}
		this.setTachieHoppe(1);
	}
	else if(faceId === 16) {
		eyebrowsArray.push('kiri1');
		eyebrowsArray.push('kiri2');
		eyebrowsArray.push('koma2');
		eyesArray.push('left2');
		eyesArray.push('left3');
		eyesArray.push('uruleft2');
		if(givingBJ) {
			mouthArray.push('fera2');
			mouthArray.push('fera3');
		}
		else {
			mouthArray.push('ho1');
			mouthArray.push('ho2');
			mouthArray.push('wa1');
			mouthArray.push('wa2');
			mouthArray.push('ahe1');
			mouthArray.push('ahe2');
		}
		this.setTachieHoppe(1);
		this.setTachieSweat(1);
	}
	else if(faceId === 17) {
		eyebrowsArray.push('kiri1');
		eyebrowsArray.push('kiri2');
		eyebrowsArray.push('koma1');
		eyebrowsArray.push('oko1');
		eyesArray.push('sita3');
		eyesArray.push('toji1');
		eyesArray.push('urusita1');
		eyesArray.push('urusita2');
		eyesArray.push('ahe1');
		mouthArray.push('wa2');
		mouthArray.push('ahe1');
		mouthArray.push('ahe2');
		mouthArray.push('ahe3');
		mouthArray.push('ahe4');
		this.setTachieHoppe(1);
		this.setTachieSweat(1);
	}
	else if(faceId === 18) {
		eyebrowsArray.push('kiri1');
		eyebrowsArray.push('kiri2');
		eyesArray.push('sita1');
		eyesArray.push('sita2');
		mouthArray.push('fera2');
		mouthArray.push('fera3');
		mouthArray.push('fera4');
		this.setTachieHoppe(1);
	}
	else if(faceId === 19) {
		eyebrowsArray.push('kiri1');
		eyebrowsArray.push('kiri2');
		eyesArray.push('sita2');
		eyesArray.push('sita3');
		eyesArray.push('urusita2');
		mouthArray.push('fera2');
		mouthArray.push('fera3');
		this.setTachieHoppe(1);
		this.setTachieSweat(1);
	}
	else if(faceId === 20) {
		eyebrowsArray.push('kiri1');
		eyebrowsArray.push('kiri2');
		eyebrowsArray.push('koma1');
		eyebrowsArray.push('oko1');
		eyesArray.push('sita3');
		eyesArray.push('toji1');
		eyesArray.push('urusita1');
		eyesArray.push('urusita2');
		eyesArray.push('ahe1');
		mouthArray.push('fera2');
		mouthArray.push('fera3');
		mouthArray.push('fera4');
		this.setTachieHoppe(1);
		this.setTachieSweat(1);
	}
	else if(faceId === 21) {
		eyebrowsArray.push('nico1');
		eyebrowsArray.push('nico2');
		eyebrowsArray.push('kiri2');
		eyesArray.push('sita1');
		eyesArray.push('sita2');
		eyesArray.push('urusita1');
		eyesArray.push('urusita2');
		if(givingBJ) {
			mouthArray.push('fera2');
			mouthArray.push('fera3');
			mouthArray.push('fera4');
			mouthArray.push('fera5');
			mouthArray.push('fera6');
		}
		else {
			mouthArray.push('nico1');
			mouthArray.push('nico2');
			mouthArray.push('nico3');
			mouthArray.push('nico4');
			mouthArray.push('chu1');
			mouthArray.push('chu2');
		}
		if(isAroused) this.setTachieHoppe(1);
	}
	else if(faceId === 22) {
		eyebrowsArray.push('nico1');
		eyebrowsArray.push('nico2');
		eyebrowsArray.push('kiri2');
		eyebrowsArray.push('koma2');
		eyesArray.push('sita1');
		eyesArray.push('sita2');
		eyesArray.push('sita3');
		eyesArray.push('urusita1');
		eyesArray.push('urusita2');
		if(givingBJ) {
			mouthArray.push('fera2');
			mouthArray.push('fera3');
			mouthArray.push('fera4');
			mouthArray.push('fera5');
			mouthArray.push('fera6');
		}
		else {
			mouthArray.push('nico1');
			mouthArray.push('nico2');
			mouthArray.push('nico3');
			mouthArray.push('nico4');
			mouthArray.push('chu2');
			mouthArray.push('ahe5');
		}
		if(isAroused) this.setTachieHoppe(1);
	}
	else if(faceId === 23) {
		eyebrowsArray.push('nico1');
		eyebrowsArray.push('nico2');
		eyebrowsArray.push('kiri1');
		eyebrowsArray.push('kiri2');
		eyesArray.push('right1');
		eyesArray.push('right2');
		eyesArray.push('ururight1');
		eyesArray.push('ururight2');
		if(givingBJ) {
			mouthArray.push('fera2');
			mouthArray.push('fera3');
			mouthArray.push('fera4');
			mouthArray.push('fera5');
			mouthArray.push('fera6');
		}
		else {
			mouthArray.push('nico1');
			mouthArray.push('nico2');
			mouthArray.push('nico3');
			mouthArray.push('nico4');
			mouthArray.push('chu1');
			mouthArray.push('chu2');
		}
		if(isAroused) this.setTachieHoppe(1);
	}
	else if(faceId === 24) {
		eyebrowsArray.push('nico1');
		eyebrowsArray.push('nico2');
		eyebrowsArray.push('kiri2');
		eyesArray.push('right1');
		eyesArray.push('right2');
		eyesArray.push('right3');
		eyesArray.push('ururight1');
		eyesArray.push('ururight2');
		if(givingBJ) {
			mouthArray.push('fera2');
			mouthArray.push('fera3');
			mouthArray.push('fera4');
			mouthArray.push('fera5');
			mouthArray.push('fera6');
		}
		else {
			mouthArray.push('nico1');
			mouthArray.push('nico2');
			mouthArray.push('nico3');
			mouthArray.push('nico4');
			mouthArray.push('ho2');
			mouthArray.push('ahe1');
		}
		if(isAroused) this.setTachieHoppe(1);
		if(Math.randomInt(2) === 0) this.setTachieSweat(1);
	}
	else if(faceId === 25) {
		eyebrowsArray.push('nico1');
		eyebrowsArray.push('nico2');
		eyebrowsArray.push('kiri2');
		eyesArray.push('left1');
		eyesArray.push('left2');
		eyesArray.push('uruleft1');
		eyesArray.push('uruleft2');
		if(givingBJ) {
			mouthArray.push('fera2');
			mouthArray.push('fera3');
			mouthArray.push('fera4');
			mouthArray.push('fera5');
			mouthArray.push('fera6');
		}
		else {
			mouthArray.push('nico1');
			mouthArray.push('nico2');
			mouthArray.push('nico3');
			mouthArray.push('nico4');
			mouthArray.push('chu1');
			mouthArray.push('chu2');
		}
		if(isAroused) this.setTachieHoppe(1);
	}
	else if(faceId === 26) {
		eyebrowsArray.push('nico1');
		eyebrowsArray.push('nico2');
		eyebrowsArray.push('kiri2');
		eyesArray.push('left2');
		eyesArray.push('left3');
		eyesArray.push('uruleft1');
		eyesArray.push('uruleft2');
		if(givingBJ) {
			mouthArray.push('fera4');
			mouthArray.push('fera5');
			mouthArray.push('fera6');
		}
		else {
			mouthArray.push('nico2');
			mouthArray.push('nico3');
			mouthArray.push('nico4');
			mouthArray.push('ahe2');
			mouthArray.push('ahe3');
			mouthArray.push('ahe5');
		}
		if(isAroused) this.setTachieHoppe(1);
		if(Math.randomInt(2) === 0) this.setTachieSweat(1);
	}
	else if(faceId === 27) {
		eyebrowsArray.push('nico1');
		eyebrowsArray.push('nico2');
		eyebrowsArray.push('kiri1');
		eyebrowsArray.push('koma2');
		eyebrowsArray.push('oko1');
		eyesArray.push('sita3');
		eyesArray.push('toji1');
		eyesArray.push('ahe1');
		eyesArray.push('urusita1');
		eyesArray.push('urusita2');
		eyesArray.push('heartsita1');
		eyesArray.push('heartsita2');
		eyesArray.push('heartahe1');
		mouthArray.push('nico2');
		mouthArray.push('nico4');
		mouthArray.push('ahe2');
		mouthArray.push('ahe3');
		mouthArray.push('ahe4');
		mouthArray.push('ahe5');
		mouthArray.push('ahe6');
		if(isAroused) this.setTachieHoppe(1);
		this.setTachieSweat(1);
	}
	else if(faceId === 28) {
		eyebrowsArray.push('nico1');
		eyebrowsArray.push('nico2');
		eyebrowsArray.push('kiri2');
		eyesArray.push('sita1');
		eyesArray.push('sita2');
		eyesArray.push('urusita1');
		eyesArray.push('urusita2');
		mouthArray.push('fera2');
		mouthArray.push('fera3');
		mouthArray.push('fera4');
		mouthArray.push('fera5');
		mouthArray.push('fera6');
		if(isAroused) this.setTachieHoppe(1);
	}
	else if(faceId === 29) {
		eyebrowsArray.push('nico1');
		eyebrowsArray.push('nico2');
		eyebrowsArray.push('kiri2');
		eyesArray.push('sita1');
		eyesArray.push('sita2');
		eyesArray.push('sita3');
		eyesArray.push('urusita1');
		eyesArray.push('urusita2');
		mouthArray.push('fera4');
		mouthArray.push('fera5');
		mouthArray.push('fera6');
		if(isAroused) this.setTachieHoppe(1);
		if(Math.randomInt(2) === 0) this.setTachieSweat(1);
	}
	else if(faceId === 30) {
		eyebrowsArray.push('nico1');
		eyebrowsArray.push('nico2');
		eyebrowsArray.push('kiri1');
		eyebrowsArray.push('kiri2');
		eyebrowsArray.push('koma1');
		eyebrowsArray.push('oko1');
		eyesArray.push('sita3');
		eyesArray.push('toji1');
		eyesArray.push('ahe1');
		eyesArray.push('urusita1');
		eyesArray.push('urusita2');
		eyesArray.push('heartsita1');
		eyesArray.push('heartsita2');
		eyesArray.push('heartahe1');
		mouthArray.push('fera2');
		mouthArray.push('fera3');
		mouthArray.push('fera4');
		mouthArray.push('fera5');
		mouthArray.push('fera6');
		if(isAroused) this.setTachieHoppe(1);
		this.setTachieSweat(1);
	}
	
	
	if(eyebrowsArray.length > 0) {
		this.setTachieEyebrows(eyebrowsArray[Math.randomInt(eyebrowsArray.length)]);
	}
	if(eyesArray.length > 0) {
		this.setTachieEyes(eyesArray[Math.randomInt(eyesArray.length)]);
	}
	if(mouthArray.length > 0) {
		this.setTachieMouth(mouthArray[Math.randomInt(mouthArray.length)]);
	}
	
	if(this.tachieHoppe && this.tachieMouth.includes('fera'))
		this.setTachieHoppe('fera_1');
	
	if(this.tachieMouth.includes('fera'))
		this.setTachieStrayFaceExtension(ConfigManager.convertedTachieMouthName(this) + '_');
	else
		this.resetTachieStrayFaceExtension();
	
	this.setAllowTachieEmoteUpdate(true);
};

/////////////////
// Emote Footjob Pose
/////////////////
Game_Actor.prototype.emoteFootjobPose = function() {
	this.setAllowTachieEmoteUpdate(false);
	let justOrgasmed = this.didLastGetHitBySkillType(JUST_SKILLTYPE_KARRYN_ORGASM) || this.justOrgasmed();
	let isAroused = this.isAroused() || justOrgasmed;
	let givingBJ = this.isBodySlotPenis(MOUTH_ID);
	let givingHJ = this.isBodySlotPenis(LEFT_HAND_ID);
	let lastHitBlowjob = this.didLastGetHitBySkillType(JUST_SKILLTYPE_KARRYN_BLOWJOB) || this.didLastGetHitBySkillType(JUST_SKILLTYPE_ENEMY_BLOWJOB);
	let lastHitHandjob = this.didLastGetHitBySkillType(JUST_SKILLTYPE_KARRYN_HANDJOB) || this.didLastGetHitBySkillType(JUST_SKILLTYPE_ENEMY_HANDJOB);
	let lastHitFootjob = this.didLastGetHitBySkillType(JUST_SKILLTYPE_KARRYN_SADISM) || this.didLastGetHitBySkillType(JUST_SKILLTYPE_ENEMY_MASOCHISM);
	let justGotHarassed = this.didLastGetHitBySkillType(JUST_SKILLTYPE_ENEMY_TOY_PLAY) || this.didLastGetHitBySkillType(JUST_SKILLTYPE_PASSIVE_TOY) || this.didLastGetHitBySkillType(JUST_SKILLTYPE_ENEMY_PETTING) || this.didLastGetHitBySkillType(JUST_SKILLTYPE_ENEMY_KISS);
	let karrynSwallowingCum = this.didLastGetHitBySkillType(JUST_SKILLTYPE_ENEMY_CUM_SWALLOW);
	let karrynGotBukkaked = this.didLastGetHitBySkillType(JUST_SKILLTYPE_ENEMY_BUKKAKE);
	let enemyCummingFromLeftHJ = $gameTroop._lastEnemySlotToCum === LEFT_HAND_ID;
	let enemyCummingFromFeet = $gameTroop._lastEnemySlotToCum === FEET_ID;
	
	let generalReactionScore = this.getReactionScore();
	let orgasmReactionScore = this.getOrgasmReactionScore();
	let bukkakeReactionScore = this.getBukkakeReactionScore();
	let swallowReactionScore = this.getSwallowReactionScore();
	let generallvl3 = generalReactionScore >= VAR_DEF_RS_LV3_REQ;
	let generallvl2 = generalReactionScore >= VAR_DEF_RS_LV2_REQ;
	let orgasmlvl3 = orgasmReactionScore >= VAR_DEF_RS_LV3_REQ;
	let orgasmlvl2 = orgasmReactionScore >= VAR_DEF_RS_LV2_REQ;
	let bukkakelvl3 = bukkakeReactionScore >= VAR_DEF_RS_LV3_REQ;
	let bukkakelvl2 = bukkakeReactionScore >= VAR_DEF_RS_LV2_REQ;
	let swallowlvl3 = swallowReactionScore  >= VAR_DEF_RS_LV3_REQ;
	let swallowlvl2 = swallowReactionScore >= VAR_DEF_RS_LV2_REQ;
	
	if(givingBJ) {
		this.setTachieHead('far_1');
		this.setTachieHatExtension('far_');
		this.setTachieHairExtension('far_');
		this.setTachieSemenFaceExtension('far_');
	}
	else {
		this.setTachieHead('close_1');
		this.setTachieHatExtension('close_');
		this.setTachieHairExtension('close_');
		this.setTachieSemenFaceExtension('close_');
	}
	
	if(!this.isWearingGlovesAndHat()) {
		if(givingHJ)
			this.setTachieLeftArm('hj_naked');
		else
			this.setTachieLeftArm('normal_naked');
		
		this.setTachieRightArm('normal_naked');
		this.setTachieBody('naked_1');
	}
	else {
		if(givingHJ)
			this.setTachieLeftArm('hj');
		else
			this.setTachieLeftArm('normal');
		
		this.setTachieRightArm('normal');
		this.setTachieBody('1');
		this.setTachieTie('1');
	}
	
	let faceArray = [];
	this.resetTachieHoppe();
	this.resetTachieSweat();
	
	
	if(givingBJ) {
		if(karrynSwallowingCum) {
			if(swallowlvl3) 
				faceArray.push(27);
			else if(swallowlvl2) 
				faceArray.push(17);
			else
				faceArray.push(7);
		}
		else if(justOrgasmed) {
			if(orgasmlvl3) 
				faceArray.push(30);
			else if(orgasmlvl2) 
				faceArray.push(20);
			else
				faceArray.push(10);
		}
		else if(enemyCummingFromLeftHJ || enemyCummingFromFeet || karrynGotBukkaked) {
			if(bukkakelvl3) 
				faceArray.push(29);
			else if(orgasmlvl2) 
				faceArray.push(19);
			else
				faceArray.push(9);
		}
		else if(lastHitBlowjob) {
			if(generallvl3) 
				faceArray.push(26);
			else if(generallvl2) 
				faceArray.push(16);
			else
				faceArray.push(6);
		}
		else if(givingHJ || justGotHarassed) {
			if(generallvl3) 
				faceArray.push(28);
			else if(generallvl2) 
				faceArray.push(18);
			else
				faceArray.push(8);
		}
		else {
			if(generallvl3) 
				faceArray.push(26);
			else if(generallvl2) 
				faceArray.push(16);
			else
				faceArray.push(6);
		}
	}
	//no bj
	else {
		if(justOrgasmed) {
			if(orgasmlvl3) 
				faceArray.push(25);
			else if(orgasmlvl2) 
				faceArray.push(15);
			else
				faceArray.push(5);
		}
		else if(enemyCummingFromLeftHJ) {
			if(bukkakelvl3) 
				faceArray.push(24);
			else if(orgasmlvl2) 
				faceArray.push(14);
			else
				faceArray.push(4);
		}
		else if(enemyCummingFromFeet || karrynGotBukkaked) {
			if(bukkakelvl3) 
				faceArray.push(22);
			else if(orgasmlvl2) 
				faceArray.push(12);
			else
				faceArray.push(2);
		}
		else if(lastHitHandjob) {
			if(generallvl3) 
				faceArray.push(23);
			else if(generallvl2) 
				faceArray.push(13);
			else
				faceArray.push(3);
		}
		else {
			if(generallvl3) 
				faceArray.push(21);
			else if(generallvl2) 
				faceArray.push(11);
			else
				faceArray.push(1);
		}
	}
	
	let faceId = faceArray[Math.randomInt(faceArray.length)];
	let eyebrowsArray = [];
	let eyesArray = [];
	let mouthArray = [];
	
	let tachieHeadName = 'close_';
	if(this.tachieHead.includes('far')) tachieHeadName = 'far_';
	let tachieHoppeName = '' + tachieHeadName;
	let tachieSweatName = '' + tachieHeadName;
	let displayTachieHoppe = false;
	let displayTachieSweat = false;
	
	if(faceId === 1) {
		eyebrowsArray.push('koma1');
		eyebrowsArray.push('koma2');
		eyebrowsArray.push('oko1');
		eyesArray.push('mae1');
		eyesArray.push('mae2');
		mouthArray.push('ku1');
		mouthArray.push('mu1');
		mouthArray.push('mu2');
		tachieHoppeName += '1';
		displayTachieHoppe = true;
		tachieSweatName += '1';
		displayTachieSweat = true;
	}
	else if(faceId === 2) {
		eyebrowsArray.push('koma1');
		eyebrowsArray.push('koma2');
		eyesArray.push('mae2');
		eyesArray.push('mae3');
		mouthArray.push('ku1');
		mouthArray.push('mu1');
		mouthArray.push('ho1');
		mouthArray.push('wa1');
		tachieHoppeName += '1';
		displayTachieHoppe = true;
		tachieSweatName += '1';
		displayTachieSweat = true;
	}
	else if(faceId === 3) {
		eyebrowsArray.push('oko1');
		eyebrowsArray.push('koma1');
		eyebrowsArray.push('koma2');
		eyesArray.push('yoko1');
		eyesArray.push('yoko2');
		mouthArray.push('ku1');
		mouthArray.push('mu1');
		mouthArray.push('mu2');
		tachieHoppeName += '1';
		displayTachieHoppe = true;
		tachieSweatName += '1';
		displayTachieSweat = true;
	}
	else if(faceId === 4) {
		eyebrowsArray.push('koma1');
		eyebrowsArray.push('koma2');
		eyesArray.push('yoko3');
		eyesArray.push('uruyoko2');
		eyesArray.push('toji1');
		mouthArray.push('ku1');
		mouthArray.push('mu1');
		mouthArray.push('ho1');
		mouthArray.push('wa1');
		tachieHoppeName += '1';
		displayTachieHoppe = true;
		tachieSweatName += '1';
		displayTachieSweat = true;
	}
	else if(faceId === 5) {
		eyebrowsArray.push('oko1');
		eyebrowsArray.push('koma1');
		eyebrowsArray.push('koma2');
		eyesArray.push('mae3');
		eyesArray.push('urumae2');
		eyesArray.push('toji1');
		mouthArray.push('ku1');
		mouthArray.push('ho1');
		mouthArray.push('wa1');
		mouthArray.push('wa2');
		mouthArray.push('wa3');
		tachieHoppeName += '1';
		displayTachieHoppe = true;
		tachieSweatName += '1';
		displayTachieSweat = true;
	}
	else if(faceId === 6) {
		eyebrowsArray.push('oko1');
		eyebrowsArray.push('koma1');
		eyebrowsArray.push('koma2');
		eyesArray.push('mae1');
		eyesArray.push('mae2');
		mouthArray.push('fera1');
		mouthArray.push('fera2');
		tachieHoppeName += '1';
		displayTachieHoppe = true;
		tachieSweatName += '1';
		displayTachieSweat = true;
	}
	else if(faceId === 7) {
		eyebrowsArray.push('koma1');
		eyebrowsArray.push('koma2');
		eyesArray.push('mae2');
		eyesArray.push('mae3');
		eyesArray.push('urumae2');
		eyesArray.push('urumae1');
		mouthArray.push('fera1');
		tachieHoppeName += '1';
		displayTachieHoppe = true;
		tachieSweatName += '1';
		displayTachieSweat = true;
	}
	else if(faceId === 8) {
		eyebrowsArray.push('oko1');
		eyebrowsArray.push('koma1');
		eyebrowsArray.push('koma2');
		eyesArray.push('yoko1');
		eyesArray.push('yoko2');
		mouthArray.push('fera1');
		mouthArray.push('fera2');
		tachieHoppeName += '1';
		displayTachieHoppe = true;
		tachieSweatName += '1';
		displayTachieSweat = true;
	}
	else if(faceId === 9) {
		eyebrowsArray.push('koma1');
		eyebrowsArray.push('koma2');
		eyesArray.push('yoko3');
		eyesArray.push('uruyoko2');
		eyesArray.push('toji1');
		mouthArray.push('fera1');
		tachieHoppeName += '1';
		displayTachieHoppe = true;
		tachieSweatName += '1';
		displayTachieSweat = true;
	}
	else if(faceId === 10) {
		eyebrowsArray.push('oko1');
		eyebrowsArray.push('koma1');
		eyebrowsArray.push('koma2');
		eyesArray.push('mae3');
		eyesArray.push('urumae2');
		eyesArray.push('toji1');
		mouthArray.push('fera1');
		mouthArray.push('fera2');
		tachieHoppeName += '1';
		displayTachieHoppe = true;
		tachieSweatName += '1';
		displayTachieSweat = true;
	}
	else if(faceId === 11) {
		eyebrowsArray.push('kiri1');
		eyebrowsArray.push('kiri2');
		eyesArray.push('mae1');
		eyesArray.push('mae2');
		eyesArray.push('urumae1');
		mouthArray.push('mu2');
		mouthArray.push('mu3');
		tachieHoppeName += '1';
		displayTachieHoppe = true;
	}
	else if(faceId === 12) {
		eyebrowsArray.push('kiri1');
		eyebrowsArray.push('kiri2');
		eyebrowsArray.push('koma2');
		eyesArray.push('mae2');
		eyesArray.push('mae3');
		eyesArray.push('urumae1');
		eyesArray.push('urumae2');
		mouthArray.push('mu3');
		mouthArray.push('ho1');
		mouthArray.push('ho2');
		mouthArray.push('nico1');
		mouthArray.push('nico2');
		tachieHoppeName += '1';
		displayTachieHoppe = true;
		tachieSweatName += '1';
		displayTachieSweat = true;
	}
	else if(faceId === 13) {
		eyebrowsArray.push('kiri1');
		eyebrowsArray.push('kiri2');
		eyesArray.push('yoko1');
		eyesArray.push('yoko2');
		eyesArray.push('uruyoko1');
		mouthArray.push('mu2');
		mouthArray.push('mu3');
		mouthArray.push('ho1');
		mouthArray.push('ho2');
		mouthArray.push('nico1');
		tachieHoppeName += '1';
		displayTachieHoppe = true;
	}
	else if(faceId === 14) {
		eyebrowsArray.push('kiri1');
		eyebrowsArray.push('kiri2');
		eyebrowsArray.push('koma2');
		eyesArray.push('yoko2');
		eyesArray.push('yoko3');
		eyesArray.push('uruyoko1');
		eyesArray.push('uruyoko2');
		mouthArray.push('mu3');
		mouthArray.push('ho1');
		mouthArray.push('ho2');
		mouthArray.push('nico1');
		mouthArray.push('nico2');
		tachieHoppeName += '1';
		displayTachieHoppe = true;
		tachieSweatName += '1';
		displayTachieSweat = true;
	}
	else if(faceId === 15) {
		eyebrowsArray.push('kiri1');
		eyebrowsArray.push('koma1');
		eyebrowsArray.push('oko1');
		eyesArray.push('mae3');
		eyesArray.push('urumae1');
		eyesArray.push('urumae2');
		eyesArray.push('heartmae2');
		eyesArray.push('ahe1');
		eyesArray.push('toji1');
		mouthArray.push('mu1');
		mouthArray.push('ho1');
		mouthArray.push('wa1');
		mouthArray.push('wa2');
		mouthArray.push('wa3');
		mouthArray.push('ahe1');
		tachieHoppeName += '1';
		displayTachieHoppe = true;
		tachieSweatName += '1';
		displayTachieSweat = true;
	}
	else if(faceId === 16) {
		eyebrowsArray.push('kiri1');
		eyebrowsArray.push('kiri2');
		eyesArray.push('mae1');
		eyesArray.push('mae2');
		eyesArray.push('urumae1');
		mouthArray.push('fera2');
		mouthArray.push('fera3');
		mouthArray.push('fera4');
		tachieHoppeName += '1';
		displayTachieHoppe = true;
	}
	else if(faceId === 17) {
		eyebrowsArray.push('kiri1');
		eyebrowsArray.push('kiri2');
		eyebrowsArray.push('koma2');
		eyesArray.push('mae2');
		eyesArray.push('mae3');
		eyesArray.push('urumae1');
		eyesArray.push('urumae2');
		mouthArray.push('fera3');
		mouthArray.push('fera4');
		tachieHoppeName += '1';
		displayTachieHoppe = true;
		tachieSweatName += '1';
		displayTachieSweat = true;
	}
	else if(faceId === 18) {
		eyebrowsArray.push('kiri1');
		eyebrowsArray.push('kiri2');
		eyesArray.push('yoko1');
		eyesArray.push('yoko2');
		eyesArray.push('uruyoko1');
		mouthArray.push('fera2');
		mouthArray.push('fera3');
		mouthArray.push('fera4');
		tachieHoppeName += '1';
		displayTachieHoppe = true;
	}
	else if(faceId === 19) {
		eyebrowsArray.push('kiri1');
		eyebrowsArray.push('kiri2');
		eyebrowsArray.push('koma2');
		eyesArray.push('yoko2');
		eyesArray.push('yoko3');
		eyesArray.push('uruyoko1');
		eyesArray.push('uruyoko2');
		mouthArray.push('fera3');
		mouthArray.push('fera4');
		tachieHoppeName += '1';
		displayTachieHoppe = true;
		tachieSweatName += '1';
		displayTachieSweat = true;
	}
	else if(faceId === 20) {
		eyebrowsArray.push('kiri1');
		eyebrowsArray.push('koma1');
		eyebrowsArray.push('oko1');
		eyesArray.push('mae3');
		eyesArray.push('urumae1');
		eyesArray.push('urumae2');
		eyesArray.push('heartmae1');
		eyesArray.push('ahe1');
		eyesArray.push('toji1');
		mouthArray.push('fera2');
		mouthArray.push('fera3');
		mouthArray.push('fera4');
		tachieHoppeName += '1';
		displayTachieHoppe = true;
		tachieSweatName += '1';
		displayTachieSweat = true;
	}
	else if(faceId === 21) {
		eyebrowsArray.push('kiri1');
		eyebrowsArray.push('kiri2');
		eyebrowsArray.push('nico1');
		eyebrowsArray.push('nico2');
		eyebrowsArray.push('oko1');
		eyesArray.push('mae1');
		eyesArray.push('mae2');
		eyesArray.push('urumae1');
		eyesArray.push('urumae2');
		mouthArray.push('nico1');
		mouthArray.push('nico2');
		mouthArray.push('nico3');
		mouthArray.push('nico4');
		mouthArray.push('mu3');
		mouthArray.push('ho2');
		if(isAroused) {
			tachieHoppeName += '1';
			displayTachieHoppe = true;
		}
	}
	else if(faceId === 22) {
		eyebrowsArray.push('kiri1');
		eyebrowsArray.push('kiri2');
		eyebrowsArray.push('koma1');
		eyebrowsArray.push('koma2');
		eyebrowsArray.push('oko1');
		eyesArray.push('mae1');
		eyesArray.push('mae2');
		eyesArray.push('urumae1');
		eyesArray.push('urumae2');
		eyesArray.push('heartmae2');
		mouthArray.push('nico1');
		mouthArray.push('nico3');
		mouthArray.push('nico4');
		mouthArray.push('mu3');
		mouthArray.push('ho2');
		if(isAroused) {
			tachieHoppeName += '1';
			displayTachieHoppe = true;
		}
		if(Math.random() < 0.5) {
			tachieSweatName += '1';
			displayTachieSweat = true;
		}
	}
	else if(faceId === 23) {
		eyebrowsArray.push('kiri1');
		eyebrowsArray.push('kiri2');
		eyebrowsArray.push('nico1');
		eyebrowsArray.push('nico2');
		eyebrowsArray.push('oko1');
		eyesArray.push('yoko1');
		eyesArray.push('yoko2');
		eyesArray.push('uruyoko1');
		eyesArray.push('uruyoko2');
		mouthArray.push('nico1');
		mouthArray.push('nico2');
		mouthArray.push('nico3');
		mouthArray.push('nico4');
		mouthArray.push('mu3');
		mouthArray.push('ho2');
		if(isAroused) {
			tachieHoppeName += '1';
			displayTachieHoppe = true;
		}
	}
	else if(faceId === 24) {
		eyebrowsArray.push('kiri1');
		eyebrowsArray.push('kiri2');
		eyebrowsArray.push('koma1');
		eyebrowsArray.push('koma2');
		eyebrowsArray.push('oko1');
		eyesArray.push('yoko1');
		eyesArray.push('yoko2');
		eyesArray.push('uruyoko1');
		eyesArray.push('uruyoko2');
		eyesArray.push('heartyoko1');
		eyesArray.push('heartyoko2');
		mouthArray.push('nico1');
		mouthArray.push('nico3');
		mouthArray.push('nico4');
		mouthArray.push('mu3');
		mouthArray.push('ho2');
		if(isAroused) {
			tachieHoppeName += '1';
			displayTachieHoppe = true;
		}
		if(Math.random() < 0.5) {
			tachieSweatName += '1';
			displayTachieSweat = true;
		}
	}
	else if(faceId === 25) {
		eyebrowsArray.push('kiri1');
		eyebrowsArray.push('kiri2');
		eyebrowsArray.push('koma1');
		eyebrowsArray.push('koma2');
		eyebrowsArray.push('oko1');
		eyebrowsArray.push('nico1');
		eyesArray.push('mae3');
		eyesArray.push('urumae2');
		eyesArray.push('heartahe1');
		eyesArray.push('heartmae1');
		eyesArray.push('heartmae2');
		eyesArray.push('ahe1');
		mouthArray.push('ahe1');
		mouthArray.push('ahe2');
		mouthArray.push('nico3');
		mouthArray.push('nico4');
		mouthArray.push('wa2');
		mouthArray.push('ho1');
		mouthArray.push('ku1');
		tachieHoppeName += '1';
		displayTachieHoppe = true;
		if(Math.random() < 0.5) {
			tachieSweatName += '1';
			displayTachieSweat = true;
		}
	}
	else if(faceId === 26) {
		eyebrowsArray.push('kiri1');
		eyebrowsArray.push('kiri2');
		eyebrowsArray.push('nico1');
		eyebrowsArray.push('nico2');
		eyesArray.push('mae1');
		eyesArray.push('mae2');
		eyesArray.push('urumae1');
		eyesArray.push('urumae2');
		mouthArray.push('fera2');
		mouthArray.push('fera3');
		mouthArray.push('fera4');
		mouthArray.push('fera5');
		mouthArray.push('fera6');
		if(isAroused) {
			tachieHoppeName += '1';
			displayTachieHoppe = true;
		}
	}
	else if(faceId === 27) {
		eyebrowsArray.push('kiri1');
		eyebrowsArray.push('kiri2');
		eyebrowsArray.push('nico1');
		eyebrowsArray.push('nico2');
		eyesArray.push('mae1');
		eyesArray.push('mae2');
		eyesArray.push('urumae1');
		eyesArray.push('urumae2');
		eyesArray.push('heartmae2');
		mouthArray.push('fera4');
		mouthArray.push('fera5');
		mouthArray.push('fera6');
		if(isAroused) {
			tachieHoppeName += '1';
			displayTachieHoppe = true;
		}
		if(Math.random() < 0.5) {
			tachieSweatName += '1';
			displayTachieSweat = true;
		}
	}
	else if(faceId === 28) {
		eyebrowsArray.push('kiri1');
		eyebrowsArray.push('kiri2');
		eyebrowsArray.push('nico1');
		eyebrowsArray.push('nico2');
		eyesArray.push('yoko1');
		eyesArray.push('yoko2');
		eyesArray.push('uruyoko1');
		eyesArray.push('uruyoko2');
		mouthArray.push('fera2');
		mouthArray.push('fera3');
		mouthArray.push('fera4');
		mouthArray.push('fera5');
		mouthArray.push('fera6');
		if(isAroused) {
			tachieHoppeName += '1';
			displayTachieHoppe = true;
		}
	}
	else if(faceId === 29) {
		eyebrowsArray.push('kiri1');
		eyebrowsArray.push('kiri2');
		eyebrowsArray.push('nico1');
		eyebrowsArray.push('nico2');
		eyesArray.push('yoko1');
		eyesArray.push('yoko2');
		eyesArray.push('uruyoko1');
		eyesArray.push('uruyoko2');
		eyesArray.push('heartyoko1');
		eyesArray.push('heartyoko2');
		mouthArray.push('fera4');
		mouthArray.push('fera5');
		mouthArray.push('fera6');
		if(isAroused) {
			tachieHoppeName += '1';
			displayTachieHoppe = true;
		}
		if(Math.random() < 0.5) {
			tachieSweatName += '1';
			displayTachieSweat = true;
		}
	}
	else if(faceId === 30) {
		eyebrowsArray.push('kiri1');
		eyebrowsArray.push('kiri2');
		eyebrowsArray.push('koma1');
		eyebrowsArray.push('koma2');
		eyebrowsArray.push('oko1');
		eyebrowsArray.push('nico1');
		eyesArray.push('mae3');
		eyesArray.push('urumae2');
		eyesArray.push('heartmae1');
		eyesArray.push('heartmae2');
		eyesArray.push('ahe1');
		eyesArray.push('heartahe1');
		mouthArray.push('fera2');
		mouthArray.push('fera3');
		mouthArray.push('fera4');
		mouthArray.push('fera5');
		mouthArray.push('fera6');
		tachieHoppeName += '1';
		displayTachieHoppe = true;
		if(Math.random() < 0.5) {
			tachieSweatName += '1';
			displayTachieSweat = true;
		}
	}
	
	if(eyebrowsArray.length > 0) {
		this.setTachieEyebrows('' + tachieHeadName + eyebrowsArray[Math.randomInt(eyebrowsArray.length)]);
	}
	if(eyesArray.length > 0) {
		this.setTachieEyes('' + tachieHeadName + eyesArray[Math.randomInt(eyesArray.length)]);
	}
	if(mouthArray.length > 0) {
		this.setTachieMouth('' + tachieHeadName + mouthArray[Math.randomInt(mouthArray.length)]);
	}
	
	if(displayTachieHoppe) this.setTachieHoppe(tachieHoppeName);
	if(displayTachieSweat) this.setTachieSweat(tachieSweatName);
	
	if(this.tachieMouth.includes('fera'))
		this.setTachieStrayFaceExtension(ConfigManager.convertedTachieMouthName(this) + '_');
	else
		this.setTachieStrayFaceExtension('close_');
	
	this.setAllowTachieEmoteUpdate(true);
};

/////////////////
// Emote Rimjob Pose
/////////////////
Game_Actor.prototype.emoteRimjobPose = function() {
	this.setAllowTachieEmoteUpdate(false);
	let justOrgasmed = this.didLastGetHitBySkillType(JUST_SKILLTYPE_KARRYN_ORGASM) || this.justOrgasmed();
	let isAroused = this.isAroused() || justOrgasmed;
	let pussyInserted = this.isBodySlotPenis(PUSSY_ID);
	let analInserted = this.isBodySlotPenis(ANAL_ID);
	let justGotHarassed = this.didLastGetHitBySkillType(JUST_SKILLTYPE_ENEMY_TOY_PLAY) || this.didLastGetHitBySkillType(JUST_SKILLTYPE_PASSIVE_TOY) || this.didLastGetHitBySkillType(JUST_SKILLTYPE_ENEMY_PETTING);
	let lastHitRimjob = this.didLastGetHitBySkillType(JUST_SKILLTYPE_ENEMY_SADISM) || this.didLastGetHitBySkillType(JUST_SKILLTYPE_KARRYN_MASOCHISM);
	let lastHitPussySex = this.didLastGetHitBySkillType(JUST_SKILLTYPE_ENEMY_PUSSY_SEX) || this.didLastGetHitBySkillType(JUST_SKILLTYPE_KARRYN_PUSSY_SEX);
	let lastHitAnalSex = this.didLastGetHitBySkillType(JUST_SKILLTYPE_ENEMY_ANAL_SEX) || this.didLastGetHitBySkillType(JUST_SKILLTYPE_KARRYN_ANAL_SEX);
	let justGotPussyCreampie = this.didLastGetHitBySkillType(JUST_SKILLTYPE_ENEMY_PUSSY_CREAMPIE);
	let justGotAnalCreampie = this.didLastGetHitBySkillType(JUST_SKILLTYPE_ENEMY_ANAL_CREAMPIE);
	let karrynGotBukkaked = this.didLastGetHitBySkillType(JUST_SKILLTYPE_ENEMY_BUKKAKE);

	let generalReactionScore = this.getReactionScore();
	let orgasmReactionScore = this.getOrgasmReactionScore();
	let pussyCreampieReactionScore = this.getPussyCreampieReactionScore();
	let analCreampieReactionScore = this.getAnalCreampieReactionScore();
	let bukkakeReactionScore = this.getBukkakeReactionScore();
	let generallvl3 = generalReactionScore >= VAR_DEF_RS_LV3_REQ;
	let generallvl2 = generalReactionScore >= VAR_DEF_RS_LV2_REQ;
	let orgasmlvl3 = orgasmReactionScore >= VAR_DEF_RS_LV3_REQ;
	let orgasmlvl2 = orgasmReactionScore >= VAR_DEF_RS_LV2_REQ;
	let pussyCreampielvl3 = pussyCreampieReactionScore  >= VAR_DEF_RS_LV3_REQ;
	let pussyCreampielvl2 = pussyCreampieReactionScore >= VAR_DEF_RS_LV2_REQ;
	let analCreampielvl3 = analCreampieReactionScore  >= VAR_DEF_RS_LV3_REQ;
	let analCreampielvl2 = analCreampieReactionScore >= VAR_DEF_RS_LV2_REQ;
	let bukkakelvl3 = bukkakeReactionScore >= VAR_DEF_RS_LV3_REQ;
	let bukkakelvl2 = bukkakeReactionScore >= VAR_DEF_RS_LV2_REQ;

	let faceArray = [];
	this.resetTachieHoppe();
	this.resetTachieSweat();

	if(justOrgasmed) {
		if(orgasmlvl3) {
			faceArray.push(15);
		}
		else if(orgasmlvl2) {
			faceArray.push(10);
		}
		else {
			faceArray.push(5);
		}
	}
	else if(justGotPussyCreampie) {
		if(pussyCreampielvl3) {
			faceArray.push(14);
		}
		else if(pussyCreampielvl2) {
			faceArray.push(9);
		}
		else {
			faceArray.push(4);
		}
	}
	else if(justGotAnalCreampie) {
		if(analCreampielvl3) {
			faceArray.push(14);
		}
		else if(analCreampielvl2) {
			faceArray.push(9);
		}
		else {
			faceArray.push(4);
		}
	}
	else if(karrynGotBukkaked) {
		if(bukkakelvl3) {
			faceArray.push(12);
		}
		else if(bukkakelvl2) {
			faceArray.push(7);
		}
		else {
			faceArray.push(2);
		}
	}
	else if(lastHitRimjob) {
		if(generallvl3) {
			faceArray.push(11);
		}
		else if(generallvl2) {
			faceArray.push(6);
		}
		else {
			faceArray.push(1);
		}
	}
	else if(lastHitPussySex || lastHitAnalSex) {
		if(generallvl3) {
			faceArray.push(13);
		}
		else if(generallvl2) {
			faceArray.push(8);
		}
		else {
			faceArray.push(3);
		}
	}
	else if(justGotHarassed) {
		if(generallvl3) {
			faceArray.push(12);
		}
		else if(generallvl2) {
			faceArray.push(7);
		}
		else {
			faceArray.push(2);
		}
	}
	else {
		if(generallvl3) {
			faceArray.push(11);
		}
		else if(generallvl2) {
			faceArray.push(6);
		}
		else {
			faceArray.push(1);
		}
	}

	let faceId = faceArray[Math.randomInt(faceArray.length)];
	let eyebrowsArray = [];
	let eyesArray = [];
	let mouthArray = [];
	
	if(faceId === 1) {
		eyebrowsArray.push('koma1');
		eyebrowsArray.push('koma2');
		eyesArray.push('sita1');
		eyesArray.push('sita2');
		this.setTachieHoppe(1);
		this.setTachieSweat(1);
	}
	else if(faceId === 2) {
		eyebrowsArray.push('koma1');
		eyebrowsArray.push('koma2');
		eyesArray.push('sita2');
		eyesArray.push('sita3');
		eyesArray.push('toji1');
		eyesArray.push('urusita2');
		this.setTachieHoppe(1);
		this.setTachieSweat(1);
	}
	else if(faceId === 3) {
		eyebrowsArray.push('koma1');
		eyebrowsArray.push('koma2');
		eyesArray.push('yoko1');
		eyesArray.push('yoko2');
		this.setTachieHoppe(1);
		this.setTachieSweat(1);
	}
	else if(faceId === 4) {
		eyebrowsArray.push('koma1');
		eyebrowsArray.push('koma2');
		eyesArray.push('yoko2');
		eyesArray.push('yoko3');
		eyesArray.push('toji1');
		eyesArray.push('uruyoko2');
		this.setTachieHoppe(1);
		this.setTachieSweat(1);
	}
	else if(faceId === 5) {
		eyebrowsArray.push('koma1');
		eyebrowsArray.push('koma2');
		eyebrowsArray.push('oko1');
		eyesArray.push('sita3');
		eyesArray.push('toji1');
		eyesArray.push('urusita2');
		this.setTachieHoppe(1);
		this.setTachieSweat(1);
	}
	else if(faceId === 6) {
		eyebrowsArray.push('kiri1');
		eyebrowsArray.push('kiri2');
		eyebrowsArray.push('koma2');
		eyesArray.push('sita1');
		eyesArray.push('sita2');
		eyesArray.push('urusita1');
		this.setTachieHoppe(1);
	}
	else if(faceId === 7) {
		eyebrowsArray.push('kiri1');
		eyebrowsArray.push('kiri2');
		eyebrowsArray.push('koma1');
		eyesArray.push('sita1');
		eyesArray.push('sita2');
		eyesArray.push('sita3');
		eyesArray.push('urusita1');
		eyesArray.push('urusita2');
		this.setTachieHoppe(1);
	}
	else if(faceId === 8) {
		eyebrowsArray.push('kiri1');
		eyebrowsArray.push('kiri2');
		eyebrowsArray.push('koma2');
		eyesArray.push('yoko1');
		eyesArray.push('yoko2');
		eyesArray.push('uruyoko1');
		eyesArray.push('uruyoko2');
		this.setTachieHoppe(1);
	}
	else if(faceId === 9) {
		eyebrowsArray.push('kiri1');
		eyebrowsArray.push('kiri2');
		eyebrowsArray.push('koma2');
		eyesArray.push('yoko1');
		eyesArray.push('yoko2');
		eyesArray.push('yoko3');
		eyesArray.push('uruyoko1');
		eyesArray.push('uruyoko2');
		this.setTachieHoppe(1);
		this.setTachieSweat(1);
	}
	else if(faceId === 10) {
		eyebrowsArray.push('kiri1');
		eyebrowsArray.push('koma1');
		eyebrowsArray.push('koma2');
		eyesArray.push('sita3');
		eyesArray.push('toji1');
		eyesArray.push('ahe1');
		eyesArray.push('urusita2');
		eyesArray.push('heartsita2');
		this.setTachieHoppe(1);
		this.setTachieSweat(1);
	}
	else if(faceId === 11) {
		eyebrowsArray.push('nico1');
		eyebrowsArray.push('nico2');
		eyebrowsArray.push('kiri2');
		eyebrowsArray.push('koma2');
		eyesArray.push('sita1');
		eyesArray.push('sita2');
		eyesArray.push('urusita1');
		eyesArray.push('urusita2');
		mouthArray.push('yodare1');
		if(isAroused) this.setTachieHoppe(1);
		if(Math.randomInt(2) === 0) this.setTachieSweat(1);
	}
	else if(faceId === 12) {
		eyebrowsArray.push('nico1');
		eyebrowsArray.push('nico2');
		eyebrowsArray.push('kiri2');
		eyebrowsArray.push('koma2');
		eyesArray.push('sita1');
		eyesArray.push('sita2');
		eyesArray.push('sita3');
		eyesArray.push('urusita1');
		eyesArray.push('urusita2');
		eyesArray.push('heartsita2');
		mouthArray.push('yodare1');
		if(isAroused) this.setTachieHoppe(1);
	}
	else if(faceId === 13) {
		eyebrowsArray.push('nico1');
		eyebrowsArray.push('nico2');
		eyebrowsArray.push('kiri2');
		eyebrowsArray.push('koma2');
		eyesArray.push('yoko1');
		eyesArray.push('yoko2');
		eyesArray.push('uruyoko1');
		eyesArray.push('uruyoko2');
		eyesArray.push('heartyoko2');
		mouthArray.push('yodare1');
		if(isAroused) this.setTachieHoppe(1);
	}
	else if(faceId === 14) {
		eyebrowsArray.push('nico1');
		eyebrowsArray.push('nico2');
		eyebrowsArray.push('kiri2');
		eyebrowsArray.push('koma1');
		eyebrowsArray.push('koma2');
		eyesArray.push('yoko2');
		eyesArray.push('yoko3');
		eyesArray.push('uruyoko1');
		eyesArray.push('uruyoko2');
		eyesArray.push('heartyoko1');
		eyesArray.push('heartyoko2');
		mouthArray.push('yodare1');
		if(isAroused) this.setTachieHoppe(1);
		if(Math.randomInt(2) === 0) this.setTachieSweat(1);
	}
	else if(faceId === 15) {
		eyebrowsArray.push('nico1');
		eyebrowsArray.push('nico2');
		eyebrowsArray.push('kiri1');
		eyebrowsArray.push('koma1');
		eyebrowsArray.push('oko1');
		eyesArray.push('sita3');
		eyesArray.push('toji1');
		eyesArray.push('ahe1');
		eyesArray.push('urusita2');
		eyesArray.push('heartsita1');
		eyesArray.push('heartsita2');
		eyesArray.push('heartahe1');
		mouthArray.push('yodare1');
		if(isAroused) this.setTachieHoppe(1);
		if(Math.randomInt(2) === 0) this.setTachieSweat(1);
	}
	
	if(eyebrowsArray.length > 0) {
		this.setTachieEyebrows(eyebrowsArray[Math.randomInt(eyebrowsArray.length)]);
	}
	if(eyesArray.length > 0) {
		this.setTachieEyes(eyesArray[Math.randomInt(eyesArray.length)]);
	}
	if(mouthArray.length > 0) {
		this.setTachieMouth(mouthArray[Math.randomInt(mouthArray.length)]);
	}
	else {
		this.resetTachieMouth();
	}

	this.setAllowTachieEmoteUpdate(true);
};

/////////////////
// Emote Kick Counter Pose
/////////////////
Game_Actor.prototype.emoteKickCounterPose = function(setKissingOn, setKissingOff, karrynSkillUsage) {
	this.setAllowTachieEmoteUpdate(false);
	let justOrgasmed = this.didLastGetHitBySkillType(JUST_SKILLTYPE_KARRYN_ORGASM) || this.justOrgasmed();
	let isAroused = this.isAroused() || justOrgasmed;
	let analInserted = this.isBodySlotPenis(ANAL_ID);
	let justGotPussyCreampie = this.didLastGetHitBySkillType(JUST_SKILLTYPE_ENEMY_PUSSY_CREAMPIE);
	let justGotAnalCreampie = this.didLastGetHitBySkillType(JUST_SKILLTYPE_ENEMY_ANAL_CREAMPIE);
	let lastHitPussySex = this.didLastGetHitBySkillType(JUST_SKILLTYPE_ENEMY_PUSSY_SEX) || this.didLastGetHitBySkillType(JUST_SKILLTYPE_KARRYN_PUSSY_SEX);
	let lastHitAnalSex = this.didLastGetHitBySkillType(JUST_SKILLTYPE_ENEMY_ANAL_SEX) || this.didLastGetHitBySkillType(JUST_SKILLTYPE_KARRYN_ANAL_SEX) || this.didLastGetHitBySkillType(JUST_SKILLTYPE_ENEMY_TOY_PLAY_ANAL);
	let lastHitKiss = this.didLastGetHitBySkillType(JUST_SKILLTYPE_ENEMY_KISS) || this.didLastGetHitBySkillType(JUST_SKILLTYPE_KARRYN_KISSING);
	let justGotHarassed = this.didLastGetHitBySkillType(JUST_SKILLTYPE_ENEMY_TOY_PLAY) || this.didLastGetHitBySkillType(JUST_SKILLTYPE_PASSIVE_TOY) || this.didLastGetHitBySkillType(JUST_SKILLTYPE_ENEMY_PETTING);
	let karrynGotBukkaked = this.didLastGetHitBySkillType(JUST_SKILLTYPE_ENEMY_BUKKAKE);
	
	let isKissing = setKissingOn || (!setKissingOff && (this.tachieBody.includes('kiss') || this.tachieBackA.includes('kiss'))); 
	let pussyTargetIsHuman = this._cockPussyTarget && !this._cockPussyTarget.isOrcType && !this._cockPussyTarget.isLizardmanType;
	let pussyTargetIsOrc = this._cockPussyTarget && this._cockPussyTarget.isOrcType;
	let pussyTargetIsLizardman = this._cockPussyTarget && this._cockPussyTarget.isLizardmanType;
	let isKissingHuman = isKissing && pussyTargetIsHuman; 
	let lightKickCountered = this.isStateAffected(STATE_LIGHT_KICK_COUNTERED_ID);
	let pussyTargetEnemyCock = false;
	if(this._cockPussyTarget) pussyTargetEnemyCock = this._cockPussyTarget.enemyCock();
	
	let generalReactionScore = this.getReactionScore();
	let orgasmReactionScore = this.getOrgasmReactionScore();
	let pussyCreampieReactionScore = this.getPussyCreampieReactionScore();
	let analCreampieReactionScore = this.getAnalCreampieReactionScore();
	let bukkakeReactionScore = this.getBukkakeReactionScore();
	
	let generallvl3 = generalReactionScore >= VAR_DEF_RS_LV3_REQ;
	let generallvl2 = generalReactionScore >= VAR_DEF_RS_LV2_REQ;
	let orgasmlvl3 = orgasmReactionScore >= VAR_DEF_RS_LV3_REQ;
	let orgasmlvl2 = orgasmReactionScore >= VAR_DEF_RS_LV2_REQ;
	let pussyCreampielvl3 = pussyCreampieReactionScore  >= VAR_DEF_RS_LV3_REQ;
	let pussyCreampielvl2 = pussyCreampieReactionScore >= VAR_DEF_RS_LV2_REQ;
	let analCreampielvl3 = analCreampieReactionScore  >= VAR_DEF_RS_LV3_REQ;
	let analCreampielvl2 = analCreampieReactionScore >= VAR_DEF_RS_LV2_REQ;
	let bukkakelvl3 = bukkakeReactionScore >= VAR_DEF_RS_LV3_REQ;
	let bukkakelvl2 = bukkakeReactionScore >= VAR_DEF_RS_LV2_REQ;
	
	let faceArray = [];
	this.resetTachieHoppe();
	this.resetTachieSweat();

	if(isKissingHuman) {
		if(pussyTargetEnemyCock.includes('pale'))
			this.setTachieBackA('mouth_human_pale_kiss');
		else if(pussyTargetEnemyCock.includes('black'))
			this.setTachieBackA('mouth_human_black_kiss');
		else
			this.setTachieBackA('mouth_human_normal_kiss');
			
		if(karrynSkillUsage) {
			this.setTachieBody('kiss');
			this.setTachieBoobs('kiss_1');
			
			if(this.isWearingGlovesAndHat()) {
				this.setTachieLeftArm('kiss');	
				this.setTachieTie('kiss');	
			}
			else {
				this.setTachieLeftArm('kiss_naked');	
			}
			this.setTachieLeftArmHasPCup(false);
			this.setTachieSemenLeftArmHasPCup(false);
			
			this.setTachieHatExtension('kiss_');
			this.setTachieHairExtension('kiss_');
			this.setTachieStrayBoobsExtension('kiss_');
			
			//this.resetTachieBackA();
			
			this.setMaxTachieSemenBackId(1);
			this.setMaxTachieSemenRightArmId(1);
			
			this.setTachieSemenBackExtension('kiss_');
			this.setTachieSemenBoobsExtension('kiss_');
			this.setTachieSemenFaceExtension('kiss_');
			this.setTachieSemenLeftArmExtension('kiss_');
			this.setTachieSemenRightArmExtension('kiss_');
		}

	}
	else if(setKissingOff || !isKissing || pussyTargetIsOrc || pussyTargetIsLizardman) {
		if(pussyTargetIsHuman) {
			if(pussyTargetEnemyCock.includes('pale'))
				this.setTachieBackA('mouth_human_pale');
			else if(pussyTargetEnemyCock.includes('black'))
				this.setTachieBackA('mouth_human_black');
			else
				this.setTachieBackA('mouth_human_normal');
		}
		else if(pussyTargetIsOrc) {
			if(!setKissingOff && (setKissingOn || isKissing)) {
				if(pussyTargetEnemyCock.includes('dark'))
					this.setTachieBackA('head_orc_dark_kiss');
				else
					this.setTachieBackA('head_orc_normal_kiss');
			}
			else if(setKissingOff) {
				if(pussyTargetEnemyCock.includes('dark'))
					this.setTachieBackA('head_orc_dark');
				else
					this.setTachieBackA('head_orc_normal');
			}
			else {
				if(pussyTargetEnemyCock.includes('dark') && (!this.tachieBackA.includes('dark') || !this.tachieBackA.includes('orc')))
					this.setTachieBackA('head_orc_dark');
				else if(pussyTargetEnemyCock.includes('normal') && (!this.tachieBackA.includes('normal') || !this.tachieBackA.includes('orc')))
					this.setTachieBackA('head_orc_normal');
			}
		}
		else if(pussyTargetIsLizardman) {
			if(!setKissingOff && (setKissingOn || isKissing)) {
				if(pussyTargetEnemyCock.includes('dark'))
					this.setTachieBackA('head_lizardman_dark_kiss');
				else
					this.setTachieBackA('head_lizardman_normal_kiss');
			}
			else if(setKissingOff) {
				if(pussyTargetEnemyCock.includes('dark'))
					this.setTachieBackA('head_lizardman_dark');
				else
					this.setTachieBackA('head_lizardman_normal');
			}
			else {
				if(pussyTargetEnemyCock.includes('dark') && (!this.tachieBackA.includes('dark') || !this.tachieBackA.includes('lizardman')))
					this.setTachieBackA('head_lizardman_dark');
				else if(pussyTargetEnemyCock.includes('normal') && (!this.tachieBackA.includes('normal') || !this.tachieBackA.includes('lizardman')))
					this.setTachieBackA('head_lizardman_normal');
			}
		}
		
		this.setTachieBody('normal');
		this.setTachieBoobs('normal_1');
		
		if(this.isWearingGlovesAndHat()) {
			this.setTachieLeftArm('normal');	
			this.setTachieTie('normal');	
		}
		else {
			this.setTachieLeftArm('normal_naked');	
		}
		this.setTachieLeftArmHasPCup(true);
		this.setTachieSemenLeftArmHasPCup(true);
		
		this.setTachieHatExtension('normal_');
		this.setTachieHairExtension('normal_');
		this.setTachieStrayBoobsExtension('normal_');
		
		this.setMaxTachieSemenBackId(0);
		this.setMaxTachieSemenRightArmId(0);
		
		this.setTachieSemenBoobsExtension('normal_');
		this.setTachieSemenFaceExtension('normal_');
		this.setTachieSemenLeftArmExtension('normal_');
	}
	
	
	if(this.tachieBody.includes('kiss')) {
		if(justOrgasmed) {
			if(justOrgasmed) {
				if(orgasmlvl3) 
					faceArray.push(31);
				else if(orgasmlvl2) 
					faceArray.push(27);
				else
					faceArray.push(23);
			}
		}
		else if(justGotPussyCreampie || justGotAnalCreampie) {
			if(justGotPussyCreampie) {
				if(pussyCreampielvl3) 
					faceArray.push(30);
				else if(pussyCreampielvl2) 
					faceArray.push(26);
				else
					faceArray.push(22);
			}
			else if(justGotAnalCreampie) {
				if(analCreampielvl3) 
					faceArray.push(30);
				else if(analCreampielvl2) 
					faceArray.push(26);
				else
					faceArray.push(22);
			} 
		}
		else if(karrynGotBukkaked) {
			if(bukkakelvl3) 
				faceArray.push(30);
			else if(bukkakelvl2) 
				faceArray.push(26);
			else
				faceArray.push(22);
		}
		else if(lastHitPussySex || lastHitKiss) {
			if(generallvl3) 
				faceArray.push(28);
			else if(generallvl2) 
				faceArray.push(24);
			else
				faceArray.push(20);
		}
		else if(lastHitAnalSex || analInserted) {
			if(generallvl3) 
				faceArray.push(29);
			else if(generallvl2) 
				faceArray.push(25);
			else
				faceArray.push(21);
		}
		else if(justGotHarassed) {
			if(generallvl3) 
				faceArray.push(30);
			else if(generallvl2) 
				faceArray.push(26);
			else
				faceArray.push(22);
		}
		else {
			if(generallvl3) 
				faceArray.push(28);
			else if(generallvl2) 
				faceArray.push(24);
			else
				faceArray.push(20);
		}
	}
	//not kiss body
	else {
		if(justOrgasmed) {
			if(orgasmlvl3) 
				faceArray.push(12);
			else if(orgasmlvl2) 
				faceArray.push(8);
			else
				faceArray.push(4);
		}
		else if(justGotPussyCreampie || justGotAnalCreampie) {
			if(justGotPussyCreampie) {
				if(pussyCreampielvl3) 
					faceArray.push(11);
				else if(pussyCreampielvl2) 
					faceArray.push(7);
				else
					faceArray.push(3);
			}
			else if(justGotAnalCreampie) {
				if(analCreampielvl3) 
					faceArray.push(11);
				else if(analCreampielvl2) 
					faceArray.push(7);
				else
					faceArray.push(3);
			}
		}
		else if(karrynGotBukkaked) {
			if(bukkakelvl3) 
				faceArray.push(10);
			else if(bukkakelvl2) 
				faceArray.push(8);
			else
				faceArray.push(2);
		}
		else if(isKissing) {
			if(pussyTargetIsHuman) {
				if(generallvl3) 
					faceArray.push(15);
				else
					faceArray.push(14);
			}
			else if(pussyTargetIsOrc) {
				if(generallvl3) 
					faceArray.push(19);
				else
					faceArray.push(18);
			}
			else if(pussyTargetIsLizardman) {
				if(generallvl3) 
					faceArray.push(17);
				else
					faceArray.push(16);
			}
		}
		else if(lastHitPussySex) {
			if(generallvl3) 
				faceArray.push(9);
			else if(generallvl2) 
				faceArray.push(5);
			else
				faceArray.push(1);
		}
		else if(lastHitAnalSex) {
			if(generallvl3) 
				faceArray.push(10);
			else if(generallvl2) 
				faceArray.push(6);
			else
				faceArray.push(2);
		}
		else if(justGotHarassed) {
			if(generallvl3) 
				faceArray.push(10);
			else if(generallvl2) 
				faceArray.push(8);
			else
				faceArray.push(2);
		}
		else {
			if(generallvl3) 
				faceArray.push(9);
			else if(generallvl2) 
				faceArray.push(5);
			else
				faceArray.push(1);
		}
	}
	
	
	let faceId = faceArray[Math.randomInt(faceArray.length)];
	let eyebrowsArray = [];
	let eyesArray = [];
	let mouthArray = [];
	
	let tachieBodyName = 'normal';
	if(this.tachieBody == 'kiss' || this.tachieBody == 'kiss_naked') tachieBodyName = 'kiss';
	let tachieHoppeName = '' + tachieBodyName + '_';
	let tachieSweatName = '' + tachieBodyName + '_';
	let displayTachieHoppe = false;
	let displayTachieSweat = false;

	if(faceId === 1) {
		eyebrowsArray.push('koma1');
		eyebrowsArray.push('koma2');
		eyebrowsArray.push('oko2');
		eyesArray.push('mae1');
		eyesArray.push('mae2');
		mouthArray.push('ku1');
		mouthArray.push('wa2');
		mouthArray.push('ho2');
		tachieHoppeName += '1';
		displayTachieHoppe = true;
		tachieSweatName += '1';
		displayTachieSweat = true;
	}
	else if(faceId === 2) {
		eyebrowsArray.push('koma1');
		eyebrowsArray.push('koma2');
		eyebrowsArray.push('oko2');
		eyesArray.push('yoko1');
		eyesArray.push('yoko2');
		mouthArray.push('ku1');
		mouthArray.push('wa2');
		mouthArray.push('ho2');
		tachieHoppeName += '1';
		displayTachieHoppe = true;
		tachieSweatName += '1';
		displayTachieSweat = true;
	}
	else if(faceId === 3) {
		eyebrowsArray.push('koma1');
		eyebrowsArray.push('koma2');
		eyebrowsArray.push('oko1');
		eyesArray.push('yoko2');
		eyesArray.push('yoko3');
		eyesArray.push('uruyoko2');
		mouthArray.push('wa1');
		mouthArray.push('wa2');
		mouthArray.push('wa3');
		mouthArray.push('ahe2');
		tachieHoppeName += '1';
		displayTachieHoppe = true;
		tachieSweatName += '1';
		displayTachieSweat = true;
	}
	else if(faceId === 4) {
		eyebrowsArray.push('koma1');
		eyebrowsArray.push('koma2');
		eyebrowsArray.push('oko1');
		eyesArray.push('mae3');
		eyesArray.push('urumae2');
		eyesArray.push('toji1');
		mouthArray.push('wa1');
		mouthArray.push('wa2');
		mouthArray.push('wa3');
		mouthArray.push('ahe2');
		tachieHoppeName += '1';
		displayTachieHoppe = true;
		tachieSweatName += '1';
		displayTachieSweat = true;
	}
	else if(faceId === 5) {
		eyebrowsArray.push('kiri1');
		eyebrowsArray.push('kiri2');
		eyesArray.push('mae1');
		eyesArray.push('mae2');
		mouthArray.push('wa1');
		mouthArray.push('ho1');
		mouthArray.push('ho2');
		tachieHoppeName += '1';
		displayTachieHoppe = true;
	}
	else if(faceId === 6) {
		eyebrowsArray.push('kiri1');
		eyebrowsArray.push('kiri2');
		eyesArray.push('yoko1');
		eyesArray.push('yoko2');
		mouthArray.push('wa1');
		mouthArray.push('ho1');
		mouthArray.push('ho2');
		tachieHoppeName += '1';
		displayTachieHoppe = true;
	}
	else if(faceId === 7) {
		eyebrowsArray.push('kiri1');
		eyebrowsArray.push('kiri2');
		eyebrowsArray.push('koma1');
		eyesArray.push('yoko2');
		eyesArray.push('yoko3');
		eyesArray.push('uruyoko1');
		eyesArray.push('uruyoko2');
		mouthArray.push('wa2');
		mouthArray.push('ahe1');
		mouthArray.push('ahe2');
		mouthArray.push('ahe4');
		tachieHoppeName += '1';
		displayTachieHoppe = true;
		tachieSweatName += '1';
		displayTachieSweat = true;
	}
	else if(faceId === 8) {
		eyebrowsArray.push('kiri1');
		eyebrowsArray.push('kiri2');
		eyebrowsArray.push('koma1');
		eyebrowsArray.push('oko1');
		eyesArray.push('toji1');
		eyesArray.push('mae3');
		eyesArray.push('urumae1');
		eyesArray.push('urumae2');
		eyesArray.push('ahe1');
		mouthArray.push('wa2');
		mouthArray.push('ahe1');
		mouthArray.push('ahe2');
		mouthArray.push('ahe4');
		tachieHoppeName += '1';
		displayTachieHoppe = true;
		tachieSweatName += '1';
		displayTachieSweat = true;
	}
	else if(faceId === 9) {
		eyebrowsArray.push('kiri2');
		eyebrowsArray.push('nico1');
		eyebrowsArray.push('nico2');
		eyesArray.push('mae1');
		eyesArray.push('mae2');
		eyesArray.push('urumae1');
		eyesArray.push('urumae2');
		mouthArray.push('nico1');
		mouthArray.push('nico2');
		mouthArray.push('nico3');
		mouthArray.push('pero1');
		if(isAroused) {
			tachieHoppeName += '1';
			displayTachieHoppe = true;
		}
	}
	else if(faceId === 10) {
		eyebrowsArray.push('kiri2');
		eyebrowsArray.push('nico1');
		eyebrowsArray.push('nico2');
		eyesArray.push('yoko1');
		eyesArray.push('yoko2');
		eyesArray.push('uruyoko1');
		eyesArray.push('uruyoko2');
		mouthArray.push('nico1');
		mouthArray.push('nico2');
		mouthArray.push('nico3');
		mouthArray.push('pero1');
		if(isAroused) {
			tachieHoppeName += '1';
			displayTachieHoppe = true;
		}
	}
	else if(faceId === 11) {
		eyebrowsArray.push('kiri1');
		eyebrowsArray.push('kiri2');
		eyebrowsArray.push('nico1');
		eyebrowsArray.push('nico2');
		eyesArray.push('yoko1');
		eyesArray.push('yoko2');
		eyesArray.push('uruyoko1');
		eyesArray.push('uruyoko2');
		eyesArray.push('heartyoko1');
		eyesArray.push('heartyoko2');
		mouthArray.push('ahe1');
		mouthArray.push('ahe3');
		mouthArray.push('ahe4');
		mouthArray.push('nico1');
		mouthArray.push('nico3');
		tachieHoppeName += '1';
		displayTachieHoppe = true;
		if(Math.random() < 0.5) {
			tachieSweatName += '1';
			displayTachieSweat = true;
		}
	}
	else if(faceId === 12) {
		eyebrowsArray.push('kiri2');
		eyebrowsArray.push('nico1');
		eyebrowsArray.push('nico2');
		eyebrowsArray.push('koma1');
		eyebrowsArray.push('oko1');
		eyesArray.push('mae3');
		eyesArray.push('toji1');
		eyesArray.push('ahe1');
		eyesArray.push('urumae1');
		eyesArray.push('urumae2');
		eyesArray.push('heartmae1');
		eyesArray.push('heartmae2');
		eyesArray.push('heartahe1');
		mouthArray.push('ahe1');
		mouthArray.push('ahe3');
		mouthArray.push('ahe4');
		mouthArray.push('nico1');
		mouthArray.push('nico3');
		tachieHoppeName += '1';
		displayTachieHoppe = true;
		if(Math.random() < 0.5) {
			tachieSweatName += '1';
			displayTachieSweat = true;
		}
	}
	else if(faceId === 14) {
		eyebrowsArray.push('koma1');
		eyebrowsArray.push('koma2');
		eyebrowsArray.push('oko1');
		eyesArray.push('mae3');
		eyesArray.push('mae2');
		eyesArray.push('toji1');
		mouthArray.push('kiss1');
		tachieHoppeName += '1';
		displayTachieHoppe = true;
		tachieSweatName += '1';
		displayTachieSweat = true;
	}
	else if(faceId === 15) {
		eyebrowsArray.push('kiri2');
		eyebrowsArray.push('nico1');
		eyebrowsArray.push('nico2');
		eyesArray.push('mae3');
		eyesArray.push('mae2');
		eyesArray.push('urumae1');
		eyesArray.push('urumae2');
		eyesArray.push('heartmae1');
		eyesArray.push('heartmae2');
		mouthArray.push('kiss1');
		tachieHoppeName += '1';
		displayTachieHoppe = true;
	}
	else if(faceId === 16) {
		eyebrowsArray.push('koma1');
		eyebrowsArray.push('koma2');
		eyebrowsArray.push('oko1');
		eyesArray.push('mae3');
		eyesArray.push('mae2');
		eyesArray.push('toji1');
		tachieHoppeName += '1';
		displayTachieHoppe = true;
		tachieSweatName += '1';
		displayTachieSweat = true;
	}
	else if(faceId === 17) {
		eyebrowsArray.push('kiri2');
		eyebrowsArray.push('nico1');
		eyebrowsArray.push('nico2');
		eyesArray.push('mae3');
		eyesArray.push('mae2');
		eyesArray.push('urumae1');
		eyesArray.push('urumae2');
		eyesArray.push('heartmae1');
		eyesArray.push('heartmae2');
		tachieHoppeName += '1';
		displayTachieHoppe = true;
	}
	else if(faceId === 18) {
		eyebrowsArray.push('koma1');
		eyebrowsArray.push('koma2');
		eyebrowsArray.push('oko1');
		eyesArray.push('mae3');
		eyesArray.push('mae2');
		eyesArray.push('toji1');
		mouthArray.push('kiss2');
		tachieHoppeName += '1';
		displayTachieHoppe = true;
		tachieSweatName += '1';
		displayTachieSweat = true;
	}
	else if(faceId === 19) {
		eyebrowsArray.push('kiri2');
		eyebrowsArray.push('nico1');
		eyebrowsArray.push('nico2');
		eyesArray.push('mae3');
		eyesArray.push('mae2');
		eyesArray.push('urumae1');
		eyesArray.push('urumae2');
		eyesArray.push('heartmae1');
		eyesArray.push('heartmae2');
		mouthArray.push('kiss3');
		tachieHoppeName += '1';
		displayTachieHoppe = true;
	}
	else if(faceId === 20) {
		eyebrowsArray.push('koma1');
		eyebrowsArray.push('kiri1');
		eyebrowsArray.push('kiri2');
		eyebrowsArray.push('nico2');
		eyesArray.push('ue1');
		eyesArray.push('ue2');
		tachieHoppeName += '1';
		displayTachieHoppe = true;
		tachieSweatName += '1';
		displayTachieSweat = true;
	}
	else if(faceId === 21) {
		eyebrowsArray.push('kiri1');
		eyebrowsArray.push('koma1');
		eyebrowsArray.push('koma2');
		eyesArray.push('yoko1');
		eyesArray.push('yoko2');
		tachieHoppeName += '1';
		displayTachieHoppe = true;
		tachieSweatName += '1';
		displayTachieSweat = true;
	}
	else if(faceId === 22) {
		eyebrowsArray.push('koma1');
		eyebrowsArray.push('koma2');
		eyesArray.push('mae1');
		eyesArray.push('mae2');
		eyesArray.push('urumae2');
		tachieHoppeName += '1';
		displayTachieHoppe = true;
		tachieSweatName += '1';
		displayTachieSweat = true;
	}
	else if(faceId === 23) {
		eyebrowsArray.push('koma1');
		eyebrowsArray.push('koma2');
		eyebrowsArray.push('oko1');
		eyesArray.push('ue1');
		eyesArray.push('ue2');
		eyesArray.push('uruue2');
		eyesArray.push('toji1');
		tachieHoppeName += '1';
		displayTachieHoppe = true;
		tachieSweatName += '1';
		displayTachieSweat = true;
	}
	else if(faceId === 24) {
		eyebrowsArray.push('kiri1');
		eyebrowsArray.push('kiri2');
		eyebrowsArray.push('nico1');
		eyebrowsArray.push('nico2');
		eyesArray.push('ue1');
		eyesArray.push('ue2');
		eyesArray.push('mae1');
		eyesArray.push('urumae1');
		eyesArray.push('urumae2');
		tachieHoppeName += '1';
		displayTachieHoppe = true;
	}
	else if(faceId === 25) {
		eyebrowsArray.push('kiri1');
		eyebrowsArray.push('kiri2');
		eyebrowsArray.push('nico1');
		eyebrowsArray.push('nico2');
		eyebrowsArray.push('koma1');
		eyesArray.push('yoko1');
		eyesArray.push('yoko2');
		eyesArray.push('uruyoko1');
		eyesArray.push('uruyoko2');
		tachieHoppeName += '1';
		displayTachieHoppe = true;
	}
	else if(faceId === 26) {
		eyebrowsArray.push('kiri1');
		eyebrowsArray.push('kiri2');
		eyebrowsArray.push('nico1');
		eyebrowsArray.push('nico2');
		eyebrowsArray.push('koma1');
		eyebrowsArray.push('koma2');
		eyesArray.push('mae1');
		eyesArray.push('mae2');
		eyesArray.push('urumae1');
		eyesArray.push('urumae2');
		eyesArray.push('heartue2');
		tachieHoppeName += '1';
		displayTachieHoppe = true;
		tachieSweatName += '1';
		displayTachieSweat = true;
	}
	else if(faceId === 27) {
		eyebrowsArray.push('kiri1');
		eyebrowsArray.push('kiri2');
		eyebrowsArray.push('koma1');
		eyebrowsArray.push('koma2');
		eyesArray.push('ue2');
		eyesArray.push('mae2');
		eyesArray.push('toji1');
		eyesArray.push('ahe1');
		eyesArray.push('uruue2');
		eyesArray.push('urumae2');
		tachieHoppeName += '1';
		displayTachieHoppe = true;
		tachieSweatName += '1';
		displayTachieSweat = true;
	}
	else if(faceId === 28) {
		eyebrowsArray.push('nico1');
		eyebrowsArray.push('nico2');
		eyesArray.push('ue1');
		eyesArray.push('ue2');
		eyesArray.push('mae1');
		eyesArray.push('mae2');
		eyesArray.push('heartue1');
		eyesArray.push('heartue2');
		if(isAroused) {
			tachieHoppeName += '1';
			displayTachieHoppe = true;
		}
	}
	else if(faceId === 29) {
		eyebrowsArray.push('nico1');
		eyebrowsArray.push('nico2');
		eyesArray.push('yoko1');
		eyesArray.push('yoko2');
		eyesArray.push('uruyoko1');
		eyesArray.push('uruyoko2');
		if(isAroused) {
			tachieHoppeName += '1';
			displayTachieHoppe = true;
		}
		if(Math.random() < 0.5) {
			tachieSweatName += '1';
			displayTachieSweat = true;
		}
	}
	else if(faceId === 30) {
		eyebrowsArray.push('nico1');
		eyebrowsArray.push('nico2');
		eyebrowsArray.push('kiri2');
		eyebrowsArray.push('koma2');
		eyesArray.push('mae1');
		eyesArray.push('mae2');
		eyesArray.push('urumae1');
		eyesArray.push('urumae2');
		eyesArray.push('heartue1');
		eyesArray.push('heartue2');
		eyesArray.push('toji1');
		tachieHoppeName += '1';
		displayTachieHoppe = true;
		if(Math.random() < 0.5) {
			tachieSweatName += '1';
			displayTachieSweat = true;
		}
	}
	else if(faceId === 31) {
		eyebrowsArray.push('nico1');
		eyebrowsArray.push('nico2');
		eyebrowsArray.push('kiri1');
		eyebrowsArray.push('koma1');
		eyebrowsArray.push('koma2');
		eyebrowsArray.push('oko1');
		eyesArray.push('ahe1');
		eyesArray.push('urumae1');
		eyesArray.push('uruue1');
		eyesArray.push('uruue2');
		eyesArray.push('heartue1');
		eyesArray.push('heartue2');
		eyesArray.push('heartahe1');
		eyesArray.push('toji1');
		tachieHoppeName += '1';
		displayTachieHoppe = true;
		tachieSweatName += '1';
		displayTachieSweat = true;
	}
	
	
	if(eyebrowsArray.length > 0) {
		this.setTachieEyebrows('' + tachieBodyName + '_' + eyebrowsArray[Math.randomInt(eyebrowsArray.length)]);
	}
	if(eyesArray.length > 0) {
		this.setTachieEyes('' + tachieBodyName + '_' + eyesArray[Math.randomInt(eyesArray.length)]);
	}
	if(mouthArray.length > 0) {
		this.setTachieMouth('' + tachieBodyName + '_' + mouthArray[Math.randomInt(mouthArray.length)]);
	}
	else {
		this.resetTachieMouth();
	}
	
	if(this.isWearingGlovesAndHat()) 
		this.setTachieTie('' + tachieBodyName);
	else
		this.resetTachieTie();
	
	if(displayTachieHoppe) this.setTachieHoppe(tachieHoppeName);
	if(displayTachieSweat) this.setTachieSweat(tachieSweatName);
	
	if(tachieBodyName === 'kiss') {
		this.setTachieStrayFaceExtension('kiss_');
		this.setMaxTachieStrayFaceId(1,1,1);
	}
	else if(this.tachieMouth.includes('kiss')) {
		this.setTachieStrayFaceExtension(this.tachieMouth + '_');
		this.setMaxTachieStrayFaceId(1,2,2);
	}
	else {
		this.setTachieStrayFaceExtension('normal_');
		this.setMaxTachieStrayFaceId(1,2,2);
	}
	
	this.setAllowTachieEmoteUpdate(true);
};

/////////////////
// Emote Werewolf Back Pose
/////////////////
Game_Actor.prototype.emoteWerewolfBackPose = function() {
	this.setAllowTachieEmoteUpdate(false);
	let justOrgasmed = this.didLastGetHitBySkillType(JUST_SKILLTYPE_KARRYN_ORGASM) || this.justOrgasmed();
	let isAroused = this.isAroused() || justOrgasmed;

	let pussyInserted = this.isBodySlotPenis(PUSSY_ID);
	let analInserted = this.isBodySlotPenis(ANAL_ID);
	let givingBJ = this.isBodySlotPenis(MOUTH_ID);

	let lastHitSex = this.didLastGetHitBySkillType(JUST_SKILLTYPE_ENEMY_PUSSY_SEX) || this.didLastGetHitBySkillType(JUST_SKILLTYPE_ENEMY_ANAL_SEX) || this.didLastGetHitBySkillType(JUST_SKILLTYPE_KARRYN_PUSSY_SEX) || this.didLastGetHitBySkillType(JUST_SKILLTYPE_KARRYN_ANAL_SEX) || this.didLastGetHitBySkillType(JUST_SKILLTYPE_ENEMY_TOY_PLAY_PUSSY) || this.didLastGetHitBySkillType(JUST_SKILLTYPE_ENEMY_TOY_PLAY_ANAL);
	let lastHitBlowjob = this.didLastGetHitBySkillType(JUST_SKILLTYPE_KARRYN_BLOWJOB) || this.didLastGetHitBySkillType(JUST_SKILLTYPE_ENEMY_BLOWJOB);

	let karrynSwallowingCum = this.didLastGetHitBySkillType(JUST_SKILLTYPE_ENEMY_CUM_SWALLOW);
	let justGotPussyCreampie = this.didLastGetHitBySkillType(JUST_SKILLTYPE_ENEMY_PUSSY_CREAMPIE);
	let justGotAnalCreampie = this.didLastGetHitBySkillType(JUST_SKILLTYPE_ENEMY_ANAL_CREAMPIE);
	let karrynGotBukkaked = this.didLastGetHitBySkillType(JUST_SKILLTYPE_ENEMY_BUKKAKE);
	let enemyCummingFromMouth = $gameTroop._lastEnemySlotToCum === MOUTH_ID;
	
	let generalReactionScore = this.getReactionScore();
	let orgasmReactionScore = this.getOrgasmReactionScore();
	let bukkakeReactionScore = this.getBukkakeReactionScore();
	let swallowReactionScore = this.getSwallowReactionScore();
	let pussyCreampieReactionScore = this.getPussyCreampieReactionScore();
	let analCreampieReactionScore = this.getAnalCreampieReactionScore();
	
	let generallvl3 = generalReactionScore >= VAR_DEF_RS_LV3_REQ;
	let generallvl2 = generalReactionScore >= VAR_DEF_RS_LV2_REQ;
	let orgasmlvl3 = orgasmReactionScore >= VAR_DEF_RS_LV3_REQ;
	let orgasmlvl2 = orgasmReactionScore >= VAR_DEF_RS_LV2_REQ;
	let bukkakelvl3 = bukkakeReactionScore >= VAR_DEF_RS_LV3_REQ;
	let bukkakelvl2 = bukkakeReactionScore >= VAR_DEF_RS_LV2_REQ;
	let swallowlvl3 = swallowReactionScore  >= VAR_DEF_RS_LV3_REQ;
	let swallowlvl2 = swallowReactionScore >= VAR_DEF_RS_LV2_REQ;
	let pussyCreampielvl3 = pussyCreampieReactionScore  >= VAR_DEF_RS_LV3_REQ;
	let pussyCreampielvl2 = pussyCreampieReactionScore >= VAR_DEF_RS_LV2_REQ;
	let analCreampielvl3 = analCreampieReactionScore  >= VAR_DEF_RS_LV3_REQ;
	let analCreampielvl2 = analCreampieReactionScore >= VAR_DEF_RS_LV2_REQ;
	
	let faceArray = [];
	this.resetTachieHoppe();
	this.resetTachieSweat();

	if(justOrgasmed) {
		if(givingBJ) {
			if(orgasmlvl3) 
				faceArray.push(18);
			else if(orgasmlvl2) 
				faceArray.push(12);
			else
				faceArray.push(6);
		}
		else {
			if(orgasmlvl3) 
				faceArray.push(15);
			else if(orgasmlvl2) 
				faceArray.push(9);
			else
				faceArray.push(3);
		}
	}
	else if(karrynSwallowingCum) {
		if(swallowlvl3) 
			faceArray.push(17);
		else if(swallowlvl2) 
			faceArray.push(11);
		else
			faceArray.push(5);
	}
	else if(justGotPussyCreampie) {
		if(pussyCreampielvl3) 
			faceArray.push(14);
		else if(pussyCreampielvl2) 
			faceArray.push(8);
		else
			faceArray.push(2);
	}
	else if(justGotAnalCreampie) {
		if(analCreampielvl3) 
			faceArray.push(14);
		else if(analCreampielvl2) 
			faceArray.push(8);
		else
			faceArray.push(2);
	}
	else if(karrynGotBukkaked) {
		if(enemyCummingFromMouth) {
			if(bukkakelvl3) 
				faceArray.push(15);
			else if(bukkakelvl2) 
				faceArray.push(9);
			else
				faceArray.push(3);
		}
		else {
			if(bukkakelvl3) 
				faceArray.push(14);
			else if(bukkakelvl2) 
				faceArray.push(8);
			else
				faceArray.push(2);
		}
	}
	else if(lastHitBlowjob) {
		if(generallvl3) 
			faceArray.push(16);
		else if(generallvl2) 
			faceArray.push(10);
		else
			faceArray.push(4);
	}
	else { 
		if(generallvl3) 
			faceArray.push(13);
		else if(generallvl2) 
			faceArray.push(7);
		else
			faceArray.push(1);
	}

	let faceId = faceArray[Math.randomInt(faceArray.length)];
	let eyebrowsArray = [];
	let eyesArray = [];
	let mouthArray = [];
	
	if(faceId === 1) {
		eyebrowsArray.push('koma1');
		eyebrowsArray.push('koma2');
		eyebrowsArray.push('oko1');
		eyesArray.push('mae1');
		eyesArray.push('mae2');
		eyesArray.push('yoko1');
		eyesArray.push('yoko2');
		if(!givingBJ) {
			mouthArray.push('ku1');
			mouthArray.push('ho1');
			mouthArray.push('ahe1');
		}
		else {
			mouthArray.push('fera1');
			mouthArray.push('fera2');
		}
		this.setTachieHoppe(1);
		this.setTachieSweat(1);
	}
	else if(faceId === 2) {
		eyebrowsArray.push('koma1');
		eyebrowsArray.push('koma2');
		eyebrowsArray.push('oko1');
		eyesArray.push('yoko2');
		eyesArray.push('yoko3');
		if(!givingBJ) {
			mouthArray.push('ku1');
			mouthArray.push('ho2');
			mouthArray.push('ahe1');
			mouthArray.push('ahe2');
		}
		else {
			mouthArray.push('fera1');
			mouthArray.push('fera2');
		}
		this.setTachieHoppe(1);
		this.setTachieSweat(1);
	}
	else if(faceId === 3) {
		eyebrowsArray.push('koma1');
		eyebrowsArray.push('koma2');
		eyebrowsArray.push('oko1');
		eyesArray.push('yoko3');
		eyesArray.push('mae3');
		eyesArray.push('toji1');
		mouthArray.push('ho2');
		mouthArray.push('ahe2');
		mouthArray.push('ahe3');
		mouthArray.push('ahe4');
		this.setTachieHoppe(1);
		this.setTachieSweat(1);
	}
	else if(faceId === 4) {
		eyebrowsArray.push('koma1');
		eyebrowsArray.push('koma2');
		eyebrowsArray.push('oko1');
		eyesArray.push('mae1');
		eyesArray.push('mae2');
		mouthArray.push('fera1');
		mouthArray.push('fera2');
		this.setTachieHoppe(1);
		this.setTachieSweat(1);
	}
	else if(faceId === 5) {
		eyebrowsArray.push('koma1');
		eyebrowsArray.push('koma2');
		eyebrowsArray.push('oko1');
		eyesArray.push('mae2');
		eyesArray.push('mae3');
		mouthArray.push('fera1');
		this.setTachieHoppe(1);
		this.setTachieSweat(1);
	}
	else if(faceId === 6) {
		eyebrowsArray.push('koma1');
		eyebrowsArray.push('koma2');
		eyesArray.push('mae3');
		eyesArray.push('urumae1');
		eyesArray.push('urumae2');
		eyesArray.push('toji1');
		mouthArray.push('fera1');
		mouthArray.push('fera2');
		this.setTachieHoppe(1);
		this.setTachieSweat(1);
	}
	else if(faceId === 7) {
		eyebrowsArray.push('koma1');
		eyebrowsArray.push('oko2');
		eyesArray.push('yoko1');
		eyesArray.push('yoko2');
		eyesArray.push('mae1');
		eyesArray.push('mae2');
		if(!givingBJ) {
			mouthArray.push('ho1');
			mouthArray.push('ho2');
			mouthArray.push('chu1');
		}
		else {
			mouthArray.push('fera2');
			mouthArray.push('fera3');
			mouthArray.push('fera4');
		}
		this.setTachieHoppe(1);
	}
	else if(faceId === 8) {
		eyebrowsArray.push('koma1');
		eyebrowsArray.push('koma2');
		eyebrowsArray.push('oko2');
		eyesArray.push('yoko2');
		eyesArray.push('yoko3');
		eyesArray.push('uruyoko1');
		eyesArray.push('uruyoko2');
		if(!givingBJ) {
			mouthArray.push('ahe1');
			mouthArray.push('ahe2');
			mouthArray.push('ho2');
			mouthArray.push('chu1');
		}
		else {
			mouthArray.push('fera2');
			mouthArray.push('fera3');
			mouthArray.push('fera4');
		}
		this.setTachieHoppe(1);
		this.setTachieSweat(1);
	}
	else if(faceId === 9) {
		eyebrowsArray.push('koma1');
		eyebrowsArray.push('koma2');
		eyebrowsArray.push('oko1');
		eyebrowsArray.push('oko2');
		eyesArray.push('mae3');
		eyesArray.push('yoko3');
		eyesArray.push('urumae2');
		eyesArray.push('uruyoko2');
		eyesArray.push('toji1');
		mouthArray.push('ahe1');
		mouthArray.push('ahe2');
		mouthArray.push('ahe3');
		mouthArray.push('ahe4');
		this.setTachieHoppe(1);
		this.setTachieSweat(1);
	}
	else if(faceId === 10) {
		eyebrowsArray.push('koma1');
		eyebrowsArray.push('koma2');
		eyebrowsArray.push('oko2');
		eyesArray.push('mae1');
		eyesArray.push('mae2');
		eyesArray.push('urumae2');
		mouthArray.push('fera2');
		mouthArray.push('fera3');
		mouthArray.push('fera4');
		this.setTachieHoppe(1);
	}
	else if(faceId === 11) {
		eyebrowsArray.push('koma1');
		eyebrowsArray.push('koma2');
		eyebrowsArray.push('oko1');
		eyesArray.push('mae3');
		eyesArray.push('urumae3');
		eyesArray.push('urumae2');
		mouthArray.push('fera3');
		mouthArray.push('fera4');
		this.setTachieHoppe(1);
		this.setTachieSweat(1);
	}
	else if(faceId === 12) {
		eyebrowsArray.push('koma1');
		eyebrowsArray.push('koma2');
		eyesArray.push('ahe1');
		eyesArray.push('toji1');
		eyesArray.push('urumae3');
		eyesArray.push('urumae2');
		mouthArray.push('fera2');
		mouthArray.push('fera3');
		mouthArray.push('fera4');
		this.setTachieHoppe(1);
		this.setTachieSweat(1);
	}
	else if(faceId === 13) {
		eyebrowsArray.push('nico1');
		eyebrowsArray.push('nico2');
		eyesArray.push('mae1');
		eyesArray.push('uruyoko1');
		eyesArray.push('uruyoko2');
		eyesArray.push('urumae2');
		if(!givingBJ) {
			mouthArray.push('chu1');
			mouthArray.push('nico1');
			mouthArray.push('nico2');
			mouthArray.push('pero1');
		}
		else {
			mouthArray.push('fera2');
			mouthArray.push('fera3');
			mouthArray.push('fera4');
			mouthArray.push('fera5');
			mouthArray.push('fera6');
		}
		if(isAroused) this.setTachieHoppe(1);
	}
	else if(faceId === 14) {
		eyebrowsArray.push('nico1');
		eyebrowsArray.push('nico2');
		eyebrowsArray.push('oko2');
		eyesArray.push('uruyoko1');
		eyesArray.push('uruyoko2');
		eyesArray.push('heartyoko1');
		eyesArray.push('heartyoko2');
		if(!givingBJ) {
			mouthArray.push('chu1');
			mouthArray.push('ho2');
			mouthArray.push('ahe1');
			mouthArray.push('ahe2');
		}
		else {
			mouthArray.push('fera2');
			mouthArray.push('fera3');
			mouthArray.push('fera4');
			mouthArray.push('fera5');
			mouthArray.push('fera6');
		}
		this.setTachieHoppe(1);
		if(Math.randomInt(2) === 0) this.setTachieSweat(1);
	}
	else if(faceId === 15) {
		eyebrowsArray.push('nico1');
		eyebrowsArray.push('nico2');
		eyebrowsArray.push('koma1');
		eyebrowsArray.push('koma2');
		eyesArray.push('heartmae1');
		eyesArray.push('heartmae2');
		eyesArray.push('heartyoko1');
		eyesArray.push('heartyoko2');
		eyesArray.push('heartahe1');
		eyesArray.push('toji1');
		mouthArray.push('ahe3');
		mouthArray.push('ahe4');
		mouthArray.push('ahe1');
		mouthArray.push('ahe2');
		if(isAroused) this.setTachieHoppe(1);
		if(Math.randomInt(2) === 0) this.setTachieSweat(1);
	}
	else if(faceId === 16) {
		eyebrowsArray.push('nico1');
		eyebrowsArray.push('nico2');
		eyesArray.push('heartmae1');
		eyesArray.push('mae1');
		eyesArray.push('mae2');
		eyesArray.push('urumae1');
		eyesArray.push('urumae2');
		mouthArray.push('fera2');
		mouthArray.push('fera3');
		mouthArray.push('fera4');
		mouthArray.push('fera5');
		mouthArray.push('fera6');
		if(isAroused) this.setTachieHoppe(1);
	}
	else if(faceId === 17) {
		eyebrowsArray.push('nico1');
		eyebrowsArray.push('nico2');
		eyebrowsArray.push('koma1');
		eyebrowsArray.push('koma2');
		eyebrowsArray.push('oko2');
		eyesArray.push('heartmae2');
		eyesArray.push('mae3');
		eyesArray.push('mae2');
		eyesArray.push('urumae3');
		eyesArray.push('urumae2');
		mouthArray.push('fera4');
		mouthArray.push('fera5');
		mouthArray.push('fera6');
		if(isAroused) this.setTachieHoppe(1);
		if(Math.randomInt(2) === 0) this.setTachieSweat(1);
	}
	else if(faceId === 18) {
		eyebrowsArray.push('nico1');
		eyebrowsArray.push('nico2');
		eyebrowsArray.push('koma1');
		eyebrowsArray.push('koma2');
		eyebrowsArray.push('oko1');
		eyebrowsArray.push('oko2');
		eyesArray.push('heartmae1');
		eyesArray.push('heartmae2');
		eyesArray.push('heartahe1');
		eyesArray.push('toji1');
		eyesArray.push('urumae3');
		mouthArray.push('fera2');
		mouthArray.push('fera3');
		mouthArray.push('fera4');
		mouthArray.push('fera5');
		mouthArray.push('fera6');
		if(isAroused) this.setTachieHoppe(1);
		if(Math.randomInt(2) === 0) this.setTachieSweat(1);
	}

	if(eyebrowsArray.length > 0) {
		this.setTachieEyebrows(eyebrowsArray[Math.randomInt(eyebrowsArray.length)]);
	}
	if(eyesArray.length > 0) {
		this.setTachieEyes(eyesArray[Math.randomInt(eyesArray.length)]);
	}
	if(mouthArray.length > 0) {
		this.setTachieMouth(mouthArray[Math.randomInt(mouthArray.length)]);
	}
	
	if(this.tachieMouth.includes('fera') && this.tachieHoppe === '1')
		this.setTachieHoppe('fera_1');
	
	if(this.tachieMouth.includes('fera'))
		this.setTachieStrayFaceExtension(ConfigManager.convertedTachieMouthName(this) + '_');
	else
		this.resetTachieStrayFaceExtension();
	
	this.setAllowTachieEmoteUpdate(true);
};

/////////////////
// Emote Slime Anal Pose
/////////////////
Game_Actor.prototype.emoteSlimePiledriverPose = function() {
	this.setAllowTachieEmoteUpdate(false);
	let justOrgasmed = this.didLastGetHitBySkillType(JUST_SKILLTYPE_KARRYN_ORGASM) || this.justOrgasmed();
	let isAroused = this.isAroused() || justOrgasmed;
	let givingBJ = this.isBodySlotPenis(MOUTH_ID);
	let justGotHarassed = this.didLastGetHitBySkillType(JUST_SKILLTYPE_ENEMY_TOY_PLAY) || this.didLastGetHitBySkillType(JUST_SKILLTYPE_PASSIVE_TOY) || this.didLastGetHitBySkillType(JUST_SKILLTYPE_ENEMY_PETTING);
	let lastHitBlowjob = this.didLastGetHitBySkillType(JUST_SKILLTYPE_KARRYN_BLOWJOB) || this.didLastGetHitBySkillType(JUST_SKILLTYPE_ENEMY_BLOWJOB);
	let lastHitPussySex = this.didLastGetHitBySkillType(JUST_SKILLTYPE_ENEMY_PUSSY_SEX) || this.didLastGetHitBySkillType(JUST_SKILLTYPE_KARRYN_PUSSY_SEX);
	let lastHitAnalSex = this.didLastGetHitBySkillType(JUST_SKILLTYPE_ENEMY_ANAL_SEX) || this.didLastGetHitBySkillType(JUST_SKILLTYPE_KARRYN_ANAL_SEX);

	let slimeInPussyAlso = this.analSexPoseTarget() && this.analSexPoseTarget().isUsingBodySlotPenis(PUSSY_ID);
	let slimeInMouthAlso = this.analSexPoseTarget() && this.analSexPoseTarget().isUsingBodySlotPenis(MOUTH_ID);
	let justGotAnalCreampie = this.didLastGetHitBySkillType(JUST_SKILLTYPE_ENEMY_ANAL_CREAMPIE);
	let justGotPussyCreampie = this.didLastGetHitBySkillType(JUST_SKILLTYPE_ENEMY_PUSSY_CREAMPIE);
	let swallowingCum = this.didLastGetHitBySkillType(JUST_SKILLTYPE_ENEMY_CUM_SWALLOW);
	let karrynGotBukkaked = this.didLastGetHitBySkillType(JUST_SKILLTYPE_ENEMY_BUKKAKE);

	let slimeCameInsideAnal = this.analSexPoseTarget() && this.analSexPoseTarget()._slime_cameInsideAnal === true;
	let slimeCameInsidePussy = this.analSexPoseTarget() && this.analSexPoseTarget()._slime_cameInsidePussy === true;
	let slimeCameInsideMouth = this.analSexPoseTarget() && this.analSexPoseTarget()._slime_cameInsideMouth === true;
	
	let generalReactionScore = this.getReactionScore();
	let orgasmReactionScore = this.getOrgasmReactionScore();
	let pussyCreampieReactionScore = this.getPussyCreampieReactionScore();
	let analCreampieReactionScore = this.getAnalCreampieReactionScore();
	let swallowReactionScore = this.getSwallowReactionScore();
	let bukkakeReactionScore = this.getBukkakeReactionScore();
	let generallvl3 = generalReactionScore >= VAR_DEF_RS_LV3_REQ;
	let generallvl2 = generalReactionScore >= VAR_DEF_RS_LV2_REQ;
	let orgasmlvl3 = orgasmReactionScore >= VAR_DEF_RS_LV3_REQ;
	let orgasmlvl2 = orgasmReactionScore >= VAR_DEF_RS_LV2_REQ;
	let pussyCreampielvl3 = pussyCreampieReactionScore  >= VAR_DEF_RS_LV3_REQ;
	let pussyCreampielvl2 = pussyCreampieReactionScore >= VAR_DEF_RS_LV2_REQ;
	let analCreampielvl3 = analCreampieReactionScore  >= VAR_DEF_RS_LV3_REQ;
	let analCreampielvl2 = analCreampieReactionScore >= VAR_DEF_RS_LV2_REQ;
	let swallowlvl3 = swallowReactionScore >= VAR_DEF_RS_LV3_REQ;
	let swallowlvl2 = swallowReactionScore >= VAR_DEF_RS_LV2_REQ;
	let bukkakelvl3 = bukkakeReactionScore >= VAR_DEF_RS_LV3_REQ;
	let bukkakelvl2 = bukkakeReactionScore >= VAR_DEF_RS_LV2_REQ;
	
	let faceArray = [];
	this.resetTachieHoppe();
	this.resetTachieSweat();
	
	if(justOrgasmed) {
		if(orgasmlvl3)
			faceArray.push(18);
		else if(orgasmlvl2)
			faceArray.push(12);
		else
			faceArray.push(6);
	}
	else if(swallowingCum) {
		if(swallowlvl3)
			faceArray.push(16);
		else if(swallowlvl2)
			faceArray.push(10);
		else
			faceArray.push(4);
	}
	else if(justGotPussyCreampie) {
		if(pussyCreampielvl3)
			faceArray.push(16);
		else if(pussyCreampielvl2)
			faceArray.push(10);
		else
			faceArray.push(4);
	}
	else if(justGotAnalCreampie) {
		if(analCreampielvl3)
			faceArray.push(16);
		else if(analCreampielvl2)
			faceArray.push(10);
		else
			faceArray.push(4);
	}
	else if(karrynGotBukkaked) {
		if(bukkakelvl3)
			faceArray.push(14);
		else if(bukkakelvl2)
			faceArray.push(8);
		else
			faceArray.push(2);
	}
	else if(lastHitBlowjob) {
		if(generallvl3)
			faceArray.push(17);
		else if(generallvl2)
			faceArray.push(11);
		else
			faceArray.push(5);
	}
	else if(lastHitPussySex) {
		if(generallvl3)
			faceArray.push(15);
		else if(generallvl2)
			faceArray.push(9);
		else
			faceArray.push(3);
	}
	else if(lastHitAnalSex) {
		if(generallvl3)
			faceArray.push(13);
		else if(generallvl2)
			faceArray.push(7);
		else
			faceArray.push(1);
	}
	else if(justGotHarassed) {
		if(generallvl3)
			faceArray.push(14);
		else if(generallvl2)
			faceArray.push(8);
		else
			faceArray.push(2);
	}
	else {
		if(generallvl3)
			faceArray.push(13);
		else if(generallvl2)
			faceArray.push(7);
		else
			faceArray.push(1);
	}
	
	
	let faceId = faceArray[Math.randomInt(faceArray.length)];
	let eyebrowsArray = [];
	let eyesArray = [];
	let mouthArray = [];
	
	if(faceId === 1) {
		eyebrowsArray.push('koma1');
		eyebrowsArray.push('koma2');
		eyebrowsArray.push('oko1');
		eyesArray.push('sita1');
		eyesArray.push('sita2');
		if(!givingBJ) {
			mouthArray.push('ku1');
			mouthArray.push('ku2');
			mouthArray.push('ho1');
			mouthArray.push('ho2');
			mouthArray.push('wa1');
		}
		else {
			mouthArray.push('fera1');
			mouthArray.push('fera2');
		}
		this.setTachieHoppe(1);
		this.setTachieSweat(1);
	}
	else if(faceId === 2) {
		eyebrowsArray.push('koma1');
		eyebrowsArray.push('koma2');
		eyebrowsArray.push('oko1');
		eyesArray.push('sita2');
		eyesArray.push('sita3');
		if(!givingBJ) {
			mouthArray.push('ku1');
			mouthArray.push('ahe1');
			mouthArray.push('ho2');
			mouthArray.push('ho3');
			mouthArray.push('wa1');
		}
		else {
			mouthArray.push('fera1');
			mouthArray.push('fera2');
		}
		this.setTachieHoppe(1);
		this.setTachieSweat(1);
	}
	else if(faceId === 3) {
		eyebrowsArray.push('koma1');
		eyebrowsArray.push('koma2');
		eyebrowsArray.push('oko1');
		eyesArray.push('sita1');
		eyesArray.push('sita2');
		if(!givingBJ) {
			mouthArray.push('ku2');
			mouthArray.push('ho2');
			mouthArray.push('ho3');
			mouthArray.push('wa1');
			mouthArray.push('wa2');
			mouthArray.push('wa3');
		}
		else {
			mouthArray.push('fera1');
			mouthArray.push('fera2');
		}
		this.setTachieHoppe(1);
		this.setTachieSweat(1);
	}
	else if(faceId === 4) {
		eyebrowsArray.push('koma1');
		eyebrowsArray.push('koma2');
		eyesArray.push('sita1');
		eyesArray.push('sita2');
		eyesArray.push('sita3');
		eyesArray.push('urusita2');
		if(!givingBJ) {
			mouthArray.push('ho3');
			mouthArray.push('wa1');
			mouthArray.push('wa2');
			mouthArray.push('wa3');
			mouthArray.push('ahe1');
		}
		else {
			mouthArray.push('fera1');
			mouthArray.push('fera2');
		}
		this.setTachieHoppe(1);
		this.setTachieSweat(1);
	}
	else if(faceId === 5) {
		eyebrowsArray.push('koma1');
		eyebrowsArray.push('koma2');
		eyebrowsArray.push('oko1');
		eyesArray.push('sita1');
		eyesArray.push('sita2');
		eyesArray.push('urusita2');
		mouthArray.push('fera1');
		mouthArray.push('fera2');
		this.setTachieHoppe(1);
		this.setTachieSweat(1);
	}
	else if(faceId === 6) {
		eyebrowsArray.push('koma1');
		eyebrowsArray.push('koma2');
		eyebrowsArray.push('oko1');
		eyesArray.push('sita2');
		eyesArray.push('sita3');
		eyesArray.push('toji1');
		eyesArray.push('urusita2');
		if(!givingBJ) {
			mouthArray.push('ku1');
			mouthArray.push('ho3');
			mouthArray.push('wa1');
			mouthArray.push('wa2');
			mouthArray.push('wa3');
			mouthArray.push('ahe1');
		}
		else {
			mouthArray.push('fera1');
			mouthArray.push('fera2');
		}
		this.setTachieHoppe(1);
		this.setTachieSweat(1);
	}
	else if(faceId === 7) {
		eyebrowsArray.push('kiri1');
		eyebrowsArray.push('kiri2');
		eyesArray.push('sita1');
		eyesArray.push('sita2');
		if(!givingBJ) {
			mouthArray.push('ku2');
			mouthArray.push('ho1');
			mouthArray.push('ho2');
			mouthArray.push('mu1');
			mouthArray.push('mu2');
		}
		else {
			mouthArray.push('fera2');
			mouthArray.push('fera3');
			mouthArray.push('fera4');
		}
		this.setTachieHoppe(1);
	}
	else if(faceId === 8) {
		eyebrowsArray.push('kiri1');
		eyebrowsArray.push('kiri2');
		eyesArray.push('sita2');
		eyesArray.push('urusita1');
		eyesArray.push('urusita2');
		if(!givingBJ) {
			mouthArray.push('nico3');
			mouthArray.push('ho2');
			mouthArray.push('ahe2');
			mouthArray.push('mu1');
			mouthArray.push('mu2');
		}
		else {
			mouthArray.push('fera2');
			mouthArray.push('fera3');
			mouthArray.push('fera4');
		}
		this.setTachieHoppe(1);
	}
	else if(faceId === 9) {
		eyebrowsArray.push('kiri1');
		eyebrowsArray.push('kiri2');
		eyebrowsArray.push('koma2');
		eyesArray.push('sita1');
		eyesArray.push('sita2');
		eyesArray.push('urusita1');
		if(!givingBJ) {
			mouthArray.push('nico2');
			mouthArray.push('ho2');
			mouthArray.push('ku2');
			mouthArray.push('wa3');
			mouthArray.push('mu1');
			mouthArray.push('mu2');
		}
		else {
			mouthArray.push('fera2');
			mouthArray.push('fera3');
			mouthArray.push('fera4');
		}
		this.setTachieHoppe(1);
	}
	else if(faceId === 10) {
		eyebrowsArray.push('kiri1');
		eyebrowsArray.push('kiri2');
		eyebrowsArray.push('koma1');
		eyesArray.push('sita1');
		eyesArray.push('sita2');
		eyesArray.push('sita3');
		eyesArray.push('urusita1');
		eyesArray.push('urusita2');
		if(!givingBJ) {
			mouthArray.push('ho3');
			mouthArray.push('wa1');
			mouthArray.push('wa3');
			mouthArray.push('ahe1');
			mouthArray.push('ahe2');
			mouthArray.push('nico2');
		}
		else {
			mouthArray.push('fera2');
			mouthArray.push('fera3');
			mouthArray.push('fera4');
		}
		this.setTachieHoppe(1);
		this.setTachieSweat(1);
	}
	else if(faceId === 11) {
		eyebrowsArray.push('kiri1');
		eyebrowsArray.push('kiri2');
		eyesArray.push('sita1');
		eyesArray.push('sita2');
		eyesArray.push('urusita1');
		eyesArray.push('urusita2');
		mouthArray.push('fera2');
		mouthArray.push('fera3');
		mouthArray.push('fera4');
		this.setTachieHoppe(1);
	}
	else if(faceId === 12) {
		eyebrowsArray.push('kiri1');
		eyebrowsArray.push('kiri2');
		eyebrowsArray.push('oko1');
		eyebrowsArray.push('koma1');
		eyesArray.push('sita2');
		eyesArray.push('sita3');
		eyesArray.push('ahe1');
		eyesArray.push('toji1');
		eyesArray.push('urusita2');
		eyesArray.push('heartsita2');
		if(!givingBJ) {
			mouthArray.push('ho3');
			mouthArray.push('wa2');
			mouthArray.push('wa3');
			mouthArray.push('ahe1');
			mouthArray.push('ahe2');
		}
		else {
			mouthArray.push('fera2');
			mouthArray.push('fera3');
			mouthArray.push('fera4');
		}
		this.setTachieHoppe(1);
		this.setTachieSweat(1);
	}
	else if(faceId === 13) {
		eyebrowsArray.push('nico1');
		eyebrowsArray.push('nico2');
		eyebrowsArray.push('kiri2');
		eyesArray.push('sita1');
		eyesArray.push('sita2');
		eyesArray.push('urusita1');
		eyesArray.push('urusita2');
		if(!givingBJ) {
			mouthArray.push('nico1');
			mouthArray.push('nico2');
			mouthArray.push('nico3');
			mouthArray.push('mu1');
			mouthArray.push('mu2');
			mouthArray.push('ho1');
		}
		else {
			mouthArray.push('fera2');
			mouthArray.push('fera3');
			mouthArray.push('fera4');
			mouthArray.push('fera5');
			mouthArray.push('fera6');
		}
		if(isAroused) this.setTachieHoppe(1);
	}
	else if(faceId === 14) {
		eyebrowsArray.push('nico1');
		eyebrowsArray.push('nico2');
		eyebrowsArray.push('kiri2');
		eyesArray.push('sita1');
		eyesArray.push('sita2');
		eyesArray.push('urusita1');
		eyesArray.push('urusita2');
		eyesArray.push('heartsita1');
		if(!givingBJ) {
			mouthArray.push('nico1');
			mouthArray.push('nico3');
			mouthArray.push('mu2');
			mouthArray.push('ho2');
			mouthArray.push('ahe2');
		}
		else {
			mouthArray.push('fera2');
			mouthArray.push('fera3');
			mouthArray.push('fera4');
			mouthArray.push('fera5');
			mouthArray.push('fera6');
		}
		if(isAroused) this.setTachieHoppe(1);
	}
	else if(faceId === 15) {
		eyebrowsArray.push('nico1');
		eyebrowsArray.push('nico2');
		eyebrowsArray.push('kiri2');
		eyesArray.push('sita1');
		eyesArray.push('sita2');
		eyesArray.push('urusita1');
		eyesArray.push('urusita2');
		eyesArray.push('heartsita2');
		if(!givingBJ) {
			mouthArray.push('nico1');
			mouthArray.push('nico2');
			mouthArray.push('wa3');
			mouthArray.push('ahe1');
			mouthArray.push('ahe2');
			mouthArray.push('ahe3');
		}
		else {
			mouthArray.push('fera2');
			mouthArray.push('fera3');
			mouthArray.push('fera4');
			mouthArray.push('fera5');
			mouthArray.push('fera6');
		}
		if(isAroused) this.setTachieHoppe(1);
	}
	else if(faceId === 16) {
		eyebrowsArray.push('nico1');
		eyebrowsArray.push('nico2');
		eyebrowsArray.push('kiri1');
		eyebrowsArray.push('kiri2');
		eyebrowsArray.push('koma2');
		eyesArray.push('sita2');
		eyesArray.push('toji1');
		eyesArray.push('urusita1');
		eyesArray.push('urusita2');
		eyesArray.push('heartsita2');
		if(!givingBJ) {
			mouthArray.push('ho1');
			mouthArray.push('ho2');
			mouthArray.push('ho3');
			mouthArray.push('wa3');
			mouthArray.push('ahe2');
			mouthArray.push('ahe3');
			mouthArray.push('nico2');
		}
		else {
			mouthArray.push('fera2');
			mouthArray.push('fera3');
			mouthArray.push('fera4');
			mouthArray.push('fera5');
			mouthArray.push('fera6');
		}
		this.setTachieHoppe(1);
		if(Math.randomInt(2) === 0) this.setTachieSweat(1);
	}
	else if(faceId === 17) {
		eyebrowsArray.push('nico1');
		eyebrowsArray.push('nico2');
		eyebrowsArray.push('kiri2');
		eyesArray.push('sita1');
		eyesArray.push('sita2');
		eyesArray.push('urusita1');
		eyesArray.push('urusita2');
		eyesArray.push('heartsita1');
		mouthArray.push('fera2');
		mouthArray.push('fera3');
		mouthArray.push('fera4');
		mouthArray.push('fera5');
		mouthArray.push('fera6');
		if(isAroused) this.setTachieHoppe(1);
	}
	else if(faceId === 18) {
		eyebrowsArray.push('nico1');
		eyebrowsArray.push('nico2');
		eyebrowsArray.push('kiri2');
		eyebrowsArray.push('koma2');
		eyebrowsArray.push('oko1');
		eyesArray.push('toji1');
		eyesArray.push('ahe1');
		eyesArray.push('urusita1');
		eyesArray.push('urusita2');
		eyesArray.push('heartsita1');
		eyesArray.push('heartsita2');
		eyesArray.push('heartahe1');
		if(!givingBJ) {
			mouthArray.push('wa1');
			mouthArray.push('wa2');
			mouthArray.push('wa3');
			mouthArray.push('ahe1');
			mouthArray.push('ahe2');
			mouthArray.push('ahe3');
		}
		else {
			mouthArray.push('fera2');
			mouthArray.push('fera3');
			mouthArray.push('fera4');
			mouthArray.push('fera5');
			mouthArray.push('fera6');
		}
		this.setTachieHoppe(1);
		if(Math.randomInt(2) === 0) this.setTachieSweat(1);
	}
	
	if(eyebrowsArray.length > 0) {
		this.setTachieEyebrows(eyebrowsArray[Math.randomInt(eyebrowsArray.length)]);
	}
	if(eyesArray.length > 0) {
		this.setTachieEyes(eyesArray[Math.randomInt(eyesArray.length)]);
	}
	if(mouthArray.length > 0) {
		this.setTachieMouth(mouthArray[Math.randomInt(mouthArray.length)]);
	}
	
	if(this.tachieMouth.includes('fera') && this.tachieHoppe === '1') {
		this.setTachieHoppe('fera_1');
		this.setTachieHoppeHasPCup(true);
	}
	else {
		this.setTachieHoppeHasPCup(false);
	}
	
	if(this.tachieMouth.includes('fera')) {
		this.setTachieStrayFaceHasPCup(false);
		this.setTachieStrayFaceExtension(ConfigManager.convertedTachieMouthName(this) + '_');
	}
	else {
		this.setTachieStrayFaceHasPCup(true);
		this.resetTachieStrayFaceExtension();
	}
	
	this.setAllowTachieEmoteUpdate(true);
};

/////////////////
// Emote Defeated Level One Pose
/////////////////
Game_Actor.prototype.emoteDefeatedLevelOnePose = function(justMouthInserted) { 
	this.setAllowTachieEmoteUpdate(false);
	let justOrgasmed = this.didLastGetHitBySkillType(JUST_SKILLTYPE_KARRYN_ORGASM) || this.justOrgasmed();
	let isAroused = this.isAroused() || justOrgasmed;
	
	let givingBJ = this.isBodySlotPenis(MOUTH_ID) && this._cockMouthTarget;
	let lastHitBlowjob = this.didLastGetHitBySkillType(JUST_SKILLTYPE_KARRYN_BLOWJOB) || this.didLastGetHitBySkillType(JUST_SKILLTYPE_ENEMY_BLOWJOB);
	let lastHitHandjob = this.didLastGetHitBySkillType(JUST_SKILLTYPE_ENEMY_HANDJOB) || this.didLastGetHitBySkillType(JUST_SKILLTYPE_KARRYN_HANDJOB);
	let hadFirstKissWithPenisHere = givingBJ && this._firstKissWasPenis && this._recordBlowjobCount === 1 && this._recordBlowjobPeople === 1;
	
	let karrynSwallowingCum = this.didLastGetHitBySkillType(JUST_SKILLTYPE_ENEMY_CUM_SWALLOW);
	let karrynGotBukkaked = this.didLastGetHitBySkillType(JUST_SKILLTYPE_ENEMY_BUKKAKE);
	let karrynJustGotBukkakedOnBoobs = this._lastAreaEjaculatedTo == CUM_BUKKAKE_BOOBS || this._lastAreaEjaculatedTo == CUM_BUKKAKE_LEFTBOOB || this._lastAreaEjaculatedTo == CUM_BUKKAKE_RIGHTBOOB;
	let karrynHasJustGokkundState = this.isStateAffected(STATE_JUST_GOKKUND_ID);

	let generalReactionScore = this.getReactionScore();
	let orgasmReactionScore = this.getOrgasmReactionScore();
	let bukkakeReactionScore = this.getBukkakeReactionScore();
	let swallowReactionScore = this.getSwallowReactionScore();
	
	let generallvl3 = generalReactionScore >= VAR_DEF_RS_LV3_REQ;
	let generallvl2 = generalReactionScore >= VAR_DEF_RS_LV2_REQ;
	let orgasmlvl3 = orgasmReactionScore >= VAR_DEF_RS_LV3_REQ;
	let orgasmlvl2 = orgasmReactionScore >= VAR_DEF_RS_LV2_REQ;
	let bukkakelvl3 = bukkakeReactionScore  >= VAR_DEF_RS_LV3_REQ;
	let bukkakelvl2 = bukkakeReactionScore >= VAR_DEF_RS_LV2_REQ;
	let swallowlvl3 = swallowReactionScore  >= VAR_DEF_RS_LV3_REQ;
	let swallowlvl2 = swallowReactionScore >= VAR_DEF_RS_LV2_REQ;

	let faceArray = [];
	this.resetTachieHoppe();
	this.resetTachieSweat();
	
	if(givingBJ && this.tachieCockMouth && justMouthInserted) {
		if(generallvl3)
			faceArray.push(25);
		else if(generallvl2)
			faceArray.push(15);
		else
			faceArray.push(5);
	}
	else if(givingBJ) {
		if(justOrgasmed) {
			if(orgasmlvl3)
				faceArray.push(30);
			else if(orgasmlvl2)
				faceArray.push(20);
			else
				faceArray.push(10);
		}
		else if(karrynSwallowingCum) {
			if(swallowlvl3)
				faceArray.push(27);
			else if(swallowlvl2)
				faceArray.push(17);
			else
				faceArray.push(7);
		}
		else if(karrynGotBukkaked) {
			if(bukkakelvl3)
				faceArray.push(33);
			else if(bukkakelvl2)
				faceArray.push(32);
			else
				faceArray.push(31);
		}
		else {
			if(generallvl3)
				faceArray.push(26);
			else if(generallvl2)
				faceArray.push(16);
			else
				faceArray.push(6);
		}
	}
	else {
		if(justOrgasmed) {
			if(orgasmlvl3)
				faceArray.push(29);
			else if(orgasmlvl2)
				faceArray.push(19);
			else
				faceArray.push(9);
		}
		else if(karrynHasJustGokkundState) {
			if(swallowlvl3)
				faceArray.push(28);
			else if(swallowlvl2)
				faceArray.push(18);
			else
				faceArray.push(8);
		}
		else if(karrynGotBukkaked) {
			if(karrynJustGotBukkakedOnBoobs) {
				if(bukkakelvl3)
					faceArray.push(23);
				else if(bukkakelvl2)
					faceArray.push(13);
				else
					faceArray.push(3);
			}
			else {
				if(bukkakelvl3)
					faceArray.push(24);
				else if(bukkakelvl2)
					faceArray.push(14);
				else
					faceArray.push(4);
			}
		}
		else if(lastHitHandjob) {
			if(generallvl3)
				faceArray.push(22);
			else if(generallvl2)
				faceArray.push(12);
			else
				faceArray.push(2);
		}
		else {
			if(generallvl3)
				faceArray.push(21);
			else if(generallvl2)
				faceArray.push(11);
			else
				faceArray.push(1);
		}
	}
	

	let faceId = faceArray[Math.randomInt(faceArray.length)];
	let eyebrowsArray = [];
	let eyesArray = [];
	let mouthArray = [];
	
	if(faceId === 1) {
		eyebrowsArray.push('oko1');
		eyebrowsArray.push('koma1');
		eyebrowsArray.push('koma2');
		eyesArray.push('mae1');
		eyesArray.push('mae2');
		mouthArray.push('mu1');
		mouthArray.push('mu2');
		mouthArray.push('mu3');
		mouthArray.push('ku1');
		mouthArray.push('ku2');
		this.setTachieHoppe(1);
		this.setTachieSweat(1);
	}
	else if(faceId === 2) {
		eyebrowsArray.push('oko1');
		eyebrowsArray.push('koma1');
		eyebrowsArray.push('koma2');
		eyesArray.push('mae1');
		eyesArray.push('mae2');
		mouthArray.push('mu1');
		mouthArray.push('mu2');
		mouthArray.push('ku1');
		mouthArray.push('ku2');
		mouthArray.push('wa1');
		mouthArray.push('wa3');
		this.setTachieHoppe(1);
		this.setTachieSweat(1);
	}
	else if(faceId === 3) {
		eyebrowsArray.push('oko1');
		eyebrowsArray.push('koma1');
		eyebrowsArray.push('koma2');
		eyesArray.push('toji1');
		eyesArray.push('toji2');
		eyesArray.push('toji3');
		mouthArray.push('mu1');
		mouthArray.push('mu3');
		mouthArray.push('ku1');
		mouthArray.push('ku2');
		mouthArray.push('wa1');
		mouthArray.push('wa2');
		mouthArray.push('wa3');
		this.setTachieHoppe(1);
		this.setTachieSweat(1);
	}
	else if(faceId === 4) {
		eyebrowsArray.push('oko1');
		eyebrowsArray.push('koma1');
		eyebrowsArray.push('koma2');
		eyesArray.push('toji1');
		eyesArray.push('toji2');
		eyesArray.push('sita2');
		mouthArray.push('mu1');
		mouthArray.push('mu3');
		mouthArray.push('ku1');
		mouthArray.push('ku2');
		mouthArray.push('wa1');
		mouthArray.push('wa2');
		mouthArray.push('wa3');
		this.setTachieHoppe(1);
		this.setTachieSweat(1);
	}
	else if(faceId === 5) {
		eyebrowsArray.push('oko1');
		eyebrowsArray.push('koma1');
		eyebrowsArray.push('koma2');
		eyesArray.push('sita1');
		eyesArray.push('sita2');
		this.setTachieHoppe(1);
		this.setTachieSweat(1);
	}
	else if(faceId === 6) {
		eyebrowsArray.push('koma1');
		eyebrowsArray.push('koma2');
		eyesArray.push('sita1');
		eyesArray.push('sita2');
		mouthArray.push('fera1');
		mouthArray.push('fera2');
		this.setTachieHoppe(1);
		this.setTachieSweat(1);
	}
	else if(faceId === 7) {
		eyebrowsArray.push('oko1');
		eyesArray.push('toji2');
		eyesArray.push('toji3');
		eyesArray.push('sita2');
		eyesArray.push('urusita2');
		mouthArray.push('fera1');
		this.setTachieHoppe(1);
		this.setTachieSweat(1);
	}
	else if(faceId === 8) {
		eyebrowsArray.push('koma1');
		eyebrowsArray.push('koma2');
		eyesArray.push('sita2');
		eyesArray.push('urusita1');
		eyesArray.push('urusita2');
		mouthArray.push('cum1');
		this.setTachieHoppe(1);
		this.setTachieSweat(1);
	}
	else if(faceId === 9) {
		eyebrowsArray.push('oko1');
		eyebrowsArray.push('koma1');
		eyebrowsArray.push('koma2');
		eyesArray.push('toji1');
		eyesArray.push('toji2');
		eyesArray.push('ahe1');
		mouthArray.push('wa1');
		mouthArray.push('wa2');
		mouthArray.push('wa3');
		this.setTachieHoppe(1);
		this.setTachieSweat(1);
	}
	else if(faceId === 10) {
		eyebrowsArray.push('oko1');
		eyebrowsArray.push('koma1');
		eyebrowsArray.push('koma2');
		eyesArray.push('sita2');
		eyesArray.push('urusita2');
		eyesArray.push('ahe1');
		mouthArray.push('fera2');
		this.setTachieHoppe(1);
		this.setTachieSweat(1);
	}
	else if(faceId === 11) {
		eyebrowsArray.push('kiri1');
		eyebrowsArray.push('kiri2');
		eyesArray.push('mae1');
		eyesArray.push('mae2');
		mouthArray.push('mu1');
		mouthArray.push('mu2');
		mouthArray.push('mu3');
		mouthArray.push('ho1');
		this.setTachieHoppe(1);
	}
	else if(faceId === 12) {
		eyebrowsArray.push('kiri1');
		eyebrowsArray.push('kiri2');
		eyesArray.push('mae1');
		eyesArray.push('mae2');
		mouthArray.push('mu2');
		mouthArray.push('mu3');
		mouthArray.push('mu4');
		mouthArray.push('ho1');
		mouthArray.push('wa2');
		this.setTachieHoppe(1);
	}
	else if(faceId === 13) {
		eyebrowsArray.push('koma1');
		eyebrowsArray.push('koma2');
		eyebrowsArray.push('kiri1');
		eyebrowsArray.push('kiri2');
		eyesArray.push('mae3');
		eyesArray.push('toji1');
		eyesArray.push('toji2');
		mouthArray.push('mu1');
		mouthArray.push('mu2');
		mouthArray.push('mu3');
		mouthArray.push('mu4');
		mouthArray.push('wa2');
		mouthArray.push('ho1');
		this.setTachieHoppe(1);
		this.setTachieSweat(1);
	}
	else if(faceId === 14) {
		eyebrowsArray.push('koma1');
		eyebrowsArray.push('koma2');
		eyebrowsArray.push('kiri1');
		eyebrowsArray.push('kiri2');
		eyesArray.push('sita2');
		eyesArray.push('urusita1');
		eyesArray.push('urusita2');
		eyesArray.push('toji2');
		mouthArray.push('mu1');
		mouthArray.push('mu2');
		mouthArray.push('mu3');
		mouthArray.push('mu4');
		mouthArray.push('wa2');
		mouthArray.push('ho1');
		this.setTachieHoppe(1);
		this.setTachieSweat(1);
	}
	else if(faceId === 15) {
		eyebrowsArray.push('kiri1');
		eyebrowsArray.push('kiri2');
		eyesArray.push('sita1');
		eyesArray.push('sita2');
		this.setTachieHoppe(1);
	}
	else if(faceId === 16) {
		eyebrowsArray.push('koma2');
		eyebrowsArray.push('kiri1');
		eyebrowsArray.push('kiri2');
		eyesArray.push('sita1');
		eyesArray.push('sita2');
		eyesArray.push('urusita1');
		eyesArray.push('urusita2');
		mouthArray.push('fera2');
		mouthArray.push('fera3');
		mouthArray.push('fera4');
		this.setTachieHoppe(1);
	}
	else if(faceId === 17) {
		eyebrowsArray.push('koma2');
		eyebrowsArray.push('kiri1');
		eyesArray.push('toji2');
		eyesArray.push('urusita1');
		eyesArray.push('urusita2');
		mouthArray.push('fera3');
		mouthArray.push('fera4');
		this.setTachieHoppe(1);
		this.setTachieSweat(1);
	}
	else if(faceId === 18) {
		eyebrowsArray.push('koma2');
		eyebrowsArray.push('koma1');
		eyesArray.push('sita2');
		eyesArray.push('mae3');
		eyesArray.push('urusita1');
		eyesArray.push('urusita2');
		mouthArray.push('cum1');
		this.setTachieHoppe(1);
		this.setTachieSweat(1);
	}
	else if(faceId === 19) {
		eyebrowsArray.push('oko1');
		eyebrowsArray.push('koma1');
		eyebrowsArray.push('koma2');
		eyebrowsArray.push('kiri1');
		eyesArray.push('toji2');
		eyesArray.push('toji3');
		eyesArray.push('ahe1');
		eyesArray.push('urumae1');
		eyesArray.push('urumae2');
		mouthArray.push('wa1');
		mouthArray.push('wa2');
		mouthArray.push('ahe1');
		this.setTachieHoppe(1);
		this.setTachieSweat(1);
	}
	else if(faceId === 20) {
		eyebrowsArray.push('oko1');
		eyebrowsArray.push('koma1');
		eyebrowsArray.push('kiri2');
		eyebrowsArray.push('kiri1');
		eyesArray.push('ahe2');
		eyesArray.push('ahe1');
		eyesArray.push('urusita1');
		eyesArray.push('urusita2');
		mouthArray.push('fera4');
		this.setTachieHoppe(1);
		this.setTachieSweat(1);
	}
	else if(faceId === 21) {
		eyebrowsArray.push('nico1');
		eyebrowsArray.push('nico2');
		eyesArray.push('mae2');
		eyesArray.push('mae3');
		mouthArray.push('mu4');
		mouthArray.push('mu5');
		mouthArray.push('nico1');
		mouthArray.push('nico2');
		mouthArray.push('nico3');
		mouthArray.push('ahe2');
		if(isAroused) this.setTachieHoppe(1);
	}
	else if(faceId === 22) {
		eyebrowsArray.push('nico1');
		eyebrowsArray.push('nico2');
		eyesArray.push('mae2');
		eyesArray.push('urumae1');
		eyesArray.push('urumae2');
		eyesArray.push('mae3');
		mouthArray.push('ho1');
		mouthArray.push('mu5');
		mouthArray.push('nico1');
		mouthArray.push('nico2');
		mouthArray.push('nico3');
		mouthArray.push('ahe1');
		if(isAroused) this.setTachieHoppe(1);
	}
	else if(faceId === 23) {
		eyebrowsArray.push('nico1');
		eyebrowsArray.push('nico2');
		eyebrowsArray.push('kiri2');
		eyesArray.push('mae3');
		eyesArray.push('urumae1');
		eyesArray.push('urumae2');
		eyesArray.push('heartsita2');
		mouthArray.push('nico1');
		mouthArray.push('nico2');
		mouthArray.push('nico3');
		mouthArray.push('ahe1');
		mouthArray.push('ahe2');
		if(isAroused) this.setTachieHoppe(1);
		if(Math.randomInt(2) === 0) this.setTachieSweat(1);
	}
	else if(faceId === 24) {
		eyebrowsArray.push('nico1');
		eyebrowsArray.push('nico2');
		eyebrowsArray.push('kiri2');
		eyesArray.push('urumae2');
		eyesArray.push('urusita1');
		eyesArray.push('urusita2');
		eyesArray.push('heartsita2');
		mouthArray.push('nico1');
		mouthArray.push('nico2');
		mouthArray.push('nico3');
		mouthArray.push('ahe1');
		mouthArray.push('ahe2');
		if(isAroused) this.setTachieHoppe(1);
		if(Math.randomInt(2) === 0) this.setTachieSweat(1);
	}
	else if(faceId === 25) {
		eyebrowsArray.push('nico1');
		eyebrowsArray.push('nico2');
		eyesArray.push('sita1');
		eyesArray.push('sita2');
		eyesArray.push('urusita1');
		eyesArray.push('urusita2');
		eyesArray.push('heartsita2');
		if(isAroused) this.setTachieHoppe(1);
	}
	else if(faceId === 26) {
		eyebrowsArray.push('nico1');
		eyebrowsArray.push('nico2');
		eyebrowsArray.push('kiri1');
		eyebrowsArray.push('kiri2');
		eyesArray.push('mae3');
		eyesArray.push('urumae2');
		eyesArray.push('urusita1');
		eyesArray.push('urusita2');
		eyesArray.push('heartsita2');
		mouthArray.push('fera3');
		mouthArray.push('fera4');
		mouthArray.push('fera5');
		mouthArray.push('fera6');
		if(isAroused) this.setTachieHoppe(1);
	}
	else if(faceId === 27) {
		eyebrowsArray.push('nico1');
		eyebrowsArray.push('nico2');
		eyebrowsArray.push('kiri2');
		eyesArray.push('toji3');
		eyesArray.push('urusita1');
		eyesArray.push('urusita2');
		eyesArray.push('heartsita1');
		eyesArray.push('heartsita2');
		mouthArray.push('fera3');
		mouthArray.push('fera4');
		mouthArray.push('fera5');
		mouthArray.push('fera6');
		if(isAroused) this.setTachieHoppe(1);
		if(Math.randomInt(2) === 0) this.setTachieSweat(1);
	}
	else if(faceId === 28) {
		eyebrowsArray.push('nico1');
		eyebrowsArray.push('nico2');
		eyesArray.push('sita2');
		eyesArray.push('mae3');
		eyesArray.push('urusita1');
		eyesArray.push('urusita2');
		mouthArray.push('cum1');
		mouthArray.push('cum2');
		if(isAroused) this.setTachieHoppe(1);
		if(Math.randomInt(2) === 0) this.setTachieSweat(1);
	}
	else if(faceId === 29) {
		eyebrowsArray.push('oko1');
		eyebrowsArray.push('koma1');
		eyebrowsArray.push('koma2');
		eyebrowsArray.push('nico1');
		eyebrowsArray.push('nico2');
		eyesArray.push('ahe1');
		eyesArray.push('ahe2');
		eyesArray.push('heartahe1');
		eyesArray.push('heartahe2');
		eyesArray.push('heartsita1');
		eyesArray.push('heartsita2');
		mouthArray.push('wa1');
		mouthArray.push('wa2');
		mouthArray.push('ahe1');
		this.setTachieHoppe(1);
		if(Math.randomInt(2) === 0) this.setTachieSweat(1);
	}
	else if(faceId === 30) {
		eyebrowsArray.push('kiri1');
		eyebrowsArray.push('kiri2');
		eyebrowsArray.push('koma2');
		eyebrowsArray.push('nico1');
		eyebrowsArray.push('nico2');
		eyesArray.push('ahe1');
		eyesArray.push('ahe2');
		eyesArray.push('heartahe1');
		eyesArray.push('heartahe2');
		eyesArray.push('heartsita1');
		eyesArray.push('heartsita2');
		mouthArray.push('fera6');
		this.setTachieHoppe(1);
		if(Math.randomInt(2) === 0) this.setTachieSweat(1);
	}
	else if(faceId === 31) {
		eyebrowsArray.push('oko1');
		eyebrowsArray.push('koma1');
		eyebrowsArray.push('koma2');
		eyesArray.push('toji1');
		eyesArray.push('toji2');
		eyesArray.push('toji3');
		mouthArray.push('fera1');
		mouthArray.push('fera2');
		this.setTachieHoppe(1);
		this.setTachieSweat(1);
	}
	else if(faceId === 32) {
		eyebrowsArray.push('koma1');
		eyebrowsArray.push('koma2');
		eyebrowsArray.push('kiri1');
		eyesArray.push('mae3');
		eyesArray.push('toji1');
		eyesArray.push('toji2');
		eyesArray.push('urumae1');
		mouthArray.push('fera2');
		mouthArray.push('fera3');
		mouthArray.push('fera4');
		this.setTachieHoppe(1);
		this.setTachieSweat(1);
	}
	else if(faceId === 33) {
		eyebrowsArray.push('nico1');
		eyebrowsArray.push('nico2');
		eyebrowsArray.push('kiri2');
		eyesArray.push('urumae1');
		eyesArray.push('urumae2');
		eyesArray.push('heartmae1');
		eyesArray.push('heartmae2');
		mouthArray.push('fera3');
		mouthArray.push('fera4');
		mouthArray.push('fera5');
		mouthArray.push('fera6');
		if(isAroused) this.setTachieHoppe(1);
		if(Math.randomInt(2) === 0) this.setTachieSweat(1);
	}
	
	if(eyebrowsArray.length > 0) {
		this.setTachieEyebrows(eyebrowsArray[Math.randomInt(eyebrowsArray.length)]);
	}
	if(eyesArray.length > 0) {
		this.setTachieEyes(eyesArray[Math.randomInt(eyesArray.length)]);
	}
	if(mouthArray.length > 0) {
		this.setTachieMouth(mouthArray[Math.randomInt(mouthArray.length)]);
	}
	else this.resetTachieMouth();
	
	if(this.tachieMouth.includes('fera'))
		this.setTachieStrayFaceExtension(ConfigManager.convertedTachieMouthName(this) + '_');
	else if(this.tachieMouth.includes('ahe2'))
		this.setTachieStrayFaceExtension('ahe2_');
	else
		this.resetTachieStrayFaceExtension();
	
	this.setAllowTachieEmoteUpdate(true);
};

// Defeated Level Two
Game_Actor.prototype.emoteDefeatedLevelTwoPose = function() {
	this.setAllowTachieEmoteUpdate(false);
	let justOrgasmed = this.didLastGetHitBySkillType(JUST_SKILLTYPE_KARRYN_ORGASM) || this.justOrgasmed();
	let isAroused = this.isAroused() || justOrgasmed;
	let isTwoThirdsWayToOrgasm = this.isTwoThirdsWayToOrgasm();
	let lastHitPussySex = this.didLastGetHitBySkillType(JUST_SKILLTYPE_ENEMY_PUSSY_SEX) || this.didLastGetHitBySkillType(JUST_SKILLTYPE_KARRYN_PUSSY_SEX);
	let lastHitAnalSex = this.didLastGetHitBySkillType(JUST_SKILLTYPE_ENEMY_ANAL_SEX) || this.didLastGetHitBySkillType(JUST_SKILLTYPE_KARRYN_ANAL_SEX) || this.didLastGetHitBySkillType(JUST_SKILLTYPE_ENEMY_TOY_PLAY_ANAL);
	let justGotPussyCreampie = this.didLastGetHitBySkillType(JUST_SKILLTYPE_ENEMY_PUSSY_CREAMPIE);
	let justGotAnalCreampie = this.didLastGetHitBySkillType(JUST_SKILLTYPE_ENEMY_ANAL_CREAMPIE);
	let karrynGotBukkaked = this.didLastGetHitBySkillType(JUST_SKILLTYPE_ENEMY_BUKKAKE);
	let karrynGotSadismSkilled = this.didLastGetHitBySkillType(JUST_SKILLTYPE_ENEMY_SADISM) || this.didLastGetHitBySkillType(JUST_SKILLTYPE_ENEMY_SPANKING);
	let justGotHarassed = this.didLastGetHitBySkillType(JUST_SKILLTYPE_ENEMY_PETTING) || this.didLastGetHitBySkillType(JUST_SKILLTYPE_ENEMY_TALK) || this.didLastGetHitBySkillType(JUST_SKILLTYPE_ENEMY_KISS) || this.didLastGetHitBySkillType(JUST_SKILLTYPE_ENEMY_TOY_PLAY) || this.didLastGetHitBySkillType(JUST_SKILLTYPE_ENEMY_STRIP) || this.didLastGetHitBySkillType(JUST_SKILLTYPE_PASSIVE_TOY);
	
	let generalReactionScore = this.getReactionScore();
	let orgasmReactionScore = this.getOrgasmReactionScore();
	let bukkakeReactionScore = this.getBukkakeReactionScore();
	let pussyCreampieReactionScore = this.getPussyCreampieReactionScore();
	let analCreampieReactionScore = this.getAnalCreampieReactionScore();
	
	let generallvl3 = generalReactionScore >= VAR_DEF_RS_LV3_REQ;
	let generallvl2 = generalReactionScore >= VAR_DEF_RS_LV2_REQ;
	let orgasmlvl3 = orgasmReactionScore >= VAR_DEF_RS_LV3_REQ;
	let orgasmlvl2 = orgasmReactionScore >= VAR_DEF_RS_LV2_REQ;
	let bukkakelvl3 = bukkakeReactionScore  >= VAR_DEF_RS_LV3_REQ;
	let bukkakelvl2 = bukkakeReactionScore >= VAR_DEF_RS_LV2_REQ;
	let pussyCreampielvl3 = pussyCreampieReactionScore  >= VAR_DEF_RS_LV3_REQ;
	let pussyCreampielvl2 = pussyCreampieReactionScore >= VAR_DEF_RS_LV2_REQ;
	let analCreampielvl3 = analCreampieReactionScore  >= VAR_DEF_RS_LV3_REQ;
	let analCreampielvl2 = analCreampieReactionScore >= VAR_DEF_RS_LV2_REQ;
	
	let faceArray = [];
	this.resetTachieHoppe();
	this.resetTachieSweat();
	
	if(justGotPussyCreampie) {
		if(pussyCreampielvl3) 
			faceArray.push(18);
		else if(pussyCreampielvl2) 
			faceArray.push(11);
		else
			faceArray.push(4);
	}
	else if(justGotAnalCreampie) {
		if(pussyCreampielvl3) 
			faceArray.push(18);
		else if(pussyCreampielvl2) 
			faceArray.push(11);
		else
			faceArray.push(4);
	}
	else if(justOrgasmed) {
		if(bukkakelvl3) 
			faceArray.push(21);
		else if(bukkakelvl2) 
			faceArray.push(14);
		else
			faceArray.push(7);
	}
	else if(karrynGotBukkaked) {
		if(bukkakelvl3) 
			faceArray.push(20);
		else if(bukkakelvl2) 
			faceArray.push(13);
		else
			faceArray.push(6);
	}
	else if(lastHitPussySex || lastHitAnalSex) {
		if(generallvl3) 
			faceArray.push(17);
		else if(generallvl2) 
			faceArray.push(10);
		else
			faceArray.push(3);
	}
	else if(karrynGotSadismSkilled) {
		if(generallvl3) 
			faceArray.push(16);
		else if(generallvl2) 
			faceArray.push(9);
		else
			faceArray.push(2);
	}
	else if(justGotHarassed) {
		if(generallvl3) 
			faceArray.push(19);
		else if(generallvl2) 
			faceArray.push(12);
		else
			faceArray.push(5);
	}
	else {
		if(generallvl3) 
			faceArray.push(15);
		else if(generallvl2) 
			faceArray.push(8);
		else
			faceArray.push(1);
	}

	let faceId = faceArray[Math.randomInt(faceArray.length)];
	let eyebrowsArray = [];
	let eyesArray = [];
	let mouthArray = [];
	
	if(faceId === 1) {
		eyebrowsArray.push('koma1');
		eyebrowsArray.push('koma2');
		eyebrowsArray.push('oko1');
		eyesArray.push('mae1');
		eyesArray.push('mae2');
		eyesArray.push('yoko1');
		eyesArray.push('yoko2');
		mouthArray.push('ku1');
		mouthArray.push('ho1');
		mouthArray.push('mu1');
		mouthArray.push('wa2');
		this.setTachieHoppe(1);
		this.setTachieSweat(1);
	}
	else if(faceId === 2) {
		eyebrowsArray.push('koma1');
		eyebrowsArray.push('koma2');
		eyesArray.push('mae2');
		eyesArray.push('urumae2');
		eyesArray.push('toji1');
		mouthArray.push('ku1');
		mouthArray.push('wa1');
		mouthArray.push('wa2');
		this.setTachieHoppe(1);
		this.setTachieSweat(1);
	}
	else if(faceId === 3) {
		eyebrowsArray.push('koma1');
		eyebrowsArray.push('koma2');
		eyebrowsArray.push('oko1');
		eyesArray.push('yoko1');
		eyesArray.push('yoko2');
		mouthArray.push('ho1');
		mouthArray.push('mu1');
		mouthArray.push('mu2');
		mouthArray.push('wa1');
		mouthArray.push('wa2');
		this.setTachieHoppe(1);
		this.setTachieSweat(1);
	}
	else if(faceId === 4) {
		eyebrowsArray.push('koma1');
		eyebrowsArray.push('koma2');
		eyebrowsArray.push('oko1');
		eyesArray.push('yoko1');
		eyesArray.push('yoko2');
		eyesArray.push('uruyoko2');
		mouthArray.push('ho1');
		mouthArray.push('ho2');
		mouthArray.push('ho3');
		mouthArray.push('wa2');
		mouthArray.push('ahe1');
		mouthArray.push('ahe2');
		this.setTachieHoppe(1);
		this.setTachieSweat(1);
	}
	else if(faceId === 5) {
		eyebrowsArray.push('koma1');
		eyebrowsArray.push('koma2');
		eyebrowsArray.push('oko1');
		eyesArray.push('mae1');
		eyesArray.push('mae2');
		mouthArray.push('wa1');
		mouthArray.push('wa2');
		mouthArray.push('ahe1');
		mouthArray.push('ahe2');
		this.setTachieHoppe(1);
		this.setTachieSweat(1);
	}
	else if(faceId === 6) {
		eyebrowsArray.push('koma1');
		eyebrowsArray.push('koma2');
		eyebrowsArray.push('oko1');
		eyesArray.push('mae1');
		eyesArray.push('mae2');
		mouthArray.push('ku1');
		mouthArray.push('ho1');
		mouthArray.push('ho2');
		mouthArray.push('wa2');
		mouthArray.push('mu1');
		mouthArray.push('mu2');
		this.setTachieHoppe(1);
		this.setTachieSweat(1);
	}
	else if(faceId === 7) {
		eyebrowsArray.push('koma1');
		eyebrowsArray.push('koma2');
		eyebrowsArray.push('oko1');
		eyesArray.push('mae2');
		eyesArray.push('urumae1');
		eyesArray.push('urumae2');
		eyesArray.push('toji1');
		mouthArray.push('wa1');
		mouthArray.push('ahe3');
		mouthArray.push('ahe1');
		mouthArray.push('ahe2');
		this.setTachieHoppe(1);
		this.setTachieSweat(1);
	}
	else if(faceId === 8) {
		eyebrowsArray.push('kiri1');
		eyebrowsArray.push('kiri2');
		eyesArray.push('mae1');
		eyesArray.push('mae2');
		eyesArray.push('yoko1');
		eyesArray.push('yoko2');
		mouthArray.push('ho1');
		mouthArray.push('ho2');
		mouthArray.push('ho3');
		mouthArray.push('mu1');
		mouthArray.push('mu2');
		this.setTachieHoppe(1);
	}
	else if(faceId === 9) {
		eyebrowsArray.push('kiri1');
		eyebrowsArray.push('kiri2');
		eyebrowsArray.push('koma1');
		eyebrowsArray.push('koma2');
		eyesArray.push('mae2');
		eyesArray.push('urumae1');
		eyesArray.push('urumae2');
		eyesArray.push('toji1');
		mouthArray.push('ho1');
		mouthArray.push('ho3');
		mouthArray.push('wa2');
		mouthArray.push('ahe2');
		mouthArray.push('ahe3');
		this.setTachieHoppe(1);
		this.setTachieSweat(1);
	}
	else if(faceId === 10) {
		eyebrowsArray.push('kiri1');
		eyebrowsArray.push('kiri2');
		eyesArray.push('yoko1');
		eyesArray.push('yoko2');
		eyesArray.push('uruyoko2');
		mouthArray.push('ho1');
		mouthArray.push('ho3');
		mouthArray.push('ho2');
		mouthArray.push('mu2');
		mouthArray.push('wa2');
		this.setTachieHoppe(1);
	}
	else if(faceId === 11) {
		eyebrowsArray.push('kiri1');
		eyebrowsArray.push('kiri2');
		eyebrowsArray.push('koma2');
		eyesArray.push('yoko1');
		eyesArray.push('yoko2');
		eyesArray.push('uruyoko1');
		eyesArray.push('uruyoko2');
		mouthArray.push('ho1');
		mouthArray.push('ho3');
		mouthArray.push('ho2');
		mouthArray.push('ahe1');
		mouthArray.push('ahe2');
		mouthArray.push('wa2');
		this.setTachieHoppe(1);
		this.setTachieSweat(1);
	}
	else if(faceId === 12) {
		eyebrowsArray.push('kiri1');
		eyebrowsArray.push('kiri2');
		eyebrowsArray.push('koma2');
		eyesArray.push('mae1');
		eyesArray.push('mae2');
		eyesArray.push('urumae1');
		eyesArray.push('urumae2');
		mouthArray.push('ho1');
		mouthArray.push('ho3');
		mouthArray.push('ho2');
		mouthArray.push('wa2');
		this.setTachieHoppe(1);
		this.setTachieSweat(1);
	}
	else if(faceId === 13) {
		eyebrowsArray.push('kiri1');
		eyebrowsArray.push('kiri2');
		eyesArray.push('mae1');
		eyesArray.push('mae2');
		eyesArray.push('urumae1');
		eyesArray.push('urumae2');
		mouthArray.push('ho2');
		mouthArray.push('ho3');
		mouthArray.push('mu1');
		mouthArray.push('wa2');
		mouthArray.push('ahe2');
		this.setTachieHoppe(1);
	}
	else if(faceId === 14) {
		eyebrowsArray.push('kiri1');
		eyebrowsArray.push('kiri2');
		eyebrowsArray.push('koma1');
		eyesArray.push('mae2');
		eyesArray.push('urumae2');
		eyesArray.push('toji1');
		eyesArray.push('ahe1');
		eyesArray.push('heartmae2');
		mouthArray.push('wa1');
		mouthArray.push('wa2');
		mouthArray.push('ahe1');
		mouthArray.push('ahe2');
		mouthArray.push('ahe3');
		mouthArray.push('ahe4');
		this.setTachieHoppe(1);
		this.setTachieSweat(1);
	}
	else if(faceId === 15) {
		eyebrowsArray.push('nico1');
		eyebrowsArray.push('nico2');
		eyesArray.push('mae1');
		eyesArray.push('mae2');
		eyesArray.push('yoko1');
		eyesArray.push('yoko2');
		mouthArray.push('nico1');
		mouthArray.push('nico2');
		mouthArray.push('nico3');
		mouthArray.push('pero1');
		mouthArray.push('ahe5');
		mouthArray.push('ahe6');
		if(isAroused) this.setTachieHoppe(1);
	}
	else if(faceId === 16) {
		eyebrowsArray.push('nico1');
		eyebrowsArray.push('nico2');
		eyebrowsArray.push('koma1');
		eyebrowsArray.push('kiri2');
		eyesArray.push('urumae1');
		eyesArray.push('urumae2');
		eyesArray.push('heartmae1');
		eyesArray.push('heartmae2');
		mouthArray.push('nico2');
		mouthArray.push('nico3');
		mouthArray.push('ahe2');
		mouthArray.push('ahe5');
		mouthArray.push('ahe6');
		if(isAroused) this.setTachieHoppe(1);
		if(Math.randomInt(2) === 0) this.setTachieSweat(1);
	}
	else if(faceId === 17) {
		eyebrowsArray.push('nico1');
		eyebrowsArray.push('nico2');
		eyesArray.push('yoko1');
		eyesArray.push('yoko2');
		eyesArray.push('uruyoko1');
		eyesArray.push('uruyoko2');
		mouthArray.push('nico1');
		mouthArray.push('nico2');
		mouthArray.push('nico3');
		mouthArray.push('pero1');
		mouthArray.push('ahe5');
		mouthArray.push('ahe6');
		if(isAroused) this.setTachieHoppe(1);
	}
	else if(faceId === 18) {
		eyebrowsArray.push('nico1');
		eyebrowsArray.push('nico2');
		eyesArray.push('toji1');
		eyesArray.push('uruyoko1');
		eyesArray.push('uruyoko2');
		eyesArray.push('heartyoko1');
		eyesArray.push('heartyoko2');
		mouthArray.push('nico2');
		mouthArray.push('nico3');
		mouthArray.push('ahe3');
		mouthArray.push('ahe5');
		mouthArray.push('ahe6');
		mouthArray.push('wa2');
		this.setTachieHoppe(1);
		if(Math.randomInt(2) === 0) this.setTachieSweat(1);
	}
	else if(faceId === 19) {
		eyebrowsArray.push('nico1');
		eyebrowsArray.push('nico2');
		eyesArray.push('mae2');
		eyesArray.push('urumae1');
		eyesArray.push('urumae2');
		eyesArray.push('heartmae1');
		eyesArray.push('heartmae2');
		mouthArray.push('nico2');
		mouthArray.push('nico2');
		mouthArray.push('ahe4');
		mouthArray.push('ahe5');
		mouthArray.push('ahe6');
		if(isAroused) this.setTachieHoppe(1);
		if(Math.randomInt(2) === 0) this.setTachieSweat(1);
	}
	else if(faceId === 20) {
		eyebrowsArray.push('nico1');
		eyebrowsArray.push('nico2');
		eyesArray.push('urumae1');
		eyesArray.push('urumae2');
		eyesArray.push('heartmae1');
		eyesArray.push('heartmae2');
		mouthArray.push('nico1');
		mouthArray.push('nico2');
		mouthArray.push('nico3');
		mouthArray.push('pero1');
		mouthArray.push('mu2');
		if(isAroused) this.setTachieHoppe(1);
	}
	else if(faceId === 21) {
		eyebrowsArray.push('nico1');
		eyebrowsArray.push('nico2');
		eyesArray.push('ahe1');
		eyesArray.push('heartahe1');
		eyesArray.push('urumae2');
		eyesArray.push('heartmae1');
		eyesArray.push('heartmae2');
		eyesArray.push('toji1');
		mouthArray.push('wa1');
		mouthArray.push('wa2');
		mouthArray.push('ahe1');
		mouthArray.push('ahe2');
		mouthArray.push('ahe3');
		mouthArray.push('ahe4');
		mouthArray.push('ahe5');
		mouthArray.push('ahe6');
		mouthArray.push('ahe7');
		this.setTachieHoppe(1);
		this.setTachieSweat(1);
	}
	
	if(eyebrowsArray.length > 0) {
		this.setTachieEyebrows(eyebrowsArray[Math.randomInt(eyebrowsArray.length)]);
	}
	if(eyesArray.length > 0) {
		this.setTachieEyes(eyesArray[Math.randomInt(eyesArray.length)]);
	}
	if(mouthArray.length > 0) {
		this.setTachieMouth(mouthArray[Math.randomInt(mouthArray.length)]);
	}

	this.setAllowTachieEmoteUpdate(true);
};


// Defeated Level Three
Game_Actor.prototype.emoteDefeatedLevelThreePose = function() {
	this.setAllowTachieEmoteUpdate(false);
	let justOrgasmed = this.didLastGetHitBySkillType(JUST_SKILLTYPE_KARRYN_ORGASM) || this.justOrgasmed();
	let isAroused = this.isAroused() || justOrgasmed;
	
	let givingBJ = this.isBodySlotPenis(MOUTH_ID);
	let givingPaizuri = this.isBodySlotPenis(BOOBS_ID);
	
	let lastHitSex = this.didLastGetHitBySkillType(JUST_SKILLTYPE_ENEMY_PUSSY_SEX) || this.didLastGetHitBySkillType(JUST_SKILLTYPE_ENEMY_ANAL_SEX) || this.didLastGetHitBySkillType(JUST_SKILLTYPE_KARRYN_PUSSY_SEX) || this.didLastGetHitBySkillType(JUST_SKILLTYPE_KARRYN_ANAL_SEX) || this.didLastGetHitBySkillType(JUST_SKILLTYPE_ENEMY_TOY_PLAY_PUSSY) || this.didLastGetHitBySkillType(JUST_SKILLTYPE_ENEMY_TOY_PLAY_ANAL);
	
	let karrynSwallowingCum = this.didLastGetHitBySkillType(JUST_SKILLTYPE_ENEMY_CUM_SWALLOW);
	let justGotPussyCreampie = this.didLastGetHitBySkillType(JUST_SKILLTYPE_ENEMY_PUSSY_CREAMPIE);
	let justGotAnalCreampie = this.didLastGetHitBySkillType(JUST_SKILLTYPE_ENEMY_ANAL_CREAMPIE);
	let karrynGotBukkaked = this.didLastGetHitBySkillType(JUST_SKILLTYPE_ENEMY_BUKKAKE);

	let generalReactionScore = this.getReactionScore();
	let orgasmReactionScore = this.getOrgasmReactionScore();
	let bukkakeReactionScore = this.getBukkakeReactionScore();
	let swallowReactionScore = this.getSwallowReactionScore();
	let pussyCreampieReactionScore = this.getPussyCreampieReactionScore();
	let analCreampieReactionScore = this.getAnalCreampieReactionScore();
	
	let generallvl3 = generalReactionScore >= VAR_DEF_RS_LV3_REQ;
	let generallvl2 = generalReactionScore >= VAR_DEF_RS_LV2_REQ;
	let orgasmlvl3 = orgasmReactionScore >= VAR_DEF_RS_LV3_REQ;
	let orgasmlvl2 = orgasmReactionScore >= VAR_DEF_RS_LV2_REQ;
	let bukkakelvl3 = bukkakeReactionScore >= VAR_DEF_RS_LV3_REQ;
	let bukkakelvl2 = bukkakeReactionScore >= VAR_DEF_RS_LV2_REQ;
	let swallowlvl3 = swallowReactionScore  >= VAR_DEF_RS_LV3_REQ;
	let swallowlvl2 = swallowReactionScore >= VAR_DEF_RS_LV2_REQ;
	let pussyCreampielvl3 = pussyCreampieReactionScore  >= VAR_DEF_RS_LV3_REQ;
	let pussyCreampielvl2 = pussyCreampieReactionScore >= VAR_DEF_RS_LV2_REQ;
	let analCreampielvl3 = analCreampieReactionScore  >= VAR_DEF_RS_LV3_REQ;
	let analCreampielvl2 = analCreampieReactionScore >= VAR_DEF_RS_LV2_REQ;
	
	
	if(!this.isWearingGlovesAndHat()) {
		if(Karryn.isCensored())
			this.setTachieBody('naked_1_cen');
		else
			this.setTachieBody('naked_1');
		
		this.resetTachieTie();
	}
	else {
		if(Karryn.isCensored())
			this.setTachieBody('1_cen');
		else
			this.setTachieBody('1');
		
		if(givingPaizuri)
			this.setTachieTie('zuri');
		else
			this.setTachieTie('normal');
	}
	
	let faceArray = [];
	this.resetTachieHoppe();
	this.resetTachieSweat();
	
	if(givingBJ) {
		if(karrynSwallowingCum) {
			if(swallowlvl3) 
				faceArray.push(19);
			else if(swallowlvl2) 
				faceArray.push(12);
			else
				faceArray.push(5);
		}
		else if(justOrgasmed) {
			if(orgasmlvl3) 
				faceArray.push(21);
			else if(orgasmlvl2) 
				faceArray.push(14);
			else
				faceArray.push(7);
		}
		else {
			if(generallvl3) 
				faceArray.push(17);
			else if(generallvl2) 
				faceArray.push(10);
			else
				faceArray.push(3);
		}
	}
	else if(justGotPussyCreampie || justGotAnalCreampie) {
		if(justGotPussyCreampie) {
			if(pussyCreampielvl3) 
				faceArray.push(18);
			else if(pussyCreampielvl2) 
				faceArray.push(11);
			else
				faceArray.push(4);
		}
		else if(justGotAnalCreampie) {
			if(analCreampielvl3) 
				faceArray.push(18);
			else if(analCreampielvl2) 
				faceArray.push(11);
			else
				faceArray.push(4);
		}
	}
	else if(justOrgasmed) {
		if(orgasmlvl3) 
			faceArray.push(20);
		else if(orgasmlvl2) 
			faceArray.push(13);
		else
			faceArray.push(6);
	}
	else if(lastHitSex) {
		if(generallvl3) 
			faceArray.push(16);
		else if(generallvl2) 
			faceArray.push(9);
		else
			faceArray.push(2);
	}
	else {
		if(generallvl3) 
			faceArray.push(15);
		else if(generallvl2) 
			faceArray.push(8);
		else
			faceArray.push(1);
	}
	
	let faceId = faceArray[Math.randomInt(faceArray.length)];
	let eyebrowsArray = [];
	let eyesArray = [];
	let mouthArray = [];
	
	if(faceId === 1) {
		eyebrowsArray.push('koma1');
		eyebrowsArray.push('koma2');
		eyebrowsArray.push('oko1');
		eyesArray.push('mae1');
		eyesArray.push('mae2');
		mouthArray.push('ku1');
		mouthArray.push('ku2');
		mouthArray.push('wa1');
		this.setTachieHoppe(1);
		this.setTachieSweat(1);
	}
	else if(faceId === 2) {
		eyebrowsArray.push('koma1');
		eyebrowsArray.push('koma2');
		eyebrowsArray.push('oko1');
		eyesArray.push('mae3');
		eyesArray.push('mae2');
		mouthArray.push('ku3');
		mouthArray.push('ho1');
		mouthArray.push('ho2');
		mouthArray.push('wa1');
		this.setTachieHoppe(1);
		this.setTachieSweat(1);
	}
	else if(faceId === 3) {
		eyebrowsArray.push('koma1');
		eyebrowsArray.push('koma2');
		eyebrowsArray.push('oko1');
		eyesArray.push('mae1');
		eyesArray.push('mae2');
		eyesArray.push('mae3');
		mouthArray.push('fera1');
		this.setTachieHoppe('fera_1');
		this.setTachieSweat(1);
	}
	else if(faceId === 4) {
		eyebrowsArray.push('koma1');
		eyebrowsArray.push('koma2');
		eyebrowsArray.push('oko1');
		eyesArray.push('mae3');
		eyesArray.push('toji1');
		mouthArray.push('ku1');
		mouthArray.push('ku3');
		mouthArray.push('ho1');
		mouthArray.push('wa1');
		mouthArray.push('wa2');
		this.setTachieHoppe(1);
		this.setTachieSweat(1);
	}
	else if(faceId === 5) {
		eyebrowsArray.push('koma1');
		eyebrowsArray.push('koma2');
		eyebrowsArray.push('oko1');
		eyesArray.push('mae3');
		eyesArray.push('toji1');
		mouthArray.push('fera2');
		this.setTachieHoppe('fera_1');
		this.setTachieSweat(1);
	}
	else if(faceId === 6) {
		eyebrowsArray.push('koma1');
		eyebrowsArray.push('koma2');
		eyebrowsArray.push('oko1');
		eyesArray.push('mae3');
		eyesArray.push('toji1');
		eyesArray.push('urumae1');
		eyesArray.push('urumae2');
		mouthArray.push('ahe3');
		mouthArray.push('ku1');
		mouthArray.push('ho1');
		mouthArray.push('wa1');
		mouthArray.push('wa2');
		this.setTachieHoppe(1);
		this.setTachieSweat(1);
	}
	else if(faceId === 7) {
		eyebrowsArray.push('koma1');
		eyebrowsArray.push('koma2');
		eyebrowsArray.push('oko1');
		eyesArray.push('mae3');
		eyesArray.push('toji1');
		eyesArray.push('urumae1');
		eyesArray.push('urumae2');
		mouthArray.push('fera1');
		mouthArray.push('fera2');
		this.setTachieHoppe('fera_1');
		this.setTachieSweat(1);
	}
	else if(faceId === 8) {
		eyebrowsArray.push('koma1');
		eyebrowsArray.push('koma2');
		eyebrowsArray.push('kiri1');
		eyesArray.push('mae1');
		eyesArray.push('mae2');
		mouthArray.push('ku2');
		mouthArray.push('ku3');
		mouthArray.push('ho3');
		mouthArray.push('chu1');
		this.setTachieHoppe(1);
	}
	else if(faceId === 9) {
		eyebrowsArray.push('koma1');
		eyebrowsArray.push('koma2');
		eyebrowsArray.push('kiri1');
		eyesArray.push('mae1');
		eyesArray.push('mae2');
		mouthArray.push('ku1');
		mouthArray.push('ku2');
		mouthArray.push('ku3');
		mouthArray.push('ho2');
		mouthArray.push('ho3');
		mouthArray.push('wa2');
		this.setTachieHoppe(1);
		this.setTachieSweat(1);
	}
	else if(faceId === 10) {
		eyebrowsArray.push('koma1');
		eyebrowsArray.push('koma2');
		eyebrowsArray.push('oko1');
		eyesArray.push('mae1');
		eyesArray.push('mae2');
		eyesArray.push('mae3');
		mouthArray.push('fera2');
		mouthArray.push('fera3');
		this.setTachieHoppe('fera_1');
	}
	else if(faceId === 11) {
		eyebrowsArray.push('koma1');
		eyebrowsArray.push('koma2');
		eyebrowsArray.push('kiri1');
		eyesArray.push('mae2');
		eyesArray.push('mae3');
		mouthArray.push('ahe1');
		mouthArray.push('ahe3');
		mouthArray.push('ho1');
		mouthArray.push('ho2');
		mouthArray.push('wa1');
		mouthArray.push('wa2');
		this.setTachieHoppe(1);
		this.setTachieSweat(1);
	}
	else if(faceId === 12) {
		eyebrowsArray.push('koma1');
		eyebrowsArray.push('koma2');
		eyebrowsArray.push('kiri1');
		eyesArray.push('mae2');
		eyesArray.push('mae3');
		mouthArray.push('fera2');
		mouthArray.push('fera3');
		this.setTachieHoppe('fera_1');
		this.setTachieSweat(1);
	}
	else if(faceId === 13) {
		eyebrowsArray.push('koma1');
		eyebrowsArray.push('koma2');
		eyesArray.push('mae3');
		eyesArray.push('toji1');
		eyesArray.push('urumae1');
		eyesArray.push('urumae2');
		mouthArray.push('ahe1');
		mouthArray.push('ahe3');
		mouthArray.push('ahe4');
		mouthArray.push('ho1');
		mouthArray.push('ho2');
		mouthArray.push('ho3');
		this.setTachieHoppe(1);
		this.setTachieSweat(1);
	}
	else if(faceId === 14) {
		eyebrowsArray.push('koma1');
		eyebrowsArray.push('koma2');
		eyesArray.push('mae3');
		eyesArray.push('toji1');
		eyesArray.push('urumae1');
		eyesArray.push('urumae2');
		eyesArray.push('ahe1');
		mouthArray.push('fera2');
		mouthArray.push('fera3');
		this.setTachieHoppe('fera_1');
		this.setTachieSweat(1);
	}
	else if(faceId === 15) {
		eyebrowsArray.push('nico1');
		eyebrowsArray.push('nico2');
		eyebrowsArray.push('kiri1');
		eyesArray.push('mae1');
		eyesArray.push('mae2');
		mouthArray.push('nico1');
		mouthArray.push('nico2');
		mouthArray.push('nico3');
		mouthArray.push('pero1');
		mouthArray.push('ahe2');
		mouthArray.push('chu1');
		if(isAroused) this.setTachieHoppe(1);
	}
	else if(faceId === 16) {
		eyebrowsArray.push('nico1');
		eyebrowsArray.push('nico2');
		eyebrowsArray.push('kiri1');
		eyesArray.push('mae1');
		eyesArray.push('mae2');
		mouthArray.push('nico1');
		mouthArray.push('nico4');
		mouthArray.push('nico3');
		mouthArray.push('ho2');
		mouthArray.push('ho3');
		mouthArray.push('pero1');
		mouthArray.push('ahe2');
		if(isAroused) this.setTachieHoppe(1);
		if(Math.randomInt(2) === 0) this.setTachieSweat(1);
	}
	else if(faceId === 17) {
		eyebrowsArray.push('nico1');
		eyebrowsArray.push('nico2');
		eyebrowsArray.push('kiri1');
		eyesArray.push('mae1');
		eyesArray.push('mae2');
		eyesArray.push('urumae1');
		eyesArray.push('urumae2');
		mouthArray.push('fera2');
		mouthArray.push('fera3');
		mouthArray.push('fera4');
		if(isAroused) this.setTachieHoppe('fera_1');
	}
	else if(faceId === 18) {
		eyebrowsArray.push('nico1');
		eyebrowsArray.push('nico2');
		eyebrowsArray.push('kiri1');
		eyebrowsArray.push('koma2');
		eyesArray.push('mae3');
		eyesArray.push('mae2');
		eyesArray.push('urumae1');
		eyesArray.push('urumae2');
		mouthArray.push('ho2');
		mouthArray.push('pero1');
		mouthArray.push('ahe1');
		mouthArray.push('ahe2');
		mouthArray.push('ahe3');
		mouthArray.push('nico4');
		mouthArray.push('nico3');
		mouthArray.push('chu1');
		if(isAroused) this.setTachieHoppe(1);
		if(Math.randomInt(2) === 0) this.setTachieSweat(1);
	}
	else if(faceId === 19) {
		eyebrowsArray.push('nico1');
		eyebrowsArray.push('nico2');
		eyebrowsArray.push('kiri1');
		eyebrowsArray.push('koma2');
		eyesArray.push('mae3');
		eyesArray.push('mae2');
		eyesArray.push('urumae1');
		eyesArray.push('urumae2');
		mouthArray.push('fera2');
		mouthArray.push('fera3');
		mouthArray.push('fera4');
		if(isAroused) this.setTachieHoppe('fera_1');
		if(Math.randomInt(2) === 0) this.setTachieSweat(1);
	}
	else if(faceId === 20) {
		eyebrowsArray.push('nico1');
		eyebrowsArray.push('nico2');
		eyebrowsArray.push('oko1');
		eyebrowsArray.push('koma1');
		eyesArray.push('toji1');
		eyesArray.push('ahe1');
		eyesArray.push('urumae1');
		eyesArray.push('urumae2');
		eyesArray.push('heartmae1');
		eyesArray.push('heartmae2');
		mouthArray.push('ho1');
		mouthArray.push('ho2');
		mouthArray.push('wa1');
		mouthArray.push('ahe1');
		mouthArray.push('ahe2');
		mouthArray.push('ahe3');
		mouthArray.push('ahe4');
		this.setTachieHoppe(1);
		this.setTachieSweat(1);
	}
	else if(faceId === 21) {
		eyebrowsArray.push('nico1');
		eyebrowsArray.push('nico2');
		eyebrowsArray.push('oko1');
		eyebrowsArray.push('koma1');
		eyesArray.push('toji1');
		eyesArray.push('ahe1');
		eyesArray.push('urumae1');
		eyesArray.push('urumae2');
		eyesArray.push('heartmae1');
		eyesArray.push('heartmae2');
		mouthArray.push('fera3');
		mouthArray.push('fera4');
		this.setTachieHoppe('fera_1');
		this.setTachieSweat(1);
	}
	
	if(eyebrowsArray.length > 0) {
		this.setTachieEyebrows(eyebrowsArray[Math.randomInt(eyebrowsArray.length)]);
	}
	if(eyesArray.length > 0) {
		this.setTachieEyes(eyesArray[Math.randomInt(eyesArray.length)]);
	}
	if(mouthArray.length > 0) {
		this.setTachieMouth(mouthArray[Math.randomInt(mouthArray.length)]);
	}
	
	if(this.tachieMouth.includes('fera'))
		this.setTachieStrayFaceExtension(ConfigManager.convertedTachieMouthName(this) + '_');
	else
		this.resetTachieStrayFaceExtension();
	
	this.setAllowTachieEmoteUpdate(true);
};

// Defeated Level Four
Game_Actor.prototype.emoteDefeatedLevelFourPose = function() {
	this.setAllowTachieEmoteUpdate(false);
	let justOrgasmed = this.didLastGetHitBySkillType(JUST_SKILLTYPE_KARRYN_ORGASM) || this.justOrgasmed();
	let isAroused = this.isAroused() || justOrgasmed;
	
	let givingBJ = this.isBodySlotPenis(MOUTH_ID);
	
	let lastHitSex = this.didLastGetHitBySkillType(JUST_SKILLTYPE_ENEMY_PUSSY_SEX) || this.didLastGetHitBySkillType(JUST_SKILLTYPE_ENEMY_ANAL_SEX) || this.didLastGetHitBySkillType(JUST_SKILLTYPE_KARRYN_PUSSY_SEX) || this.didLastGetHitBySkillType(JUST_SKILLTYPE_KARRYN_ANAL_SEX) || this.didLastGetHitBySkillType(JUST_SKILLTYPE_ENEMY_TOY_PLAY_PUSSY) || this.didLastGetHitBySkillType(JUST_SKILLTYPE_ENEMY_TOY_PLAY_ANAL);
	let justGotSpanked = this.didLastGetHitBySkillType(JUST_SKILLTYPE_ENEMY_SPANKING);
	
	let karrynSwallowingCum = this.didLastGetHitBySkillType(JUST_SKILLTYPE_ENEMY_CUM_SWALLOW);
	let justGotPussyCreampie = this.didLastGetHitBySkillType(JUST_SKILLTYPE_ENEMY_PUSSY_CREAMPIE);
	let justGotAnalCreampie = this.didLastGetHitBySkillType(JUST_SKILLTYPE_ENEMY_ANAL_CREAMPIE);
	let karrynGotBukkaked = this.didLastGetHitBySkillType(JUST_SKILLTYPE_ENEMY_BUKKAKE);


	let generalReactionScore = this.getReactionScore();
	let orgasmReactionScore = this.getOrgasmReactionScore();
	let bukkakeReactionScore = this.getBukkakeReactionScore();
	let swallowReactionScore = this.getSwallowReactionScore();
	let pussyCreampieReactionScore = this.getPussyCreampieReactionScore();
	let analCreampieReactionScore = this.getAnalCreampieReactionScore();
	
	let generallvl3 = generalReactionScore >= VAR_DEF_RS_LV3_REQ;
	let generallvl2 = generalReactionScore >= VAR_DEF_RS_LV2_REQ;
	let orgasmlvl3 = orgasmReactionScore >= VAR_DEF_RS_LV3_REQ;
	let orgasmlvl2 = orgasmReactionScore >= VAR_DEF_RS_LV2_REQ;
	let bukkakelvl3 = bukkakeReactionScore >= VAR_DEF_RS_LV3_REQ;
	let bukkakelvl2 = bukkakeReactionScore >= VAR_DEF_RS_LV2_REQ;
	let swallowlvl3 = swallowReactionScore  >= VAR_DEF_RS_LV3_REQ;
	let swallowlvl2 = swallowReactionScore >= VAR_DEF_RS_LV2_REQ;
	let pussyCreampielvl3 = pussyCreampieReactionScore  >= VAR_DEF_RS_LV3_REQ;
	let pussyCreampielvl2 = pussyCreampieReactionScore >= VAR_DEF_RS_LV2_REQ;
	let analCreampielvl3 = analCreampieReactionScore  >= VAR_DEF_RS_LV3_REQ;
	let analCreampielvl2 = analCreampieReactionScore >= VAR_DEF_RS_LV2_REQ;
	
	let faceArray = [];
	this.resetTachieHoppe();
	this.resetTachieSweat();
	
	if(givingBJ) {
		if(karrynSwallowingCum) {
			if(swallowlvl3) 
				faceArray.push(30);
			else if(swallowlvl2) 
				faceArray.push(20);
			else
				faceArray.push(10);
		}
		else if(justOrgasmed) {
			if(orgasmlvl3) 
				faceArray.push(30);
			else if(orgasmlvl2) 
				faceArray.push(20);
			else
				faceArray.push(10);
		}
		else if(justGotPussyCreampie) {
			if(pussyCreampielvl3) 
				faceArray.push(29);
			else if(pussyCreampielvl2) 
				faceArray.push(19);
			else
				faceArray.push(9);
		}
		else if(justGotAnalCreampie) {
			if(analCreampielvl3) 
				faceArray.push(29);
			else if(analCreampielvl2) 
				faceArray.push(19);
			else
				faceArray.push(9);
		}
		else if(justGotSpanked) {
			if(generallvl3) 
				faceArray.push(28);
			else if(generallvl2) 
				faceArray.push(18);
			else
				faceArray.push(8);
		}
		else if(lastHitSex) {
			if(generallvl3) 
				faceArray.push(27);
			else if(generallvl2) 
				faceArray.push(17);
			else
				faceArray.push(7);
		}
		else {
			if(generallvl3) 
				faceArray.push(26);
			else if(generallvl2) 
				faceArray.push(16);
			else
				faceArray.push(6);
		}
	}
	else { //not fera
		if(justOrgasmed) {
			if(orgasmlvl3) 
				faceArray.push(25);
			else if(orgasmlvl2) 
				faceArray.push(15);
			else
				faceArray.push(5);
		}
		else if(justGotPussyCreampie) {
			if(pussyCreampielvl3) 
				faceArray.push(24);
			else if(pussyCreampielvl2) 
				faceArray.push(14);
			else
				faceArray.push(4);
		}
		else if(justGotAnalCreampie) {
			if(analCreampielvl3) 
				faceArray.push(24);
			else if(analCreampielvl2) 
				faceArray.push(14);
			else
				faceArray.push(4);
		}
		else if(justGotSpanked) {
			if(generallvl3) 
				faceArray.push(23);
			else if(generallvl2) 
				faceArray.push(13);
			else
				faceArray.push(3);
		}
		else if(lastHitSex) {
			if(generallvl3) 
				faceArray.push(22);
			else if(generallvl2) 
				faceArray.push(12);
			else
				faceArray.push(2);
		}
		else {
			if(generallvl3) 
				faceArray.push(21);
			else if(generallvl2) 
				faceArray.push(11);
			else
				faceArray.push(1);
		}
		
	}
	
	let faceId = faceArray[Math.randomInt(faceArray.length)];
	let eyebrowsArray = [];
	let eyesArray = [];
	let mouthArray = [];
	
	if(faceId === 1) {
		eyebrowsArray.push('oko1');
		eyebrowsArray.push('koma1');
		eyebrowsArray.push('koma2');
		eyesArray.push('yoko1');
		eyesArray.push('yoko2');
		mouthArray.push('mu1');
		mouthArray.push('ho1');
		mouthArray.push('ho2');
		mouthArray.push('ku1');
		mouthArray.push('ku2');
		this.setTachieHoppe(1);
		this.setTachieSweat(1);
	}
	else if(faceId === 2) {
		eyebrowsArray.push('oko1');
		eyebrowsArray.push('koma1');
		eyebrowsArray.push('koma2');
		eyesArray.push('yoko1');
		eyesArray.push('yoko2');
		mouthArray.push('ahe1');
		mouthArray.push('ho1');
		mouthArray.push('ho2');
		mouthArray.push('ku1');
		mouthArray.push('ku2');
		this.setTachieHoppe(1);
		this.setTachieSweat(1);
	}
	else if(faceId === 3) {
		eyebrowsArray.push('oko1');
		eyesArray.push('toji2');
		eyesArray.push('yoko2');
		eyesArray.push('uruyoko2');
		mouthArray.push('ku1');
		mouthArray.push('ku2');
		this.setTachieHoppe(1);
		this.setTachieSweat(1);
	}
	else if(faceId === 4) {
		eyebrowsArray.push('koma1');
		eyebrowsArray.push('koma2');
		eyesArray.push('yoko1');
		eyesArray.push('yoko2');
		eyesArray.push('uruyoko1');
		mouthArray.push('ho2');
		mouthArray.push('mu2');
		mouthArray.push('ku1');
		mouthArray.push('ku2');
		this.setTachieHoppe(1);
		this.setTachieSweat(1);
	}
	else if(faceId === 5) {
		eyebrowsArray.push('oko1');
		eyebrowsArray.push('koma1');
		eyebrowsArray.push('koma2');
		eyesArray.push('toji2');
		eyesArray.push('yoko2');
		eyesArray.push('uruyoko2');
		mouthArray.push('ho2');
		mouthArray.push('ku1');
		mouthArray.push('ku2');
		mouthArray.push('ahe1');
		mouthArray.push('ahe2');
		this.setTachieHoppe(1);
		this.setTachieSweat(1);
	}
	else if(faceId === 6) {
		eyebrowsArray.push('oko1');
		eyebrowsArray.push('koma1');
		eyebrowsArray.push('koma2');
		eyesArray.push('mae1');
		eyesArray.push('mae2');
		mouthArray.push('fera1');
		mouthArray.push('fera2');
		this.setTachieHoppe(1);
		this.setTachieSweat(1);
	}
	else if(faceId === 7) {
		eyebrowsArray.push('oko1');
		eyebrowsArray.push('koma1');
		eyebrowsArray.push('koma2');
		eyesArray.push('yoko1');
		eyesArray.push('yoko2');
		mouthArray.push('fera1');
		mouthArray.push('fera2');
		this.setTachieHoppe(1);
		this.setTachieSweat(1);
	}
	else if(faceId === 8) {
		eyebrowsArray.push('oko1');
		eyesArray.push('toji2');
		eyesArray.push('yoko2');
		eyesArray.push('uruyoko2');
		mouthArray.push('fera1');
		mouthArray.push('fera2');
		this.setTachieHoppe(1);
		this.setTachieSweat(1);
	}
	else if(faceId === 9) {
		eyebrowsArray.push('koma1');
		eyebrowsArray.push('koma2');
		eyesArray.push('yoko1');
		eyesArray.push('yoko2');
		eyesArray.push('uruyoko1');
		mouthArray.push('fera1');
		mouthArray.push('fera2');
		this.setTachieHoppe(1);
		this.setTachieSweat(1);
	}
	else if(faceId === 10) {
		eyebrowsArray.push('oko1');
		eyebrowsArray.push('koma1');
		eyebrowsArray.push('koma2');
		eyesArray.push('toji1');
		eyesArray.push('mae2');
		eyesArray.push('urumae2');
		mouthArray.push('fera1');
		mouthArray.push('fera2');
		this.setTachieHoppe(1);
		this.setTachieSweat(1);
	}
	else if(faceId === 11) {
		eyebrowsArray.push('kiri1');
		eyebrowsArray.push('kiri2');
		eyesArray.push('yoko1');
		eyesArray.push('yoko2');
		mouthArray.push('mu1');
		mouthArray.push('mu2');
		mouthArray.push('ho1');
		mouthArray.push('ho2');
		this.setTachieHoppe(1);
	}
	else if(faceId === 12) {
		eyebrowsArray.push('kiri1');
		eyebrowsArray.push('koma1');
		eyebrowsArray.push('koma2');
		eyesArray.push('yoko1');
		eyesArray.push('yoko2');
		mouthArray.push('mu2');
		mouthArray.push('ho1');
		mouthArray.push('ho2');
		mouthArray.push('nico1');
		mouthArray.push('ahe1');
		this.setTachieHoppe(1);
	}
	else if(faceId === 13) {
		eyebrowsArray.push('oko1');
		eyesArray.push('toji1');
		eyesArray.push('yoko2');
		eyesArray.push('uruyoko2');
		mouthArray.push('ahe1');
		mouthArray.push('mu2');
		mouthArray.push('ku1');
		mouthArray.push('ku2');
		this.setTachieHoppe(1);
		this.setTachieSweat(1);
	}
	else if(faceId === 14) {
		eyebrowsArray.push('kiri1');
		eyebrowsArray.push('kiri2');
		eyebrowsArray.push('koma1');
		eyesArray.push('yoko1');
		eyesArray.push('yoko2');
		eyesArray.push('uruyoko1');
		mouthArray.push('ho1');
		mouthArray.push('ho2');
		mouthArray.push('nico1');
		mouthArray.push('mu1');
		this.setTachieHoppe(1);
		this.setTachieSweat(1);
	}
	else if(faceId === 15) {
		eyebrowsArray.push('oko1');
		eyebrowsArray.push('koma1');
		eyebrowsArray.push('koma2');
		eyebrowsArray.push('kiri1');
		eyesArray.push('toji2');
		eyesArray.push('yoko2');
		eyesArray.push('uruyoko2');
		eyesArray.push('ahe1');
		mouthArray.push('ho1');
		mouthArray.push('ho2');
		mouthArray.push('ku1');
		mouthArray.push('ahe1');
		mouthArray.push('ahe2');
		mouthArray.push('ahe3');
		this.setTachieHoppe(1);
		this.setTachieSweat(1);
	}
	else if(faceId === 16) {
		eyebrowsArray.push('kiri1');
		eyebrowsArray.push('kiri2');
		eyesArray.push('mae1');
		eyesArray.push('mae2');
		eyesArray.push('urumae1');
		mouthArray.push('fera3');
		mouthArray.push('fera4');
		this.setTachieHoppe(1);
	}
	else if(faceId === 17) {
		eyebrowsArray.push('kiri1');
		eyebrowsArray.push('koma1');
		eyebrowsArray.push('koma2');
		eyesArray.push('yoko1');
		eyesArray.push('yoko2');
		mouthArray.push('fera3');
		mouthArray.push('fera4');
		this.setTachieHoppe(1);
	}
	else if(faceId === 18) {
		eyebrowsArray.push('oko1');
		eyesArray.push('toji1');
		eyesArray.push('yoko2');
		eyesArray.push('uruyoko2');
		mouthArray.push('fera3');
		mouthArray.push('fera4');
		this.setTachieHoppe(1);
		this.setTachieSweat(1);
	}
	else if(faceId === 19) {
		eyebrowsArray.push('kiri1');
		eyebrowsArray.push('kiri2');
		eyebrowsArray.push('koma1');
		eyesArray.push('yoko1');
		eyesArray.push('yoko2');
		eyesArray.push('uruyoko1');
		mouthArray.push('fera3');
		mouthArray.push('fera4');
		this.setTachieHoppe(1);
		this.setTachieSweat(1);
	}
	else if(faceId === 20) {
		eyebrowsArray.push('oko1');
		eyebrowsArray.push('koma1');
		eyebrowsArray.push('koma2');
		eyebrowsArray.push('kiri1');
		eyesArray.push('toji1');
		eyesArray.push('mae2');
		eyesArray.push('urumae2');
		eyesArray.push('ahe1');
		mouthArray.push('fera3');
		mouthArray.push('fera4');
		this.setTachieHoppe(1);
		this.setTachieSweat(1);
	}
	else if(faceId === 21) {
		eyebrowsArray.push('nico1');
		eyebrowsArray.push('nico2');
		eyesArray.push('yoko1');
		eyesArray.push('yoko2');
		mouthArray.push('nico1');
		mouthArray.push('nico2');
		mouthArray.push('nico3');
		mouthArray.push('mu2');
		mouthArray.push('ho1');
		mouthArray.push('ho2');
		mouthArray.push('ho3');
		if(isAroused) this.setTachieHoppe(1);
	}
	else if(faceId === 22) {
		eyebrowsArray.push('nico1');
		eyebrowsArray.push('nico2');
		eyebrowsArray.push('kiri1');
		eyebrowsArray.push('kiri2');
		eyesArray.push('yoko1');
		eyesArray.push('yoko2');
		eyesArray.push('uruyoko1');
		eyesArray.push('uruyoko2');
		mouthArray.push('mu2');
		mouthArray.push('ho2');
		mouthArray.push('ho3');
		mouthArray.push('nico1');
		mouthArray.push('nico2');
		mouthArray.push('nico3');
		mouthArray.push('ahe3');
		if(isAroused) this.setTachieHoppe(1);
	}
	else if(faceId === 23) {
		eyebrowsArray.push('nico1');
		eyebrowsArray.push('nico2');
		eyebrowsArray.push('kiri1');
		eyebrowsArray.push('kiri2');
		eyesArray.push('toji2');
		eyesArray.push('uruyoko1');
		eyesArray.push('uruyoko2');
		eyesArray.push('heartyoko1');
		eyesArray.push('ahe1');
		mouthArray.push('nico1');
		mouthArray.push('nico2');
		mouthArray.push('nico3');
		mouthArray.push('ahe1');
		mouthArray.push('ahe2');
		mouthArray.push('ahe4');
		mouthArray.push('mu2');
		if(isAroused) this.setTachieHoppe(1);
		if(Math.randomInt(2) === 0) this.setTachieSweat(1);
	}
	else if(faceId === 24) {
		eyebrowsArray.push('nico1');
		eyebrowsArray.push('nico2');
		eyebrowsArray.push('kiri1');
		eyebrowsArray.push('kiri2');
		eyebrowsArray.push('koma1');
		eyesArray.push('yoko1');
		eyesArray.push('yoko2');
		eyesArray.push('uruyoko1');
		eyesArray.push('uruyoko2');
		mouthArray.push('ho3');
		mouthArray.push('nico1');
		mouthArray.push('nico2');
		mouthArray.push('nico3');
		mouthArray.push('ahe2');
		mouthArray.push('ahe3');
		mouthArray.push('ahe4');
		if(isAroused) this.setTachieHoppe(1);
		if(Math.randomInt(2) === 0) this.setTachieSweat(1);
	}
	else if(faceId === 25) {
		eyebrowsArray.push('oko1');
		eyebrowsArray.push('koma1');
		eyebrowsArray.push('kiri2');
		eyebrowsArray.push('nico1');
		eyesArray.push('toji1');
		eyesArray.push('uruyoko1');
		eyesArray.push('uruyoko2');
		eyesArray.push('heartyoko1');
		eyesArray.push('heartyoko2');
		eyesArray.push('ahe1');
		eyesArray.push('heartahe1');
		mouthArray.push('ho2');
		mouthArray.push('ho3');
		mouthArray.push('nico2');
		mouthArray.push('nico3');
		mouthArray.push('ahe2');
		mouthArray.push('ahe3');
		mouthArray.push('ahe4');
		this.setTachieHoppe(1);
		if(Math.randomInt(2) === 0) this.setTachieSweat(1);
	}
	else if(faceId === 26) {
		eyebrowsArray.push('nico1');
		eyebrowsArray.push('nico2');
		eyesArray.push('mae1');
		eyesArray.push('mae2');
		mouthArray.push('fera4');
		mouthArray.push('fera5');
		mouthArray.push('fera6');
		if(isAroused) this.setTachieHoppe(1);
	}
	else if(faceId === 27) {
		eyebrowsArray.push('nico1');
		eyebrowsArray.push('nico2');
		eyebrowsArray.push('kiri1');
		eyebrowsArray.push('kiri2');
		eyesArray.push('yoko1');
		eyesArray.push('yoko2');
		eyesArray.push('uruyoko1');
		eyesArray.push('uruyoko2');
		mouthArray.push('fera4');
		mouthArray.push('fera5');
		mouthArray.push('fera6');
		if(isAroused) this.setTachieHoppe(1);
		if(Math.randomInt(2) === 0) this.setTachieSweat(1);
	}
	else if(faceId === 28) {
		eyebrowsArray.push('nico1');
		eyebrowsArray.push('nico2');
		eyebrowsArray.push('kiri1');
		eyebrowsArray.push('kiri2');
		eyesArray.push('toji2');
		eyesArray.push('uruyoko1');
		eyesArray.push('uruyoko2');
		eyesArray.push('heartyoko1');
		eyesArray.push('ahe1');
		mouthArray.push('fera4');
		mouthArray.push('fera5');
		mouthArray.push('fera6');
		if(isAroused) this.setTachieHoppe(1);
		if(Math.randomInt(2) === 0) this.setTachieSweat(1);
	}
	else if(faceId === 29) {
		eyebrowsArray.push('nico1');
		eyebrowsArray.push('nico2');
		eyebrowsArray.push('kiri1');
		eyebrowsArray.push('kiri2');
		eyebrowsArray.push('koma1');
		eyesArray.push('yoko1');
		eyesArray.push('yoko2');
		eyesArray.push('uruyoko1');
		eyesArray.push('uruyoko2');
		mouthArray.push('fera4');
		mouthArray.push('fera5');
		mouthArray.push('fera6');
		this.setTachieHoppe(1);
		if(Math.randomInt(2) === 0) this.setTachieSweat(1);
	}
	else if(faceId === 30) {
		eyebrowsArray.push('oko1');
		eyebrowsArray.push('nico1');
		eyebrowsArray.push('kiri2');
		eyebrowsArray.push('koma1');
		eyesArray.push('toji1');
		eyesArray.push('urumae1');
		eyesArray.push('urumae2');
		eyesArray.push('heartmae1');
		eyesArray.push('heartmae2');
		eyesArray.push('ahe1');
		eyesArray.push('heartahe1');
		mouthArray.push('fera4');
		mouthArray.push('fera5');
		mouthArray.push('fera6');
		this.setTachieHoppe(1);
		if(Math.randomInt(2) === 0) this.setTachieSweat(1);
	}
	
	if(eyebrowsArray.length > 0) {
		this.setTachieEyebrows(eyebrowsArray[Math.randomInt(eyebrowsArray.length)]);
	}
	if(eyesArray.length > 0) {
		this.setTachieEyes(eyesArray[Math.randomInt(eyesArray.length)]);
	}
	if(mouthArray.length > 0) {
		this.setTachieMouth(mouthArray[Math.randomInt(mouthArray.length)]);
	}
	
	if(this.tachieMouth.includes('fera'))
		this.setTachieStrayFaceExtension(ConfigManager.convertedTachieMouthName(this) + '_');
	else
		this.resetTachieStrayFaceExtension();
	
	this.setAllowTachieEmoteUpdate(true);
};

// Defeated Level Five
Game_Actor.prototype.emoteDefeatedLevelFivePose = function() {
	this.setAllowTachieEmoteUpdate(false);
	let justOrgasmed = this.didLastGetHitBySkillType(JUST_SKILLTYPE_KARRYN_ORGASM) || this.justOrgasmed();
	let isAroused = this.isAroused() || justOrgasmed;
	let givingBJ = this.isBodySlotPenis(MOUTH_ID);
	let givingPaizuri = this.isBodySlotPenis(BOOBS_ID);
	let hasLeftHandjob = this.isBodySlotPenis(LEFT_HAND_ID);
	let hasRightHandjob = this.isBodySlotPenis(RIGHT_HAND_ID);
	
	let lastHitSex = this.didLastGetHitBySkillType(JUST_SKILLTYPE_ENEMY_PUSSY_SEX) || this.didLastGetHitBySkillType(JUST_SKILLTYPE_ENEMY_ANAL_SEX) || this.didLastGetHitBySkillType(JUST_SKILLTYPE_KARRYN_PUSSY_SEX) || this.didLastGetHitBySkillType(JUST_SKILLTYPE_KARRYN_ANAL_SEX) || this.didLastGetHitBySkillType(JUST_SKILLTYPE_ENEMY_TOY_PLAY_PUSSY) || this.didLastGetHitBySkillType(JUST_SKILLTYPE_ENEMY_TOY_PLAY_ANAL);
	let lastHitBlowjob = this.didLastGetHitBySkillType(JUST_SKILLTYPE_KARRYN_BLOWJOB) || this.didLastGetHitBySkillType(JUST_SKILLTYPE_ENEMY_BLOWJOB);
	let lastHitTittyFuck = this.didLastGetHitBySkillType(JUST_SKILLTYPE_ENEMY_TITTYFUCK) || this.didLastGetHitBySkillType(JUST_SKILLTYPE_KARRYN_TITTYFUCK);
	let lastHitHandjob = this.didLastGetHitBySkillType(JUST_SKILLTYPE_KARRYN_HANDJOB) || this.didLastGetHitBySkillType(JUST_SKILLTYPE_ENEMY_HANDJOB);
	let lastHandjobIsToRight = this._lastHandUsedForHandjob === RIGHT_HAND_ID;
	let lastHandjobIsToLeft = this._lastHandUsedForHandjob === LEFT_HAND_ID;
	
	let karrynSwallowingCum = this.didLastGetHitBySkillType(JUST_SKILLTYPE_ENEMY_CUM_SWALLOW);
	let justGotPussyCreampie = this.didLastGetHitBySkillType(JUST_SKILLTYPE_ENEMY_PUSSY_CREAMPIE);
	let justGotAnalCreampie = this.didLastGetHitBySkillType(JUST_SKILLTYPE_ENEMY_ANAL_CREAMPIE);
	let karrynGotBukkaked = this.didLastGetHitBySkillType(JUST_SKILLTYPE_ENEMY_BUKKAKE);
	let enemyCummingFromLeftHJ = $gameTroop._lastEnemySlotToCum === LEFT_HAND_ID;
	let enemyCummingFromRightHJ = $gameTroop._lastEnemySlotToCum === RIGHT_HAND_ID;
	
	let generalReactionScore = this.getReactionScore();
	let orgasmReactionScore = this.getOrgasmReactionScore();
	let bukkakeReactionScore = this.getBukkakeReactionScore();
	let swallowReactionScore = this.getSwallowReactionScore();
	let pussyCreampieReactionScore = this.getPussyCreampieReactionScore();
	let analCreampieReactionScore = this.getAnalCreampieReactionScore();
	
	let generallvl3 = generalReactionScore >= VAR_DEF_RS_LV3_REQ;
	let generallvl2 = generalReactionScore >= VAR_DEF_RS_LV2_REQ;
	let orgasmlvl3 = orgasmReactionScore >= VAR_DEF_RS_LV3_REQ;
	let orgasmlvl2 = orgasmReactionScore >= VAR_DEF_RS_LV2_REQ;
	let bukkakelvl3 = bukkakeReactionScore >= VAR_DEF_RS_LV3_REQ;
	let bukkakelvl2 = bukkakeReactionScore >= VAR_DEF_RS_LV2_REQ;
	let swallowlvl3 = swallowReactionScore  >= VAR_DEF_RS_LV3_REQ;
	let swallowlvl2 = swallowReactionScore >= VAR_DEF_RS_LV2_REQ;
	let pussyCreampielvl3 = pussyCreampieReactionScore  >= VAR_DEF_RS_LV3_REQ;
	let pussyCreampielvl2 = pussyCreampieReactionScore >= VAR_DEF_RS_LV2_REQ;
	let analCreampielvl3 = analCreampieReactionScore  >= VAR_DEF_RS_LV3_REQ;
	let analCreampielvl2 = analCreampieReactionScore >= VAR_DEF_RS_LV2_REQ;
	
	let faceArray = [];
	this.resetTachieHoppe();
	this.resetTachieSweat();
	let tachieHoppeName = '';
	let tachieSweatName = '';
	let displayTachieHoppe = false;
	let displayTachieSweat = false;
	let headType = "normal_";
	
	if(givingBJ) {
		headType = 'fera_'
		this.setTachieHairExtension('fera_');
		if(justOrgasmed) {
			if(orgasmlvl3)
				faceArray.push(24);
			else if(orgasmlvl2)
				faceArray.push(16);
			else
				faceArray.push(8);
		}
		else if(justGotPussyCreampie) {
			if(pussyCreampielvl3)
				faceArray.push(24);
			else if(pussyCreampielvl2)
				faceArray.push(16);
			else
				faceArray.push(8);
		}
		else if(justGotAnalCreampie) {
			if(analCreampielvl3)
				faceArray.push(24);
			else if(analCreampielvl2)
				faceArray.push(16);
			else
				faceArray.push(8);
		}
		else if(lastHitSex) {
			if(generallvl3)
				faceArray.push(24);
			else if(generallvl2)
				faceArray.push(16);
			else
				faceArray.push(8);
		}
		else {
			if(generallvl3)
				faceArray.push(23);
			else if(generallvl2)
				faceArray.push(15);
			else
				faceArray.push(7);
		}
	}
	//not bj
	else {
		this.setTachieHairExtension('normal_');
		if(justOrgasmed) {
			if(orgasmlvl3)
				faceArray.push(20);
			else if(orgasmlvl2)
				faceArray.push(12);
			else
				faceArray.push(4);
		}
		else if(justGotPussyCreampie) {
			if(pussyCreampielvl3)
				faceArray.push(19);
			else if(pussyCreampielvl2)
				faceArray.push(11);
			else
				faceArray.push(3);
		}
		else if(justGotAnalCreampie) {
			if(analCreampielvl3)
				faceArray.push(19);
			else if(analCreampielvl2)
				faceArray.push(11);
			else
				faceArray.push(3);
		}
		else if(karrynGotBukkaked) {
			if(enemyCummingFromLeftHJ || enemyCummingFromRightHJ) {
				if(bukkakelvl3)
					faceArray.push(22);
				else if(bukkakelvl2)
					faceArray.push(14);
				else
					faceArray.push(6);
			}
			else {
				if(bukkakelvl3)
					faceArray.push(19);
				else if(bukkakelvl2)
					faceArray.push(11);
				else
					faceArray.push(3);
			}
		}
		else if(lastHitSex || lastHitTittyFuck) {
			if(generallvl3)
				faceArray.push(18);
			else if(generallvl2)
				faceArray.push(10);
			else
				faceArray.push(2);
		}
		else if(lastHitHandjob) {
			if(generallvl3)
				faceArray.push(21);
			else if(generallvl2)
				faceArray.push(13);
			else
				faceArray.push(5);
		}
		else {
			if(generallvl3)
				faceArray.push(17);
			else if(generallvl2)
				faceArray.push(9);
			else
				faceArray.push(1);
		}
	}
	
	if(!this.isWearingGlovesAndHat()) {
		if(hasRightHandjob)
			this.setTachieRightArm('hj_naked');
		else
			this.setTachieRightArm('normal_naked');
		if(hasLeftHandjob)
			this.setTachieLeftArm('hj_naked');
		else 
			this.setTachieLeftArm('normal_naked');
		
		this.resetTachieTie();
	}
	else {
		if(hasRightHandjob)
			this.setTachieRightArm('hj');
		else
			this.setTachieRightArm('normal');
		if(hasLeftHandjob)
			this.setTachieLeftArm('hj');
		else 
			this.setTachieLeftArm('normal');
		
		if(givingBJ) {
			this.setTachieTie('fera');
			this.setTachieHatExtension('fera_');
		}
		else {
			this.setTachieTie('normal');
			this.setTachieHatExtension('normal_');
		}
	}
	
	let faceId = faceArray[Math.randomInt(faceArray.length)];
	let eyebrowsArray = [];
	let eyesArray = [];
	let mouthArray = [];
	
	if(faceId === 1) {
		eyebrowsArray.push('oko1');
		eyebrowsArray.push('koma1');
		eyebrowsArray.push('koma2');
		eyesArray.push('mae1');
		eyesArray.push('mae2');
		mouthArray.push('ku1');
		mouthArray.push('ku2');
		mouthArray.push('ho1');
		mouthArray.push('ho2');
		tachieHoppeName += '1';
		displayTachieHoppe = true;
		tachieSweatName += '1';
		displayTachieSweat = true;
	}
	else if(faceId === 2) {
		eyebrowsArray.push('oko1');
		eyebrowsArray.push('koma1');
		eyebrowsArray.push('koma2');
		eyesArray.push('mae1');
		eyesArray.push('mae2');
		mouthArray.push('ho2');
		mouthArray.push('ho3');
		mouthArray.push('ho4');
		mouthArray.push('wa1');
		tachieHoppeName += '1';
		displayTachieHoppe = true;
		tachieSweatName += '1';
		displayTachieSweat = true;
	}
	else if(faceId === 3) {
		eyebrowsArray.push('oko1');
		eyebrowsArray.push('koma1');
		eyebrowsArray.push('koma2');
		eyesArray.push('mae2');
		eyesArray.push('mae3');
		eyesArray.push('urumae2');
		mouthArray.push('ku1');
		mouthArray.push('ho2');
		mouthArray.push('ho3');
		mouthArray.push('ho4');
		mouthArray.push('wa1');
		tachieHoppeName += '1';
		displayTachieHoppe = true;
		tachieSweatName += '1';
		displayTachieSweat = true;
	}
	else if(faceId === 4) {
		eyebrowsArray.push('oko1');
		eyebrowsArray.push('koma1');
		eyebrowsArray.push('koma2');
		eyesArray.push('mae3');
		eyesArray.push('toji1');
		eyesArray.push('urumae2');
		mouthArray.push('ku1');
		mouthArray.push('ho3');
		mouthArray.push('ho4');
		mouthArray.push('wa2');
		mouthArray.push('ahe1');
		mouthArray.push('ahe2');
		tachieHoppeName += '1';
		displayTachieHoppe = true;
		tachieSweatName += '1';
		displayTachieSweat = true;
	}
	else if(faceId === 5) {
		eyebrowsArray.push('oko1');
		eyebrowsArray.push('koma1');
		eyebrowsArray.push('koma2');
		if(lastHandjobIsToLeft) {
			eyesArray.push('left1');
			eyesArray.push('left2');
		}
		else {
			eyesArray.push('right1');
			eyesArray.push('right2');
		}
		mouthArray.push('ku2');
		mouthArray.push('ho1');
		mouthArray.push('ho2');
		mouthArray.push('wa1');
		tachieHoppeName += '1';
		displayTachieHoppe = true;
		tachieSweatName += '1';
		displayTachieSweat = true;
	}
	else if(faceId === 6) {
		eyebrowsArray.push('oko1');
		eyebrowsArray.push('koma1');
		eyebrowsArray.push('koma2');
		if(enemyCummingFromLeftHJ) {
			eyesArray.push('left2');
			eyesArray.push('left3');
			eyesArray.push('uruleft2');
		}
		else {
			eyesArray.push('right2');
			eyesArray.push('right3');
			eyesArray.push('ururight2');
		}
		mouthArray.push('ku1');
		mouthArray.push('ku2');
		mouthArray.push('ho1');
		mouthArray.push('ho2');
		mouthArray.push('ho4');
		mouthArray.push('wa1');
		tachieHoppeName += '1';
		displayTachieHoppe = true;
		tachieSweatName += '1';
		displayTachieSweat = true;
	}
	else if(faceId === 7) {
		mouthArray.push('1');
		tachieHoppeName += '1';
		displayTachieHoppe = true;
		tachieSweatName += '1';
		displayTachieSweat = true;
	}
	else if(faceId === 8) {
		mouthArray.push('2');
		mouthArray.push('3');
		tachieHoppeName += '1';
		displayTachieHoppe = true;
		tachieSweatName += '1';
		displayTachieSweat = true;
	}
	else if(faceId === 9) {
		eyebrowsArray.push('kiri1');
		eyebrowsArray.push('kiri2');
		eyesArray.push('mae1');
		eyesArray.push('mae2');
		mouthArray.push('ho1');
		mouthArray.push('ho2');
		mouthArray.push('mu1');
		mouthArray.push('mu2');
		tachieHoppeName += '1';
		displayTachieHoppe = true;
	}
	else if(faceId === 10) {
		eyebrowsArray.push('kiri1');
		eyebrowsArray.push('kiri2');
		eyesArray.push('mae1');
		eyesArray.push('mae2');
		mouthArray.push('ho1');
		mouthArray.push('ho2');
		mouthArray.push('ku2');
		mouthArray.push('wa1');
		mouthArray.push('ahe1');
		tachieHoppeName += '1';
		displayTachieHoppe = true;
	}
	else if(faceId === 11) {
		eyebrowsArray.push('kiri1');
		eyebrowsArray.push('kiri2');
		eyesArray.push('mae2');
		eyesArray.push('mae3');
		eyesArray.push('urumae1');
		eyesArray.push('urumae2');
		mouthArray.push('ho1');
		mouthArray.push('ho2');
		mouthArray.push('ku2');
		mouthArray.push('wa1');
		mouthArray.push('ahe1');
		tachieHoppeName += '1';
		displayTachieHoppe = true;
	}
	else if(faceId === 12) {
		eyebrowsArray.push('kiri1');
		eyebrowsArray.push('kiri2');
		eyebrowsArray.push('koma2');
		eyesArray.push('mae3');
		eyesArray.push('toji1');
		eyesArray.push('ahe1');
		eyesArray.push('urumae1');
		eyesArray.push('urumae2');
		mouthArray.push('ku1');
		mouthArray.push('ho3');
		mouthArray.push('ho4');
		mouthArray.push('wa2');
		mouthArray.push('ahe1');
		mouthArray.push('ahe2');
		mouthArray.push('ahe3');
		mouthArray.push('ahe4');
		tachieHoppeName += '1';
		displayTachieHoppe = true;
		tachieSweatName += '1';
		displayTachieSweat = true;
	}
	else if(faceId === 13) {
		eyebrowsArray.push('kiri1');
		eyebrowsArray.push('kiri2');
		if(lastHandjobIsToLeft) {
			eyesArray.push('left1');
			eyesArray.push('left2');
		}
		else {
			eyesArray.push('right1');
			eyesArray.push('right2');
		}
		mouthArray.push('ho1');
		mouthArray.push('ho2');
		mouthArray.push('wa1');
		mouthArray.push('mu1');
		mouthArray.push('mu2');
		mouthArray.push('nico1');
		tachieHoppeName += '1';
		displayTachieHoppe = true;
	}
	else if(faceId === 14) {
		eyebrowsArray.push('kiri1');
		eyebrowsArray.push('kiri2');
		if(enemyCummingFromLeftHJ) {
			eyesArray.push('left2');
			eyesArray.push('left3');
			eyesArray.push('uruleft1');
			eyesArray.push('uruleft2');
		}
		else {
			eyesArray.push('right2');
			eyesArray.push('right3');
			eyesArray.push('ururight1');
			eyesArray.push('ururight2');
		}
		mouthArray.push('ho1');
		mouthArray.push('ho2');
		mouthArray.push('mu1');
		mouthArray.push('mu2');
		mouthArray.push('wa1');
		mouthArray.push('ahe1');
		tachieHoppeName += '1';
		displayTachieHoppe = true;
	}
	else if(faceId === 15) {
		mouthArray.push('1');
		mouthArray.push('2');
		mouthArray.push('3');
		tachieHoppeName += '1';
		displayTachieHoppe = true;
	}
	else if(faceId === 16) {
		mouthArray.push('2');
		mouthArray.push('3');
		mouthArray.push('4');
		tachieHoppeName += '1';
		displayTachieHoppe = true;
		tachieSweatName += '1';
		displayTachieSweat = true;
	}
	else if(faceId === 17) {
		eyebrowsArray.push('nico1');
		eyebrowsArray.push('nico2');
		eyebrowsArray.push('kiri1');
		eyesArray.push('mae1');
		eyesArray.push('mae2');
		mouthArray.push('nico1');
		mouthArray.push('nico2');
		mouthArray.push('nico3');
		mouthArray.push('pero1');
		mouthArray.push('mu2');
		mouthArray.push('mu3');
		if(isAroused) {
			tachieHoppeName += '1';
			displayTachieHoppe = true;
		}
	}
	else if(faceId === 18) {
		eyebrowsArray.push('nico1');
		eyebrowsArray.push('nico2');
		eyebrowsArray.push('kiri2');
		eyesArray.push('mae1');
		eyesArray.push('mae2');
		eyesArray.push('urumae1');
		eyesArray.push('urumae2');
		mouthArray.push('nico2');
		mouthArray.push('nico3');
		mouthArray.push('pero1');
		mouthArray.push('mu2');
		mouthArray.push('ahe5');
		if(isAroused) {
			tachieHoppeName += '1';
			displayTachieHoppe = true;
		}
	}
	else if(faceId === 19) {
		eyebrowsArray.push('nico1');
		eyebrowsArray.push('nico2');
		eyebrowsArray.push('kiri2');
		eyebrowsArray.push('koma1');
		eyesArray.push('mae2');
		eyesArray.push('mae3');
		eyesArray.push('urumae1');
		eyesArray.push('urumae2');
		eyesArray.push('heartmae2');
		mouthArray.push('nico1');
		mouthArray.push('nico2');
		mouthArray.push('nico3');
		mouthArray.push('pero1');
		mouthArray.push('mu3');
		mouthArray.push('ahe5');
		if(isAroused) {
			tachieHoppeName += '1';
			displayTachieHoppe = true;
		}
		if(Math.random() < 0.5) {
			tachieSweatName += '1';
			displayTachieSweat = true;
		}
	}
	else if(faceId === 20) {
		eyebrowsArray.push('nico1');
		eyebrowsArray.push('nico2');
		eyebrowsArray.push('kiri2');
		eyebrowsArray.push('koma1');
		eyebrowsArray.push('koma2');
		eyebrowsArray.push('oko1');
		eyesArray.push('mae3');
		eyesArray.push('toji1');
		eyesArray.push('ahe1');
		eyesArray.push('heartmae1');
		eyesArray.push('heartmae2');
		eyesArray.push('heartahe1');
		mouthArray.push('ku1');
		mouthArray.push('nico2');
		mouthArray.push('nico3');
		mouthArray.push('pero1');
		mouthArray.push('ahe1');
		mouthArray.push('ahe2');
		mouthArray.push('ahe3');
		mouthArray.push('ahe4');
		mouthArray.push('ahe5');
		mouthArray.push('ahe6');
		tachieHoppeName += '1';
		displayTachieHoppe = true;
		tachieSweatName += '1';
		displayTachieSweat = true;
	}
	else if(faceId === 21) {
		eyebrowsArray.push('nico1');
		eyebrowsArray.push('nico2');
		eyebrowsArray.push('kiri2');
		eyebrowsArray.push('koma1');
		if(lastHandjobIsToLeft) {
			eyesArray.push('left1');
			eyesArray.push('left2');
			eyesArray.push('uruleft2');
		}
		else {
			eyesArray.push('right1');
			eyesArray.push('right2');
			eyesArray.push('ururight2');
		}
		mouthArray.push('nico1');
		mouthArray.push('nico2');
		mouthArray.push('nico3');
		mouthArray.push('pero1');
		mouthArray.push('mu2');
		mouthArray.push('mu3');
		if(isAroused) {
			tachieHoppeName += '1';
			displayTachieHoppe = true;
		}
	}
	else if(faceId === 22) {
		eyebrowsArray.push('nico1');
		eyebrowsArray.push('nico2');
		eyebrowsArray.push('kiri2');
		if(enemyCummingFromLeftHJ) {
			eyesArray.push('left2');
			eyesArray.push('left3');
			eyesArray.push('uruleft1');
			eyesArray.push('uruleft2');
			eyesArray.push('heartleft1');
			eyesArray.push('heartleft2');
		}
		else {
			eyesArray.push('right2');
			eyesArray.push('right3');
			eyesArray.push('ururight1');
			eyesArray.push('ururight2');
			eyesArray.push('heartright1');
			eyesArray.push('heartright2');
		}
		mouthArray.push('nico1');
		mouthArray.push('nico2');
		mouthArray.push('nico3');
		mouthArray.push('pero1');
		mouthArray.push('mu3');
		mouthArray.push('ahe5');
		tachieHoppeName += '1';
		displayTachieHoppe = true;
		if(Math.random() < 0.5) {
			tachieSweatName += '1';
			displayTachieSweat = true;
		}
	}
	else if(faceId === 23) {
		mouthArray.push('2');
		mouthArray.push('3');
		mouthArray.push('4');
		mouthArray.push('5');
		tachieHoppeName += '1';
		displayTachieHoppe = true;
	}
	else if(faceId === 24) {
		mouthArray.push('3');
		mouthArray.push('4');
		mouthArray.push('5');
		tachieHoppeName += '1';
		displayTachieHoppe = true;
		tachieSweatName += '1';
		displayTachieSweat = true;
	}
	
	
	if(eyebrowsArray.length > 0) {
		this.setTachieEyebrows('' + headType + eyebrowsArray[Math.randomInt(eyebrowsArray.length)]);
	}
	else this.resetTachieEyebrows();
	if(eyesArray.length > 0) {
		this.setTachieEyes('' + headType + eyesArray[Math.randomInt(eyesArray.length)]);
	}
	else this.resetTachieEyes();
	if(mouthArray.length > 0) {
		this.setTachieMouth('' + headType + mouthArray[Math.randomInt(mouthArray.length)]);
	}
	
	if(displayTachieHoppe) this.setTachieHoppe('' + headType + tachieHoppeName);
	if(displayTachieSweat) this.setTachieSweat('' + headType + tachieSweatName);
	
	this.setAllowTachieEmoteUpdate(true);
};

// Defeated Guard
Game_Actor.prototype.emoteDefeatedGuardPose = function() {
	this.setAllowTachieEmoteUpdate(false);		
	let justOrgasmed = this.didLastGetHitBySkillType(JUST_SKILLTYPE_KARRYN_ORGASM) || this.justOrgasmed();
	let isAroused = this.isAroused() || justOrgasmed;
	let justGotHarassed = this.didLastGetHitBySkillType(JUST_SKILLTYPE_ENEMY_TOY_PLAY) || this.didLastGetHitBySkillType(JUST_SKILLTYPE_PASSIVE_TOY) || this.didLastGetHitBySkillType(JUST_SKILLTYPE_ENEMY_PETTING);
	let givingPaizuri = this.isBodySlotPenis(BOOBS_ID) && this._cockBoobsTarget;
	let givingBJ = this.isBodySlotPenis(MOUTH_ID);
	let karrynUsedPaizuriSkill = this.didLastGetHitBySkillType(JUST_SKILLTYPE_KARRYN_TITTYFUCK);
	let enemyUsedPaizuriSkill = this.didLastGetHitBySkillType(JUST_SKILLTYPE_ENEMY_TITTYFUCK);
	let lastHitBlowjob = this.didLastGetHitBySkillType(JUST_SKILLTYPE_KARRYN_BLOWJOB) || this.didLastGetHitBySkillType(JUST_SKILLTYPE_ENEMY_BLOWJOB);
	let lastHitPussySex = this.didLastGetHitBySkillType(JUST_SKILLTYPE_ENEMY_PUSSY_SEX) || this.didLastGetHitBySkillType(JUST_SKILLTYPE_KARRYN_PUSSY_SEX);
	let lastHitAnalSex = this.didLastGetHitBySkillType(JUST_SKILLTYPE_ENEMY_ANAL_SEX) || this.didLastGetHitBySkillType(JUST_SKILLTYPE_KARRYN_ANAL_SEX);
	let karrynSwallowingCum = this.didLastGetHitBySkillType(JUST_SKILLTYPE_ENEMY_CUM_SWALLOW);
	let justGotPussyCreampie = this.didLastGetHitBySkillType(JUST_SKILLTYPE_ENEMY_PUSSY_CREAMPIE);
	let justGotAnalCreampie = this.didLastGetHitBySkillType(JUST_SKILLTYPE_ENEMY_ANAL_CREAMPIE);
	let karrynGotBukkaked = this.didLastGetHitBySkillType(JUST_SKILLTYPE_ENEMY_BUKKAKE);
	let pussyInserted = this.isBodySlotPenis(PUSSY_ID);
	let analInserted = this.isBodySlotPenis(ANAL_ID);
	
	let generalReactionScore = this.getReactionScore();
	let orgasmReactionScore = this.getOrgasmReactionScore();
	let pussyCreampieReactionScore = this.getPussyCreampieReactionScore();
	let analCreampieReactionScore = this.getAnalCreampieReactionScore();
	let swallowReactionScore = this.getSwallowReactionScore();
	let bukkakeReactionScore = this.getBukkakeReactionScore();
	let generallvl3 = generalReactionScore >= VAR_DEF_RS_LV3_REQ;
	let generallvl2 = generalReactionScore >= VAR_DEF_RS_LV2_REQ;
	let orgasmlvl3 = orgasmReactionScore >= VAR_DEF_RS_LV3_REQ;
	let orgasmlvl2 = orgasmReactionScore >= VAR_DEF_RS_LV2_REQ;
	let pussyCreampielvl3 = pussyCreampieReactionScore  >= VAR_DEF_RS_LV3_REQ;
	let pussyCreampielvl2 = pussyCreampieReactionScore >= VAR_DEF_RS_LV2_REQ;
	let analCreampielvl3 = analCreampieReactionScore  >= VAR_DEF_RS_LV3_REQ;
	let analCreampielvl2 = analCreampieReactionScore >= VAR_DEF_RS_LV2_REQ;
	let swallowlvl3 = swallowReactionScore  >= VAR_DEF_RS_LV3_REQ;
	let swallowlvl2 = swallowReactionScore >= VAR_DEF_RS_LV2_REQ;
	let bukkakelvl3 = bukkakeReactionScore >= VAR_DEF_RS_LV3_REQ;
	let bukkakelvl2 = bukkakeReactionScore >= VAR_DEF_RS_LV2_REQ;
	
	let wearingWeddingDress = this.isWearingWeddingClothing();
	
	let putHandsOnThigh = (generallvl3 && this.hasPassive(PASSIVE_SEXUAL_PARTNERS_GUARD_TWO_ID)) || (generallvl2 && this.hasPassive(PASSIVE_SEXUAL_PARTNERS_GUARD_THREE_ID));
	
	let tachieLeftArmName = false;
	let tachieRightArmName = false;
	let tachieFrontAName = false;
	
	if(!givingPaizuri || (givingPaizuri && !karrynUsedPaizuriSkill && enemyUsedPaizuriSkill)) {
		this.setTachieBoobs('empty');
		this.setTachieSemenBoobsExtension('empty_');
		this.setTachieStrayBoobsExtension('empty_');
		this.setMaxTachieSemenLeftArmId(1);
		this.setMaxTachieSemenRightArmId(1);
		if(putHandsOnThigh) {
			tachieFrontAName = 'arms';
			tachieLeftArmName = 'thigh';
			tachieRightArmName = 'thigh';
			this.setTachieSemenLeftArmExtension('frontA_');
			this.setTachieSemenRightArmExtension('frontA_');
			this.setTachieSemenLeftArmHasPCup(true);
			this.setTachieSemenRightArmHasPCup(true);
		}
		else {
			this.resetTachieFrontA();
			tachieLeftArmName = 'sheets';
			tachieRightArmName = 'sheets';
			this.setTachieSemenLeftArmExtension('sheets_');
			this.setTachieSemenRightArmExtension('sheets_');
			this.setTachieSemenLeftArmHasPCup(false);
			this.setTachieSemenRightArmHasPCup(false);
		}
		
		if(!givingPaizuri) {
			this.resetTachieFrontB();
			this.resetTachieStrayFaceExtension();
		}
		
		this.setTachieLeftArmHasHCup(false);
		this.setTachieRightArmHasHCup(false);
		this.setTachieSemenLeftArmHasHCup(false);
		this.setTachieSemenRightArmHasHCup(false);
		this.setTachieLeftArmHasPCup(false);
		this.setTachieRightArmHasPCup(false);
		
	}
	
	if(givingPaizuri) {
		let paizuriEnemyCock = this._cockBoobsTarget.enemyCock();
		if(karrynUsedPaizuriSkill) {
			this.resetTachieFrontA();
			this.resetTachieFrontB();
			tachieLeftArmName = 'zuri';
			tachieRightArmName = 'zuri';
			this.setTachieSemenLeftArmExtension('zuri_');
			this.setTachieSemenRightArmExtension('zuri_');
			this.setTachieBoobs('zuri_karryn');
			this.setTachieSemenBoobsExtension('zuri_karryn_');
			this.setTachieStrayBoobsExtension('zuri_karryn_');
			this.setTachieLeftArmHasHCup(true);
			this.setTachieRightArmHasHCup(true);
			this.setTachieSemenLeftArmHasHCup(true);
			this.setTachieSemenRightArmHasHCup(true);
			this.setTachieLeftArmHasPCup(true);
			this.setTachieRightArmHasPCup(true);
			this.setTachieSemenLeftArmHasPCup(true);
			this.setTachieSemenRightArmHasPCup(true);
		}
		else if(enemyUsedPaizuriSkill) {
			let frontBName = '';
			
			if(paizuriEnemyCock.includes('human_')) {
				if(paizuriEnemyCock.includes('pale')) {
					frontBName += 'arms_human_pale';
				}
				else if(paizuriEnemyCock.includes('black')) {
					frontBName += 'arms_human_black';
				}
				else {
					frontBName += 'arms_human_normal';
				}
			}
			else if(paizuriEnemyCock.includes('goblin_')) {
				if(paizuriEnemyCock.includes('dark')) 
					frontBName += 'arms_goblin_dark';
				else
					frontBName += 'arms_goblin_normal';
			}
			else if(paizuriEnemyCock.includes('orc_')) {
				if(paizuriEnemyCock.includes('dark')) 
					frontBName += 'arms_orc_dark';
				else
					frontBName += 'arms_orc_normal';
			}
			else if(paizuriEnemyCock.includes('lizardman_')) {
				if(paizuriEnemyCock.includes('dark')) 
					frontBName += 'arms_lizardman_dark';
				else
					frontBName += 'arms_lizardman_normal';
			}
			else {
				frontBName += 'arms_human_normal';
			}
			
			this.setTachieFrontB(frontBName);
			
			this.setTachieBoobs('zuri_enemy');
			this.setTachieSemenBoobsExtension('zuri_');
			this.setTachieStrayBoobsExtension('zuri_enemy_');
			
			this.setTachieLeftArmHasHCup(false);
			this.setTachieRightArmHasHCup(false);
			this.setTachieSemenLeftArmHasHCup(false);
			this.setTachieSemenRightArmHasHCup(false);
			this.setTachieLeftArmHasPCup(false);
			this.setTachieRightArmHasPCup(false);
			this.setTachieSemenLeftArmHasPCup(false);
			this.setTachieSemenRightArmHasPCup(false);
		}
		this.setTachieStrayFaceExtension('zuri_');
	}
	
	if(wearingWeddingDress) {
		if(tachieFrontAName === 'arms') {
			tachieFrontAName = 'arms_wedding';
		}
		if(tachieLeftArmName === 'zuri' || tachieLeftArmName === 'thigh' || tachieLeftArmName === 'sheets') {
			tachieLeftArmName += '_wedding';
			tachieRightArmName += '_wedding';
		}
	}
	else if(!this.isWearingGlovesAndHat()) {
		if(tachieFrontAName === 'arms') {
			tachieFrontAName = 'arms_naked';
		}
		if(tachieLeftArmName === 'zuri' || tachieLeftArmName === 'thigh' || tachieLeftArmName === 'sheets') {
			tachieLeftArmName += '_naked';
			tachieRightArmName += '_naked';
		}
	}
	
	
	if(tachieFrontAName) this.setTachieFrontA(tachieFrontAName);
	if(tachieLeftArmName) this.setTachieLeftArm(tachieLeftArmName);
	if(tachieRightArmName) this.setTachieRightArm(tachieRightArmName);
	
	let faceArray = [];
	this.resetTachieHoppe();
	this.resetTachieSweat();
	if(givingBJ || givingPaizuri) this.resetTachieMouth();
	
	if(justOrgasmed) {
		if(orgasmlvl3) 
			faceArray.push(18);
		else if(orgasmlvl2) 
			faceArray.push(12);
		else
			faceArray.push(6);
	}
	else if(justGotPussyCreampie || justGotAnalCreampie) {
		if(justGotPussyCreampie) {
			if(pussyCreampielvl3) 
				faceArray.push(16);
			else if(pussyCreampielvl2) 
				faceArray.push(10);
			else
				faceArray.push(4);
		}
		else if(justGotAnalCreampie) {
			if(analCreampielvl3) 
				faceArray.push(16);
			else if(analCreampielvl2) 
				faceArray.push(10);
			else
				faceArray.push(4);
		}
	}
	else if(karrynSwallowingCum) {
		if(swallowlvl3) 
			faceArray.push(16);
		else if(swallowlvl2) 
			faceArray.push(10);
		else
			faceArray.push(4);
	}
	else if(karrynGotBukkaked) {
		if(bukkakelvl3) 
			faceArray.push(14);
		else if(bukkakelvl2) 
			faceArray.push(8);
		else
			faceArray.push(2);
	}
	else if(lastHitPussySex || lastHitAnalSex) {
		if(generallvl3) 
			faceArray.push(15);
		else if(generallvl2) 
			faceArray.push(9);
		else
			faceArray.push(3);
	}
	else if(lastHitBlowjob) {
		if(generallvl3) 
			faceArray.push(17);
		else if(generallvl2) 
			faceArray.push(11);
		else
			faceArray.push(5);
	}
	else if(justGotHarassed) {
		if(generallvl3) 
			faceArray.push(14);
		else if(generallvl2) 
			faceArray.push(8);
		else
			faceArray.push(2);
	}
	else {
		if(generallvl3) 
			faceArray.push(13);
		else if(generallvl2) 
			faceArray.push(7);
		else
			faceArray.push(1);
	}
	
	
	let faceId = faceArray[Math.randomInt(faceArray.length)];
	let eyebrowsArray = [];
	let eyesArray = [];
	let mouthArray = [];
	
	if(faceId === 1) {
		eyebrowsArray.push('koma1');
		eyebrowsArray.push('koma2');
		eyebrowsArray.push('oko1');
		eyesArray.push('sita1');
		eyesArray.push('sita2');
		mouthArray.push('ku1');
		mouthArray.push('ku2');
		mouthArray.push('ho1');
		mouthArray.push('ho2');
		mouthArray.push('wa1');
		this.setTachieHoppe(1);
		this.setTachieSweat(1);
	}
	else if(faceId === 2) {
		eyebrowsArray.push('koma1');
		eyebrowsArray.push('koma2');
		eyebrowsArray.push('oko1');
		eyesArray.push('sita2');
		eyesArray.push('sita3');
		mouthArray.push('ahe1');
		mouthArray.push('ku1');
		mouthArray.push('ho2');
		mouthArray.push('ho3');
		mouthArray.push('wa1');
		this.setTachieHoppe(1);
		this.setTachieSweat(1);
	}
	else if(faceId === 3) {
		eyebrowsArray.push('koma1');
		eyebrowsArray.push('koma2');
		eyebrowsArray.push('oko1');
		eyesArray.push('sita1');
		eyesArray.push('sita2');
		mouthArray.push('ku2');
		mouthArray.push('ho2');
		mouthArray.push('ho3');
		mouthArray.push('wa1');
		mouthArray.push('wa2');
		mouthArray.push('wa3');
		this.setTachieHoppe(1);
		this.setTachieSweat(1);
	}
	else if(faceId === 4) {
		eyebrowsArray.push('koma1');
		eyebrowsArray.push('koma2');
		eyesArray.push('sita1');
		eyesArray.push('sita2');
		eyesArray.push('sita3');
		eyesArray.push('urusita2');
		mouthArray.push('ho3');
		mouthArray.push('wa1');
		mouthArray.push('wa2');
		mouthArray.push('wa3');
		mouthArray.push('ahe1');
		this.setTachieHoppe(1);
		this.setTachieSweat(1);
	}
	else if(faceId === 5) {
		eyebrowsArray.push('koma1');
		eyebrowsArray.push('koma2');
		eyebrowsArray.push('oko1');
		eyesArray.push('sita1');
		eyesArray.push('sita2');
		eyesArray.push('urusita2');
		this.setTachieHoppe(1);
		this.setTachieSweat(1);
	}
	else if(faceId === 6) {
		eyebrowsArray.push('koma1');
		eyebrowsArray.push('koma2');
		eyebrowsArray.push('oko1');
		eyesArray.push('toji1');
		eyesArray.push('sita2');
		eyesArray.push('sita3');
		eyesArray.push('urusita2');
		this.setTachieHoppe(1);
		this.setTachieSweat(1);
	}
	else if(faceId === 7) {
		eyebrowsArray.push('kiri1');
		eyebrowsArray.push('kiri2');
		eyesArray.push('sita1');
		eyesArray.push('sita2');
		mouthArray.push('ku2');
		mouthArray.push('ho1');
		mouthArray.push('ho2');
		mouthArray.push('mu1');
		mouthArray.push('mu2');
		this.setTachieHoppe(1);
	}
	else if(faceId === 8) {
		eyebrowsArray.push('kiri1');
		eyebrowsArray.push('kiri2');
		eyesArray.push('sita2');
		eyesArray.push('urusita1');
		eyesArray.push('urusita2');
		mouthArray.push('nico3');
		mouthArray.push('mu1');
		mouthArray.push('mu2');
		mouthArray.push('ho2');
		mouthArray.push('ahe2');
		this.setTachieHoppe(1);
	}
	else if(faceId === 9) {
		eyebrowsArray.push('koma2');
		eyebrowsArray.push('kiri1');
		eyebrowsArray.push('kiri2');
		eyesArray.push('sita1');
		eyesArray.push('sita2');
		eyesArray.push('urusita1');
		mouthArray.push('ku2');
		mouthArray.push('ho2');
		mouthArray.push('nico2');
		mouthArray.push('wa3');
		mouthArray.push('mu1');
		mouthArray.push('mu2');
		this.setTachieHoppe(1);
		this.setTachieSweat(1);
	}
	else if(faceId === 10) {
		eyebrowsArray.push('koma1');
		eyebrowsArray.push('kiri1');
		eyebrowsArray.push('kiri2');
		eyesArray.push('sita1');
		eyesArray.push('sita2');
		eyesArray.push('sita3');
		eyesArray.push('urusita1');
		eyesArray.push('urusita2');
		mouthArray.push('ho3');
		mouthArray.push('wa1');
		mouthArray.push('wa3');
		mouthArray.push('ahe1');
		mouthArray.push('ahe2');
		mouthArray.push('nico2');
		this.setTachieHoppe(1);
		this.setTachieSweat(1);
	}
	else if(faceId === 11) {
		eyebrowsArray.push('kiri1');
		eyebrowsArray.push('kiri2');
		eyesArray.push('sita1');
		eyesArray.push('sita2');
		eyesArray.push('urusita1');
		eyesArray.push('urusita2');
		this.setTachieHoppe(1);
	}
	else if(faceId === 12) {
		eyebrowsArray.push('kiri1');
		eyebrowsArray.push('kiri2');
		eyebrowsArray.push('koma1');
		eyebrowsArray.push('oko1');
		eyesArray.push('sita2');
		eyesArray.push('sita3');
		eyesArray.push('ahe1');
		eyesArray.push('toji1');
		eyesArray.push('urusita2');
		eyesArray.push('heartsita2');
		mouthArray.push('ho3');
		mouthArray.push('wa2');
		mouthArray.push('wa3');
		mouthArray.push('ahe1');
		mouthArray.push('ahe2');
		this.setTachieHoppe(1);
		this.setTachieSweat(1);
	}
	else if(faceId === 13) {
		eyebrowsArray.push('nico1');
		eyebrowsArray.push('nico2');
		eyebrowsArray.push('kiri2');
		eyesArray.push('sita1');
		eyesArray.push('sita2');
		eyesArray.push('urusita1');
		eyesArray.push('urusita2');
		mouthArray.push('nico1');
		mouthArray.push('nico2');
		mouthArray.push('nico3');
		mouthArray.push('mu1');
		mouthArray.push('mu2');
		mouthArray.push('ho1');
		if(isAroused) this.setTachieHoppe(1);
	}
	else if(faceId === 14) {
		eyebrowsArray.push('nico1');
		eyebrowsArray.push('nico2');
		eyebrowsArray.push('kiri2');
		eyesArray.push('sita1');
		eyesArray.push('sita2');
		eyesArray.push('urusita1');
		eyesArray.push('urusita2');
		eyesArray.push('heartsita1');
		mouthArray.push('nico1');
		mouthArray.push('nico3');
		mouthArray.push('mu2');
		mouthArray.push('ho2');
		mouthArray.push('ahe2');
		if(isAroused) this.setTachieHoppe(1);
	}
	else if(faceId === 15) {
		eyebrowsArray.push('nico1');
		eyebrowsArray.push('nico2');
		eyebrowsArray.push('kiri2');
		eyesArray.push('sita1');
		eyesArray.push('sita2');
		eyesArray.push('urusita1');
		eyesArray.push('urusita2');
		eyesArray.push('heartsita2');
		mouthArray.push('nico1');
		mouthArray.push('nico2');
		mouthArray.push('wa3');
		mouthArray.push('ahe1');
		mouthArray.push('ahe2');
		mouthArray.push('ahe3');
		if(isAroused) this.setTachieHoppe(1);
	}
	else if(faceId === 16) {
		eyebrowsArray.push('nico1');
		eyebrowsArray.push('nico2');
		eyebrowsArray.push('kiri1');
		eyebrowsArray.push('kiri2');
		eyebrowsArray.push('koma2');
		eyesArray.push('sita2');
		eyesArray.push('toji1');
		eyesArray.push('urusita1');
		eyesArray.push('urusita2');
		eyesArray.push('heartsita2');
		mouthArray.push('ho1');
		mouthArray.push('ho2');
		mouthArray.push('ho3');
		mouthArray.push('wa3');
		mouthArray.push('ahe2');
		mouthArray.push('ahe3');
		mouthArray.push('nico2');
		this.setTachieHoppe(1);
		if(Math.randomInt(2) === 0) this.setTachieSweat(1);
	}
	else if(faceId === 17) {
		eyebrowsArray.push('nico1');
		eyebrowsArray.push('nico2');
		eyebrowsArray.push('kiri2');
		eyesArray.push('sita1');
		eyesArray.push('sita2');
		eyesArray.push('urusita1');
		eyesArray.push('urusita2');
		eyesArray.push('heartsita1');
		if(isAroused) this.setTachieHoppe(1);
	}
	else if(faceId === 18) {
		eyebrowsArray.push('nico1');
		eyebrowsArray.push('nico2');
		eyebrowsArray.push('kiri2');
		eyebrowsArray.push('koma2');
		eyebrowsArray.push('oko1');
		eyesArray.push('toji1');
		eyesArray.push('ahe1');
		eyesArray.push('urusita1');
		eyesArray.push('urusita2');
		eyesArray.push('heartahe1');
		mouthArray.push('wa1');
		mouthArray.push('wa2');
		mouthArray.push('wa3');
		mouthArray.push('ahe1');
		mouthArray.push('ahe2');
		mouthArray.push('ahe3');
		this.setTachieHoppe(1);
		if(Math.randomInt(2) === 0) this.setTachieSweat(1);
	}
	
	if(this.tachieCockMouth || this.tachieCockBoobs)
		mouthArray = [];
	
	if(eyebrowsArray.length > 0) {
		this.setTachieEyebrows(eyebrowsArray[Math.randomInt(eyebrowsArray.length)]);
	}
	if(eyesArray.length > 0) {
		this.setTachieEyes(eyesArray[Math.randomInt(eyesArray.length)]);
	}
	if(mouthArray.length > 0) {
		this.setTachieMouth(mouthArray[Math.randomInt(mouthArray.length)]);
	}
	
	

	this.setAllowTachieEmoteUpdate(true);
};

Game_Actor.prototype.emoteMasturbationInBattlePose = function(lickingHalberd) {
	this.setAllowTachieEmoteUpdate(false);
	let justOrgasmed = this.didLastGetHitBySkillType(JUST_SKILLTYPE_KARRYN_ORGASM) || this.justOrgasmed();
	let leftArmIsSuckFinger = this.tachieLeftArm.includes('suck_fingers');
	let rightArmIsSuckFinger = this.tachieRightArm.includes('suck_fingers');
	let isSuckingFingers = leftArmIsSuckFinger || rightArmIsSuckFinger;
	let frontBIsArmsHalberd = this.tachieFrontB.includes('arms_halberd');
	let karrynGotBukkaked = this.didLastGetHitBySkillType(JUST_SKILLTYPE_ENEMY_BUKKAKE);
	
	let generalReactionScore = this.getReactionScore();
	let orgasmReactionScore = this.getOrgasmReactionScore();
	let bukkakeReactionScore = this.getBukkakeReactionScore();
	
	let generallvl3 = generalReactionScore >= VAR_DEF_RS_LV3_REQ;
	let generallvl2 = generalReactionScore >= VAR_DEF_RS_LV2_REQ;
	let orgasmlvl3 = orgasmReactionScore >= VAR_DEF_RS_LV3_REQ;
	let orgasmlvl2 = orgasmReactionScore >= VAR_DEF_RS_LV2_REQ;
	let bukkakelvl3 = bukkakeReactionScore  >= VAR_DEF_RS_LV3_REQ;
	let bukkakelvl2 = bukkakeReactionScore >= VAR_DEF_RS_LV2_REQ;
	
	if(this.isWearingGlovesAndHat()) {
		this.setPoseClothing();
	}
	
	if(justOrgasmed) {
		this.setTachieFrontA('climax');
	}
	else
		this.resetTachieFrontA();
	
	let faceArray = [];
	this.resetTachieHoppe();
	this.resetTachieSweat();
	
	
	if(justOrgasmed) {
		if(orgasmlvl3) 
			faceArray.push(9);
		else if(orgasmlvl2) 
			faceArray.push(6);
		else
			faceArray.push(3);
	}
	else if(lickingHalberd) {
		if(generallvl3) 
			faceArray.push(8);
		else if(generallvl2) 
			faceArray.push(5);
		else
			faceArray.push(2);
	}	
	else if(karrynGotBukkaked) {
		if(bukkakelvl3) 
			faceArray.push(7);
		else if(bukkakelvl2) 
			faceArray.push(4);
		else
			faceArray.push(1);
	}
	else {
		if(generallvl3) 
			faceArray.push(7);
		else if(generallvl2) 
			faceArray.push(4);
		else
			faceArray.push(1);
	}
	
	
	let faceId = faceArray[Math.randomInt(faceArray.length)];
	let eyebrowsArray = [];
	let eyesArray = [];
	let mouthArray = [];
	
	if(faceId === 1) {
		eyebrowsArray.push('koma1');
		eyebrowsArray.push('koma2');
		eyebrowsArray.push('koma3');
		eyebrowsArray.push('kiri1');
		eyesArray.push('mae1');
		eyesArray.push('mae2');
		mouthArray.push('hu1');
		mouthArray.push('hu2');
		mouthArray.push('hu3');
		mouthArray.push('chu1');
		mouthArray.push('nico1');
		mouthArray.push('nico2');
		mouthArray.push('wa1');
		mouthArray.push('wa2');
		mouthArray.push('wa3');
		this.setTachieHoppe(1);
		this.setTachieSweat(1);
	}
	else if(faceId === 2) {
		eyebrowsArray.push('koma1');
		eyebrowsArray.push('koma2');
		eyebrowsArray.push('koma3');
		eyesArray.push('mae1');
		eyesArray.push('mae2');
		mouthArray.push('pero3');
		mouthArray.push('ahe2');
		mouthArray.push('ahe4');
		mouthArray.push('ahe5');
		this.setTachieHoppe(1);
		this.setTachieSweat(1);
	}
	else if(faceId === 3) {
		eyebrowsArray.push('koma1');
		eyebrowsArray.push('koma2');
		eyebrowsArray.push('koma3');
		eyebrowsArray.push('kiri2');
		eyebrowsArray.push('kiri1');
		eyebrowsArray.push('oko1');
		eyebrowsArray.push('oko2');
		eyesArray.push('mae3');
		eyesArray.push('mae2');
		eyesArray.push('toji1');
		mouthArray.push('ho1');
		mouthArray.push('ku1');
		mouthArray.push('ahe1');
		mouthArray.push('ahe2');
		mouthArray.push('wa1');
		mouthArray.push('wa2');
		mouthArray.push('wa3');
		this.setTachieHoppe(1);
		this.setTachieSweat(1);
	}
	else if(faceId === 4) {
		eyebrowsArray.push('koma1');
		eyebrowsArray.push('koma2');
		eyebrowsArray.push('koma3');
		eyebrowsArray.push('kiri2');
		eyebrowsArray.push('nico2');
		eyesArray.push('mae1');
		eyesArray.push('mae2');
		mouthArray.push('hu1');
		mouthArray.push('hu2');
		mouthArray.push('hu3');
		mouthArray.push('chu1');
		mouthArray.push('nico1');
		mouthArray.push('nico2');
		mouthArray.push('wa1');
		mouthArray.push('wa2');
		mouthArray.push('wa3');
		this.setTachieHoppe(1);
		if(Math.randomInt(2) === 0) this.setTachieSweat(1);
	}
	else if(faceId === 5) {
		eyebrowsArray.push('koma1');
		eyebrowsArray.push('koma2');
		eyebrowsArray.push('koma3');
		eyebrowsArray.push('kiri2');
		eyebrowsArray.push('nico2');
		eyesArray.push('mae1');
		eyesArray.push('mae2');
		mouthArray.push('pero3');
		mouthArray.push('ahe2');
		mouthArray.push('ahe4');
		mouthArray.push('ahe5');
		this.setTachieHoppe(1);
		if(Math.randomInt(2) === 0) this.setTachieSweat(1);
	}
	else if(faceId === 6) {
		eyebrowsArray.push('koma1');
		eyebrowsArray.push('koma2');
		eyebrowsArray.push('koma3');
		eyebrowsArray.push('kiri1');
		eyebrowsArray.push('kiri2');
		eyebrowsArray.push('oko1');
		eyebrowsArray.push('oko2');
		eyesArray.push('mae3');
		eyesArray.push('mae2');
		eyesArray.push('urumae2');
		eyesArray.push('urumae1');
		eyesArray.push('toji1');
		mouthArray.push('wa2');
		mouthArray.push('wa3');
		mouthArray.push('ahe2');
		mouthArray.push('ahe3');
		mouthArray.push('ahe4');
		mouthArray.push('ahe1');
		mouthArray.push('ho1');
		mouthArray.push('ku1');
		this.setTachieHoppe(1);
		this.setTachieSweat(1);
	}
	else if(faceId === 7) {
		eyebrowsArray.push('nico1');
		eyebrowsArray.push('nico2');
		eyebrowsArray.push('nico3');
		eyesArray.push('mae1');
		eyesArray.push('mae2');
		eyesArray.push('urumae2');
		eyesArray.push('urumae1');
		mouthArray.push('hu2');
		mouthArray.push('hu3');
		mouthArray.push('nico1');
		mouthArray.push('nico2');
		mouthArray.push('nico3');
		mouthArray.push('pero1');
		mouthArray.push('pero2');
		mouthArray.push('ahe3');
		mouthArray.push('ahe4');
		mouthArray.push('ahe5');
		this.setTachieHoppe(1);
	}
	else if(faceId === 8) {
		eyebrowsArray.push('kiri1');
		eyebrowsArray.push('kiri2');
		eyebrowsArray.push('nico1');
		eyebrowsArray.push('nico2');
		eyebrowsArray.push('nico3');
		eyesArray.push('mae1');
		eyesArray.push('mae2');
		eyesArray.push('urumae2');
		eyesArray.push('urumae1');
		mouthArray.push('hu2');
		mouthArray.push('hu3');
		mouthArray.push('nico1');
		mouthArray.push('nico2');
		mouthArray.push('nico3');
		mouthArray.push('pero1');
		mouthArray.push('pero2');
		mouthArray.push('ahe3');
		mouthArray.push('ahe4');
		mouthArray.push('ahe5');
		this.setTachieHoppe(1);
		if(Math.randomInt(2) === 0) this.setTachieSweat(1);
	}
	else if(faceId === 9) {
		eyebrowsArray.push('koma2');
		eyebrowsArray.push('oko1');
		eyebrowsArray.push('oko2');
		eyebrowsArray.push('kiri1');
		eyebrowsArray.push('kiri2');
		eyebrowsArray.push('nico1');
		eyebrowsArray.push('nico2');
		eyebrowsArray.push('nico3');
		eyesArray.push('mae3');
		eyesArray.push('heartmae1');
		eyesArray.push('heartmae2');
		eyesArray.push('urumae2');
		eyesArray.push('urumae1');
		eyesArray.push('ahe1');
		eyesArray.push('toji1');
		eyesArray.push('toji2');
		mouthArray.push('wa2');
		mouthArray.push('ahe1');
		mouthArray.push('ahe2');
		mouthArray.push('ahe3');
		mouthArray.push('ahe4');
		mouthArray.push('ahe5');
		mouthArray.push('ho1');
		mouthArray.push('hu3');
		mouthArray.push('pero2');
		this.setTachieHoppe(2);
		if(Math.randomInt(2) === 0) this.setTachieSweat(1);
	}
	
	
	if(eyebrowsArray.length > 0) {
		this.setTachieEyebrows(eyebrowsArray[Math.randomInt(eyebrowsArray.length)]);
	}
	if(eyesArray.length > 0) {
		this.setTachieEyes(eyesArray[Math.randomInt(eyesArray.length)]);
	}

	if(isSuckingFingers) {
		this.resetTachieMouth();
	}
	else if(mouthArray.length > 0) {
		this.setTachieMouth(mouthArray[Math.randomInt(mouthArray.length)]);
	}
	
	if(this.isWearingPussyToy()) {
		this.setTachiePubicExtension('toyP_');
	}
	else {
		this.resetTachiePubicExtension();
	}
	
	this.setAllowTachieEmoteUpdate(true);
};

////////////////////
////////////////////
// Special Battles
////////////////////
////////////////////

Game_Actor.prototype.emoteMasturbateCouchBattle = function() {
	this.setAllowTachieEmoteUpdate(false);
	let justOrgasmed = this.didLastGetHitBySkillType(JUST_SKILLTYPE_KARRYN_ORGASM) || this.justOrgasmed();

	let suckingOnFingers = this.tachieRightArm == 'suck_fingers';
	let usingToyP = this.tachieRightArm.includes('toyP');
	let suckingOnNipple = this.tachieLeftBoob == 'suck_chikubi';
	let fingeringOmanko = this.tachieRightArm.includes('finger_omanko') || this.tachieLeftArm.includes('finger_omanko');
	let notOnani = this.masturbateBattle_rightHandIsFree() && this.masturbateBattle_LeftHandIsFree();
	let wearingPussyToy = this.isWearingPussyToy();
	
	let masochismLvl = this.masochismLvl();
	let sadismLvl = this.sadismLvl();
	
	let generalReactionScore = this.getReactionScore();
	let orgasmReactionScore = this.getOrgasmReactionScore();
	
	let generallvl3 = generalReactionScore >= VAR_DEF_RS_LV3_REQ;
	let generallvl2 = generalReactionScore >= VAR_DEF_RS_LV2_REQ;
	let orgasmlvl3 = orgasmReactionScore >= VAR_DEF_RS_LV3_REQ;
	let orgasmlvl2 = orgasmReactionScore >= VAR_DEF_RS_LV2_REQ;
	
	if(justOrgasmed) {
		this.setTachieFrontA('climax');
	}
	else {
		this.resetTachieFrontA();
	}
	
	if(this._masBattle_tachiePussyToyConsUsage && usingToyP && generallvl3) {
		this.setTachieFrontC('toyP_' + this._masBattle_tachiePussyToyPosition);
	}
	else {
		this.resetTachieFrontC();
	}
	
	let faceArray = [];
	this.resetTachieHoppe();
	this.resetTachieSweat();
	
	if(justOrgasmed) {
		if(orgasmlvl3) {
			if(suckingOnFingers || suckingOnNipple)
				faceArray.push(17);
			else
				faceArray.push(16);
		}
		else if(orgasmlvl2) {
			if(suckingOnFingers || suckingOnNipple)
				faceArray.push(11);
			else
				faceArray.push(10);
		}
		else
			faceArray.push(5);
	}
	else if(suckingOnFingers || suckingOnNipple) {
		if(generallvl3) 
			faceArray.push(15);
		else if(generallvl2) 
			faceArray.push(9);
		else
			faceArray.push(4);
	}
	else if(fingeringOmanko || usingToyP || wearingPussyToy) {
		if(generallvl3) 
			faceArray.push(14);
		else if(generallvl2) 
			faceArray.push(8);
		else
			faceArray.push(3);
	}
	else if(notOnani) {
		if(generallvl3) 
			faceArray.push(12);
		else if(generallvl2) 
			faceArray.push(6);
		else
			faceArray.push(1);
	}
	else {
		if(generallvl3) 
			faceArray.push(13);
		else if(generallvl2) 
			faceArray.push(7);
		else
			faceArray.push(2);
	}
	
	let faceId = faceArray[Math.randomInt(faceArray.length)];
	let eyebrowsArray = [];
	let eyesArray = [];
	let mouthArray = [];
	let tachieHeadType = 'close';
	let tachieHoppeName = false;
	let tachieSweatName = false;
	
	switch(faceId) {
	case 1:
		tachieHeadType = 'close';
		eyebrowsArray.push('koma1');
		eyebrowsArray.push('koma2');
		eyesArray.push('mae1');
		eyesArray.push('mae2');
		mouthArray.push('ho1');
		mouthArray.push('ku2');
		mouthArray.push('mu1');
		tachieHoppeName = '1';
		tachieSweatName = '1';
		break;
	case 2:
		tachieHeadType = 'close';
		eyebrowsArray.push('koma1');
		eyebrowsArray.push('koma2');
		eyesArray.push('mae1');
		eyesArray.push('mae2');
		mouthArray.push('ho1');
		mouthArray.push('ho2');
		mouthArray.push('ku1');
		mouthArray.push('ku2');
		mouthArray.push('mu1');
		mouthArray.push('ahe1');
		mouthArray.push('wa1');
		tachieHoppeName = '1';
		tachieSweatName = '1';
		break;	
	case 3:
		tachieHeadType = 'far';
		eyebrowsArray.push('koma1');
		eyebrowsArray.push('koma2');
		eyesArray.push('mae1');
		eyesArray.push('mae2');
		eyesArray.push('mae3');
		mouthArray.push('mu1');
		mouthArray.push('ku1');
		mouthArray.push('wa1');
		mouthArray.push('ho1');
		mouthArray.push('ahe1');
		tachieHoppeName = '1';
		tachieSweatName = '1';
		break;		
	case 4:
		tachieHeadType = 'close';
		eyebrowsArray.push('koma1');
		eyebrowsArray.push('koma2');
		eyesArray.push('mae1');
		eyesArray.push('mae2');
		tachieHoppeName = '1';
		tachieSweatName = '1';
		break;		
	case 5:
		tachieHeadType = 'far';
		eyebrowsArray.push('koma1');
		eyebrowsArray.push('koma2');
		eyebrowsArray.push('oko1');
		eyesArray.push('mae2');
		eyesArray.push('mae3');
		eyesArray.push('toji1');
		mouthArray.push('wa1');
		mouthArray.push('ho1');
		mouthArray.push('ahe1');
		mouthArray.push('ahe2');
		tachieHoppeName = '1';
		tachieSweatName = '1';
		break;	
	case 6:
		tachieHeadType = 'close';
		eyebrowsArray.push('kiri1');
		eyebrowsArray.push('kiri2');
		eyesArray.push('mae1');
		eyesArray.push('mae2');
		mouthArray.push('ho1');
		mouthArray.push('mu1');
		mouthArray.push('nico1');
		mouthArray.push('nico2');
		tachieHoppeName = '1';
		break;	
	case 7:
		tachieHeadType = 'close';
		eyebrowsArray.push('kiri1');
		eyebrowsArray.push('kiri2');
		eyesArray.push('mae1');
		eyesArray.push('mae2');
		eyesArray.push('urumae1');
		eyesArray.push('urumae2');
		mouthArray.push('ho1');
		mouthArray.push('ho2');
		mouthArray.push('ho3');
		mouthArray.push('mu1');
		mouthArray.push('nico1');
		mouthArray.push('nico3');
		mouthArray.push('ahe1');
		tachieHoppeName = '1';
		if(Math.randomInt(2) === 0) tachieSweatName = '1';
		break;	
	case 8:
		tachieHeadType = 'far';
		eyebrowsArray.push('kiri1');
		eyebrowsArray.push('kiri2');
		eyesArray.push('mae1');
		eyesArray.push('mae2');
		eyesArray.push('mae3');
		eyesArray.push('urumae2');
		mouthArray.push('chu1');
		mouthArray.push('mu1');
		mouthArray.push('ku1');
		mouthArray.push('ho1');
		mouthArray.push('ho2');
		mouthArray.push('ahe1');
		mouthArray.push('ahe3');
		tachieHoppeName = '1';
		tachieSweatName = '1';
		break;	
	case 9:
		tachieHeadType = 'close';
		eyebrowsArray.push('kiri1');
		eyebrowsArray.push('kiri2');
		eyesArray.push('mae1');
		eyesArray.push('mae2');
		eyesArray.push('urumae1');
		eyesArray.push('urumae2');
		tachieHoppeName = '1';
		tachieSweatName = '1';
		break;	
	case 10:
		tachieHeadType = 'far';
		eyebrowsArray.push('kiri1');
		eyebrowsArray.push('kiri2');
		eyebrowsArray.push('koma2');
		eyesArray.push('mae3');
		eyesArray.push('toji1');
		eyesArray.push('urumae1');
		eyesArray.push('urumae2');
		eyesArray.push('heartmae2');
		mouthArray.push('wa1');
		mouthArray.push('ho1');
		mouthArray.push('ho2');
		mouthArray.push('ahe1');
		mouthArray.push('ahe2');
		mouthArray.push('ahe3');
		mouthArray.push('ahe4');
		tachieHoppeName = '1';
		tachieSweatName = '1';
		break;	
	case 11:
		tachieHeadType = 'close';
		eyebrowsArray.push('kiri1');
		eyebrowsArray.push('kiri2');
		eyebrowsArray.push('koma2');
		eyesArray.push('mae3');
		eyesArray.push('toji1');
		eyesArray.push('ahe1');
		eyesArray.push('urumae2');
		eyesArray.push('heartmae2');
		tachieHoppeName = '1';
		tachieSweatName = '1';
		break;	
	case 12:
		tachieHeadType = 'close';
		eyebrowsArray.push('nico1');
		eyebrowsArray.push('nico2');
		eyesArray.push('mae1');
		eyesArray.push('mae2');
		eyesArray.push('urumae1');
		eyesArray.push('urumae2');
		eyesArray.push('toji1');
		mouthArray.push('ku3');
		mouthArray.push('mu1');
		mouthArray.push('chu1');
		mouthArray.push('nico1');
		mouthArray.push('nico2');
		mouthArray.push('nico3');
		mouthArray.push('nico4');
		tachieHoppeName = '1';
		break;	
	case 13:
		tachieHeadType = 'close';
		eyebrowsArray.push('nico1');
		eyebrowsArray.push('nico2');
		eyebrowsArray.push('koma2');
		eyesArray.push('mae1');
		eyesArray.push('mae2');
		eyesArray.push('urumae1');
		eyesArray.push('urumae2');
		eyesArray.push('heartmae1');
		mouthArray.push('ku3');
		mouthArray.push('mu1');
		mouthArray.push('ho2');
		mouthArray.push('ho3');
		mouthArray.push('nico1');
		mouthArray.push('nico2');
		mouthArray.push('nico3');
		mouthArray.push('nico4');
		tachieHoppeName = '1';
		break;	
	case 14:
		tachieHeadType = 'far';
		eyebrowsArray.push('nico1');
		eyebrowsArray.push('nico2');
		eyebrowsArray.push('koma2');
		eyesArray.push('mae3');
		eyesArray.push('urumae1');
		eyesArray.push('urumae2');
		eyesArray.push('heartmae1');
		eyesArray.push('heartmae2');
		mouthArray.push('ku3');
		mouthArray.push('chu1');
		mouthArray.push('ho2');
		mouthArray.push('nico1');
		mouthArray.push('ahe1');
		mouthArray.push('ahe3');
		mouthArray.push('ahe4');
		tachieHoppeName = '1';
		tachieSweatName = '1';
		break;	
	case 15:
		tachieHeadType = 'close';
		eyebrowsArray.push('nico1');
		eyebrowsArray.push('nico2');
		eyebrowsArray.push('koma2');
		eyesArray.push('mae1');
		eyesArray.push('mae2');
		eyesArray.push('urumae1');
		eyesArray.push('urumae2');
		tachieHoppeName = '1';
		break;	
	case 16:
		tachieHeadType = 'far';
		eyebrowsArray.push('nico1');
		eyebrowsArray.push('nico2');
		eyebrowsArray.push('kiri2');
		eyebrowsArray.push('koma1');
		eyebrowsArray.push('oko1');
		eyesArray.push('ahe1');
		eyesArray.push('mae3');
		eyesArray.push('toji1');
		eyesArray.push('urumae2');
		eyesArray.push('heartmae1');
		eyesArray.push('heartmae2');
		eyesArray.push('heartahe1');
		mouthArray.push('ho1');
		mouthArray.push('ho2');
		mouthArray.push('nico1');
		mouthArray.push('ahe2');
		mouthArray.push('ahe3');
		mouthArray.push('ahe4');
		mouthArray.push('ahe5');
		tachieHoppeName = '1';
		if(Math.randomInt(2) === 0) tachieSweatName = '1';
		break;	
	case 17:
		tachieHeadType = 'far';
		eyebrowsArray.push('nico1');
		eyebrowsArray.push('nico2');
		eyebrowsArray.push('kiri1');
		eyebrowsArray.push('koma1');
		eyebrowsArray.push('oko1');
		eyesArray.push('ahe1');
		eyesArray.push('mae3');
		eyesArray.push('toji1');
		eyesArray.push('urumae2');
		eyesArray.push('heartmae1');
		eyesArray.push('heartmae2');
		eyesArray.push('heartahe1');
		tachieHoppeName = '1';
		tachieSweatName = '1';
		break;
	}
	
	this.setTachieHead(tachieHeadType);
	this.setTachieHairExtension(tachieHeadType + '_');
	this.setTachieFrontB('hair_' + this.getTachieHairId());
	if(tachieHoppeName) this.setTachieHoppe('' + tachieHeadType + '_' + tachieHoppeName);
	if(tachieSweatName) this.setTachieSweat('' + tachieHeadType + '_' + tachieSweatName);	
	
	if(eyebrowsArray.length > 0) {
		this.setTachieEyebrows('' + tachieHeadType + '_' + eyebrowsArray[Math.randomInt(eyebrowsArray.length)]);
	}
	if(eyesArray.length > 0) {
		this.setTachieEyes('' + tachieHeadType + '_' + eyesArray[Math.randomInt(eyesArray.length)]);
	}
	if(suckingOnFingers || suckingOnNipple) {
		this.resetTachieMouth();
	}
	else if(mouthArray.length > 0) {
		this.setTachieMouth('' + tachieHeadType + '_' + mouthArray[Math.randomInt(mouthArray.length)]);
	}
	
	if(tachieHeadType === 'far') {
		this.setTachieStrayFaceExtension('far_');
	}
	else {
		this.setTachieStrayFaceExtension('close_');
	}
	
	if(generallvl2 && this.tachieRightArm.includes('normal')) {
		let rightArmCouchRan = 20;
		if(masochismLvl > sadismLvl) {
			rightArmCouchRan -= ((masochismLvl - sadismLvl) * 10);
		}
		else {
			rightArmCouchRan += ((sadismLvl - masochismLvl) * 7);
		}
		if(Math.randomInt(100) < rightArmCouchRan) {
			this.setTachieRightArm('couch');
		}
	}
	if(generallvl2 && this.tachieLeftArm.includes('normal')) {
		let leftArmCouchRan = 20;
		if(masochismLvl > sadismLvl) {
			leftArmCouchRan -= ((masochismLvl - sadismLvl) * 10);
		}
		else {
			leftArmCouchRan += ((sadismLvl - masochismLvl) * 7);
		}
		if(Math.randomInt(100) < leftArmCouchRan) {
			this.setTachieLeftArm('couch');
		}
	}
	
	if(wearingPussyToy) {
		if(Karryn.isCensored())
			this.setTachieHolePussy('open_cen');
		else
			this.setTachieHolePussy('open');
		if(ConfigManager.KarrynPubicStyle === PUBIC_STYLE_BUSHY_ID)
			this.setTachiePubicExtension('open_');
	}
	else {
		this.resetTachieHolePussy();
		this.resetTachiePubicExtension();
	}

	this.setAllowTachieEmoteUpdate(true);
};

////////
// Glory 

//Sitting
Game_Actor.prototype.emoteGloryToiletSittingPose = function() {
	this.setAllowTachieEmoteUpdate(false);
	let justOrgasmed = this.didLastGetHitBySkillType(JUST_SKILLTYPE_KARRYN_ORGASM) || this.justOrgasmed();
	let isAroused = this.isAroused() || justOrgasmed;
	let isNaked = !this.isWearingGlovesAndHat();
	let isPcup = this.boobsSizeIsPCup();
	
	let ranNum = Math.randomInt(2);
	let toysSabun1 = ranNum === 1;
	let toysSabun2 = ranNum === 0;
	
	let wearingPussyToy = this.isWearingPussyToy();
	let wearingAnalToy = this.isWearingAnalToy();
	
	let karrynJustInsertedToy = this.didLastGetHitBySkillType(JUST_SKILLTYPE_KARRYN_TOY_INSERT_CLIT) || this.didLastGetHitBySkillType(JUST_SKILLTYPE_KARRYN_TOY_INSERT_PUSSY) || this.didLastGetHitBySkillType(JUST_SKILLTYPE_KARRYN_TOY_INSERT_ANAL);
	
	let leftHoleIsEmpty = $gameTroop.gloryBattle_leftHoleIsEmpty();
	let rightHoleIsEmpty = $gameTroop.gloryBattle_rightHoleIsEmpty();
	let leftHoleJustShowed = !leftHoleIsEmpty && this.didLastGetHitBySkillType(JUST_SKILLTYPE_GLORY_LEFT_HOLE_SHOWED);
	let rightHoleJustShowed = !rightHoleIsEmpty && this.didLastGetHitBySkillType(JUST_SKILLTYPE_GLORY_RIGHT_HOLE_SHOWED);
	
	let karrynJustUsedCockStare = this.didLastGetHitBySkillType(JUST_SKILLTYPE_KARRYN_COCK_STARE);
	let karrynUsedCockStareOnLeftHole = !leftHoleIsEmpty && karrynJustUsedCockStare && $gameTroop._gloryLeftStall.didLastGetHitBySkillType(JUST_SKILLTYPE_KARRYN_COCK_STARE);
	let karrynUsedCockStareOnRightHole = !rightHoleIsEmpty && karrynJustUsedCockStare && $gameTroop._gloryRightStall.didLastGetHitBySkillType(JUST_SKILLTYPE_KARRYN_COCK_STARE);
	let karrynJustUsedCockPet = this.didLastGetHitBySkillType(JUST_SKILLTYPE_KARRYN_PETTING);
	let karrynUsedCockPetOnLeftHole = !leftHoleIsEmpty && karrynJustUsedCockPet && $gameTroop._gloryLeftStall.didLastGetHitBySkillType(JUST_SKILLTYPE_KARRYN_PETTING);
	let karrynUsedCockPetOnRightHole = !rightHoleIsEmpty && karrynJustUsedCockPet && $gameTroop._gloryRightStall.didLastGetHitBySkillType(JUST_SKILLTYPE_KARRYN_PETTING);
	
	if(karrynUsedCockStareOnLeftHole || karrynUsedCockPetOnLeftHole) {
		$gameTroop._gloryLeftStall.resetGotHitBySkillType();
	}
	if(karrynUsedCockStareOnRightHole || karrynUsedCockPetOnRightHole) {
		$gameTroop._gloryRightStall.resetGotHitBySkillType();
	}
	
	let lastHitHandjob = this.didLastGetHitBySkillType(JUST_SKILLTYPE_ENEMY_HANDJOB) || this.didLastGetHitBySkillType(JUST_SKILLTYPE_KARRYN_HANDJOB);
	let givingRightHoleHJ = this.isBodySlotPenis(LEFT_HAND_ID);
	let givingLeftHoleHJ = this.isBodySlotPenis(RIGHT_HAND_ID);
	let karrynUsedHandJobOnLeftHole = this._lastHandUsedForHandjob === RIGHT_HAND_ID;
	let karrynUsedHandJobOnRightHole = this._lastHandUsedForHandjob === LEFT_HAND_ID;
	let karrynGotBukkaked = this.didLastGetHitBySkillType(JUST_SKILLTYPE_ENEMY_BUKKAKE);
	let leftHoleJustEjaculated = $gameTroop._gloryLastHoleToEjaculate === GLORY_LEFT_STALL_ID;
	let rightHoleJustEjaculated = $gameTroop._gloryLastHoleToEjaculate === GLORY_RIGHT_STALL_ID;
	
	
	let generalReactionScore = this.getReactionScore();
	let orgasmReactionScore = this.getOrgasmReactionScore();
	let bukkakeReactionScore = this.getBukkakeReactionScore();
	
	let generallvl3 = generalReactionScore >= VAR_DEF_RS_LV3_REQ;
	let generallvl2 = generalReactionScore >= VAR_DEF_RS_LV2_REQ;
	let orgasmlvl3 = orgasmReactionScore >= VAR_DEF_RS_LV3_REQ;
	let orgasmlvl2 = orgasmReactionScore >= VAR_DEF_RS_LV2_REQ;
	let bukkakelvl3 = bukkakeReactionScore  >= VAR_DEF_RS_LV3_REQ;
	let bukkakelvl2 = bukkakeReactionScore >= VAR_DEF_RS_LV2_REQ;
	
	if(justOrgasmed) {
		this.setTachieLegs('spread');
		if(this.tachieLeftArm.includes('suck_fingers'))
			this.toiletBattle_resetLeftArmToNormal();
		if(this.tachieRightArm.includes('suck_fingers'))
			this.toiletBattle_resetRightArmToNormal();
	}
	
	if(!leftHoleIsEmpty) {
		let leftHoleName = '';
		let leftHoleEnemy = $gameTroop._gloryLeftStall;
		
		if(givingLeftHoleHJ) {
			if(leftHoleEnemy.isAroused()) {
				leftHoleName += 'hj_';
				this.setTachieRightArm('hj_1');
				this.setTachieSemenHoleLeftExtension('hard_hj_');
			}
			else {
				leftHoleName += 'pet_';
				this.setTachieRightArm('pet_1');
				this.setTachieSemenHoleLeftExtension('soft_pet_');
			}
		}
		else if(karrynUsedCockPetOnLeftHole) {
			if(leftHoleEnemy.isAroused()) {
				leftHoleName += 'hard_';
				this.setTachieRightArm('pet_1');
				this.setTachieSemenHoleLeftExtension('hard_');
			}
			else {
				leftHoleName += 'pet_';
				this.setTachieRightArm('pet_1');
				this.setTachieSemenHoleLeftExtension('soft_pet_');
			}
		}
		else {
			if(leftHoleEnemy.isAroused()) {
				leftHoleName += 'hard_';
				this.setTachieSemenHoleLeftExtension('hard_');
			}
			else {
				leftHoleName += 'soft_';
				this.setTachieSemenHoleLeftExtension('soft_');
			}
			
			if((this.tachieRightArm.includes('hj') || this.tachieRightArm.includes('pet')) &&
				!givingLeftHoleHJ && !karrynUsedCockPetOnLeftHole) {
					this.toiletBattle_resetRightArmToNormal();
			}
		}
		
		leftHoleName += leftHoleEnemy.enemyCock();
		if(Karryn.isCensored())
			leftHoleName += '_cen';
		
		this.setTachieLeftHole(leftHoleName);
		this.setMaxTachieSemenHoleLeftId(1);
	}
	else {
		this.resetTachieLeftHole();
		this.setMaxTachieSemenHoleLeftId(0);
		if((this.tachieRightArm.includes('hj') || this.tachieRightArm.includes('pet'))
			&& !this.tachieRightArm.includes('kuri') && !this.tachieRightArm.includes('manko') && !this.tachieRightArm.includes('chikubi') && !this.tachieRightArm.includes('anaru') && !this.tachieRightArm.includes('suck_fingers') && !this.tachieRightArm.includes('toy'))
				this.toiletBattle_resetRightArmToNormal();
	}
	
	if(this.tachieRightArm.includes('chikubi')) {
		this.setTachieRightBoob('touch_chikubi'); 
		this.setTachieSemenRightBoobExtension('touch_chikubi_');
		if(isPcup)
			this.setTachieStrayRightBoobExtension('touch_chikubi_');
		else
			this.setTachieStrayRightBoobExtension('chikubi_');
	}
	else if(this.tachieRightArm.includes('suck_fingers')) {
		if(isAroused)
			this.setTachieRightBoob('suck_fingers_hard');
		else
			this.setTachieRightBoob('suck_fingers');
		this.setTachieSemenRightBoobExtension('suck_fingers_');
		this.setTachieStrayRightBoobExtension('suck_fingers_');
	}
	else if(isPcup && this.tachieRightArm.includes('anaru_1')) {
		if(isAroused)
			this.setTachieRightBoob('anaru_1_hard');
		else
			this.setTachieRightBoob('anaru_1');
		this.setTachieSemenRightBoobExtension('anaru_1_');
		this.setTachieStrayRightBoobExtension('anaru_1_');
	}
	else if(isPcup && this.tachieRightArm.includes('kuri_1')) {
		if(isAroused)
			this.setTachieRightBoob('kuri_1_hard');
		else
			this.setTachieRightBoob('kuri_1');
		this.setTachieSemenRightBoobExtension('kuri_1_');
		this.setTachieStrayRightBoobExtension('kuri_1_');
	}
	else if(isPcup && this.tachieRightArm.includes('kuri_2')) {
		if(isAroused)
			this.setTachieRightBoob('kuri_2_hard');
		else
			this.setTachieRightBoob('kuri_2');
		this.setTachieSemenRightBoobExtension('kuri_2_');
		this.setTachieStrayRightBoobExtension('kuri_2_');
	}
	else if(isPcup && this.tachieRightArm.includes('manko_1')) {
		if(isAroused)
			this.setTachieRightBoob('manko_1_hard');
		else
			this.setTachieRightBoob('manko_1');
		this.setTachieSemenRightBoobExtension('manko_1_');
		this.setTachieStrayRightBoobExtension('manko_1_');
	}
	else if(isPcup && this.tachieRightArm.includes('toyA_1')) {
		if(isAroused)
			this.setTachieRightBoob('toyA_1_hard');
		else
			this.setTachieRightBoob('toyA_1');
		this.setTachieSemenRightBoobExtension('toyA_1_');
		this.setTachieStrayRightBoobExtension('toyA_1_');
	}
	else if(isPcup && this.tachieRightArm.includes('toyA_2')) {
		if(isAroused)
			this.setTachieRightBoob('toyA_2_hard');
		else
			this.setTachieRightBoob('toyA_2');
		this.setTachieSemenRightBoobExtension('toyA_2_');
		this.setTachieStrayRightBoobExtension('toyA_2_');
	}
	else if(isPcup && this.tachieRightArm.includes('toyC_1')) {
		if(isAroused)
			this.setTachieRightBoob('toyC_1_hard');
		else
			this.setTachieRightBoob('toyC_1');
		this.setTachieSemenRightBoobExtension('toyC_1_');
		this.setTachieStrayRightBoobExtension('toyC_1_');
	}
	else if(isPcup && this.tachieRightArm.includes('toyP_1')) {
		if(isAroused)
			this.setTachieRightBoob('toyP_1_hard');
		else
			this.setTachieRightBoob('toyP_1');
		this.setTachieSemenRightBoobExtension('toyP_1_');
		this.setTachieStrayRightBoobExtension('toyP_1_');
	}
	else if(isPcup && this.tachieRightArm.includes('toyP_2')) {
		if(isAroused)
			this.setTachieRightBoob('toyP_2_hard');
		else
			this.setTachieRightBoob('toyP_2');
		this.setTachieSemenRightBoobExtension('toyP_2_');
		this.setTachieStrayRightBoobExtension('toyP_2_');
	}
	else {
		if(isAroused)
			this.setTachieRightBoob('normal_hard');
		else
			this.setTachieRightBoob('normal');
		this.setTachieSemenRightBoobExtension('normal_');
		this.setTachieStrayRightBoobExtension('normal_');
	}
	this.setMaxTachieSemenRightBoobId(1);
	
	if(!rightHoleIsEmpty) {
		let rightHoleName = '';
		let rightHoleEnemy = $gameTroop._gloryRightStall;
		
		if(givingRightHoleHJ) {
			if(rightHoleEnemy.isAroused()) {
				rightHoleName += 'hj_';
				this.setTachieLeftArm('hj_1');
				this.setTachieSemenHoleRightExtension('hard_hj_');
			}
			else {
				rightHoleName += 'pet_';
				this.setTachieLeftArm('pet_1');
				this.setTachieSemenHoleRightExtension('soft_pet_');
			}
		}
		else if(karrynUsedCockPetOnRightHole) {
			if(rightHoleEnemy.isAroused()) {
				rightHoleName += 'hard_';
				this.setTachieLeftArm('pet_1');
				this.setTachieSemenHoleRightExtension('hard_');
			}
			else {
				rightHoleName += 'pet_';
				this.setTachieLeftArm('pet_1');
				this.setTachieSemenHoleRightExtension('soft_pet_');
			}
		}
		else {
			if(rightHoleEnemy.isAroused()) {
				rightHoleName += 'hard_';
				this.setTachieSemenHoleRightExtension('hard_');
			}
			else {
				rightHoleName += 'soft_';
				this.setTachieSemenHoleRightExtension('soft_');
			}
			
			if((this.tachieLeftArm.includes('hj') || this.tachieLeftArm.includes('pet')) &&
				!givingRightHoleHJ && !karrynUsedCockPetOnRightHole) {
					this.toiletBattle_resetLeftArmToNormal();
			}
		}
		
		rightHoleName += rightHoleEnemy.enemyCock();
		if(Karryn.isCensored())
			rightHoleName += '_cen';
		
		this.setTachieRightHole(rightHoleName);
		this.setMaxTachieSemenHoleRightId(1);
	}
	else {
		this.resetTachieRightHole();
		this.setMaxTachieSemenHoleRightId(0);
		if(this.tachieLeftArm.includes('hj') || this.tachieLeftArm.includes('pet')
			&& !this.tachieLeftArm.includes('kuri') && !this.tachieLeftArm.includes('manko') && !this.tachieLeftArm.includes('chikubi') && !this.tachieLeftArm.includes('anaru') && !this.tachieLeftArm.includes('suck_fingers') && !this.tachieLeftArm.includes('toy')) 
			this.toiletBattle_resetLeftArmToNormal();
	}
	
	if(this.tachieLeftArm.includes('chikubi')) {
		this.setTachieLeftBoob('touch_chikubi');
		this.setTachieSemenLeftBoobExtension('touch_chikubi_');
		if(isPcup)
			this.setTachieStrayLeftBoobExtension('touch_chikubi_');
		else
			this.setTachieStrayLeftBoobExtension('chikubi_');
	}
	else if(this.tachieLeftArm.includes('suck_fingers'))  {
		if(isAroused)
			this.setTachieLeftBoob('suck_fingers_hard');
		else
			this.setTachieLeftBoob('suck_fingers');
		this.setTachieSemenLeftBoobExtension('suck_fingers_');
		this.setTachieStrayLeftBoobExtension('suck_fingers_');
	}
	else if(isPcup && this.tachieLeftArm.includes('anaru_1')) {
		if(isAroused)
			this.setTachieLeftBoob('anaru_1_hard');
		else
			this.setTachieLeftBoob('anaru_1');
		this.setTachieSemenLeftBoobExtension('anaru_1_');
		this.setTachieStrayLeftBoobExtension('anaru_1_');
	}
	else if(isPcup && this.tachieLeftArm.includes('kuri_1')) {
		if(isAroused)
			this.setTachieLeftBoob('kuri_1_hard');
		else
			this.setTachieLeftBoob('kuri_1');
		this.setTachieSemenLeftBoobExtension('kuri_1_');
		this.setTachieStrayLeftBoobExtension('kuri_1_');
	}
	else if(isPcup && this.tachieLeftArm.includes('kuri_2')) {
		if(isAroused)
			this.setTachieLeftBoob('kuri_2_hard');
		else
			this.setTachieLeftBoob('kuri_2');
		this.setTachieSemenLeftBoobExtension('kuri_2_');
		this.setTachieStrayLeftBoobExtension('kuri_2_');
	}
	else if(isPcup && this.tachieLeftArm.includes('manko_1')) {
		if(isAroused)
			this.setTachieLeftBoob('manko_1_hard');
		else
			this.setTachieLeftBoob('manko_1');
		this.setTachieSemenLeftBoobExtension('manko_1_');
		this.setTachieStrayLeftBoobExtension('manko_1_');
	}
	else if(isPcup && this.tachieLeftArm.includes('toyA_1')) {
		if(isAroused)
			this.setTachieLeftBoob('toyA_1_hard');
		else
			this.setTachieLeftBoob('toyA_1');
		this.setTachieSemenLeftBoobExtension('toyA_1_');
		this.setTachieStrayLeftBoobExtension('toyA_1_');
	}
	else if(isPcup && this.tachieLeftArm.includes('toyA_2')) {
		if(isAroused)
			this.setTachieLeftBoob('toyA_2_hard');
		else
			this.setTachieLeftBoob('toyA_2');
		this.setTachieSemenLeftBoobExtension('toyA_2_');
		this.setTachieStrayLeftBoobExtension('toyA_2_');
	}
	else if(isPcup && this.tachieLeftArm.includes('toyC_1')) {
		if(isAroused)
			this.setTachieLeftBoob('toyC_1_hard');
		else
			this.setTachieLeftBoob('toyC_1');
		this.setTachieSemenLeftBoobExtension('toyC_1_');
		this.setTachieStrayLeftBoobExtension('toyC_1_');
	}
	else if(isPcup && this.tachieLeftArm.includes('toyP_1')) {
		if(isAroused)
			this.setTachieLeftBoob('toyP_1_hard');
		else
			this.setTachieLeftBoob('toyP_1');
		this.setTachieSemenLeftBoobExtension('toyP_1_');
		this.setTachieStrayLeftBoobExtension('toyP_1_');
	}
	else if(isPcup && this.tachieLeftArm.includes('toyP_2')) {
		if(isAroused)
			this.setTachieLeftBoob('toyP_2_hard');
		else
			this.setTachieLeftBoob('toyP_2');
		this.setTachieSemenLeftBoobExtension('toyP_2_');
		this.setTachieStrayLeftBoobExtension('toyP_2_');
	}
	else {
		if(isAroused)
			this.setTachieLeftBoob('normal_hard');
		else
			this.setTachieLeftBoob('normal');
		this.setTachieSemenLeftBoobExtension('normal_');
		this.setTachieStrayLeftBoobExtension('normal_');
	}
	this.setMaxTachieSemenLeftBoobId(1);
	
	let isMasturbatingBoobs = this.tachieLeftArm.includes('chikubi') || this.tachieRightArm.includes('chikubi');
	let isMasturbatingMouth = this.tachieLeftArm.includes('suck_fingers') || this.tachieRightArm.includes('suck_fingers');
	let isMasturbatingLowerBody = this.tachieLeftArm.includes('anaru') || this.tachieRightArm.includes('anaru') || this.tachieLeftArm.includes('kuri') || this.tachieRightArm.includes('kuri') || this.tachieLeftArm.includes('manko') || this.tachieRightArm.includes('manko') || this.tachieLeftArm.includes('toy') || this.tachieRightArm.includes('toy');
	
	//Kuri
	
	if(this.tachieRightArm.includes('kuri_2') || this.tachieLeftArm.includes('kuri_2')) {
		if(Karryn.isCensored())
			this.setTachieFrontA('kuri_hard_cen');
		else
			this.setTachieFrontA('kuri_hard');
	}
	else {
		this.resetTachieFrontA();
	}
	
	//Toys
	if(this.tachieLeftArm.includes('toyA')) {
		if(toysSabun1) {
			this.setTachieLeftArm('toyA_1');
		}
		else if(toysSabun2) {
			this.setTachieLeftArm('toyA_2');
		}
	}
	if(this.tachieRightArm.includes('toyA')) {
		if(toysSabun1) {
			this.setTachieRightArm('toyA_1');
		}
		else if(toysSabun2) {
			this.setTachieRightArm('toyA_2');
		}
	}
	
	if(this.tachieLeftArm.includes('toyP')) {
		if(toysSabun1) {
			this.setTachieLeftArm('toyP_1');
			this.setTachiePussyToyExtension_gloryBattle('left_1_');
		}
		else if(toysSabun2) {
			this.setTachieLeftArm('toyP_2');
			this.setTachiePussyToyExtension_gloryBattle('left_2_');
		}
	}
	else if(this.tachieRightArm.includes('toyP')) {
		if(toysSabun1) {
			this.setTachieRightArm('toyP_1');
			this.setTachiePussyToyExtension_gloryBattle('right_1_');
		}
		else if(toysSabun2) {
			this.setTachieRightArm('toyP_2');
			this.setTachiePussyToyExtension_gloryBattle('right_2_');
		}
	}
	else if(this.getTachiePussyToyExtension_gloryBattle().includes('right_2_')) {
		this.setTachiePussyToyExtension_gloryBattle('right_1_');
	}
	else if(this.getTachiePussyToyExtension_gloryBattle().includes('left_2_')) {
		this.setTachiePussyToyExtension_gloryBattle('left_1_');
	}
	
	//Naked
	
	if(isNaked) {
		if(this.tachieLeftBoob.includes('suck_fingers_hard') && !isPcup) {
			this.setTachieLeftBoob('suck_fingers_hard_naked');
		}
		else if(this.tachieLeftBoob.includes('suck_fingers') && !isPcup) {
			this.setTachieLeftBoob('suck_fingers_naked');
		}
		else if(this.tachieLeftBoob.includes('touch_chikubi')) {
			this.setTachieLeftBoob('touch_chikubi_naked');
		}
		
		if(this.tachieRightBoob.includes('suck_fingers_hard') && !isPcup) {
			this.setTachieRightBoob('suck_fingers_hard_naked');
		}
		else if(this.tachieRightBoob.includes('suck_fingers') && !isPcup) {
			this.setTachieRightBoob('suck_fingers_naked');
		}
		else if(this.tachieRightBoob.includes('touch_chikubi')) {
			this.setTachieRightBoob('touch_chikubi_naked');
		}
		
		this.setTachieClitToyExtension_gloryBattle('naked_');
	}
	
	
	//Legs
	let legsAreSpread = this.tachieLegs.includes('spread');
	let legsAreClose = this.tachieLegs.includes('close');
	
	if(legsAreSpread || wearingPussyToy || wearingAnalToy) {
		this.setTachiePubicExtension('spread_');
		
		this.setTachieSemenRightLegExtension('spread_');
		this.setTachieSemenLeftLegExtension('spread_');
		this.setTachieSemenButtExtension('spread_');
		this.setTachieSemenCrotchExtension('spread_');
		this.setTachieSemenAnalExtension('spread_');
		this.setTachieSemenWetExtension('spread_');
		this.setTachieSemenToiletSeatExtension('spread_');
		this.setTachieWetToiletSeatExtension('spread_');
		
		this.setMaxTachieSemenLeftLegId(1);
		this.setMaxTachieSemenRightLegId(1);
		this.setMaxTachieSemenButtId(1);
		this.setMaxTachieSemenAnalId(1);
		this.setMaxTachieSemenCrotchId(1);
		this.setMaxTachieWetId(1);
		this.setMaxTachieSemenToiletSeatId(1);
		this.setMaxTachieWetToiletSeatId(1);
		
		this.setTachieStrayButtExtension('spread_');
		this.setTachieStrayGroinExtension('spread_');
		this.setMaxTachieStrayButtId(1,2,4);
		this.setMaxTachieStrayGroinId(2,3,4);
		
		if(isNaked) {
			if(Karryn.isCensored()) {
				this.setTachieLegs('spread_naked_cen');
			}
			else {
				this.setTachieLegs('spread_naked');
			}
		}
		else {
			if(Karryn.isCensored()) {
				this.setTachieLegs('spread_cen');
			}
			else {
				this.setTachieLegs('spread');
			}
		}
			
		if(isPcup) {
			if(this.tachieRightBoob.includes('normal')) {
				if(isAroused)
					this.setTachieRightBoob('normal_spread_hard');
				else
					this.setTachieRightBoob('normal_spread');
				this.setTachieSemenRightBoobExtension('normal_spread_');
				this.setTachieStrayRightBoobExtension('normal_spread_');
			}
			if(this.tachieLeftBoob.includes('normal')) {
				if(isAroused)
					this.setTachieLeftBoob('normal_spread_hard');
				else
					this.setTachieLeftBoob('normal_spread');
				this.setTachieSemenLeftBoobExtension('normal_spread_');
				this.setTachieStrayLeftBoobExtension('normal_spread_');
			}
		}			
	}
	else {
		this.setTachiePubicExtension('close_');
		
		this.setTachieSemenRightLegExtension('close_');
		this.setTachieSemenLeftLegExtension('close_');
		this.setTachieSemenButtExtension('close_');
		if(isNaked) {
			this.setTachieSemenCrotchExtension('close_naked_');
			this.setTachieSemenWetExtension('close_naked_');
		}
		else {
			this.setTachieSemenCrotchExtension('close_');
			this.setTachieSemenWetExtension('close_');
		}
		this.setTachieSemenToiletSeatExtension('close_');
		this.setTachieWetToiletSeatExtension('close_');
		
		this.setMaxTachieSemenLeftLegId(1);
		this.setMaxTachieSemenRightLegId(1);
		this.setMaxTachieSemenButtId(1);
		this.setMaxTachieSemenCrotchId(1);
		this.setMaxTachieSemenAnalId(0);
		this.setMaxTachieWetId(1);
		this.setMaxTachieSemenToiletSeatId(1);
		this.setMaxTachieWetToiletSeatId(1);
		
		this.setTachieStrayButtExtension('close_');
		this.setTachieStrayGroinExtension('close_');
		this.setMaxTachieStrayButtId(1,2,2);
		this.setMaxTachieStrayGroinId(1,1,1);
		
		if(isNaked) {
			this.setTachieLegs('close_naked');
		}
		else {
			this.setTachieLegs('close');
		}
		
		if(isPcup) {
			if(this.tachieRightBoob.includes('normal')) {
				if(isAroused)
					this.setTachieRightBoob('normal_close_hard');
				else
					this.setTachieRightBoob('normal_close');
				this.setTachieSemenRightBoobExtension('normal_close_');
				this.setTachieStrayRightBoobExtension('normal_close_');
			}
			if(this.tachieLeftBoob.includes('normal')) {
				if(isAroused)
					this.setTachieLeftBoob('normal_close_hard');
				else
					this.setTachieLeftBoob('normal_close');
				this.setTachieSemenLeftBoobExtension('normal_close_');
				this.setTachieStrayLeftBoobExtension('normal_close_');
			}
		}	
	}

	let faceArray = [];
	this.resetTachieHoppe();
	this.resetTachieSweat();
	
	if(justOrgasmed) {
		if(orgasmlvl3) 
			faceArray.push(33);
		else if(orgasmlvl2) 
			faceArray.push(22);
		else
			faceArray.push(11);
	}
	else if(karrynJustInsertedToy && !isMasturbatingMouth) {
		if(generallvl3) 
			faceArray.push(32);
		else if(generallvl2) 
			faceArray.push(21);
		else
			faceArray.push(10);
	}
	else if(karrynGotBukkaked && leftHoleJustEjaculated) {
		if(bukkakelvl3) 
			faceArray.push(28);
		else if(bukkakelvl2) 
			faceArray.push(17);
		else
			faceArray.push(6);
	}
	else if(karrynGotBukkaked && rightHoleJustEjaculated) {
		if(bukkakelvl3) 
			faceArray.push(29);
		else if(bukkakelvl2) 
			faceArray.push(18);
		else
			faceArray.push(7);
	}
	else if(karrynJustUsedCockStare) {
		if(karrynUsedCockStareOnLeftHole) {
			if(generallvl3) 
				faceArray.push(24);
			else if(generallvl2) 
				faceArray.push(13);
			else
				faceArray.push(2);
		}
		else { //right hole
			if(generallvl3) 
				faceArray.push(25);
			else if(generallvl2) 
				faceArray.push(14);
			else
				faceArray.push(3);
		}
	}
	else if(leftHoleJustShowed || rightHoleJustShowed) {
		if(leftHoleJustShowed) {
			if(generallvl3) 
				faceArray.push(24);
			else if(generallvl2) 
				faceArray.push(13);
			else
				faceArray.push(2);
		}
		else { //right hole
			if(generallvl3) 
				faceArray.push(25);
			else if(generallvl2) 
				faceArray.push(14);
			else
				faceArray.push(3);
		}
	}
	else if(lastHitHandjob || karrynJustUsedCockPet) {
		if(karrynUsedHandJobOnLeftHole || karrynUsedCockPetOnLeftHole) {
			if(generallvl3) 
				faceArray.push(26);
			else if(generallvl2) 
				faceArray.push(15);
			else
				faceArray.push(4);
		}
		else { //right hole
			if(generallvl3) 
				faceArray.push(27);
			else if(generallvl2) 
				faceArray.push(16);
			else
				faceArray.push(5);
		}
	}
	else {
		if(isMasturbatingBoobs || isMasturbatingMouth) {
			if(generallvl3) 
				faceArray.push(30);
			else if(generallvl2) 
				faceArray.push(19);
			else
				faceArray.push(8);
		}
		if(isMasturbatingLowerBody) {
			if(generallvl3) 
				faceArray.push(31);
			else if(generallvl2) 
				faceArray.push(20);
			else
				faceArray.push(9);
		}
	}
	
	if(faceArray.length === 0) {
		if(!leftHoleIsEmpty) {
			if(generallvl3) 
				faceArray.push(24);
			else if(generallvl2) 
				faceArray.push(13);
			else
				faceArray.push(2);
		}
		if(!rightHoleIsEmpty) { 
			if(generallvl3) 
				faceArray.push(25);
			else if(generallvl2) 
				faceArray.push(14);
			else
				faceArray.push(3);
		}
		
		if(!this.isHorny) {
			if(generallvl3) 
				faceArray.push(23);
			else if(generallvl2) 
				faceArray.push(12);
			else
				faceArray.push(1);
		}
	}
	
	if(faceArray.length === 0) {
		if(generallvl3) 
			faceArray.push(23);
		else if(generallvl2) 
			faceArray.push(12);
		else
			faceArray.push(1);
	}


	let faceId = faceArray[Math.randomInt(faceArray.length)];
	let eyebrowsArray = [];
	let eyesArray = [];
	let mouthArray = [];
	let tachieHeadType = 'far';
	let tachieHoppeName = false;
	let tachieSweatName = false;

	if(faceId === 1) {
		tachieHeadType = 'far';
		eyebrowsArray.push('koma1');
		eyebrowsArray.push('koma2');
		eyesArray.push('sita1');
		eyesArray.push('sita2');
		mouthArray.push('mu1');
		mouthArray.push('mu2');
		mouthArray.push('mu3');
		tachieSweatName = '1';
	}
	else if(faceId === 2) {
		tachieHeadType = 'far';
		eyebrowsArray.push('koma1');
		eyebrowsArray.push('koma2');
		eyebrowsArray.push('oko1');
		eyebrowsArray.push('oko2');
		eyesArray.push('right1');
		eyesArray.push('right2');
		mouthArray.push('ku1');
		mouthArray.push('ku2');
		mouthArray.push('ho1');
		tachieSweatName = '2';
	}
	else if(faceId === 3) {
		tachieHeadType = 'far';
		eyebrowsArray.push('koma1');
		eyebrowsArray.push('koma2');
		eyebrowsArray.push('oko1');
		eyebrowsArray.push('oko2');
		eyesArray.push('left1');
		eyesArray.push('left2');
		mouthArray.push('ku1');
		mouthArray.push('ku2');
		mouthArray.push('ho1');
		tachieSweatName = '2';
	}
	else if(faceId === 4) {
		tachieHeadType = 'far';
		eyebrowsArray.push('koma1');
		eyebrowsArray.push('koma2');
		eyebrowsArray.push('oko1');
		eyesArray.push('right1');
		eyesArray.push('right2');
		mouthArray.push('mu2');
		mouthArray.push('mu3');
		mouthArray.push('wa1');
		mouthArray.push('wa2');
		mouthArray.push('wa3');
		mouthArray.push('wa4');
		tachieHoppeName = '1';
		tachieSweatName = '2';
	}
	else if(faceId === 5) {
		tachieHeadType = 'far';
		eyebrowsArray.push('koma1');
		eyebrowsArray.push('koma2');
		eyebrowsArray.push('oko1');
		eyesArray.push('left1');
		eyesArray.push('left2');
		mouthArray.push('mu2');
		mouthArray.push('mu3');
		mouthArray.push('wa1');
		mouthArray.push('wa2');
		mouthArray.push('wa3');
		mouthArray.push('wa4');
		tachieHoppeName = '1';
		tachieSweatName = '2';
	}
	else if(faceId === 6) {
		tachieHeadType = 'far';
		eyebrowsArray.push('koma1');
		eyebrowsArray.push('koma2');
		eyebrowsArray.push('oko1');
		eyesArray.push('right2');
		eyesArray.push('right3');
		eyesArray.push('toji1');
		mouthArray.push('mu3');
		mouthArray.push('wa1');
		mouthArray.push('wa2');
		mouthArray.push('wa3');
		mouthArray.push('wa4');
		mouthArray.push('ku1');
		mouthArray.push('ku2');
		tachieHoppeName = '1';
		tachieSweatName = '2';
	}
	else if(faceId === 7) {
		tachieHeadType = 'far';
		eyebrowsArray.push('koma1');
		eyebrowsArray.push('koma2');
		eyebrowsArray.push('oko1');
		eyesArray.push('left2');
		eyesArray.push('left3');
		eyesArray.push('toji1');
		mouthArray.push('mu3');
		mouthArray.push('wa1');
		mouthArray.push('wa2');
		mouthArray.push('wa3');
		mouthArray.push('wa4');
		mouthArray.push('ku1');
		mouthArray.push('ku2');
		tachieHoppeName = '1';
		tachieSweatName = '2';
	}
	else if(faceId === 8) {
		tachieHeadType = 'far';
		eyebrowsArray.push('koma1');
		eyebrowsArray.push('koma2');
		eyesArray.push('sita1');
		eyesArray.push('sita2');
		mouthArray.push('mu1');
		mouthArray.push('mu2');
		mouthArray.push('mu3');
		mouthArray.push('ho1');
		mouthArray.push('ho2');
		tachieHoppeName = '1';
		tachieSweatName = '2';
	}
	else if(faceId === 9) {
		tachieHeadType = 'far';
		eyebrowsArray.push('koma1');
		eyebrowsArray.push('koma2');
		eyesArray.push('sita1');
		eyesArray.push('sita2');
		mouthArray.push('mu1');
		mouthArray.push('mu2');
		mouthArray.push('mu3');
		mouthArray.push('wa1');
		mouthArray.push('wa2');
		tachieHoppeName = '1';
		tachieSweatName = '2';
	}
	else if(faceId === 10) {
		tachieHeadType = 'close';
		eyebrowsArray.push('koma1');
		eyebrowsArray.push('koma2');
		eyesArray.push('sita1');
		eyesArray.push('toji1');
		mouthArray.push('ku1');
		mouthArray.push('wa1');
		mouthArray.push('wa2');
		tachieHoppeName = '1';
		tachieSweatName = '2';
	}
	else if(faceId === 11) {
		tachieHeadType = 'close';
		eyebrowsArray.push('koma1');
		eyebrowsArray.push('koma2');
		eyebrowsArray.push('oko1');
		eyesArray.push('toji1');
		mouthArray.push('ku1');
		mouthArray.push('wa2');
		mouthArray.push('ho1');
		tachieHoppeName = '1';
		tachieSweatName = '2';
	}
	else if(faceId === 12) {
		tachieHeadType = 'far';
		eyebrowsArray.push('fu1');
		eyebrowsArray.push('fu2');
		eyesArray.push('sita1');
		eyesArray.push('sita2');
		mouthArray.push('mu1');
		mouthArray.push('mu2');
		mouthArray.push('mu3');
		mouthArray.push('ho1');
		mouthArray.push('ho2');
	}
	else if(faceId === 13) {
		tachieHeadType = 'far';
		eyebrowsArray.push('fu1');
		eyebrowsArray.push('fu2');
		eyebrowsArray.push('oko2');
		eyesArray.push('right1');
		eyesArray.push('right2');
		mouthArray.push('mu1');
		mouthArray.push('fu1');
		mouthArray.push('fu2');
		mouthArray.push('ho1');
		mouthArray.push('ho2');
		tachieSweatName = '1';
	}
	else if(faceId === 14) {
		tachieHeadType = 'far';
		eyebrowsArray.push('fu1');
		eyebrowsArray.push('fu2');
		eyebrowsArray.push('oko2');
		eyesArray.push('left1');
		eyesArray.push('left2');
		mouthArray.push('mu1');
		mouthArray.push('fu1');
		mouthArray.push('fu2');
		mouthArray.push('ho1');
		mouthArray.push('ho2');
		tachieSweatName = '1';
	}
	else if(faceId === 15) {
		tachieHeadType = 'far';
		eyebrowsArray.push('fu1');
		eyebrowsArray.push('fu2');
		eyebrowsArray.push('koma1');
		eyebrowsArray.push('oko2');
		eyesArray.push('right1');
		eyesArray.push('right2');
		mouthArray.push('mu1');
		mouthArray.push('fu1');
		mouthArray.push('fu2');
		mouthArray.push('ho1');
		mouthArray.push('ho2');
		mouthArray.push('wa1');
		tachieHoppeName = '1';
		tachieSweatName = '1';
	}
	else if(faceId === 16) {
		tachieHeadType = 'far';
		eyebrowsArray.push('fu1');
		eyebrowsArray.push('fu2');
		eyebrowsArray.push('koma1');
		eyebrowsArray.push('oko2');
		eyesArray.push('left1');
		eyesArray.push('left2');
		mouthArray.push('mu1');
		mouthArray.push('fu1');
		mouthArray.push('fu2');
		mouthArray.push('ho1');
		mouthArray.push('ho2');
		mouthArray.push('wa1');
		tachieHoppeName = '1';
		tachieSweatName = '1';
	}
	else if(faceId === 17) {
		tachieHeadType = 'far';
		eyebrowsArray.push('fu1');
		eyebrowsArray.push('koma1');
		eyebrowsArray.push('koma2');
		eyebrowsArray.push('oko2');
		eyesArray.push('right2');
		eyesArray.push('right3');
		mouthArray.push('pero1');
		mouthArray.push('pero2');
		mouthArray.push('ahe1');
		mouthArray.push('nico1');
		mouthArray.push('nico2');
		mouthArray.push('nico3');
		mouthArray.push('nico4');
		mouthArray.push('wa1');
		tachieHoppeName = '1';
		tachieSweatName = '2';
	}
	else if(faceId === 18) {
		tachieHeadType = 'far';
		eyebrowsArray.push('fu1');
		eyebrowsArray.push('koma1');
		eyebrowsArray.push('koma2');
		eyebrowsArray.push('oko2');
		eyesArray.push('left2');
		eyesArray.push('left3');
		mouthArray.push('pero1');
		mouthArray.push('pero2');
		mouthArray.push('ahe1');
		mouthArray.push('nico1');
		mouthArray.push('nico2');
		mouthArray.push('nico3');
		mouthArray.push('nico4');
		mouthArray.push('wa1');
		tachieHoppeName = '1';
		tachieSweatName = '2';
	}
	else if(faceId === 19) {
		tachieHeadType = 'far';
		eyebrowsArray.push('fu1');
		eyebrowsArray.push('koma1');
		eyebrowsArray.push('fu2');
		eyebrowsArray.push('oko2');
		eyesArray.push('sita1');
		eyesArray.push('sita2');
		mouthArray.push('fu1');
		mouthArray.push('fu2');
		mouthArray.push('ho1');
		mouthArray.push('ho2');
		mouthArray.push('nico1');
		mouthArray.push('nico2');
		mouthArray.push('nico3');
		mouthArray.push('nico4');
		tachieHoppeName = '1';
		tachieSweatName = '1';
	}
	else if(faceId === 20) {
		tachieHeadType = 'far';
		eyebrowsArray.push('fu1');
		eyebrowsArray.push('koma1');
		eyebrowsArray.push('fu2');
		eyebrowsArray.push('oko2');
		eyesArray.push('sita1');
		eyesArray.push('sita2');
		mouthArray.push('mu1');
		mouthArray.push('fu1');
		mouthArray.push('fu2');
		mouthArray.push('ahe1');
		mouthArray.push('ho1');
		mouthArray.push('ho2');
		mouthArray.push('nico2');
		mouthArray.push('nico3');
		tachieHoppeName = '1';
		tachieSweatName = '1';
	}
	else if(faceId === 21) {
		tachieHeadType = 'close';
		eyebrowsArray.push('fu1');
		eyebrowsArray.push('koma1');
		eyesArray.push('sita1');
		eyesArray.push('toji1');
		mouthArray.push('ku1');
		mouthArray.push('wa1');
		mouthArray.push('wa2');
		tachieHoppeName = '1';
		tachieSweatName = '1';
	}
	else if(faceId === 22) {
		tachieHeadType = 'close';
		eyebrowsArray.push('fu1');
		eyebrowsArray.push('koma2');
		eyebrowsArray.push('oko1');
		eyesArray.push('mae1');
		eyesArray.push('mae2');
		eyesArray.push('toji1');
		mouthArray.push('ahe1');
		mouthArray.push('ku1');
		mouthArray.push('wa2');
		mouthArray.push('ho1');
		tachieHoppeName = '1';
		tachieSweatName = '2';
	}
	else if(faceId === 23) {
		tachieHeadType = 'far';
		eyebrowsArray.push('fu1');
		eyebrowsArray.push('fu2');
		eyebrowsArray.push('nico1');
		eyebrowsArray.push('nico2');
		eyesArray.push('sita1');
		eyesArray.push('sita2');
		mouthArray.push('nico1');
		mouthArray.push('nico2');
		mouthArray.push('nico3');
		mouthArray.push('nico4');
		mouthArray.push('fu1');
		mouthArray.push('fu2');
		if(isAroused) tachieHoppeName = '1';
	}
	else if(faceId === 24) {
		tachieHeadType = 'far';
		eyebrowsArray.push('fu1');
		eyebrowsArray.push('fu2');
		eyebrowsArray.push('nico1');
		eyebrowsArray.push('nico2');
		eyesArray.push('right1');
		eyesArray.push('right2');
		eyesArray.push('heartright1');
		eyesArray.push('ururight1');
		eyesArray.push('ururight2');
		mouthArray.push('ahe1');
		mouthArray.push('ahe2');
		mouthArray.push('ahe3');
		mouthArray.push('pero1');
		mouthArray.push('pero2');
		mouthArray.push('nico1');
		mouthArray.push('nico2');
		mouthArray.push('nico3');
		if(isAroused) tachieHoppeName = '1';
	}
	else if(faceId === 25) {
		tachieHeadType = 'far';
		eyebrowsArray.push('fu1');
		eyebrowsArray.push('fu2');
		eyebrowsArray.push('nico1');
		eyebrowsArray.push('nico2');
		eyesArray.push('left1');
		eyesArray.push('left2');
		eyesArray.push('heartleft1');
		eyesArray.push('uruleft1');
		eyesArray.push('uruleft2');
		mouthArray.push('ahe1');
		mouthArray.push('ahe2');
		mouthArray.push('ahe3');
		mouthArray.push('pero1');
		mouthArray.push('pero2');
		mouthArray.push('nico1');
		mouthArray.push('nico2');
		mouthArray.push('nico3');
		if(isAroused) tachieHoppeName = '1';
	}
	else if(faceId === 26) {
		tachieHeadType = 'far';
		eyebrowsArray.push('fu1');
		eyebrowsArray.push('fu2');
		eyebrowsArray.push('nico1');
		eyebrowsArray.push('nico2');
		eyebrowsArray.push('koma1');
		eyesArray.push('right1');
		eyesArray.push('right2');
		mouthArray.push('pero1');
		mouthArray.push('pero2');
		mouthArray.push('nico1');
		mouthArray.push('nico2');
		mouthArray.push('nico3');
		mouthArray.push('nico4');
		mouthArray.push('ho1');
		mouthArray.push('ho2');
		if(isAroused) tachieHoppeName = '1';
	}
	else if(faceId === 27) {
		tachieHeadType = 'far';
		eyebrowsArray.push('fu1');
		eyebrowsArray.push('fu2');
		eyebrowsArray.push('nico1');
		eyebrowsArray.push('nico2');
		eyebrowsArray.push('koma1');
		eyesArray.push('left1');
		eyesArray.push('left2');
		mouthArray.push('pero1');
		mouthArray.push('pero2');
		mouthArray.push('nico1');
		mouthArray.push('nico2');
		mouthArray.push('nico3');
		mouthArray.push('nico4');
		mouthArray.push('ho1');
		mouthArray.push('ho2');
		if(isAroused) tachieHoppeName = '1';
	}
	else if(faceId === 28) {
		tachieHeadType = 'far';
		eyebrowsArray.push('fu1');
		eyebrowsArray.push('fu2');
		eyebrowsArray.push('nico1');
		eyebrowsArray.push('nico2');
		eyebrowsArray.push('koma1');
		eyesArray.push('right3');
		eyesArray.push('heartright1');
		eyesArray.push('ururight1');
		eyesArray.push('ururight2');
		mouthArray.push('pero1');
		mouthArray.push('pero2');
		mouthArray.push('ahe1');
		mouthArray.push('ahe2');
		mouthArray.push('ahe3');
		mouthArray.push('ahe4');
		mouthArray.push('nico1');
		mouthArray.push('nico3');
		if(isAroused) tachieHoppeName = '1';
		if(Math.random() < 0.33) tachieSweatName = '1';
		else if(Math.random() < 0.5) tachieSweatName = '2';
	}
	else if(faceId === 29) {
		tachieHeadType = 'far';
		eyebrowsArray.push('fu1');
		eyebrowsArray.push('fu2');
		eyebrowsArray.push('nico1');
		eyebrowsArray.push('nico2');
		eyebrowsArray.push('koma1');
		eyesArray.push('left3');
		eyesArray.push('heartleft1');
		eyesArray.push('uruleft1');
		eyesArray.push('uruleft2');
		mouthArray.push('pero1');
		mouthArray.push('pero2');
		mouthArray.push('ahe1');
		mouthArray.push('ahe2');
		mouthArray.push('ahe3');
		mouthArray.push('ahe4');
		mouthArray.push('nico1');
		mouthArray.push('nico3');
		if(isAroused) tachieHoppeName = '1';
		if(Math.random() < 0.33) tachieSweatName = '1';
		else if(Math.random() < 0.5) tachieSweatName = '2';
	}
	else if(faceId === 30) {
		tachieHeadType = 'far';
		eyebrowsArray.push('fu1');
		eyebrowsArray.push('fu2');
		eyebrowsArray.push('nico1');
		eyebrowsArray.push('nico2');
		eyebrowsArray.push('koma1');
		eyebrowsArray.push('koma2');
		eyebrowsArray.push('oko2');
		eyesArray.push('sita1');
		eyesArray.push('sita2');
		eyesArray.push('urusita1');
		eyesArray.push('urusita2');
		eyesArray.push('heartsita1');
		mouthArray.push('fu1');
		mouthArray.push('fu2');
		mouthArray.push('ho1');
		mouthArray.push('ho2');
		mouthArray.push('nico1');
		mouthArray.push('nico2');
		mouthArray.push('nico3');
		mouthArray.push('nico4');
		if(isAroused) tachieHoppeName = '1';
	}
	else if(faceId === 31) {
		tachieHeadType = 'far';
		eyebrowsArray.push('fu1');
		eyebrowsArray.push('fu2');
		eyebrowsArray.push('nico1');
		eyebrowsArray.push('nico2');
		eyebrowsArray.push('koma1');
		eyebrowsArray.push('koma2');
		eyebrowsArray.push('oko2');
		eyesArray.push('sita1');
		eyesArray.push('sita2');
		eyesArray.push('urusita1');
		eyesArray.push('urusita2');
		eyesArray.push('heartsita1');
		eyesArray.push('heartahe1');
		mouthArray.push('wa1');
		mouthArray.push('wa4');
		mouthArray.push('ahe1');
		mouthArray.push('ahe2');
		mouthArray.push('ahe3');
		mouthArray.push('ahe4');
		mouthArray.push('ho1');
		mouthArray.push('ho2');
		if(isAroused) tachieHoppeName = '1';
	}
	else if(faceId === 32) {
		tachieHeadType = 'close';
		eyebrowsArray.push('fu1');
		eyebrowsArray.push('nico1');
		eyebrowsArray.push('koma1');
		eyebrowsArray.push('oko1');
		eyesArray.push('mae1');
		eyesArray.push('mae2');
		eyesArray.push('sita1');
		mouthArray.push('ho1');
		mouthArray.push('wa1');
		mouthArray.push('ahe1');
		mouthArray.push('ahe2');
		mouthArray.push('nico1');
		if(isAroused) tachieHoppeName = '1';
		if(Math.random() < 0.5) tachieSweatName = '1';
	}
	else if(faceId === 33) {
		tachieHeadType = 'close';
		eyebrowsArray.push('fu1');
		eyebrowsArray.push('nico1');
		eyebrowsArray.push('koma1');
		eyebrowsArray.push('koma2');
		eyebrowsArray.push('oko1');
		eyesArray.push('mae1');
		eyesArray.push('mae2');
		eyesArray.push('toji1');
		eyesArray.push('heart1');
		mouthArray.push('ho1');
		mouthArray.push('wa2');
		mouthArray.push('ahe1');
		mouthArray.push('ahe2');
		mouthArray.push('nico1');
		tachieHoppeName = '1';
		if(Math.random() < 0.33) tachieSweatName = '1';
		else if(Math.random() < 0.5) tachieSweatName = '2';
	}
	
	this.setTachieHead(tachieHeadType);
	this.setTachieHairExtension(tachieHeadType + '_');
	if(tachieHoppeName) this.setTachieHoppe('' + tachieHeadType + '_' + tachieHoppeName);
	if(tachieSweatName) this.setTachieSweat('' + tachieHeadType + '_' + tachieSweatName);	
	
	if(eyebrowsArray.length > 0) {
		this.setTachieEyebrows('' + tachieHeadType + '_' + eyebrowsArray[Math.randomInt(eyebrowsArray.length)]);
	}
	if(eyesArray.length > 0) {
		this.setTachieEyes('' + tachieHeadType + '_' + eyesArray[Math.randomInt(eyesArray.length)]);
	}
	if(isMasturbatingMouth) {
		this.resetTachieMouth();
	}
	else if(mouthArray.length > 0) {
		this.setTachieMouth('' + tachieHeadType + '_' + mouthArray[Math.randomInt(mouthArray.length)]);
	}
	
	this.setTachieStrayFaceExtension(tachieHeadType + '_');

	//Semen Extensions
	let headIsClose = this.tachieHead.includes('close');
	let headIsFar = this.tachieHead.includes('far');
	if(headIsClose) {
		this.setTachieSemenFaceExtension('close_');
		this.setMaxTachieSemenFaceId(1);
	}
	else if(headIsFar) {
		this.setTachieSemenFaceExtension('far_');
		this.setMaxTachieSemenFaceId(1);
	}
	
	if(this.tachieLeftArm.includes('anaru_1')) {
		if(isNaked) {
			if(Karryn.isCensored()) {
				this.setTachieLeftArm('anaru_1_naked');
				this.setTachieFrontB('leftarm_anaru_1_naked_cen');
			}
			else {
				this.setTachieLeftArm('anaru_1_naked');
				this.setTachieFrontB('leftarm_anaru_1_naked');
			}
		}
		else {
			if(Karryn.isCensored()) {
				this.setTachieLeftArm('anaru_1');
				this.setTachieFrontB('leftarm_anaru_1_cen');
			}
			else {
				this.setTachieLeftArm('anaru_1');
				this.setTachieFrontB('leftarm_anaru_1');
			}
		}
		this.setTachieSemenLeftArmExtension('anaru_');
		this.setMaxTachieSemenLeftArmId(1);
		this.setTachieSemenLeftArmHasHCup(false);
		this.setTachieFrontBHasPCup(false);
		this.setTachieLeftArmHasPCup(false);
	}
	else if(this.tachieLeftArm.includes('chikubi_1')) {
		this.resetTachieFrontB();
		this.setTachieSemenLeftArmExtension('touch_chikubi_');
		this.setMaxTachieSemenLeftArmId(1);
		this.setTachieSemenLeftArmHasHCup(true);
		this.setTachieFrontBHasPCup(false);
		this.setTachieLeftArmHasPCup(false);
	}
	else if(this.tachieLeftArm.includes('hj_1')) {
		if(isNaked) {
			this.setTachieLeftArm('hj_1_naked');
		}
		else {
			this.setTachieLeftArm('hj_1');
		}
		this.resetTachieFrontB();
		this.setTachieSemenLeftArmExtension('hj_');
		this.setMaxTachieSemenLeftArmId(1);
		this.setTachieSemenLeftArmHasHCup(false);
		this.setTachieFrontBHasPCup(false);
		this.setTachieLeftArmHasPCup(false);
	}
	else if(this.tachieLeftArm.includes('kuri_1')) {
		if(isNaked) {
			this.setTachieLeftArm('kuri_1_naked');
			this.setTachieFrontB('leftarm_kuri_1_naked');
		}
		else {
			this.setTachieLeftArm('kuri_1');
			this.setTachieFrontB('leftarm_kuri_1');
		}
		this.setTachieSemenLeftArmExtension('kuri_1_');
		this.setMaxTachieSemenLeftArmId(1);
		this.setTachieSemenLeftArmHasHCup(false);
		this.setTachieFrontBHasPCup(false);
		this.setTachieLeftArmHasPCup(false);
	}
	else if(this.tachieLeftArm.includes('kuri_2')) {
		if(isNaked) {
			this.setTachieLeftArm('kuri_2_naked');
			this.setTachieFrontB('leftarm_kuri_2_naked');
		}
		else {
			this.setTachieLeftArm('kuri_2');
			this.setTachieFrontB('leftarm_kuri_2');
		}
		this.setTachieSemenLeftArmExtension('kuri_2_');
		this.setMaxTachieSemenLeftArmId(1);
		this.setTachieSemenLeftArmHasHCup(false);
		this.setTachieFrontBHasPCup(false);
		this.setTachieLeftArmHasPCup(false);
	}
	else if(this.tachieLeftArm.includes('manko_1')) {
		if(isNaked) {
			this.setTachieLeftArm('manko_1_naked');
			this.setTachieFrontB('leftarm_manko_1_naked');
		}
		else {
			this.setTachieLeftArm('manko_1');
			this.setTachieFrontB('leftarm_manko_1');
		}
		this.setTachieSemenLeftArmExtension('manko_');
		this.setMaxTachieSemenLeftArmId(1);
		this.setTachieSemenLeftArmHasHCup(false);
		this.setTachieFrontBHasPCup(false);
		this.setTachieLeftArmHasPCup(false);
	}
	else if(this.tachieLeftArm.includes('normal_1')) {
		if(isNaked) {
			this.setTachieLeftArm('normal_1_naked');
		}
		else {
			this.setTachieLeftArm('normal_1');
		}
		this.resetTachieFrontB();
		this.setTachieSemenLeftArmExtension('normal_');
		this.setMaxTachieSemenLeftArmId(1);
		this.setTachieSemenLeftArmHasHCup(false);
		this.setTachieFrontBHasPCup(false);
		this.setTachieLeftArmHasPCup(false);
	}
	else if(this.tachieLeftArm.includes('pet_1')) {
		if(isNaked) {
			this.setTachieLeftArm('pet_1_naked');
		}
		else {
			this.setTachieLeftArm('pet_1');
		}
		this.resetTachieFrontB();
		this.setTachieSemenLeftArmExtension('pet_');
		this.setMaxTachieSemenLeftArmId(1);
		this.setTachieSemenLeftArmHasHCup(false);
		this.setTachieFrontBHasPCup(false);
		this.setTachieLeftArmHasPCup(false);
	}
	else if(this.tachieLeftArm.includes('suck_fingers_1')) {
		if(isNaked && isPcup) {
			this.setTachieLeftArm('suck_fingers_1_naked');
		}
		else {
			this.setTachieLeftArm('suck_fingers_1');
		}
		this.resetTachieFrontB();
		this.setTachieSemenLeftArmExtension('suck_fingers_');
		this.setMaxTachieSemenLeftArmId(1);
		this.setTachieSemenLeftArmHasHCup(false);
		this.setTachieFrontBHasPCup(false);
		this.setTachieLeftArmHasPCup(true);
	}
	else if(this.tachieLeftArm.includes('toyA_1')) {
		if(isNaked) {
			this.setTachieLeftArm('toyA_1_naked');
			this.setTachieFrontB('leftarm_toyA_1_naked');
		}
		else {
			this.setTachieLeftArm('toyA_1');
			this.setTachieFrontB('leftarm_toyA_1');
		}
		this.setTachieSemenLeftArmExtension('toyA_1_');
		this.setMaxTachieSemenLeftArmId(1);
		this.setTachieSemenLeftArmHasHCup(false);
		this.setTachieFrontBHasPCup(false);
		this.setTachieLeftArmHasPCup(false);
	}
	else if(this.tachieLeftArm.includes('toyA_2')) {
		if(isNaked) {
			if(Karryn.isCensored()) {
				this.setTachieLeftArm('toyA_2_naked');
				this.setTachieFrontB('leftarm_toyA_2_naked_cen');
			}
			else {
				this.setTachieLeftArm('toyA_2_naked');
				this.setTachieFrontB('leftarm_toyA_2_naked');
			}
		}
		else {
			if(Karryn.isCensored()) {
				this.setTachieLeftArm('toyA_2');
				this.setTachieFrontB('leftarm_toyA_2_cen');
			}
			else {
				this.setTachieLeftArm('toyA_2');
				this.setTachieFrontB('leftarm_toyA_2');
			}
		}
		this.setTachieSemenLeftArmExtension('toyA_2_');
		this.setMaxTachieSemenLeftArmId(1);
		this.setTachieSemenLeftArmHasHCup(false);
		this.setTachieFrontBHasPCup(false);
		this.setTachieLeftArmHasPCup(false);
	}
	else if(this.tachieLeftArm.includes('toyC_1')) {
		if(isNaked) {
			this.setTachieLeftArm('toyC_1_naked');
			this.setTachieFrontB('leftarm_toyC_1_naked');
		}
		else {
			this.setTachieLeftArm('toyC_1');
			this.setTachieFrontB('leftarm_toyC_1');
		}
		this.setTachieSemenLeftArmExtension('toyC_');
		this.setMaxTachieSemenLeftArmId(1);
		this.setTachieSemenLeftArmHasHCup(false);
		this.setTachieFrontBHasPCup(false);
		this.setTachieLeftArmHasPCup(false);
	}
	else if(this.tachieLeftArm.includes('toyP_1')) {
		if(isNaked) {
			this.setTachieLeftArm('toyP_1_naked');
			this.setTachieFrontB('leftarm_toyP_1_naked');
		}
		else {
			this.setTachieLeftArm('toyP_1');
			this.setTachieFrontB('leftarm_toyP_1');
		}
		this.setTachieSemenLeftArmExtension('toyP_1_');
		this.setMaxTachieSemenLeftArmId(1);
		this.setTachieSemenLeftArmHasHCup(false);
		this.setTachieFrontBHasPCup(true);
		this.setTachieLeftArmHasPCup(false);
	}
	else if(this.tachieLeftArm.includes('toyP_2')) {
		if(isNaked) {
			this.setTachieLeftArm('toyP_2_naked');
			this.setTachieFrontB('leftarm_toyP_2_naked');
		}
		else {
			this.setTachieLeftArm('toyP_2');
			this.setTachieFrontB('leftarm_toyP_2');
		}
		this.setTachieSemenLeftArmExtension('toyP_2_');
		this.setMaxTachieSemenLeftArmId(1);
		this.setTachieSemenLeftArmHasHCup(false);
		this.setTachieFrontBHasPCup(true);
		this.setTachieLeftArmHasPCup(false);
	}
	else {
		this.setMaxTachieSemenLeftArmId(0);
		this.setTachieFrontBHasPCup(false);
		this.setTachieSemenLeftArmHasHCup(false);
		this.setTachieLeftArmHasPCup(false);
	}
	
	if(this.tachieRightArm.includes('anaru_1')) {
		if(isNaked) {
			if(Karryn.isCensored()) {
				this.setTachieRightArm('anaru_1_naked');
				this.setTachieFrontC('rightarm_anaru_1_naked_cen');
			}
			else {
				this.setTachieRightArm('anaru_1_naked');
				this.setTachieFrontC('rightarm_anaru_1_naked');
			}
		}
		else {
			if(Karryn.isCensored()) {
				this.setTachieRightArm('anaru_1');
				this.setTachieFrontC('rightarm_anaru_1_cen');
			}
			else {
				this.setTachieRightArm('anaru_1');
				this.setTachieFrontC('rightarm_anaru_1');
			}
		}
		this.setTachieSemenRightArmExtension('anaru_');
		this.setMaxTachieSemenRightArmId(1);
		this.setTachieSemenRightArmHasHCup(false);
		this.setTachieFrontCHasPCup(false);
		this.setTachieRightArmHasPCup(false);
	}
	else if(this.tachieRightArm.includes('chikubi_1')) {
		this.resetTachieFrontC();
		this.setTachieSemenRightArmExtension('touch_chikubi_');
		this.setMaxTachieSemenRightArmId(1);
		this.setTachieSemenRightArmHasHCup(true);
		this.setTachieFrontCHasPCup(false);
		this.setTachieRightArmHasPCup(false);
	}
	else if(this.tachieRightArm.includes('hj_1')) {
		if(isNaked) {
			this.setTachieRightArm('hj_1_naked');
		}
		else {
			this.setTachieRightArm('hj_1');
		}
		this.resetTachieFrontC();
		this.setTachieSemenRightArmExtension('hj_');
		this.setMaxTachieSemenRightArmId(1);
		this.setTachieSemenRightArmHasHCup(false);
		this.setTachieFrontCHasPCup(false);
		this.setTachieRightArmHasPCup(false);
	}
	else if(this.tachieRightArm.includes('kuri_1')) {
		if(isNaked) {
			this.setTachieRightArm('kuri_1_naked');
			this.setTachieFrontC('rightarm_kuri_1_naked');
		}
		else {
			this.setTachieRightArm('kuri_1');
			this.setTachieFrontC('rightarm_kuri_1');
		}
		this.setTachieSemenRightArmExtension('kuri_1_');
		this.setMaxTachieSemenRightArmId(1);
		this.setTachieSemenRightArmHasHCup(false);
		this.setTachieFrontCHasPCup(false);
		this.setTachieRightArmHasPCup(false);
	}
	else if(this.tachieRightArm.includes('kuri_2')) {
		if(isNaked) {
			this.setTachieRightArm('kuri_2_naked');
			this.setTachieFrontC('rightarm_kuri_2_naked');
		}
		else {
			this.setTachieRightArm('kuri_2');
			this.setTachieFrontC('rightarm_kuri_2');
		}
		this.setTachieSemenRightArmExtension('kuri_2_');
		this.setMaxTachieSemenRightArmId(1);
		this.setTachieSemenRightArmHasHCup(false);
		this.setTachieFrontCHasPCup(false);
		this.setTachieRightArmHasPCup(false);
	}
	else if(this.tachieRightArm.includes('manko_1')) {
		if(isNaked) {
			this.setTachieRightArm('manko_1_naked');
			this.setTachieFrontC('rightarm_manko_1_naked');
		}
		else {
			this.setTachieRightArm('manko_1');
			this.setTachieFrontC('rightarm_manko_1');
		}
		this.setTachieSemenRightArmExtension('manko_');
		this.setMaxTachieSemenRightArmId(1);
		this.setTachieSemenRightArmHasHCup(false);
		this.setTachieFrontCHasPCup(false);
		this.setTachieRightArmHasPCup(false);
	}
	else if(this.tachieRightArm.includes('normal_1')) {
		if(isNaked) {
			this.setTachieRightArm('normal_1_naked');
		}
		else {
			this.setTachieRightArm('normal_1');
		}
		this.resetTachieFrontC();
		this.setTachieSemenRightArmExtension('normal_');
		this.setMaxTachieSemenRightArmId(1);
		this.setTachieSemenRightArmHasHCup(false);
		this.setTachieFrontCHasPCup(false);
		this.setTachieRightArmHasPCup(false);
	}
	else if(this.tachieRightArm.includes('pet_1')) {
		if(isNaked) {
			this.setTachieRightArm('pet_1_naked');
		}
		else {
			this.setTachieRightArm('pet_1');
		}
		this.resetTachieFrontC();
		this.setTachieSemenRightArmExtension('pet_');
		this.setMaxTachieSemenRightArmId(1);
		this.setTachieSemenRightArmHasHCup(false);
		this.setTachieFrontCHasPCup(false);
		this.setTachieRightArmHasPCup(false);
	}
	else if(this.tachieRightArm.includes('suck_fingers_1')) {
		if(isNaked && isPcup) {
			this.setTachieRightArm('suck_fingers_1_naked');
		}
		else {
			this.setTachieRightArm('suck_fingers_1');
		}
		this.resetTachieFrontC();
		this.setTachieSemenRightArmExtension('suck_fingers_');
		this.setMaxTachieSemenRightArmId(1);
		this.setTachieSemenRightArmHasHCup(false);
		this.setTachieFrontCHasPCup(false);
		this.setTachieRightArmHasPCup(true);
	}
	else if(this.tachieRightArm.includes('toyA_1')) {
		if(isNaked) {
			this.setTachieRightArm('toyA_1_naked');
			this.setTachieFrontC('rightarm_toyA_1_naked');
		}
		else {
			this.setTachieRightArm('toyA_1');
			this.setTachieFrontC('rightarm_toyA_1');
		}
		this.setTachieSemenRightArmExtension('toyA_1_');
		this.setMaxTachieSemenRightArmId(1);
		this.setTachieSemenRightArmHasHCup(false);
		this.setTachieFrontCHasPCup(false);
		this.setTachieRightArmHasPCup(false);
	}
	else if(this.tachieRightArm.includes('toyA_2')) {
		if(isNaked) {
			if(Karryn.isCensored()) {
				this.setTachieRightArm('toyA_2_naked');
				this.setTachieFrontC('rightarm_toyA_2_naked_cen');
			}
			else {
				this.setTachieRightArm('toyA_2_naked');
				this.setTachieFrontC('rightarm_toyA_2_naked');
			}
		}
		else {
			if(Karryn.isCensored()) {
				this.setTachieRightArm('toyA_2');
				this.setTachieFrontC('rightarm_toyA_2_cen');
			}
			else {
				this.setTachieRightArm('toyA_2');
				this.setTachieFrontC('rightarm_toyA_2');
			}
		}
		this.setTachieSemenRightArmExtension('toyA_2_');
		this.setMaxTachieSemenRightArmId(1);
		this.setTachieSemenRightArmHasHCup(false);
		this.setTachieFrontCHasPCup(false);
		this.setTachieRightArmHasPCup(false);
	}
	else if(this.tachieRightArm.includes('toyC_1')) {
		if(isNaked) {
			this.setTachieRightArm('toyC_1_naked');
			this.setTachieFrontC('rightarm_toyC_1_naked');
		}
		else {
			this.setTachieRightArm('toyC_1');
			this.setTachieFrontC('rightarm_toyC_1');
		}
		this.setTachieSemenRightArmExtension('toyC_');
		this.setMaxTachieSemenRightArmId(1);
		this.setTachieSemenRightArmHasHCup(false);
		this.setTachieFrontCHasPCup(false);
		this.setTachieRightArmHasPCup(false);
	}
	else if(this.tachieRightArm.includes('toyP_1')) {
		if(isNaked) {
			this.setTachieRightArm('toyP_1_naked');
			this.setTachieFrontC('rightarm_toyP_1_naked');
		}
		else {
			this.setTachieRightArm('toyP_1');
			this.setTachieFrontC('rightarm_toyP_1');
		}
		this.setTachieSemenRightArmExtension('toyP_1_');
		this.setMaxTachieSemenRightArmId(1);
		this.setTachieSemenRightArmHasHCup(false);
		this.setTachieFrontCHasPCup(true);
		this.setTachieRightArmHasPCup(false);
	}
	else if(this.tachieRightArm.includes('toyP_2')) {
		if(isNaked) {
			this.setTachieRightArm('toyP_2_naked');
			this.setTachieFrontC('rightarm_toyP_2_naked');
		}
		else {
			this.setTachieRightArm('toyP_2');
			this.setTachieFrontC('rightarm_toyP_2');
		}
		this.setTachieSemenRightArmExtension('toyP_2_');
		this.setMaxTachieSemenRightArmId(1);
		this.setTachieSemenRightArmHasHCup(false);
		this.setTachieFrontCHasPCup(true);
		this.setTachieRightArmHasPCup(false);
	}
	else {
		this.setMaxTachieSemenRightArmId(0);
		this.setTachieSemenRightArmHasHCup(false);
		this.setTachieFrontCHasPCup(false);
		this.setTachieRightArmHasPCup(false);
	}
	
	this.setAllowTachieEmoteUpdate(true);
};

//Sit Left
Game_Actor.prototype.emoteGloryToiletSitLeftPose = function() {
	this.setAllowTachieEmoteUpdate(false);
	let justOrgasmed = this.didLastGetHitBySkillType(JUST_SKILLTYPE_KARRYN_ORGASM) || this.justOrgasmed();
	let isAroused = this.isAroused() || justOrgasmed;
	let isNaked = !this.isWearingGlovesAndHat();
	let isPcup = this.boobsSizeIsPCup();
	
	let legsAreSpread = this.tachieLegs.includes('spread');
	let legsAreClose = this.tachieLegs.includes('close');
	
	let isMasturbating = this.tachieLeftArm.includes('chikubi') || this.tachieLeftArm.includes('kuri') || this.tachieLeftArm.includes('manko');
	let givingBJ = this.isBodySlotPenis(MOUTH_ID);
	let givingLeftHoleHJ = this.isBodySlotPenis(RIGHT_HAND_ID);
	let leftHoleIsEmpty = $gameTroop.gloryBattle_leftHoleIsEmpty();
	let rightHoleIsEmpty = $gameTroop.gloryBattle_rightHoleIsEmpty();
	let mainHoleIsHard = !leftHoleIsEmpty && $gameTroop._gloryLeftStall.isAroused();
	let mainHoleIsSoft = !leftHoleIsEmpty && !$gameTroop._gloryLeftStall.isAroused();
	let mainHoleJustEjaculated = $gameTroop._gloryLastHoleToEjaculate === GLORY_LEFT_STALL_ID;
	
	let karrynJustUsedCockPet = this.didLastGetHitBySkillType(JUST_SKILLTYPE_KARRYN_PETTING);
	let karrynJustUsedCockStare = this.didLastGetHitBySkillType(JUST_SKILLTYPE_KARRYN_COCK_STARE);
	let lastHitBlowjob = this.didLastGetHitBySkillType(JUST_SKILLTYPE_KARRYN_BLOWJOB) || this.didLastGetHitBySkillType(JUST_SKILLTYPE_ENEMY_BLOWJOB);
	let lastHitHandjob = this.didLastGetHitBySkillType(JUST_SKILLTYPE_KARRYN_HANDJOB) || this.didLastGetHitBySkillType(JUST_SKILLTYPE_ENEMY_HANDJOB);
	let karrynSwallowingCum = this.didLastGetHitBySkillType(JUST_SKILLTYPE_ENEMY_CUM_SWALLOW);
	let karrynGotBukkaked = this.didLastGetHitBySkillType(JUST_SKILLTYPE_ENEMY_BUKKAKE);
	
	let generalReactionScore = this.getReactionScore();
	let orgasmReactionScore = this.getOrgasmReactionScore();
	let swallowReactionScore = this.getSwallowReactionScore();
	let bukkakeReactionScore = this.getBukkakeReactionScore();
	
	let generallvl3 = generalReactionScore >= VAR_DEF_RS_LV3_REQ;
	let generallvl2 = generalReactionScore >= VAR_DEF_RS_LV2_REQ;
	let orgasmlvl3 = orgasmReactionScore >= VAR_DEF_RS_LV3_REQ;
	let orgasmlvl2 = orgasmReactionScore >= VAR_DEF_RS_LV2_REQ;
	let swallowlvl3 = swallowReactionScore  >= VAR_DEF_RS_LV3_REQ;
	let swallowlvl2 = swallowReactionScore >= VAR_DEF_RS_LV2_REQ;
	let bukkakelvl3 = bukkakeReactionScore >= VAR_DEF_RS_LV3_REQ;
	let bukkakelvl2 = bukkakeReactionScore >= VAR_DEF_RS_LV2_REQ;
	
	if(!leftHoleIsEmpty) {
		let leftHoleName = '';
		let leftHoleEnemy = $gameTroop._gloryLeftStall;
		let leftHoleIsHard = leftHoleEnemy.isAroused();
		
		if(leftHoleIsHard) {
			leftHoleName += 'hard_';
		}
		else {
			leftHoleName += 'soft_';
			if(givingBJ) {
				leftHoleName += 'bj_';
			}
		}
		
		if(givingLeftHoleHJ) {
			if(!leftHoleIsHard) {
				if(!givingBJ) {
					leftHoleName += 'pet_';
				}
				this.setTachieRightArm('pet');
				this.setTachieFrontA('rightarm_pet');
				this.setTachieSemenFrontAExtension('rightarm_pet_');
				this.setMaxTachieSemenFrontAId(1);
			}
			else {
				this.setTachieRightArm('hj');
				this.setTachieFrontA('rightarm_hj');
				this.setTachieSemenFrontAExtension('rightarm_hj_');
				this.setMaxTachieSemenFrontAId(1);
			}
		}
		else if(karrynJustUsedCockPet) {
			if(!leftHoleIsHard && !givingBJ) {
				leftHoleName += 'pet_';
			}
			this.setTachieRightArm('pet');
			this.setTachieFrontA('rightarm_pet');
			this.setTachieSemenFrontAExtension('rightarm_pet_');
			this.setMaxTachieSemenFrontAId(1);
		}
		else {
			this.toiletBattle_resetRightArmToNormal();
		}
		
		if(leftHoleIsHard && givingBJ) {
			this.setTachieSemenHoleLeftExtension(leftHoleName + 'bj_');
		}
		else {
			this.setTachieSemenHoleLeftExtension(leftHoleName);
		}
		
		leftHoleName += leftHoleEnemy.enemyCock();
		if(Karryn.isCensored())
			leftHoleName += '_cen';
		
		this.setTachieLeftHole(leftHoleName);
		
		this.setMaxTachieSemenHoleLeftId(1);
	}
	else {
		this.resetTachieLeftHole();
		this.setMaxTachieSemenHoleLeftId(0);
		this.resetTachieSemenHoleLeftExtension();
	}
	
	if(!rightHoleIsEmpty) {
		let rightHoleName = '';
		let rightHoleEnemy = $gameTroop._gloryRightStall;
		
		if(rightHoleEnemy.isAroused())
			rightHoleName += 'hard_';
		else
			rightHoleName += 'soft_';
		
		this.setTachieSemenHoleRightExtension(rightHoleName);
		

		rightHoleName += rightHoleEnemy.enemyCock();
		if(Karryn.isCensored())
			rightHoleName += '_cen';
		
		this.setTachieRightHole(rightHoleName);
		this.setMaxTachieSemenHoleRightId(1);
	}
	else {
		this.resetTachieRightHole();
		this.setMaxTachieSemenHoleRightId(0);
	}
	
	let leftArmIsNeutral = !this.tachieLeftArm.includes('kuri') && !this.tachieLeftArm.includes('manko');
	let putLeftArmOnThigh = generallvl3 && leftArmIsNeutral;
	let boobsAreBeingTouched = this.tachieLeftArm.includes('chikubi');
	let kuriIsBeingTouched = this.tachieLeftArm.includes('kuri');
	let mankoIsBeingTouched = this.tachieLeftArm.includes('manko');
	
	//Legs
	
	let tachieLegName = '';
	let tachieBoobsName = '';
	
	if(legsAreSpread || boobsAreBeingTouched) {
		tachieLegName = 'spread';
		if(boobsAreBeingTouched) {
			tachieBoobsName = 'spread_chikubi';
			this.setTachieSemenBoobsExtension('spread_chikubi_');
			this.setTachieStrayBoobsExtension('spread_chikubi_');
			if(!isNaked) {
				this.setTachieTie('spread_chikubi_1');
			}
		}
		else {
			if(!isNaked) {
				this.setTachieTie('spread_normal_1');
			}
			tachieBoobsName = 'spread_normal';
			this.setTachieSemenBoobsExtension('spread_normal_');
			this.setTachieStrayBoobsExtension('spread_normal_');
			if(isPcup) {
				if(kuriIsBeingTouched) {
					if(!isNaked) {
						this.setTachieTie('spread_kuri_1');
					}
					tachieBoobsName = 'spread_kuri';
					this.setTachieSemenBoobsExtension('spread_kuri_');
					this.setTachieStrayBoobsExtension('spread_kuri_');
				}
				else if(mankoIsBeingTouched) {
					if(!isNaked) {
						this.setTachieTie('spread_manko_1');
					}
					tachieBoobsName = 'spread_manko';
					this.setTachieSemenBoobsExtension('spread_manko_');
					this.setTachieStrayBoobsExtension('spread_manko_');
				}
			}
			
			if(putLeftArmOnThigh) {
				this.setTachieLeftArm('thigh');
			}
			else if(leftArmIsNeutral) {
				this.setTachieLeftArm('hair');
			}
		}
		
		this.setTachiePubicExtension('spread_');
		this.resetTachieSemenButtExtension();
		this.setTachieSemenCrotchExtension('spread_');
		this.setTachieSemenWetExtension('spread_');
		this.setTachieSemenLeftLegExtension('spread_');
		this.setTachieSemenRightLegExtension('spread_');
		this.setTachieStrayButtExtension('spread_');
		this.setTachieStrayGroinExtension('spread_');
		
		this.setMaxTachieSemenButtId(0);
		this.setMaxTachieSemenCrotchId(1);
	}
	else {
		tachieBoobsName = 'close';
		this.setTachieSemenBoobsExtension('close_');
		tachieLegName = 'close';
		if(leftArmIsNeutral) {
			this.setTachieLeftArm('hair');
		}
		if(!isNaked) {
			this.setTachieTie('close_1');
		}
		
		this.setTachiePubicExtension('close_');
		this.setTachieSemenButtExtension('close_');
		this.resetTachieSemenCrotchExtension();
		this.setTachieSemenWetExtension('close_');
		this.setTachieSemenLeftLegExtension('close_');
		this.setTachieSemenRightLegExtension('close_');
		this.setTachieStrayBoobsExtension('close_');
		this.setTachieStrayButtExtension('close_');
		this.setTachieStrayGroinExtension('close_');
		
		this.setMaxTachieSemenButtId(1);
		this.setMaxTachieSemenCrotchId(0);
	}
	
	if(isNaked) {
		tachieLegName += '_naked';
	}
	if(tachieLegName.includes('spread') && Karryn.isCensored()) {
		tachieLegName += '_cen';
	}
	this.setTachieBoobs(tachieBoobsName);
	this.setTachieLegs(tachieLegName);
	this.setMaxTachieSemenBoobsId(1);
	this.setMaxTachieWetId(1);
	this.setMaxTachieSemenLeftLegId(1);
	this.setMaxTachieSemenRightLegId(1);
	
	//Naked 
	
	if(isNaked) {
		if(this.tachieLeftArm.includes('hair')) {
			this.setTachieLeftArm('hair_naked');
		}
		else if(this.tachieLeftArm.includes('kuri')) {
			this.setTachieLeftArm('kuri_naked');
		}
		else if(this.tachieLeftArm.includes('manko')) {
			this.setTachieLeftArm('manko_naked');
		}
		else if(this.tachieLeftArm.includes('thigh')) {
			this.setTachieLeftArm('thigh_naked');
		}
		else if(this.tachieLeftArm.includes('chikubi')) {
			this.setTachieLeftArm('chikubi_naked');
		}
		
		if(this.tachieRightArm.includes('hj')) {
			this.setTachieRightArm('hj_naked');
			this.setTachieFrontA('rightarm_hj_naked');
		}
		else if(this.tachieRightArm.includes('normal')) {
			this.setTachieRightArm('normal_naked');
		}
		else if(this.tachieRightArm.includes('pet')) {
			this.setTachieRightArm('pet_naked');
			this.setTachieFrontA('rightarm_pet_naked');
		}
		
		this.setTachieClitToyExtension_gloryBattle('naked_');
	}
	
	//Semen Extensions and Cups
	this.setTachieLeftArmHasHCup(false);
	this.setTachieSemenLeftArmHasHCup(false);
	this.setTachieLeftArmHasPCup(false);
	this.setTachieSemenLeftArmHasPCup(false);
	
	if(this.tachieLeftArm.includes('hair')) {
		this.setTachieSemenLeftArmExtension('hair_');
		this.setMaxTachieSemenLeftArmId(1);
	}
	else if(this.tachieLeftArm.includes('manko')) {
		this.setTachieSemenLeftArmExtension('manko_');
		this.setMaxTachieSemenLeftArmId(1);
	}
	else if(this.tachieLeftArm.includes('kuri')) {
		this.setTachieSemenLeftArmExtension('kuri_');
		this.setMaxTachieSemenLeftArmId(1);
	}
	else if(this.tachieLeftArm.includes('chikubi')) {
		this.setTachieSemenLeftArmExtension('spread_chikubi_');
		this.setMaxTachieSemenLeftArmId(1);
		this.setTachieLeftArmHasHCup(true);
		this.setTachieSemenLeftArmHasHCup(true);
		this.setTachieLeftArmHasPCup(true);
		this.setTachieSemenLeftArmHasPCup(true);
	}
	else if(this.tachieLeftArm.includes('thigh')) {
		this.setTachieSemenLeftArmExtension('thigh_');
		this.setMaxTachieSemenLeftArmId(1);
	}
	else {
		this.setMaxTachieSemenLeftArmId(0);
	}
	
	if(this.tachieRightArm.includes('hj')) {
		this.setTachieSemenRightArmExtension('hj_');
		this.setMaxTachieSemenRightArmId(1);
	}
	else if(this.tachieRightArm.includes('normal')) {
		this.setTachieSemenRightArmExtension('normal_');
		this.setMaxTachieSemenRightArmId(1);
	}
	else if(this.tachieRightArm.includes('pet')) {
		this.setTachieSemenRightArmExtension('pet_');
		this.setMaxTachieSemenRightArmId(1);
	}
	else {
		this.setMaxTachieSemenRightArmId(0);
	}
		
	let faceArray = [];
	this.resetTachieHoppe();
	this.resetTachieSweat();
	
	if(justOrgasmed) {
		if(givingBJ) {
			if(mainHoleIsHard) {
				if(orgasmlvl3) 
					faceArray.push(32);
				else if(orgasmlvl2) 
					faceArray.push(19);
				else
					faceArray.push(6);
			}
			else {
				if(orgasmlvl3) 
					faceArray.push(29);
				else if(orgasmlvl2) 
					faceArray.push(16);
				else
					faceArray.push(3);
			}
		}
		else if(givingLeftHoleHJ) {
			if(mainHoleIsHard) {
				if(orgasmlvl3) 
					faceArray.push(34);
				else if(orgasmlvl2) 
					faceArray.push(21);
				else
					faceArray.push(8);
			}
			else {
				if(orgasmlvl3) 
					faceArray.push(39);
				else if(orgasmlvl2) 
					faceArray.push(26);
				else
					faceArray.push(13);
			}
		}
		else {
			if(orgasmlvl3) 
				faceArray.push(39);
			else if(orgasmlvl2) 
				faceArray.push(26);
			else
				faceArray.push(13);
		}
	}
	else if(karrynSwallowingCum) {
		if(givingBJ) {
			if(mainHoleIsHard) {
				if(swallowlvl3) 
					faceArray.push(32);
				else if(swallowlvl2) 
					faceArray.push(19);
				else
					faceArray.push(6);
			}
			else {
				if(swallowlvl3) 
					faceArray.push(29);
				else if(swallowlvl2) 
					faceArray.push(16);
				else
					faceArray.push(3);
			}
		}
	}
	else if(karrynGotBukkaked) {
		if(givingBJ) {
			if(mainHoleIsHard) {
				if(bukkakelvl3) 
					faceArray.push(32);
				else if(bukkakelvl2) 
					faceArray.push(19);
				else
					faceArray.push(6);
			}
			else {
				if(bukkakelvl3) 
					faceArray.push(29);
				else if(bukkakelvl2) 
					faceArray.push(16);
				else
					faceArray.push(3);
			}
		}
		else {
			if(mainHoleIsHard) {
				if(bukkakelvl3) 
					faceArray.push(34);
				else if(bukkakelvl2) 
					faceArray.push(21);
				else
					faceArray.push(8);
			}
			else {
				if(bukkakelvl3) 
					faceArray.push(39);
				else if(bukkakelvl2) 
					faceArray.push(26);
				else
					faceArray.push(13);
			}
		}
	}
	else if(givingBJ) {
		if(mainHoleIsHard) {
			if(isMasturbating) {
				if(generallvl3) 
					faceArray.push(37);
				else if(generallvl2) 
					faceArray.push(24);
				else
					faceArray.push(11);
			}
			else {
				if(generallvl3) 
					faceArray.push(31);
				else if(generallvl2) 
					faceArray.push(18);
				else
					faceArray.push(5);
			}
		}
		else { //soft BJ
			if(isMasturbating) {
				if(generallvl3) 
					faceArray.push(36);
				else if(generallvl2) 
					faceArray.push(23);
				else
					faceArray.push(10);
			}
			else {
				if(generallvl3) 
					faceArray.push(28);
				else if(generallvl2) 
					faceArray.push(15);
				else
					faceArray.push(2);
			}
		}
	}
	else if(givingLeftHoleHJ) {
		if(mainHoleIsHard) {
			if(isMasturbating) {
				if(generallvl3) 
					faceArray.push(38);
				else if(generallvl2) 
					faceArray.push(25);
				else
					faceArray.push(12);
			}
			else {
				if(generallvl3) 
					faceArray.push(33);
				else if(generallvl2) 
					faceArray.push(20);
				else
					faceArray.push(7);
			}
		}
		else {
			if(isMasturbating) {
				if(generallvl3) 
					faceArray.push(36);
				else if(generallvl2) 
					faceArray.push(22);
				else
					faceArray.push(9);
			}
			else {
				if(generallvl3) 
					faceArray.push(27);
				else if(generallvl2) 
					faceArray.push(14);
				else
					faceArray.push(1);
			}
		}
	}
	else if(karrynJustUsedCockPet || karrynJustUsedCockStare) {
		if(mainHoleIsHard) {
			if(generallvl3) 
				faceArray.push(30);
			else if(generallvl2) 
				faceArray.push(17);
			else
				faceArray.push(4);
		}
		else { //soft
			if(generallvl3) 
				faceArray.push(27);
			else if(generallvl2) 
				faceArray.push(14);
			else
				faceArray.push(1);
		}
	}
	else if(isMasturbating) {
		if(generallvl3) 
			faceArray.push(35);
		else if(generallvl2) 
			faceArray.push(22);
		else
			faceArray.push(9);
	}
	
	if(faceArray.length === 0) {
		if(mainHoleIsHard) {
			if(generallvl3) 
				faceArray.push(30);
			else if(generallvl2) 
				faceArray.push(17);
			else
				faceArray.push(4);
		}
		else {
			if(generallvl3) 
				faceArray.push(27);
			else if(generallvl2) 
				faceArray.push(14);
			else
				faceArray.push(1);
		}
	}
	
	let faceId = faceArray[Math.randomInt(faceArray.length)];
	let eyebrowsArray = [];
	let eyesArray = [];
	let mouthArray = [];
	
	switch(faceId) {
	case 1:
		eyebrowsArray.push('koma1');
		eyebrowsArray.push('koma2');
		eyesArray.push('mae1');
		eyesArray.push('mae2');
		mouthArray.push('ku1');
		mouthArray.push('ku2');
		mouthArray.push('ho1');
		mouthArray.push('ho2');
		mouthArray.push('ah1');
		mouthArray.push('be1');
		this.setTachieHoppe(1);
		this.setTachieSweat(1);
		break;
	case 2:
		eyebrowsArray.push('koma1');
		eyebrowsArray.push('koma2');
		eyebrowsArray.push('oko1');
		eyebrowsArray.push('oko2');
		eyesArray.push('mae1');
		eyesArray.push('mae2');
		mouthArray.push('fera_soft1');
		this.setTachieHoppe('fera_1');
		this.setTachieSweat(1);
	break;
	case 3:
		eyebrowsArray.push('koma1');
		eyebrowsArray.push('koma2');
		eyebrowsArray.push('oko1');
		eyebrowsArray.push('oko2');
		eyesArray.push('mae3');
		eyesArray.push('toji1');
		mouthArray.push('fera_soft1');
		this.setTachieHoppe('fera_1');
		this.setTachieSweat(2);
	break;
	case 4:
		eyebrowsArray.push('koma2');
		eyesArray.push('sita1');
		eyesArray.push('sita2');
		mouthArray.push('ku1');
		mouthArray.push('ku2');
		mouthArray.push('ho1');
		mouthArray.push('ho2');
		mouthArray.push('ah1');
		mouthArray.push('be1');
		this.setTachieHoppe(1);
		this.setTachieSweat(2);
	break;
	case 5:
		eyebrowsArray.push('koma1');
		eyebrowsArray.push('koma2');
		eyesArray.push('mae1');
		eyesArray.push('mae2');
		mouthArray.push('fera_hard1');
		mouthArray.push('fera_hard2');
		this.setTachieHoppe('fera_1');
		this.setTachieSweat(2);
	break;
	case 6:
		eyebrowsArray.push('koma1');
		eyebrowsArray.push('koma2');
		eyebrowsArray.push('oko1');
		eyebrowsArray.push('oko2');
		eyesArray.push('mae3');
		eyesArray.push('toji1');
		mouthArray.push('fera_hard1');
		mouthArray.push('fera_hard2');
		this.setTachieHoppe('fera_1');
		this.setTachieSweat(2);
	break;
	case 7:
		eyebrowsArray.push('koma1');
		eyebrowsArray.push('koma2');
		eyesArray.push('mae1');
		eyesArray.push('mae2');
		eyesArray.push('sita1');
		eyesArray.push('sita2');
		mouthArray.push('ku1');
		mouthArray.push('ku2');
		mouthArray.push('ho1');
		mouthArray.push('ho2');
		mouthArray.push('ah1');
		mouthArray.push('be1');
		this.setTachieHoppe(1);
		this.setTachieSweat(1);
	break;
	case 8:
		eyebrowsArray.push('koma1');
		eyebrowsArray.push('koma2');
		eyebrowsArray.push('oko1');
		eyebrowsArray.push('oko2');
		eyesArray.push('toji1');
		eyesArray.push('sita3');
		eyesArray.push('sita2');
		mouthArray.push('ku1');
		mouthArray.push('ku2');
		mouthArray.push('ho1');
		mouthArray.push('ho2');
		mouthArray.push('ah1');
		mouthArray.push('be1');
		this.setTachieHoppe(1);
		this.setTachieSweat(2);
	break;
	case 9:
		eyebrowsArray.push('koma1');
		eyebrowsArray.push('koma2');
		eyesArray.push('sita1');
		eyesArray.push('sita2');
		eyesArray.push('sita3');
		mouthArray.push('ku1');
		mouthArray.push('ku2');
		mouthArray.push('ho1');
		mouthArray.push('ho2');
		mouthArray.push('ah1');
		mouthArray.push('ah2');
		mouthArray.push('ah3');
		this.setTachieHoppe(1);
		this.setTachieSweat(1);
	break;
	case 10:
		eyebrowsArray.push('koma1');
		eyebrowsArray.push('koma2');
		eyesArray.push('mae1');
		eyesArray.push('mae2');
		eyesArray.push('mae3');
		eyesArray.push('sita1');
		eyesArray.push('sita2');
		eyesArray.push('sita3');
		mouthArray.push('fera_soft1');
		this.setTachieHoppe('fera_1');
		this.setTachieSweat(2);
	break;
	case 11:
		eyebrowsArray.push('koma1');
		eyebrowsArray.push('koma2');
		eyesArray.push('mae1');
		eyesArray.push('mae2');
		eyesArray.push('mae3');
		eyesArray.push('sita1');
		eyesArray.push('sita2');
		eyesArray.push('sita3');
		mouthArray.push('fera_hard1');
		mouthArray.push('fera_hard2');
		this.setTachieHoppe('fera_1');
		this.setTachieSweat(2);
	break;
	case 12:
		eyebrowsArray.push('koma1');
		eyebrowsArray.push('koma2');
		eyesArray.push('mae1');
		eyesArray.push('mae2');
		eyesArray.push('mae3');
		eyesArray.push('sita1');
		eyesArray.push('sita2');
		eyesArray.push('sita3');
		mouthArray.push('ku1');
		mouthArray.push('ku2');
		mouthArray.push('ho1');
		mouthArray.push('ho2');
		mouthArray.push('ah1');
		mouthArray.push('be1');
		this.setTachieHoppe(1);
		this.setTachieSweat(2);
	break;
	case 13:
		eyebrowsArray.push('koma1');
		eyebrowsArray.push('koma2');
		eyebrowsArray.push('oko1');
		eyebrowsArray.push('oko2');
		eyesArray.push('mae2');
		eyesArray.push('mae3');
		eyesArray.push('sita2');
		eyesArray.push('sita3');
		eyesArray.push('toji1');
		mouthArray.push('ah1');
		mouthArray.push('ah2');
		mouthArray.push('ah3');
		mouthArray.push('be1');
		mouthArray.push('be2');
		mouthArray.push('be3');
		this.setTachieHoppe(1);
		this.setTachieSweat(2);
	break;
	case 14:
		eyebrowsArray.push('kiri1');
		eyebrowsArray.push('kiri2');
		eyesArray.push('mae2');
		eyesArray.push('mae1');
		mouthArray.push('ho1');
		mouthArray.push('ho2');
		mouthArray.push('ah1');
		mouthArray.push('ah3');
		mouthArray.push('be4');
		mouthArray.push('be3');
		this.setTachieHoppe(1);
	break;
	case 15:
		eyebrowsArray.push('kiri1');
		eyebrowsArray.push('kiri2');
		eyesArray.push('mae1');
		eyesArray.push('mae2');
		mouthArray.push('fera_soft1');
		mouthArray.push('fera_soft2');
		this.setTachieHoppe('fera_1');
		this.setTachieSweat(1);
	break;
	case 16:
		eyebrowsArray.push('koma1');
		eyebrowsArray.push('koma2');
		eyebrowsArray.push('oko2');
		eyebrowsArray.push('kiri1');
		eyebrowsArray.push('kiri2');
		eyesArray.push('urumae1');
		eyesArray.push('urumae2');
		eyesArray.push('mae3');
		eyesArray.push('ahe1');
		eyesArray.push('toji1');
		mouthArray.push('fera_soft1');
		mouthArray.push('fera_soft2');
		this.setTachieHoppe('fera_1');
		this.setTachieSweat(2);
	break;
	case 17:
		eyebrowsArray.push('kiri2');
		eyesArray.push('sita1');
		eyesArray.push('sita2');
		eyesArray.push('urusita2');
		mouthArray.push('ah1');
		mouthArray.push('ah3');
		mouthArray.push('ho1');
		mouthArray.push('ho2');
		mouthArray.push('be3');
		mouthArray.push('be4');
		this.setTachieHoppe(1);
	break;
	case 18:
		eyebrowsArray.push('kiri1');
		eyebrowsArray.push('kiri2');
		eyesArray.push('mae1');
		eyesArray.push('mae2');
		mouthArray.push('fera_hard2');
		mouthArray.push('fera_hard3');
		mouthArray.push('fera_hard4');
		this.setTachieHoppe('fera_1');
		this.setTachieSweat(1);
	break;
	case 19:
		eyebrowsArray.push('koma1');
		eyebrowsArray.push('koma2');
		eyebrowsArray.push('oko2');
		eyebrowsArray.push('kiri1');
		eyebrowsArray.push('kiri2');
		eyesArray.push('urumae1');
		eyesArray.push('urumae2');
		eyesArray.push('mae3');
		eyesArray.push('ahe1');
		eyesArray.push('toji1');
		mouthArray.push('fera_hard2');
		mouthArray.push('fera_hard3');
		this.setTachieHoppe('fera_1');
		this.setTachieSweat(2);
	break;
	case 20:
		eyebrowsArray.push('kiri1');
		eyebrowsArray.push('kiri2');
		eyesArray.push('mae1');
		eyesArray.push('mae2');
		eyesArray.push('sita1');
		eyesArray.push('sita2');
		mouthArray.push('ah1');
		mouthArray.push('ah3');
		mouthArray.push('ho1');
		mouthArray.push('ho2');
		mouthArray.push('be3');
		mouthArray.push('be4');
		this.setTachieHoppe(1);
		this.setTachieSweat(1);
	break;
	case 21:
		eyebrowsArray.push('koma1');
		eyebrowsArray.push('koma2');
		eyebrowsArray.push('oko2');
		eyebrowsArray.push('kiri1');
		eyebrowsArray.push('kiri2');
		eyesArray.push('urusita1');
		eyesArray.push('urusita2');
		eyesArray.push('sita3');
		eyesArray.push('ahe1');
		eyesArray.push('toji1');
		mouthArray.push('be1');
		mouthArray.push('be2');
		mouthArray.push('ho1');
		mouthArray.push('ho2');
		mouthArray.push('be3');
		mouthArray.push('be4');
		this.setTachieHoppe(1);
		this.setTachieSweat(2);
	break;
	case 22:
		eyebrowsArray.push('koma1');
		eyebrowsArray.push('koma2');
		eyebrowsArray.push('kiri1');
		eyebrowsArray.push('kiri2');
		eyesArray.push('sita1');
		eyesArray.push('sita2');
		eyesArray.push('sita3');
		eyesArray.push('urusita1');
		eyesArray.push('urusita2');
		mouthArray.push('ho1');
		mouthArray.push('ho2');
		mouthArray.push('ah3');
		mouthArray.push('be1');
		mouthArray.push('be2');
		mouthArray.push('be3');
		mouthArray.push('be4');
		this.setTachieHoppe(1);
		this.setTachieSweat(1);
	break;
	case 23:
		eyebrowsArray.push('koma1');
		eyebrowsArray.push('koma2');
		eyebrowsArray.push('kiri1');
		eyebrowsArray.push('kiri2');
		eyesArray.push('mae1');
		eyesArray.push('mae2');
		eyesArray.push('mae3');
		eyesArray.push('sita1');
		eyesArray.push('sita2');
		eyesArray.push('sita3');
		mouthArray.push('fera_soft1');
		mouthArray.push('fera_soft2');
		this.setTachieHoppe('fera_1');
		this.setTachieSweat(1);
	break;
	case 24:
		eyebrowsArray.push('koma1');
		eyebrowsArray.push('koma2');
		eyebrowsArray.push('kiri1');
		eyebrowsArray.push('kiri2');
		eyesArray.push('mae1');
		eyesArray.push('mae2');
		eyesArray.push('mae3');
		eyesArray.push('sita1');
		eyesArray.push('sita2');
		eyesArray.push('sita3');
		mouthArray.push('fera_hard2');
		mouthArray.push('fera_hard3');
		mouthArray.push('fera_hard4');
		this.setTachieHoppe('fera_1');
		this.setTachieSweat(1);
	break;
	case 25:
		eyebrowsArray.push('koma1');
		eyebrowsArray.push('koma2');
		eyebrowsArray.push('kiri1');
		eyebrowsArray.push('kiri2');
		eyesArray.push('mae1');
		eyesArray.push('mae2');
		eyesArray.push('mae3');
		eyesArray.push('sita1');
		eyesArray.push('sita2');
		eyesArray.push('sita3');
		mouthArray.push('ho1');
		mouthArray.push('ho2');
		mouthArray.push('ah3');
		mouthArray.push('be1');
		mouthArray.push('be2');
		mouthArray.push('be3');
		mouthArray.push('be4');
		this.setTachieHoppe(1);
		this.setTachieSweat(1);
	break;
	case 26:
		eyebrowsArray.push('koma1');
		eyebrowsArray.push('koma2');
		eyebrowsArray.push('oko2');
		eyebrowsArray.push('kiri1');
		eyebrowsArray.push('kiri2');
		eyesArray.push('urusita1');
		eyesArray.push('urusita2');
		eyesArray.push('sita3');
		eyesArray.push('ahe1');
		eyesArray.push('toji1');
		mouthArray.push('ah2');
		mouthArray.push('ah3');
		mouthArray.push('be1');
		mouthArray.push('be2');
		mouthArray.push('be3');
		mouthArray.push('be4');
		mouthArray.push('rero1');
		this.setTachieHoppe(1);
		this.setTachieSweat(2);
	break;
	case 27:
		eyebrowsArray.push('nico1');
		eyebrowsArray.push('nico2');
		eyebrowsArray.push('kiri2');
		eyesArray.push('mae1');
		eyesArray.push('mae2');
		eyesArray.push('heartmae1');
		eyesArray.push('heartmae2');
		mouthArray.push('nico1');
		mouthArray.push('nico2');
		mouthArray.push('pero1');
		mouthArray.push('ah3');
		mouthArray.push('be3');
		mouthArray.push('be4');
		mouthArray.push('be5');
		mouthArray.push('rero1');
		mouthArray.push('rero2');
		if(isAroused) this.setTachieHoppe(1);
	break;
	case 28:
		eyebrowsArray.push('nico1');
		eyebrowsArray.push('nico2');
		eyebrowsArray.push('kiri2');
		eyesArray.push('mae1');
		eyesArray.push('mae2');
		eyesArray.push('urumae1');
		eyesArray.push('urumae2');
		mouthArray.push('fera_soft2');
		mouthArray.push('fera_soft3');
		if(isAroused) this.setTachieHoppe('fera_1');
	break;
	case 29:
		eyebrowsArray.push('nico1');
		eyebrowsArray.push('nico2');
		eyebrowsArray.push('oko1');
		eyebrowsArray.push('oko2');
		eyebrowsArray.push('kiri1');
		eyebrowsArray.push('kiri2');
		eyesArray.push('heartmae1');
		eyesArray.push('heartmae2');
		eyesArray.push('heartahe1');
		eyesArray.push('urumae1');
		eyesArray.push('urumae2');
		eyesArray.push('toji1');
		mouthArray.push('fera_soft2');
		mouthArray.push('fera_soft3');
		this.setTachieHoppe('fera_1');
		if(Math.random() < 0.5) this.setTachieSweat(1);
		else this.setTachieSweat(2);
	break;
	case 30:
		eyebrowsArray.push('nico1');
		eyesArray.push('urusita1');
		eyesArray.push('urusita2');
		eyesArray.push('heartsita1');
		eyesArray.push('heartsita2');
		mouthArray.push('nico1');
		mouthArray.push('nico2');
		mouthArray.push('pero1');
		mouthArray.push('ah3');
		mouthArray.push('be3');
		mouthArray.push('be4');
		mouthArray.push('be5');
		mouthArray.push('rero1');
		if(isAroused) this.setTachieHoppe(1);
	break;
	case 31:
		eyebrowsArray.push('nico1');
		eyebrowsArray.push('nico2');
		eyebrowsArray.push('kiri2');
		eyesArray.push('mae1');
		eyesArray.push('mae2');
		eyesArray.push('urumae1');
		eyesArray.push('urumae2');
		mouthArray.push('fera_hard3');
		mouthArray.push('fera_hard4');
		mouthArray.push('fera_hard5');
		mouthArray.push('fera_hard6');
		if(isAroused) this.setTachieHoppe('fera_1');
	break;
	case 32:
		eyebrowsArray.push('nico1');
		eyebrowsArray.push('nico2');
		eyebrowsArray.push('kiri2');
		eyesArray.push('heartmae1');
		eyesArray.push('heartmae2');
		eyesArray.push('heartahe1');
		eyesArray.push('heartsita1');
		eyesArray.push('heartsita2');
		eyesArray.push('toji1');
		mouthArray.push('fera_hard2');
		mouthArray.push('fera_hard3');
		mouthArray.push('fera_hard4');
		mouthArray.push('fera_hard5');
		this.setTachieHoppe('fera_1');
		if(Math.random() < 0.5) this.setTachieSweat(1);
		else this.setTachieSweat(2);
	break;
	case 33:
		eyebrowsArray.push('nico1');
		eyebrowsArray.push('nico2');
		eyebrowsArray.push('kiri2');
		eyesArray.push('sita1');
		eyesArray.push('sita2');
		eyesArray.push('urusita1');
		eyesArray.push('urusita2');
		mouthArray.push('nico1');
		mouthArray.push('nico2');
		mouthArray.push('pero1');
		mouthArray.push('ah3');
		mouthArray.push('be3');
		mouthArray.push('be4');
		mouthArray.push('be5');
		mouthArray.push('rero1');
		if(isAroused) this.setTachieHoppe(1);
	break;
	case 34:
		eyebrowsArray.push('nico1');
		eyebrowsArray.push('nico2');
		eyebrowsArray.push('oko1');
		eyebrowsArray.push('oko2');
		eyebrowsArray.push('kiri1');
		eyebrowsArray.push('kiri2');
		eyesArray.push('heartsita1');
		eyesArray.push('heartsita2');
		eyesArray.push('heartahe1');
		eyesArray.push('urusita1');
		eyesArray.push('urusita2');
		eyesArray.push('toji1');
		mouthArray.push('ah2');
		mouthArray.push('nico2');
		mouthArray.push('pero1');
		mouthArray.push('ah3');
		mouthArray.push('be2');
		mouthArray.push('be4');
		mouthArray.push('be5');
		mouthArray.push('rero1');
		mouthArray.push('rero2');
		this.setTachieHoppe(1);
		if(Math.random() < 0.5) this.setTachieSweat(1);
		else this.setTachieSweat(2);
	break;
	case 35:
		eyebrowsArray.push('nico1');
		eyebrowsArray.push('nico2');
		eyebrowsArray.push('kiri2');
		eyesArray.push('sita1');
		eyesArray.push('sita2');
		eyesArray.push('sita3');
		eyesArray.push('urusita1');
		eyesArray.push('urusita2');
		eyesArray.push('ahe1');
		mouthArray.push('ah1');
		mouthArray.push('ah2');
		mouthArray.push('ah3');
		mouthArray.push('be1');
		mouthArray.push('be2');
		mouthArray.push('be3');
		mouthArray.push('be5');
		mouthArray.push('pero1');
		mouthArray.push('rero2');
		this.setTachieHoppe(1);
		if(Math.random() < 0.5) this.setTachieSweat(1);
	break;
	case 36:
		eyebrowsArray.push('nico1');
		eyebrowsArray.push('nico2');
		eyebrowsArray.push('kiri2');
		eyesArray.push('mae1');
		eyesArray.push('mae2');
		eyesArray.push('sita1');
		eyesArray.push('sita2');
		eyesArray.push('urumae1');
		eyesArray.push('urumae2');
		eyesArray.push('urusita1');
		eyesArray.push('urusita2');
		mouthArray.push('fera_soft2');
		mouthArray.push('fera_soft3');
		this.setTachieHoppe('fera_1');
		if(Math.random() < 0.5) this.setTachieSweat(1);
	break;
	case 37:
		eyebrowsArray.push('nico1');
		eyebrowsArray.push('nico2');
		eyebrowsArray.push('kiri2');
		eyesArray.push('mae1');
		eyesArray.push('mae2');
		eyesArray.push('mae3');
		eyesArray.push('sita1');
		eyesArray.push('sita2');
		eyesArray.push('sita3');
		mouthArray.push('fera_hard1');
		mouthArray.push('fera_hard2');
		mouthArray.push('fera_hard3');
		mouthArray.push('fera_hard4');
		mouthArray.push('fera_hard5');
		mouthArray.push('fera_hard6');
		this.setTachieHoppe('fera_1');
		if(Math.random() < 0.5) this.setTachieSweat(1);
	break;
	case 38:
		eyebrowsArray.push('nico1');
		eyebrowsArray.push('nico2');
		eyebrowsArray.push('kiri2');
		eyesArray.push('mae1');
		eyesArray.push('mae2');
		eyesArray.push('mae3');
		eyesArray.push('sita1');
		eyesArray.push('sita2');
		eyesArray.push('sita3');
		mouthArray.push('ah1');
		mouthArray.push('ah2');
		mouthArray.push('ah3');
		mouthArray.push('be1');
		mouthArray.push('be2');
		mouthArray.push('be3');
		mouthArray.push('be5');
		mouthArray.push('pero1');
		mouthArray.push('rero2');
		this.setTachieHoppe(1);
		if(Math.random() < 0.5) this.setTachieSweat(1);
	break;
	case 39:
		eyebrowsArray.push('nico1');
		eyebrowsArray.push('nico2');
		eyebrowsArray.push('oko1');
		eyebrowsArray.push('oko2');
		eyebrowsArray.push('kiri1');
		eyebrowsArray.push('kiri2');
		eyesArray.push('heartsita1');
		eyesArray.push('heartsita2');
		eyesArray.push('heartahe1');
		eyesArray.push('urusita1');
		eyesArray.push('urusita2');
		eyesArray.push('toji1');
		mouthArray.push('ah2');
		mouthArray.push('ah3');
		mouthArray.push('be2');
		mouthArray.push('be4');
		mouthArray.push('be5');
		mouthArray.push('nico2');
		mouthArray.push('pero1');
		mouthArray.push('rero1');
		mouthArray.push('rero2');
		this.setTachieHoppe(1);
		if(Math.random() < 0.5) this.setTachieSweat(2);
		else this.setTachieSweat(1);
		break;
	}
	
	
	if(eyebrowsArray.length > 0) {
		this.setTachieEyebrows(eyebrowsArray[Math.randomInt(eyebrowsArray.length)]);
	}
	if(eyesArray.length > 0) {
		this.setTachieEyes(eyesArray[Math.randomInt(eyesArray.length)]);
	}
	
	if(mainHoleIsHard && !givingBJ) {
		this.resetTachieMouth();
	}
	else if(mouthArray.length > 0) {
		this.setTachieMouth(mouthArray[Math.randomInt(mouthArray.length)]);
	}
	else {
		this.resetTachieMouth();
	}
	
	if(this.tachieMouth.includes('fera') || this.tachieMouth.includes('rero'))
		this.setTachieStrayFaceExtension(ConfigManager.convertedTachieMouthName(this) + '_');
	else
		this.resetTachieStrayFaceExtension();
	
	this.setAllowTachieEmoteUpdate(true);
};

//Sit Right
Game_Actor.prototype.emoteGloryToiletSitRightPose = function() {
	this.setAllowTachieEmoteUpdate(false);
	let justOrgasmed = this.didLastGetHitBySkillType(JUST_SKILLTYPE_KARRYN_ORGASM) || this.justOrgasmed();
	let isAroused = this.isAroused() || justOrgasmed;
	let isNaked = !this.isWearingGlovesAndHat();
	let isPcup = this.boobsSizeIsPCup();
	
	let legsAreSpread = this.tachieLegs.includes('spread');
	let legsAreClose = this.tachieLegs.includes('close');
	
	let isMasturbating = this.tachieRightArm.includes('chikubi') || this.tachieRightArm.includes('kuri') || this.tachieRightArm.includes('manko');
	let givingBJ = this.isBodySlotPenis(MOUTH_ID);
	let givingRightHoleHJ = this.isBodySlotPenis(LEFT_HAND_ID);
	let leftHoleIsEmpty = $gameTroop.gloryBattle_leftHoleIsEmpty();
	let rightHoleIsEmpty = $gameTroop.gloryBattle_rightHoleIsEmpty();
	let mainHoleIsHard = !rightHoleIsEmpty && $gameTroop._gloryRightStall.isAroused();
	let mainHoleIsSoft = !rightHoleIsEmpty && !$gameTroop._gloryRightStall.isAroused();
	let mainHoleJustEjaculated = $gameTroop._gloryLastHoleToEjaculate === GLORY_RIGHT_STALL_ID;
	
	let karrynJustUsedCockPet = this.didLastGetHitBySkillType(JUST_SKILLTYPE_KARRYN_PETTING);
	let karrynJustUsedCockStare = this.didLastGetHitBySkillType(JUST_SKILLTYPE_KARRYN_COCK_STARE);
	let lastHitBlowjob = this.didLastGetHitBySkillType(JUST_SKILLTYPE_KARRYN_BLOWJOB) || this.didLastGetHitBySkillType(JUST_SKILLTYPE_ENEMY_BLOWJOB);
	let lastHitHandjob = this.didLastGetHitBySkillType(JUST_SKILLTYPE_KARRYN_HANDJOB) || this.didLastGetHitBySkillType(JUST_SKILLTYPE_ENEMY_HANDJOB);
	let karrynSwallowingCum = this.didLastGetHitBySkillType(JUST_SKILLTYPE_ENEMY_CUM_SWALLOW);
	let karrynGotBukkaked = this.didLastGetHitBySkillType(JUST_SKILLTYPE_ENEMY_BUKKAKE);
	
	let generalReactionScore = this.getReactionScore();
	let orgasmReactionScore = this.getOrgasmReactionScore();
	let swallowReactionScore = this.getSwallowReactionScore();
	let bukkakeReactionScore = this.getBukkakeReactionScore();
	
	let generallvl3 = generalReactionScore >= VAR_DEF_RS_LV3_REQ;
	let generallvl2 = generalReactionScore >= VAR_DEF_RS_LV2_REQ;
	let orgasmlvl3 = orgasmReactionScore >= VAR_DEF_RS_LV3_REQ;
	let orgasmlvl2 = orgasmReactionScore >= VAR_DEF_RS_LV2_REQ;
	let swallowlvl3 = swallowReactionScore  >= VAR_DEF_RS_LV3_REQ;
	let swallowlvl2 = swallowReactionScore >= VAR_DEF_RS_LV2_REQ;
	let bukkakelvl3 = bukkakeReactionScore >= VAR_DEF_RS_LV3_REQ;
	let bukkakelvl2 = bukkakeReactionScore >= VAR_DEF_RS_LV2_REQ;
	
	if(!rightHoleIsEmpty) {
		let rightHoleName = '';
		let rightHoleEnemy = $gameTroop._gloryRightStall;
		let rightHoleIsHard = rightHoleEnemy.isAroused();
		
		if(rightHoleIsHard) {
			rightHoleName += 'hard_';
		}
		else {
			rightHoleName += 'soft_';
			if(givingBJ) {
				rightHoleName += 'bj_';
			}
		}
		
		if(givingRightHoleHJ) {
			if(!rightHoleIsHard) {
				if(!givingBJ) {
					rightHoleName += 'pet_';
				}
				this.setTachieLeftArm('pet');
				this.setTachieFrontA('leftarm_pet');
				this.setTachieSemenFrontAExtension('leftarm_pet_');
				this.setMaxTachieSemenFrontAId(1);
			}
			else {
				this.setTachieLeftArm('hj');
				this.setTachieFrontA('leftarm_hj');
				this.setTachieSemenFrontAExtension('leftarm_hj_');
				this.setMaxTachieSemenFrontAId(1);
			}
		}
		else if(karrynJustUsedCockPet) {
			if(!rightHoleIsHard && !givingBJ) {
				rightHoleName += 'pet_';
			}
			this.setTachieLeftArm('pet');
			this.setTachieFrontA('leftarm_pet');
			this.setTachieSemenFrontAExtension('leftarm_pet_');
			this.setMaxTachieSemenFrontAId(1);
		}
		else {
			this.toiletBattle_resetLeftArmToNormal();
		}
		
		if(rightHoleIsHard && givingBJ) {
			this.setTachieSemenHoleRightExtension(rightHoleName + 'bj_');
		}
		else {
			this.setTachieSemenHoleRightExtension(rightHoleName);
		}
		
		rightHoleName += rightHoleEnemy.enemyCock();
		if(Karryn.isCensored())
			rightHoleName += '_cen';
		
		this.setTachieRightHole(rightHoleName);
		
		this.setMaxTachieSemenHoleRightId(1);
	}
	else {
		this.resetTachieRightHole();
		this.setMaxTachieSemenHoleRightId(0);
		this.resetTachieSemenHoleRightExtension();
	}
	
	if(!leftHoleIsEmpty) {
		let leftHoleName = '';
		let leftHoleEnemy = $gameTroop._gloryLeftStall;
		
		if(leftHoleEnemy.isAroused())
			leftHoleName += 'hard_';
		else
			leftHoleName += 'soft_';
		
		this.setTachieSemenHoleLeftExtension(leftHoleName);
		
		leftHoleName += leftHoleEnemy.enemyCock();
		if(Karryn.isCensored())
			leftHoleName += '_cen';
		
		this.setTachieLeftHole(leftHoleName);
		this.setMaxTachieSemenHoleLeftId(1);
	}
	else {
		this.resetTachieLeftHole();
		this.setMaxTachieSemenHoleLeftId(0);
	}
	
	let rightArmIsNeutral = !this.tachieRightArm.includes('kuri') && !this.tachieRightArm.includes('manko');
	let putRightArmOnThigh = generallvl3 && rightArmIsNeutral;
	let boobsAreBeingTouched = this.tachieRightArm.includes('chikubi');
	let kuriIsBeingTouched = this.tachieRightArm.includes('kuri');
	let mankoIsBeingTouched = this.tachieRightArm.includes('manko');
	
	//Legs
	
	let tachieLegName = '';
	let tachieBoobsName = '';
	
	if(legsAreSpread || boobsAreBeingTouched) {
		tachieLegName = 'spread';
		if(boobsAreBeingTouched) {
			tachieBoobsName = 'spread_chikubi';
			this.setTachieSemenBoobsExtension('spread_chikubi_');
			this.setTachieStrayBoobsExtension('spread_chikubi_');
			if(!isNaked) {
				this.setTachieTie('spread_chikubi_1');
			}
		}
		else {
			if(!isNaked) {
				this.setTachieTie('spread_normal_1');
			}
			tachieBoobsName = 'spread_normal';
			this.setTachieSemenBoobsExtension('spread_normal_');
			this.setTachieStrayBoobsExtension('spread_normal_');
			if(isPcup) {
				if(kuriIsBeingTouched) {
					if(!isNaked) {
						this.setTachieTie('spread_kuri_1');
					}
					tachieBoobsName = 'spread_kuri';
					this.setTachieSemenBoobsExtension('spread_kuri_');
					this.setTachieStrayBoobsExtension('spread_kuri_');
				}
				else if(mankoIsBeingTouched) {
					if(!isNaked) {
						this.setTachieTie('spread_manko_1');
					}
					tachieBoobsName = 'spread_manko';
					this.setTachieSemenBoobsExtension('spread_manko_');
					this.setTachieStrayBoobsExtension('spread_manko_');
				}
			}
			
			if(putRightArmOnThigh) {
				this.setTachieRightArm('thigh');
			}
			else if(rightArmIsNeutral) {
				this.setTachieRightArm('hair');
			}
		}
		
		this.setTachiePubicExtension('spread_');
		this.resetTachieSemenButtExtension();
		this.setTachieSemenCrotchExtension('spread_');
		this.setTachieSemenWetExtension('spread_');
		this.setTachieSemenLeftLegExtension('spread_');
		this.setTachieSemenRightLegExtension('spread_');
		this.setTachieStrayButtExtension('spread_');
		this.setTachieStrayGroinExtension('spread_');
		
		this.setMaxTachieSemenButtId(0);
		this.setMaxTachieSemenCrotchId(1);
	}
	else {
		tachieBoobsName = 'close';
		this.setTachieSemenBoobsExtension('close_');
		tachieLegName = 'close';
		if(rightArmIsNeutral) {
			this.setTachieRightArm('hair');
		}
		if(!isNaked) {
			this.setTachieTie('close_1');
		}
		
		this.setTachiePubicExtension('close_');
		this.setTachieSemenButtExtension('close_');
		this.resetTachieSemenCrotchExtension();
		this.setTachieSemenWetExtension('close_');
		this.setTachieSemenLeftLegExtension('close_');
		this.setTachieSemenRightLegExtension('close_');
		this.setTachieStrayBoobsExtension('close_');
		this.setTachieStrayButtExtension('close_');
		this.setTachieStrayGroinExtension('close_');
		
		this.setMaxTachieSemenButtId(1);
		this.setMaxTachieSemenCrotchId(0);
	}
	
	if(isNaked) {
		tachieLegName += '_naked';
	}
	if(tachieLegName.includes('spread') && Karryn.isCensored()) {
		tachieLegName += '_cen';
	}
	this.setTachieBoobs(tachieBoobsName);
	this.setTachieLegs(tachieLegName);
	this.setMaxTachieSemenBoobsId(1);
	this.setMaxTachieWetId(1);
	this.setMaxTachieSemenLeftLegId(1);
	this.setMaxTachieSemenRightLegId(1);
	
	//Naked 
	
	if(isNaked) {
		if(this.tachieRightArm.includes('hair')) {
			this.setTachieRightArm('hair_naked');
		}
		else if(this.tachieRightArm.includes('kuri')) {
			this.setTachieRightArm('kuri_naked');
		}
		else if(this.tachieRightArm.includes('manko')) {
			this.setTachieRightArm('manko_naked');
		}
		else if(this.tachieRightArm.includes('thigh')) {
			this.setTachieRightArm('thigh_naked');
		}
		else if(this.tachieRightArm.includes('chikubi')) {
			this.setTachieRightArm('chikubi_naked');
		}
		
		if(this.tachieLeftArm.includes('hj')) {
			this.setTachieLeftArm('hj_naked');
			this.setTachieFrontA('leftarm_hj_naked');
		}
		else if(this.tachieLeftArm.includes('normal')) {
			this.setTachieLeftArm('normal_naked');
		}
		else if(this.tachieLeftArm.includes('pet')) {
			this.setTachieLeftArm('pet_naked');
			this.setTachieFrontA('leftarm_pet_naked');
		}
		

		
		this.setTachieClitToyExtension_gloryBattle('naked_');
	}
		
	//Semen Extensions and Cups
	this.setTachieRightArmHasHCup(false);
	this.setTachieSemenRightArmHasHCup(false);
	this.setTachieRightArmHasPCup(false);
	this.setTachieSemenRightArmHasPCup(false);
	
	if(this.tachieRightArm.includes('hair')) {
		this.setTachieSemenRightArmExtension('hair_');
		this.setMaxTachieSemenRightArmId(1);
	}
	else if(this.tachieRightArm.includes('manko')) {
		this.setTachieSemenRightArmExtension('manko_');
		this.setMaxTachieSemenRightArmId(1);
	}
	else if(this.tachieRightArm.includes('kuri')) {
		this.setTachieSemenRightArmExtension('kuri_');
		this.setMaxTachieSemenRightArmId(1);
	}
	else if(this.tachieRightArm.includes('chikubi')) {
		this.setTachieSemenRightArmExtension('spread_chikubi_');
		this.setMaxTachieSemenRightArmId(1);
		this.setTachieRightArmHasHCup(true);
		this.setTachieSemenRightArmHasHCup(true);
		this.setTachieRightArmHasPCup(true);
		this.setTachieSemenRightArmHasPCup(true);
	}
	else if(this.tachieRightArm.includes('thigh')) {
		this.setTachieSemenRightArmExtension('thigh_');
		this.setMaxTachieSemenRightArmId(1);
	}
	else {
		this.setMaxTachieSemenRightArmId(0);
	}
	
	if(this.tachieLeftArm.includes('hj')) {
		this.setTachieSemenLeftArmExtension('hj_');
		this.setMaxTachieSemenLeftArmId(1);
	}
	else if(this.tachieLeftArm.includes('normal')) {
		this.setTachieSemenLeftArmExtension('normal_');
		this.setMaxTachieSemenLeftArmId(1);
	}
	else if(this.tachieLeftArm.includes('pet')) {
		this.setTachieSemenLeftArmExtension('pet_');
		this.setMaxTachieSemenLeftArmId(1);
	}
	else {
		this.setMaxTachieSemenLeftArmId(0);
	}
	
	let faceArray = [];
	this.resetTachieHoppe();
	this.resetTachieSweat();
	
	if(justOrgasmed) {
		if(givingBJ) {
			if(mainHoleIsHard) {
				if(orgasmlvl3) 
					faceArray.push(32);
				else if(orgasmlvl2) 
					faceArray.push(19);
				else
					faceArray.push(6);
			}
			else {
				if(orgasmlvl3) 
					faceArray.push(29);
				else if(orgasmlvl2) 
					faceArray.push(16);
				else
					faceArray.push(3);
			}
		}
		else if(givingRightHoleHJ) {
			if(mainHoleIsHard) {
				if(orgasmlvl3) 
					faceArray.push(34);
				else if(orgasmlvl2) 
					faceArray.push(21);
				else
					faceArray.push(8);
			}
			else {
				if(orgasmlvl3) 
					faceArray.push(39);
				else if(orgasmlvl2) 
					faceArray.push(26);
				else
					faceArray.push(13);
			}
		}
		else {
			if(orgasmlvl3) 
				faceArray.push(39);
			else if(orgasmlvl2) 
				faceArray.push(26);
			else
				faceArray.push(13);
		}
	}
	else if(karrynSwallowingCum) {
		if(givingBJ) {
			if(mainHoleIsHard) {
				if(swallowlvl3) 
					faceArray.push(32);
				else if(swallowlvl2) 
					faceArray.push(19);
				else
					faceArray.push(6);
			}
			else {
				if(swallowlvl3) 
					faceArray.push(29);
				else if(swallowlvl2) 
					faceArray.push(16);
				else
					faceArray.push(3);
			}
		}
	}
	else if(karrynGotBukkaked) {
		if(givingBJ) {
			if(mainHoleIsHard) {
				if(bukkakelvl3) 
					faceArray.push(32);
				else if(bukkakelvl2) 
					faceArray.push(19);
				else
					faceArray.push(6);
			}
			else {
				if(bukkakelvl3) 
					faceArray.push(29);
				else if(bukkakelvl2) 
					faceArray.push(16);
				else
					faceArray.push(3);
			}
		}
		else {
			if(mainHoleIsHard) {
				if(bukkakelvl3) 
					faceArray.push(34);
				else if(bukkakelvl2) 
					faceArray.push(21);
				else
					faceArray.push(8);
			}
			else {
				if(bukkakelvl3) 
					faceArray.push(39);
				else if(bukkakelvl2) 
					faceArray.push(26);
				else
					faceArray.push(13);
			}
		}
	}
	else if(givingBJ) {
		if(mainHoleIsHard) {
			if(isMasturbating) {
				if(generallvl3) 
					faceArray.push(37);
				else if(generallvl2) 
					faceArray.push(24);
				else
					faceArray.push(11);
			}
			else {
				if(generallvl3) 
					faceArray.push(31);
				else if(generallvl2) 
					faceArray.push(18);
				else
					faceArray.push(5);
			}
		}
		else { //soft BJ
			if(isMasturbating) {
				if(generallvl3) 
					faceArray.push(36);
				else if(generallvl2) 
					faceArray.push(23);
				else
					faceArray.push(10);
			}
			else {
				if(generallvl3) 
					faceArray.push(28);
				else if(generallvl2) 
					faceArray.push(15);
				else
					faceArray.push(2);
			}
		}
	}
	else if(givingRightHoleHJ) {
		if(mainHoleIsHard) {
			if(isMasturbating) {
				if(generallvl3) 
					faceArray.push(38);
				else if(generallvl2) 
					faceArray.push(25);
				else
					faceArray.push(12);
			}
			else {
				if(generallvl3) 
					faceArray.push(33);
				else if(generallvl2) 
					faceArray.push(20);
				else
					faceArray.push(7);
			}
		}
		else {
			if(isMasturbating) {
				if(generallvl3) 
					faceArray.push(36);
				else if(generallvl2) 
					faceArray.push(22);
				else
					faceArray.push(9);
			}
			else {
				if(generallvl3) 
					faceArray.push(27);
				else if(generallvl2) 
					faceArray.push(14);
				else
					faceArray.push(1);
			}
		}
	}
	else if(karrynJustUsedCockPet || karrynJustUsedCockStare) {
		if(mainHoleIsHard) {
			if(generallvl3) 
				faceArray.push(30);
			else if(generallvl2) 
				faceArray.push(17);
			else
				faceArray.push(4);
		}
		else { //soft
			if(generallvl3) 
				faceArray.push(27);
			else if(generallvl2) 
				faceArray.push(14);
			else
				faceArray.push(1);
		}
	}
	else if(isMasturbating) {
		if(generallvl3) 
			faceArray.push(35);
		else if(generallvl2) 
			faceArray.push(22);
		else
			faceArray.push(9);
	}
	
	if(faceArray.length === 0) {
		if(mainHoleIsHard) {
			if(generallvl3) 
				faceArray.push(30);
			else if(generallvl2) 
				faceArray.push(17);
			else
				faceArray.push(4);
		}
		else {
			if(generallvl3) 
				faceArray.push(27);
			else if(generallvl2) 
				faceArray.push(14);
			else
				faceArray.push(1);
		}
	}
	
	let faceId = faceArray[Math.randomInt(faceArray.length)];
	let eyebrowsArray = [];
	let eyesArray = [];
	let mouthArray = [];
	
	switch(faceId) {
	case 1:
		eyebrowsArray.push('koma1');
		eyebrowsArray.push('koma2');
		eyesArray.push('mae1');
		eyesArray.push('mae2');
		mouthArray.push('ku1');
		mouthArray.push('ku2');
		mouthArray.push('ho1');
		mouthArray.push('ho2');
		mouthArray.push('ah1');
		mouthArray.push('be1');
		this.setTachieHoppe(1);
		this.setTachieSweat(1);
		break;
	case 2:
		eyebrowsArray.push('koma1');
		eyebrowsArray.push('koma2');
		eyebrowsArray.push('oko1');
		eyebrowsArray.push('oko2');
		eyesArray.push('mae1');
		eyesArray.push('mae2');
		mouthArray.push('fera_soft1');
		this.setTachieHoppe('fera_1');
		this.setTachieSweat(1);
	break;
	case 3:
		eyebrowsArray.push('koma1');
		eyebrowsArray.push('koma2');
		eyebrowsArray.push('oko1');
		eyebrowsArray.push('oko2');
		eyesArray.push('mae3');
		eyesArray.push('toji1');
		mouthArray.push('fera_soft1');
		this.setTachieHoppe('fera_1');
		this.setTachieSweat(2);
	break;
	case 4:
		eyebrowsArray.push('koma2');
		eyesArray.push('sita1');
		eyesArray.push('sita2');
		mouthArray.push('ku1');
		mouthArray.push('ku2');
		mouthArray.push('ho1');
		mouthArray.push('ho2');
		mouthArray.push('ah1');
		mouthArray.push('be1');
		this.setTachieHoppe(1);
		this.setTachieSweat(2);
	break;
	case 5:
		eyebrowsArray.push('koma1');
		eyebrowsArray.push('koma2');
		eyesArray.push('mae1');
		eyesArray.push('mae2');
		mouthArray.push('fera_hard1');
		mouthArray.push('fera_hard2');
		this.setTachieHoppe('fera_1');
		this.setTachieSweat(2);
	break;
	case 6:
		eyebrowsArray.push('koma1');
		eyebrowsArray.push('koma2');
		eyebrowsArray.push('oko1');
		eyebrowsArray.push('oko2');
		eyesArray.push('mae3');
		eyesArray.push('toji1');
		mouthArray.push('fera_hard1');
		mouthArray.push('fera_hard2');
		this.setTachieHoppe('fera_1');
		this.setTachieSweat(2);
	break;
	case 7:
		eyebrowsArray.push('koma1');
		eyebrowsArray.push('koma2');
		eyesArray.push('mae1');
		eyesArray.push('mae2');
		eyesArray.push('sita1');
		eyesArray.push('sita2');
		mouthArray.push('ku1');
		mouthArray.push('ku2');
		mouthArray.push('ho1');
		mouthArray.push('ho2');
		mouthArray.push('ah1');
		mouthArray.push('be1');
		this.setTachieHoppe(1);
		this.setTachieSweat(1);
	break;
	case 8:
		eyebrowsArray.push('koma1');
		eyebrowsArray.push('koma2');
		eyebrowsArray.push('oko1');
		eyebrowsArray.push('oko2');
		eyesArray.push('toji1');
		eyesArray.push('sita3');
		eyesArray.push('sita2');
		mouthArray.push('ku1');
		mouthArray.push('ku2');
		mouthArray.push('ho1');
		mouthArray.push('ho2');
		mouthArray.push('ah1');
		mouthArray.push('be1');
		this.setTachieHoppe(1);
		this.setTachieSweat(2);
	break;
	case 9:
		eyebrowsArray.push('koma1');
		eyebrowsArray.push('koma2');
		eyesArray.push('sita1');
		eyesArray.push('sita2');
		eyesArray.push('sita3');
		mouthArray.push('ku1');
		mouthArray.push('ku2');
		mouthArray.push('ho1');
		mouthArray.push('ho2');
		mouthArray.push('ah1');
		mouthArray.push('ah2');
		mouthArray.push('ah3');
		this.setTachieHoppe(1);
		this.setTachieSweat(1);
	break;
	case 10:
		eyebrowsArray.push('koma1');
		eyebrowsArray.push('koma2');
		eyesArray.push('mae1');
		eyesArray.push('mae2');
		eyesArray.push('mae3');
		eyesArray.push('sita1');
		eyesArray.push('sita2');
		eyesArray.push('sita3');
		mouthArray.push('fera_soft1');
		this.setTachieHoppe('fera_1');
		this.setTachieSweat(2);
	break;
	case 11:
		eyebrowsArray.push('koma1');
		eyebrowsArray.push('koma2');
		eyesArray.push('mae1');
		eyesArray.push('mae2');
		eyesArray.push('mae3');
		eyesArray.push('sita1');
		eyesArray.push('sita2');
		eyesArray.push('sita3');
		mouthArray.push('fera_hard1');
		mouthArray.push('fera_hard2');
		this.setTachieHoppe('fera_1');
		this.setTachieSweat(2);
	break;
	case 12:
		eyebrowsArray.push('koma1');
		eyebrowsArray.push('koma2');
		eyesArray.push('mae1');
		eyesArray.push('mae2');
		eyesArray.push('mae3');
		eyesArray.push('sita1');
		eyesArray.push('sita2');
		eyesArray.push('sita3');
		mouthArray.push('ku1');
		mouthArray.push('ku2');
		mouthArray.push('ho1');
		mouthArray.push('ho2');
		mouthArray.push('ah1');
		mouthArray.push('be1');
		this.setTachieHoppe(1);
		this.setTachieSweat(2);
	break;
	case 13:
		eyebrowsArray.push('koma1');
		eyebrowsArray.push('koma2');
		eyebrowsArray.push('oko1');
		eyebrowsArray.push('oko2');
		eyesArray.push('mae2');
		eyesArray.push('mae3');
		eyesArray.push('sita2');
		eyesArray.push('sita3');
		eyesArray.push('toji1');
		mouthArray.push('ah1');
		mouthArray.push('ah2');
		mouthArray.push('ah3');
		mouthArray.push('be1');
		mouthArray.push('be2');
		mouthArray.push('be3');
		this.setTachieHoppe(1);
		this.setTachieSweat(2);
	break;
	case 14:
		eyebrowsArray.push('kiri1');
		eyebrowsArray.push('kiri2');
		eyesArray.push('mae2');
		eyesArray.push('mae1');
		mouthArray.push('ho1');
		mouthArray.push('ho2');
		mouthArray.push('ah1');
		mouthArray.push('ah3');
		mouthArray.push('be4');
		mouthArray.push('be3');
		this.setTachieHoppe(1);
	break;
	case 15:
		eyebrowsArray.push('kiri1');
		eyebrowsArray.push('kiri2');
		eyesArray.push('mae1');
		eyesArray.push('mae2');
		mouthArray.push('fera_soft1');
		mouthArray.push('fera_soft2');
		this.setTachieHoppe('fera_1');
		this.setTachieSweat(1);
	break;
	case 16:
		eyebrowsArray.push('koma1');
		eyebrowsArray.push('koma2');
		eyebrowsArray.push('oko2');
		eyebrowsArray.push('kiri1');
		eyebrowsArray.push('kiri2');
		eyesArray.push('urumae1');
		eyesArray.push('urumae2');
		eyesArray.push('mae3');
		eyesArray.push('ahe1');
		eyesArray.push('toji1');
		mouthArray.push('fera_soft1');
		mouthArray.push('fera_soft2');
		this.setTachieHoppe('fera_1');
		this.setTachieSweat(2);
	break;
	case 17:
		eyebrowsArray.push('kiri2');
		eyesArray.push('sita1');
		eyesArray.push('sita2');
		eyesArray.push('urusita2');
		mouthArray.push('ah1');
		mouthArray.push('ah3');
		mouthArray.push('ho1');
		mouthArray.push('ho2');
		mouthArray.push('be3');
		mouthArray.push('be4');
		this.setTachieHoppe(1);
	break;
	case 18:
		eyebrowsArray.push('kiri1');
		eyebrowsArray.push('kiri2');
		eyesArray.push('mae1');
		eyesArray.push('mae2');
		mouthArray.push('fera_hard2');
		mouthArray.push('fera_hard3');
		mouthArray.push('fera_hard4');
		this.setTachieHoppe('fera_1');
		this.setTachieSweat(1);
	break;
	case 19:
		eyebrowsArray.push('koma1');
		eyebrowsArray.push('koma2');
		eyebrowsArray.push('oko2');
		eyebrowsArray.push('kiri1');
		eyebrowsArray.push('kiri2');
		eyesArray.push('urumae1');
		eyesArray.push('urumae2');
		eyesArray.push('mae3');
		eyesArray.push('ahe1');
		eyesArray.push('toji1');
		mouthArray.push('fera_hard2');
		mouthArray.push('fera_hard3');
		this.setTachieHoppe('fera_1');
		this.setTachieSweat(2);
	break;
	case 20:
		eyebrowsArray.push('kiri1');
		eyebrowsArray.push('kiri2');
		eyesArray.push('mae1');
		eyesArray.push('mae2');
		eyesArray.push('sita1');
		eyesArray.push('sita2');
		mouthArray.push('ah1');
		mouthArray.push('ah3');
		mouthArray.push('ho1');
		mouthArray.push('ho2');
		mouthArray.push('be3');
		mouthArray.push('be4');
		this.setTachieHoppe(1);
		this.setTachieSweat(1);
	break;
	case 21:
		eyebrowsArray.push('koma1');
		eyebrowsArray.push('koma2');
		eyebrowsArray.push('oko2');
		eyebrowsArray.push('kiri1');
		eyebrowsArray.push('kiri2');
		eyesArray.push('urusita1');
		eyesArray.push('urusita2');
		eyesArray.push('sita3');
		eyesArray.push('ahe1');
		eyesArray.push('toji1');
		mouthArray.push('be1');
		mouthArray.push('be2');
		mouthArray.push('ho1');
		mouthArray.push('ho2');
		mouthArray.push('be3');
		mouthArray.push('be4');
		this.setTachieHoppe(1);
		this.setTachieSweat(2);
	break;
	case 22:
		eyebrowsArray.push('koma1');
		eyebrowsArray.push('koma2');
		eyebrowsArray.push('kiri1');
		eyebrowsArray.push('kiri2');
		eyesArray.push('sita1');
		eyesArray.push('sita2');
		eyesArray.push('sita3');
		eyesArray.push('urusita1');
		eyesArray.push('urusita2');
		mouthArray.push('ho1');
		mouthArray.push('ho2');
		mouthArray.push('ah3');
		mouthArray.push('be1');
		mouthArray.push('be2');
		mouthArray.push('be3');
		mouthArray.push('be4');
		this.setTachieHoppe(1);
		this.setTachieSweat(1);
	break;
	case 23:
		eyebrowsArray.push('koma1');
		eyebrowsArray.push('koma2');
		eyebrowsArray.push('kiri1');
		eyebrowsArray.push('kiri2');
		eyesArray.push('mae1');
		eyesArray.push('mae2');
		eyesArray.push('mae3');
		eyesArray.push('sita1');
		eyesArray.push('sita2');
		eyesArray.push('sita3');
		mouthArray.push('fera_soft1');
		mouthArray.push('fera_soft2');
		this.setTachieHoppe('fera_1');
		this.setTachieSweat(1);
	break;
	case 24:
		eyebrowsArray.push('koma1');
		eyebrowsArray.push('koma2');
		eyebrowsArray.push('kiri1');
		eyebrowsArray.push('kiri2');
		eyesArray.push('mae1');
		eyesArray.push('mae2');
		eyesArray.push('mae3');
		eyesArray.push('sita1');
		eyesArray.push('sita2');
		eyesArray.push('sita3');
		mouthArray.push('fera_hard2');
		mouthArray.push('fera_hard3');
		mouthArray.push('fera_hard4');
		this.setTachieHoppe('fera_1');
		this.setTachieSweat(1);
	break;
	case 25:
		eyebrowsArray.push('koma1');
		eyebrowsArray.push('koma2');
		eyebrowsArray.push('kiri1');
		eyebrowsArray.push('kiri2');
		eyesArray.push('mae1');
		eyesArray.push('mae2');
		eyesArray.push('mae3');
		eyesArray.push('sita1');
		eyesArray.push('sita2');
		eyesArray.push('sita3');
		mouthArray.push('ho1');
		mouthArray.push('ho2');
		mouthArray.push('ah3');
		mouthArray.push('be1');
		mouthArray.push('be2');
		mouthArray.push('be3');
		mouthArray.push('be4');
		this.setTachieHoppe(1);
		this.setTachieSweat(1);
	break;
	case 26:
		eyebrowsArray.push('koma1');
		eyebrowsArray.push('koma2');
		eyebrowsArray.push('oko2');
		eyebrowsArray.push('kiri1');
		eyebrowsArray.push('kiri2');
		eyesArray.push('urusita1');
		eyesArray.push('urusita2');
		eyesArray.push('sita3');
		eyesArray.push('ahe1');
		eyesArray.push('toji1');
		mouthArray.push('ah2');
		mouthArray.push('ah3');
		mouthArray.push('be1');
		mouthArray.push('be2');
		mouthArray.push('be3');
		mouthArray.push('be4');
		mouthArray.push('rero1');
		this.setTachieHoppe(1);
		this.setTachieSweat(2);
	break;
	case 27:
		eyebrowsArray.push('nico1');
		eyebrowsArray.push('nico2');
		eyebrowsArray.push('kiri2');
		eyesArray.push('mae1');
		eyesArray.push('mae2');
		eyesArray.push('heartmae1');
		eyesArray.push('heartmae2');
		mouthArray.push('nico1');
		mouthArray.push('nico2');
		mouthArray.push('pero1');
		mouthArray.push('ah3');
		mouthArray.push('be3');
		mouthArray.push('be4');
		mouthArray.push('be5');
		mouthArray.push('rero1');
		mouthArray.push('rero2');
		if(isAroused) this.setTachieHoppe(1);
	break;
	case 28:
		eyebrowsArray.push('nico1');
		eyebrowsArray.push('nico2');
		eyebrowsArray.push('kiri2');
		eyesArray.push('mae1');
		eyesArray.push('mae2');
		eyesArray.push('urumae1');
		eyesArray.push('urumae2');
		mouthArray.push('fera_soft2');
		mouthArray.push('fera_soft3');
		if(isAroused) this.setTachieHoppe('fera_1');
	break;
	case 29:
		eyebrowsArray.push('nico1');
		eyebrowsArray.push('nico2');
		eyebrowsArray.push('oko1');
		eyebrowsArray.push('oko2');
		eyebrowsArray.push('kiri1');
		eyebrowsArray.push('kiri2');
		eyesArray.push('heartmae1');
		eyesArray.push('heartmae2');
		eyesArray.push('heartahe1');
		eyesArray.push('urumae1');
		eyesArray.push('urumae2');
		eyesArray.push('toji1');
		mouthArray.push('fera_soft2');
		mouthArray.push('fera_soft3');
		this.setTachieHoppe('fera_1');
		if(Math.random() < 0.5) this.setTachieSweat(1);
		else this.setTachieSweat(2);
	break;
	case 30:
		eyebrowsArray.push('nico1');
		eyesArray.push('urusita1');
		eyesArray.push('urusita2');
		eyesArray.push('heartsita1');
		eyesArray.push('heartsita2');
		mouthArray.push('nico1');
		mouthArray.push('nico2');
		mouthArray.push('pero1');
		mouthArray.push('ah3');
		mouthArray.push('be3');
		mouthArray.push('be4');
		mouthArray.push('be5');
		mouthArray.push('rero1');
		if(isAroused) this.setTachieHoppe(1);
	break;
	case 31:
		eyebrowsArray.push('nico1');
		eyebrowsArray.push('nico2');
		eyebrowsArray.push('kiri2');
		eyesArray.push('mae1');
		eyesArray.push('mae2');
		eyesArray.push('urumae1');
		eyesArray.push('urumae2');
		mouthArray.push('fera_hard3');
		mouthArray.push('fera_hard4');
		mouthArray.push('fera_hard5');
		mouthArray.push('fera_hard6');
		if(isAroused) this.setTachieHoppe('fera_1');
	break;
	case 32:
		eyebrowsArray.push('nico1');
		eyebrowsArray.push('nico2');
		eyebrowsArray.push('kiri2');
		eyesArray.push('heartmae1');
		eyesArray.push('heartmae2');
		eyesArray.push('heartahe1');
		eyesArray.push('heartsita1');
		eyesArray.push('heartsita2');
		eyesArray.push('toji1');
		mouthArray.push('fera_hard2');
		mouthArray.push('fera_hard3');
		mouthArray.push('fera_hard4');
		mouthArray.push('fera_hard5');
		this.setTachieHoppe('fera_1');
		if(Math.random() < 0.5) this.setTachieSweat(1);
		else this.setTachieSweat(2);
	break;
	case 33:
		eyebrowsArray.push('nico1');
		eyebrowsArray.push('nico2');
		eyebrowsArray.push('kiri2');
		eyesArray.push('sita1');
		eyesArray.push('sita2');
		eyesArray.push('urusita1');
		eyesArray.push('urusita2');
		mouthArray.push('nico1');
		mouthArray.push('nico2');
		mouthArray.push('pero1');
		mouthArray.push('ah3');
		mouthArray.push('be3');
		mouthArray.push('be4');
		mouthArray.push('be5');
		mouthArray.push('rero1');
		if(isAroused) this.setTachieHoppe(1);
	break;
	case 34:
		eyebrowsArray.push('nico1');
		eyebrowsArray.push('nico2');
		eyebrowsArray.push('oko1');
		eyebrowsArray.push('oko2');
		eyebrowsArray.push('kiri1');
		eyebrowsArray.push('kiri2');
		eyesArray.push('heartsita1');
		eyesArray.push('heartsita2');
		eyesArray.push('heartahe1');
		eyesArray.push('urusita1');
		eyesArray.push('urusita2');
		eyesArray.push('toji1');
		mouthArray.push('ah2');
		mouthArray.push('nico2');
		mouthArray.push('pero1');
		mouthArray.push('ah3');
		mouthArray.push('be2');
		mouthArray.push('be4');
		mouthArray.push('be5');
		mouthArray.push('rero1');
		mouthArray.push('rero2');
		this.setTachieHoppe(1);
		if(Math.random() < 0.5) this.setTachieSweat(1);
		else this.setTachieSweat(2);
	break;
	case 35:
		eyebrowsArray.push('nico1');
		eyebrowsArray.push('nico2');
		eyebrowsArray.push('kiri2');
		eyesArray.push('sita1');
		eyesArray.push('sita2');
		eyesArray.push('sita3');
		eyesArray.push('urusita1');
		eyesArray.push('urusita2');
		eyesArray.push('ahe1');
		mouthArray.push('ah1');
		mouthArray.push('ah2');
		mouthArray.push('ah3');
		mouthArray.push('be1');
		mouthArray.push('be2');
		mouthArray.push('be3');
		mouthArray.push('be5');
		mouthArray.push('pero1');
		mouthArray.push('rero2');
		this.setTachieHoppe(1);
		if(Math.random() < 0.5) this.setTachieSweat(1);
	break;
	case 36:
		eyebrowsArray.push('nico1');
		eyebrowsArray.push('nico2');
		eyebrowsArray.push('kiri2');
		eyesArray.push('mae1');
		eyesArray.push('mae2');
		eyesArray.push('sita1');
		eyesArray.push('sita2');
		eyesArray.push('urumae1');
		eyesArray.push('urumae2');
		eyesArray.push('urusita1');
		eyesArray.push('urusita2');
		mouthArray.push('fera_soft2');
		mouthArray.push('fera_soft3');
		this.setTachieHoppe('fera_1');
		if(Math.random() < 0.5) this.setTachieSweat(1);
	break;
	case 37:
		eyebrowsArray.push('nico1');
		eyebrowsArray.push('nico2');
		eyebrowsArray.push('kiri2');
		eyesArray.push('mae1');
		eyesArray.push('mae2');
		eyesArray.push('mae3');
		eyesArray.push('sita1');
		eyesArray.push('sita2');
		eyesArray.push('sita3');
		mouthArray.push('fera_hard1');
		mouthArray.push('fera_hard2');
		mouthArray.push('fera_hard3');
		mouthArray.push('fera_hard4');
		mouthArray.push('fera_hard5');
		mouthArray.push('fera_hard6');
		this.setTachieHoppe('fera_1');
		if(Math.random() < 0.5) this.setTachieSweat(1);
	break;
	case 38:
		eyebrowsArray.push('nico1');
		eyebrowsArray.push('nico2');
		eyebrowsArray.push('kiri2');
		eyesArray.push('mae1');
		eyesArray.push('mae2');
		eyesArray.push('mae3');
		eyesArray.push('sita1');
		eyesArray.push('sita2');
		eyesArray.push('sita3');
		mouthArray.push('ah1');
		mouthArray.push('ah2');
		mouthArray.push('ah3');
		mouthArray.push('be1');
		mouthArray.push('be2');
		mouthArray.push('be3');
		mouthArray.push('be5');
		mouthArray.push('pero1');
		mouthArray.push('rero2');
		this.setTachieHoppe(1);
		if(Math.random() < 0.5) this.setTachieSweat(1);
	break;
	case 39:
		eyebrowsArray.push('nico1');
		eyebrowsArray.push('nico2');
		eyebrowsArray.push('oko1');
		eyebrowsArray.push('oko2');
		eyebrowsArray.push('kiri1');
		eyebrowsArray.push('kiri2');
		eyesArray.push('heartsita1');
		eyesArray.push('heartsita2');
		eyesArray.push('heartahe1');
		eyesArray.push('urusita1');
		eyesArray.push('urusita2');
		eyesArray.push('toji1');
		mouthArray.push('ah2');
		mouthArray.push('ah3');
		mouthArray.push('be2');
		mouthArray.push('be4');
		mouthArray.push('be5');
		mouthArray.push('nico2');
		mouthArray.push('pero1');
		mouthArray.push('rero1');
		mouthArray.push('rero2');
		this.setTachieHoppe(1);
		if(Math.random() < 0.5) this.setTachieSweat(2);
		else this.setTachieSweat(1);
		break;
	}
	
	if(eyebrowsArray.length > 0) {
		this.setTachieEyebrows(eyebrowsArray[Math.randomInt(eyebrowsArray.length)]);
	}
	if(eyesArray.length > 0) {
		this.setTachieEyes(eyesArray[Math.randomInt(eyesArray.length)]);
	}
	
	if(mainHoleIsHard && !givingBJ) {
		this.resetTachieMouth();
	}
	else if(mouthArray.length > 0) {
		this.setTachieMouth(mouthArray[Math.randomInt(mouthArray.length)]);
	}
	else {
		this.resetTachieMouth();
	}
	
	if(this.tachieMouth.includes('fera') || this.tachieMouth.includes('rero'))
		this.setTachieStrayFaceExtension(ConfigManager.convertedTachieMouthName(this) + '_');
	else
		this.resetTachieStrayFaceExtension();
	
	this.setAllowTachieEmoteUpdate(true);
};

//Stand Left
Game_Actor.prototype.emoteGloryToiletStandLeftPose = function() {
	this.setAllowTachieEmoteUpdate(false);
	let justOrgasmed = this.didLastGetHitBySkillType(JUST_SKILLTYPE_KARRYN_ORGASM) || this.justOrgasmed();
	let isAroused = this.isAroused() || justOrgasmed;
	let isNaked = !this.isWearingGlovesAndHat();
	
	let givingBJ = this.isBodySlotPenis(MOUTH_ID);
	let givingRightHoleHJ = this.isBodySlotPenis(LEFT_HAND_ID);
	let pussyInserted = this.isBodySlotPenis(PUSSY_ID);
	let analInserted = this.isBodySlotPenis(ANAL_ID);
	let leftHoleIsEmpty = $gameTroop.gloryBattle_leftHoleIsEmpty();
	let rightHoleIsEmpty = $gameTroop.gloryBattle_rightHoleIsEmpty();
	let mainHoleIsHard = !leftHoleIsEmpty && $gameTroop._gloryLeftStall.isAroused();
	let mainHoleIsSoft = !leftHoleIsEmpty && !$gameTroop._gloryLeftStall.isAroused();
	let faceHoleIsHard = !rightHoleIsEmpty && $gameTroop._gloryRightStall.isAroused();
	let faceHoleIsSoft = !rightHoleIsEmpty && !$gameTroop._gloryRightStall.isAroused();
	let mainHoleJustEjaculated = $gameTroop._gloryLastHoleToEjaculate === GLORY_LEFT_STALL_ID;
	let faceHoleJustEjaculated = $gameTroop._gloryLastHoleToEjaculate === GLORY_RIGHT_STALL_ID;
	
	let isMasturbating = this.tachieLeftArm.includes('chikubi');
	let karrynJustUsedCockPet = this.didLastGetHitBySkillType(JUST_SKILLTYPE_KARRYN_PETTING);
	let karrynJustUsedCockStare = this.didLastGetHitBySkillType(JUST_SKILLTYPE_KARRYN_COCK_STARE);
	let lastHitBlowjob = this.didLastGetHitBySkillType(JUST_SKILLTYPE_KARRYN_BLOWJOB) || this.didLastGetHitBySkillType(JUST_SKILLTYPE_ENEMY_BLOWJOB);
	let lastHitHandjob = this.didLastGetHitBySkillType(JUST_SKILLTYPE_KARRYN_HANDJOB) || this.didLastGetHitBySkillType(JUST_SKILLTYPE_ENEMY_HANDJOB);
	let lastHitPussySex = this.didLastGetHitBySkillType(JUST_SKILLTYPE_ENEMY_PUSSY_SEX) || this.didLastGetHitBySkillType(JUST_SKILLTYPE_KARRYN_PUSSY_SEX);
	let lastHitAnalSex = this.didLastGetHitBySkillType(JUST_SKILLTYPE_ENEMY_ANAL_SEX) || this.didLastGetHitBySkillType(JUST_SKILLTYPE_KARRYN_ANAL_SEX);
	let lastHitToy = this.didLastGetHitBySkillType(JUST_SKILLTYPE_PASSIVE_TOY);
	
	let karrynSwallowingCum = this.didLastGetHitBySkillType(JUST_SKILLTYPE_ENEMY_CUM_SWALLOW);
	let karrynGotBukkaked = this.didLastGetHitBySkillType(JUST_SKILLTYPE_ENEMY_BUKKAKE);
	let justGotPussyCreampie = this.didLastGetHitBySkillType(JUST_SKILLTYPE_ENEMY_PUSSY_CREAMPIE);
	let justGotAnalCreampie = this.didLastGetHitBySkillType(JUST_SKILLTYPE_ENEMY_ANAL_CREAMPIE);
	
	let generalReactionScore = this.getReactionScore();
	let orgasmReactionScore = this.getOrgasmReactionScore();
	let bukkakeReactionScore = this.getBukkakeReactionScore();
	let swallowReactionScore = this.getSwallowReactionScore();
	let pussyCreampieReactionScore = this.getPussyCreampieReactionScore();
	let analCreampieReactionScore = this.getAnalCreampieReactionScore();
	
	let generallvl3 = generalReactionScore >= VAR_DEF_RS_LV3_REQ;
	let generallvl2 = generalReactionScore >= VAR_DEF_RS_LV2_REQ;
	let orgasmlvl3 = orgasmReactionScore >= VAR_DEF_RS_LV3_REQ;
	let orgasmlvl2 = orgasmReactionScore >= VAR_DEF_RS_LV2_REQ;
	let bukkakelvl3 = bukkakeReactionScore  >= VAR_DEF_RS_LV3_REQ;
	let bukkakelvl2 = bukkakeReactionScore >= VAR_DEF_RS_LV2_REQ;
	let pussyCreampielvl3 = pussyCreampieReactionScore  >= VAR_DEF_RS_LV3_REQ;
	let pussyCreampielvl2 = pussyCreampieReactionScore >= VAR_DEF_RS_LV2_REQ;
	let analCreampielvl3 = analCreampieReactionScore  >= VAR_DEF_RS_LV3_REQ;
	let analCreampielvl2 = analCreampieReactionScore >= VAR_DEF_RS_LV2_REQ;
	let swallowlvl3 = swallowReactionScore  >= VAR_DEF_RS_LV3_REQ;
	let swallowlvl2 = swallowReactionScore >= VAR_DEF_RS_LV2_REQ;
	
	let leftArmIsChikubi = this.tachieLeftArm.includes('chikubi');
	
	if(!rightHoleIsEmpty) {
		let rightHoleName = '';
		let rightHoleEnemy = $gameTroop._gloryRightStall;
		
		if(faceHoleIsHard) {
			rightHoleName += 'hard_';
		}
		else {
			rightHoleName += 'soft_';
		}
		
		if(givingBJ) {
			if(!faceHoleIsHard) {
				rightHoleName += 'bj_';
			}
		}
		
		if(givingRightHoleHJ) {
			if(faceHoleIsHard) {
				if(isNaked) {
					this.setTachieLeftArm('hj_naked');
					this.setTachieFrontA('leftarm_hj_naked');
				}
				else {
					this.setTachieLeftArm('hj');
					this.setTachieFrontA('leftarm_hj');
				}
				
				this.setTachieSemenFrontAExtension('leftarm_hj_');
				this.setMaxTachieSemenFrontAId(1);
			}
			else {
				if(!givingBJ && !faceHoleIsHard)
					rightHoleName += 'pet_';
				if(isNaked) {
					this.setTachieLeftArm('pet_naked');
					this.setTachieFrontA('leftarm_pet_naked');
				}
				else {
					this.setTachieLeftArm('pet');
					this.setTachieFrontA('leftarm_pet');
				}
				
				this.setTachieSemenFrontAExtension('leftarm_pet_');
				this.setMaxTachieSemenFrontAId(1);
			}
			leftArmIsChikubi = false;
			this.setTachieFrontAHasHCup(false);
			this.setTachieFrontAHasPCup(false);
		}
		else if(karrynJustUsedCockPet) {
			if(!givingBJ && !faceHoleIsHard)
				rightHoleName += 'pet_';
			if(isNaked) {
				this.setTachieLeftArm('pet_naked');
				this.setTachieFrontA('leftarm_pet_naked');
			}
			else {
				this.setTachieLeftArm('pet');
				this.setTachieFrontA('leftarm_pet');
			}
			
			this.setTachieSemenFrontAExtension('leftarm_pet_');
			this.setMaxTachieSemenFrontAId(1);
				
			leftArmIsChikubi = false;
			this.setTachieFrontAHasHCup(false);
			this.setTachieFrontAHasPCup(false);
		}
		else {
			if(leftArmIsChikubi) {
				if(isNaked) {
					this.setTachieLeftArm('chikubi_naked');
					this.setTachieFrontA('leftarm_chikubi_naked');
				}
				else {
					this.setTachieLeftArm('chikubi');
					this.setTachieFrontA('leftarm_chikubi');
				}
				this.setTachieFrontAHasHCup(true);
				this.setTachieFrontAHasPCup(true);
				this.setMaxTachieSemenFrontAId(0);
			}
			else {
				this.setTachieFrontAHasHCup(false);
				this.setTachieFrontAHasPCup(false);
				this.toiletBattle_resetLeftArmToNormal();
			}
		}
		
		
		rightHoleName += rightHoleEnemy.enemyCock();
		if(Karryn.isCensored())
			rightHoleName += '_cen';
			
		this.setTachieRightHole(rightHoleName);
		
		if(faceHoleIsHard) {
			if(givingBJ)
				this.setTachieSemenHoleRightExtension('hard_bj_');
			else
				this.setTachieSemenHoleRightExtension('hard_');
		}
		else {
			if(givingBJ) {
				this.setTachieSemenHoleRightExtension('soft_bj_');
			}
			else if(karrynJustUsedCockPet || givingRightHoleHJ)
				this.setTachieSemenHoleRightExtension('soft_pet_');
			else
				this.setTachieSemenHoleRightExtension('soft_');
		}
		
		this.setMaxTachieSemenHoleRightId(1);
	}
	else {
		this.resetTachieRightHole();
		this.setMaxTachieSemenHoleRightId(0);
		
		if(leftArmIsChikubi) {
			if(isNaked) {
				this.setTachieLeftArm('chikubi_naked');
				this.setTachieFrontA('leftarm_chikubi_naked');
			}
			else {
				this.setTachieLeftArm('chikubi');
				this.setTachieFrontA('leftarm_chikubi');
			}
			this.setTachieFrontAHasHCup(true);
			this.setTachieFrontAHasPCup(true);
			this.setMaxTachieSemenFrontAId(0);
		}
		else {
			this.setTachieFrontAHasHCup(false);
			this.setTachieFrontAHasPCup(false);
			this.toiletBattle_resetLeftArmToNormal();
		}
	}
	
	if(!leftHoleIsEmpty) {
		let leftHoleName = '';
		let leftHoleEnemy = $gameTroop._gloryLeftStall;
		
		if(leftHoleEnemy.isAroused()) {
			if(pussyInserted) {
				leftHoleName += 'manko_';
				this.setTachieBody('high');
				this.setTachieSemenHoleLeftExtension('manko_');
			}
			else if(analInserted) {
				leftHoleName += 'anaru_';
				this.setTachieBody('low');
				this.setTachieSemenHoleLeftExtension('anaru_');
			}
			else {
				if(this.tachieBody.includes('low')) {
					leftHoleName += 'hard_low_';
					this.setTachieSemenHoleLeftExtension('hard_low_');
				}
				else {
					leftHoleName += 'hard_high_';
					this.setTachieSemenHoleLeftExtension('hard_high_');
				}
			}
			
		}
		else {
			leftHoleName += 'soft_';
			this.setTachieSemenHoleLeftExtension('soft_');
		}
		
		leftHoleName += leftHoleEnemy.enemyCock();
		if(Karryn.isCensored())
			leftHoleName += '_cen';
		
		this.setTachieLeftHole(leftHoleName);
		
		this.setMaxTachieSemenHoleLeftId(1);
	}
	else {
		this.resetTachieLeftHole();
		this.setMaxTachieSemenHoleLeftId(0);
		this.resetTachieSemenHoleLeftExtension();
	}
	
	let bodyIsLow = this.tachieBody.includes('low');
	let bodyIsHigh = this.tachieBody.includes('high');
	
	if(leftArmIsChikubi) {
		this.setTachieSemenLeftArmHasHCup(true);
		this.setTachieSemenLeftArmHasPCup(true);
		this.setTachieBoobs('chikubi');
		this.setTachieSemenBoobsExtension('chikubi_');
		this.setTachieSemenLeftArmExtension('chikubi_');
	}
	else {
		this.setTachieSemenLeftArmHasHCup(false);
		this.setTachieSemenLeftArmHasPCup(false);
		
		this.setTachieBoobs('normal');
		
		this.setTachieSemenBoobsExtension('normal_');
			
		if(this.tachieLeftArm.includes('hj')) {
			this.setTachieSemenLeftArmExtension('hj_');
		}
		else if(this.tachieLeftArm.includes('pet')) {
			this.setTachieSemenLeftArmExtension('pet_');
		}	
		else {
			this.setTachieSemenLeftArmExtension('normal_');
		}

	}
	
	if(bodyIsLow) {
		this.setHasTachiePubic(false);
		
		this.setTachieSemenRightLegExtension('low_');
		this.setTachieSemenLeftLegExtension('low_');
		this.setTachieSemenBackExtension('low_');
		this.setTachieSemenBellyExtension('low_');
		this.setTachieSemenButtExtension('low_');
		this.setTachieSemenAnalExtension('low_');
		this.setTachieSemenCrotchExtension('low_');
		this.setTachieSemenWetExtension('low_');
		
		this.setTachiePussyToyExtension_gloryBattle('low_');
		this.setTachieAnalToyExtension_gloryBattle('low_');
		
		this.setMaxTachieStrayGroinId(1,1,1);
		this.setTachieStrayButtExtension('low_');
		this.setTachieStrayGroinExtension('low_');
		
		if(isNaked)
			this.setTachieClitToyExtension_gloryBattle('low_naked_');
		else
			this.setTachieClitToyExtension_gloryBattle('low_');
	}
	else {
		this.setTachiePubicExtension('high_');
		this.setHasTachiePubic(true);
		
		this.setTachieSemenRightLegExtension('high_');
		this.setTachieSemenLeftLegExtension('high_');
		this.setTachieSemenBackExtension('high_');
		this.setTachieSemenBellyExtension('high_');
		this.setTachieSemenButtExtension('high_');
		this.setTachieSemenAnalExtension('high_');
		this.setTachieSemenCrotchExtension('high_');
		this.setTachieSemenWetExtension('high_');
		
		this.setTachiePussyToyExtension_gloryBattle('high_');
		this.setTachieAnalToyExtension_gloryBattle('high_');
		
		this.setMaxTachieStrayGroinId(1,2,2);
		this.setTachieStrayButtExtension('high_');
		this.setTachieStrayGroinExtension('high_');
		
		if(isNaked)
			this.setTachieClitToyExtension_gloryBattle('high_naked_');
		else
			this.setTachieClitToyExtension_gloryBattle('high_');
	}
	
	this.setMaxTachieSemenBoobsId(1);
	this.setMaxTachieSemenLeftArmId(1);
	this.setMaxTachieSemenRightLegId(1);
	this.setMaxTachieSemenLeftLegId(1);
	this.setMaxTachieSemenBackId(1);
	this.setMaxTachieSemenBellyId(1);
	this.setMaxTachieSemenButtId(1);
	this.setMaxTachieSemenAnalId(1);
	this.setMaxTachieSemenCrotchId(1);
	this.setMaxTachieWetId(1);
	
	if(isNaked) {
		this.setTachieRightArm('normal_naked');
		this.resetTachieTie(1);
		
		if(bodyIsLow)
			this.setTachieBody('low_naked');
		else if(bodyIsHigh)
			this.setTachieBody('high_naked');
	}
	else {
		this.setTachieRightArm('normal');
		this.setTachieTie(1);
	}
	
	let faceArray = [];
	this.resetTachieHoppe();
	this.resetTachieSweat();
	
	if(justOrgasmed) {
		if(givingBJ) {
			if(faceHoleIsHard) {
				if(orgasmlvl3) 
					faceArray.push(34);
				else if(orgasmlvl2) 
					faceArray.push(22);
				else
					faceArray.push(10);
			}
			else {
				if(orgasmlvl3) 
					faceArray.push(32);
				else if(orgasmlvl2) 
					faceArray.push(20);
				else
					faceArray.push(8);
			}
		}
		else if(givingRightHoleHJ && faceHoleIsHard) {
			if(orgasmlvl3) 
				faceArray.push(36);
			else if(orgasmlvl2) 
				faceArray.push(24);
			else
				faceArray.push(12);
		}
		else {
			if(orgasmlvl3) 
				faceArray.push(30);
			else if(orgasmlvl2) 
				faceArray.push(18);
			else
				faceArray.push(6);
			
		}
	}
	else if(justGotPussyCreampie) { 
		if(givingBJ) {
			if(faceHoleIsHard) {
				if(pussyCreampielvl3) 
					faceArray.push(34);
				else if(pussyCreampielvl2) 
					faceArray.push(22);
				else
					faceArray.push(10);
			}
			else {
				if(pussyCreampielvl3) 
					faceArray.push(32);
				else if(pussyCreampielvl2) 
					faceArray.push(20);
				else
					faceArray.push(8);
			}
		}
		else {
			if(pussyCreampielvl3) 
				faceArray.push(29);
			else if(pussyCreampielvl2) 
				faceArray.push(17);
			else
				faceArray.push(5);
		}	
	}
	else if(justGotAnalCreampie) {
		if(givingBJ) {
			if(faceHoleIsHard) {
				if(analCreampielvl3) 
					faceArray.push(34);
				else if(analCreampielvl2) 
					faceArray.push(22);
				else
					faceArray.push(10);
			}
			else {
				if(analCreampielvl3) 
					faceArray.push(32);
				else if(analCreampielvl2) 
					faceArray.push(20);
				else
					faceArray.push(8);
			}
		}
		else {
			if(analCreampielvl3) 
				faceArray.push(29);
			else if(analCreampielvl2) 
				faceArray.push(17);
			else
				faceArray.push(5);
		}
	}
	else if(karrynSwallowingCum) {
		if(swallowlvl3) 
			faceArray.push(34);
		else if(swallowlvl2) 
			faceArray.push(22);
		else
			faceArray.push(10);
	}
	else if(karrynGotBukkaked) {
		if(mainHoleJustEjaculated) { 
			if(givingBJ) {
				if(faceHoleIsHard) {
					if(bukkakelvl3) 
						faceArray.push(34);
					else if(bukkakelvl2) 
						faceArray.push(22);
					else
						faceArray.push(10);
				}
				else {
					if(bukkakelvl3) 
						faceArray.push(32);
					else if(bukkakelvl2) 
						faceArray.push(20);
					else
						faceArray.push(8);
				}
			}
			else {
				if(faceHoleIsHard) {
					if(bukkakelvl3) 
						faceArray.push(36);
					else if(bukkakelvl2) 
						faceArray.push(24);
					else
						faceArray.push(12);
				}
				else {
					if(bukkakelvl3) 
						faceArray.push(29);
					else if(bukkakelvl2) 
						faceArray.push(17);
					else
						faceArray.push(5);
				}
			}
		}
		else {
			if(givingBJ) {
				if(faceHoleIsHard) {
					if(bukkakelvl3) 
						faceArray.push(34);
					else if(bukkakelvl2) 
						faceArray.push(22);
					else
						faceArray.push(10);
				}
				else {
					if(bukkakelvl3) 
						faceArray.push(32);
					else if(bukkakelvl2) 
						faceArray.push(20);
					else
						faceArray.push(8);
				}
			}
			else {
				if(faceHoleIsHard) {
					if(bukkakelvl3) 
						faceArray.push(36);
					else if(bukkakelvl2) 
						faceArray.push(24);
					else
						faceArray.push(12);
				}
				else {
					if(bukkakelvl3) 
						faceArray.push(30);
					else if(bukkakelvl2) 
						faceArray.push(18);
					else
						faceArray.push(6);
				}
			}
		}
	}
	else if(givingBJ) {
		if(faceHoleIsHard) {
			if(generallvl3) 
				faceArray.push(33);
			else if(generallvl2) 
				faceArray.push(21);
			else
				faceArray.push(9);
		}
		else {
			if(generallvl3) 
				faceArray.push(31);
			else if(generallvl2) 
				faceArray.push(19);
			else
				faceArray.push(7);
		}
	}
	else if(karrynJustUsedCockPet || karrynJustUsedCockStare) {
		if(faceHoleIsHard) {
			if(generallvl3) 
				faceArray.push(26);
			else if(generallvl2) 
				faceArray.push(14);
			else
				faceArray.push(2);
		}
		else {
			if(generallvl3) 
				faceArray.push(25);
			else if(generallvl2) 
				faceArray.push(13);
			else
				faceArray.push(1);
		}
	}
	else if(lastHitPussySex || lastHitAnalSex || lastHitToy) {
		if(generallvl3) 
			faceArray.push(27);
		else if(generallvl2) 
			faceArray.push(15);
		else
			faceArray.push(3);
	}
	else if(lastHitHandjob && faceHoleIsHard) {
		if(generallvl3) 
			faceArray.push(35);
		else if(generallvl2) 
			faceArray.push(23);
		else
			faceArray.push(11);
	}
	
	if(faceArray.length === 0) {
		if(isMasturbating) {
			if(generallvl3) 
				faceArray.push(28);
			else if(generallvl2) 
				faceArray.push(16);
			else
				faceArray.push(4);
		}
		if(givingRightHoleHJ && faceHoleIsHard) {
			if(generallvl3) 
				faceArray.push(35);
			else if(generallvl2) 
				faceArray.push(23);
			else
				faceArray.push(11);
		}
		if(pussyInserted || analInserted) {
			if(generallvl3) 
				faceArray.push(27);
			else if(generallvl2) 
				faceArray.push(15);
			else
				faceArray.push(3);
		}
	}
	
	if(faceArray.length === 0) {
		if(generallvl3) 
			faceArray.push(27);
		else if(generallvl2) 
			faceArray.push(15);
		else
			faceArray.push(3);
			
		if(generallvl3) 
			faceArray.push(25);
		else if(generallvl2) 
			faceArray.push(13);
		else
			faceArray.push(1);	
	}
	
	let faceId = faceArray[Math.randomInt(faceArray.length)];
	let eyebrowsArray = [];
	let eyesArray = [];
	let mouthArray = [];
	
	switch(faceId) {
	case 1:
		eyebrowsArray.push('koma1');
		eyebrowsArray.push('koma2');
		eyebrowsArray.push('oko1');
		eyesArray.push('mae1');
		eyesArray.push('mae2');
		mouthArray.push('ku1');
		mouthArray.push('ku2');
		mouthArray.push('ho1');
		mouthArray.push('ho2');
		this.setTachieHoppe(1);
		this.setTachieSweat(1);
	break;
	case 2:
		eyebrowsArray.push('koma2');
		eyesArray.push('sita1');
		eyesArray.push('sita2');
		this.setTachieHoppe(1);
		this.setTachieSweat(1);
	break;
	case 3:
		eyebrowsArray.push('koma1');
		eyebrowsArray.push('koma2');
		eyesArray.push('yoko1');
		eyesArray.push('yoko2');
		mouthArray.push('ku1');
		mouthArray.push('ho1');
		mouthArray.push('ho2');
		this.setTachieHoppe(1);
		this.setTachieSweat(2);
	break;
	case 4:
		eyebrowsArray.push('koma1');
		eyebrowsArray.push('koma2');
		eyesArray.push('sita1');
		eyesArray.push('sita2');
		mouthArray.push('ho1');
		mouthArray.push('ho2');
		this.setTachieHoppe(1);
		this.setTachieSweat(2);
	break;
	case 5:
		eyebrowsArray.push('koma1');
		eyebrowsArray.push('koma2');
		eyesArray.push('yoko2');
		eyesArray.push('uruyoko2');
		eyesArray.push('toji1');
		mouthArray.push('ku1');
		mouthArray.push('ku2');
		mouthArray.push('ho1');
		mouthArray.push('ho2');
		this.setTachieHoppe(1);
		this.setTachieSweat(2);
	break;
	case 6:
		eyebrowsArray.push('koma1');
		eyebrowsArray.push('koma2');
		eyebrowsArray.push('oko1');
		eyesArray.push('yoko2');
		eyesArray.push('uruyoko2');
		eyesArray.push('toji1');
		mouthArray.push('ku1');
		mouthArray.push('ku2');
		mouthArray.push('ahe1');
		mouthArray.push('ho2');
		this.setTachieHoppe(1);
		this.setTachieSweat(2);
	break;
	case 7:
		eyebrowsArray.push('koma1');
		eyebrowsArray.push('koma2');
		eyesArray.push('mae1');
		eyesArray.push('mae2');
		mouthArray.push('fera_soft1');
		this.setTachieHoppe(1);
		this.setTachieSweat(2);
	break;
	case 8:
		eyebrowsArray.push('koma1');
		eyebrowsArray.push('koma2');
		eyebrowsArray.push('oko1');
		eyesArray.push('mae2');
		eyesArray.push('toji1');
		mouthArray.push('fera_soft1');
		this.setTachieHoppe(1);
		this.setTachieSweat(2);
	break;
	case 9:
		eyebrowsArray.push('koma1');
		eyebrowsArray.push('koma2');
		eyesArray.push('mae1');
		eyesArray.push('mae2');
		mouthArray.push('fera_hard1');
		mouthArray.push('fera_hard2');
		this.setTachieHoppe(1);
		this.setTachieSweat(2);
	break;
	case 10:
		eyebrowsArray.push('koma1');
		eyebrowsArray.push('koma2');
		eyebrowsArray.push('oko1');
		eyesArray.push('mae2');
		eyesArray.push('toji1');
		mouthArray.push('fera_hard1');
		mouthArray.push('fera_hard2');
		this.setTachieHoppe(1);
		this.setTachieSweat(2);
	break;
	case 11:
		eyebrowsArray.push('koma1');
		eyebrowsArray.push('koma2');
		eyesArray.push('mae1');
		eyesArray.push('mae2');
		eyesArray.push('sita1');
		eyesArray.push('sita2');
		this.setTachieHoppe(1);
		this.setTachieSweat(2);
	break;
	case 12:
		eyebrowsArray.push('koma1');
		eyebrowsArray.push('koma2');
		eyebrowsArray.push('oko1');
		eyesArray.push('sita2');
		eyesArray.push('toji1');
		this.setTachieHoppe(1);
		this.setTachieSweat(2);
	break;
	case 13:
		eyebrowsArray.push('kiri1');
		eyebrowsArray.push('kiri2');
		eyesArray.push('mae1');
		eyesArray.push('mae2');
		mouthArray.push('nico1');
		mouthArray.push('ho1');
		mouthArray.push('ho2');
		mouthArray.push('ho3');
		this.setTachieHoppe(1);
	break;
	case 14:
		eyebrowsArray.push('kiri2');
		eyesArray.push('sita1');
		eyesArray.push('sita2');
		this.setTachieHoppe(1);
		this.setTachieSweat(1);
	break;
	case 15:
		eyebrowsArray.push('kiri1');
		eyebrowsArray.push('kiri2');
		eyebrowsArray.push('koma1');
		eyesArray.push('yoko1');
		eyesArray.push('yoko2');
		mouthArray.push('nico1');
		mouthArray.push('ho1');
		mouthArray.push('ho2');
		mouthArray.push('ku1');
		mouthArray.push('ahe1');
		this.setTachieHoppe(1);
		this.setTachieSweat(1);
	break;
	case 16:
		eyebrowsArray.push('kiri1');
		eyebrowsArray.push('kiri2');
		eyebrowsArray.push('koma2');
		eyesArray.push('sita1');
		eyesArray.push('sita2');
		mouthArray.push('ho1');
		mouthArray.push('ho2');
		mouthArray.push('ho3');
		mouthArray.push('ku1');
		mouthArray.push('ahe1');
		this.setTachieHoppe(1);
		this.setTachieSweat(1);
	break;
	case 17:
		eyebrowsArray.push('kiri1');
		eyebrowsArray.push('kiri2');
		eyebrowsArray.push('oko1');
		eyebrowsArray.push('koma1');
		eyesArray.push('yoko2');
		eyesArray.push('uruyoko2');
		eyesArray.push('toji1');
		mouthArray.push('ho1');
		mouthArray.push('ho2');
		mouthArray.push('ho3');
		mouthArray.push('ku1');
		mouthArray.push('ahe1');
		this.setTachieHoppe(1);
		this.setTachieSweat(2);
	break;
	case 18:
		eyebrowsArray.push('kiri1');
		eyebrowsArray.push('kiri2');
		eyebrowsArray.push('oko1');
		eyebrowsArray.push('koma1');
		eyebrowsArray.push('koma2');
		eyesArray.push('yoko2');
		eyesArray.push('uruyoko2');
		eyesArray.push('toji1');
		eyesArray.push('ahe1');
		mouthArray.push('ku1');
		mouthArray.push('ho1');
		mouthArray.push('ho2');
		mouthArray.push('ho3');
		mouthArray.push('ahe1');
		mouthArray.push('ahe2');
		this.setTachieHoppe(1);
		this.setTachieSweat(2);
	break;
	case 19:
		eyebrowsArray.push('kiri1');
		eyebrowsArray.push('kiri2');
		eyesArray.push('mae1');
		eyesArray.push('mae2');
		mouthArray.push('fera_soft2');
		mouthArray.push('fera_soft3');
		this.setTachieHoppe(1);
		this.setTachieSweat(1);
	break;
	case 20:
		eyebrowsArray.push('kiri1');
		eyebrowsArray.push('kiri2');
		eyebrowsArray.push('oko1');
		eyebrowsArray.push('koma1');
		eyesArray.push('sita2');
		eyesArray.push('urusita1');
		eyesArray.push('urusita2');
		eyesArray.push('toji1');
		mouthArray.push('fera_soft1');
		mouthArray.push('fera_soft2');
		mouthArray.push('fera_soft3');
		this.setTachieHoppe(1);
		this.setTachieSweat(2);
	break;
	case 21:
		eyebrowsArray.push('kiri1');
		eyebrowsArray.push('kiri2');
		eyesArray.push('mae1');
		eyesArray.push('mae2');
		eyesArray.push('urumae1');
		mouthArray.push('fera_hard2');
		mouthArray.push('fera_hard3');
		mouthArray.push('fera_hard4');
		this.setTachieHoppe(1);
		this.setTachieSweat(1);
	break;
	case 22:
		eyebrowsArray.push('kiri1');
		eyebrowsArray.push('kiri2');
		eyebrowsArray.push('oko1');
		eyebrowsArray.push('koma1');
		eyesArray.push('mae2');
		eyesArray.push('urumae1');
		eyesArray.push('urumae2');
		eyesArray.push('toji1');
		eyesArray.push('ahe1');
		mouthArray.push('fera_hard1');
		mouthArray.push('fera_hard2');
		mouthArray.push('fera_hard3');
		this.setTachieHoppe(1);
		this.setTachieSweat(2);
	break;
	case 23:
		eyebrowsArray.push('kiri1');
		eyebrowsArray.push('kiri2');
		eyesArray.push('mae2');
		eyesArray.push('mae1');
		eyesArray.push('sita1');
		eyesArray.push('sita2');
		eyesArray.push('urumae1');
		eyesArray.push('urusita1');
		this.setTachieHoppe(1);
		this.setTachieSweat(1);
	break;
	case 24:
		eyebrowsArray.push('kiri1');
		eyebrowsArray.push('kiri2');
		eyebrowsArray.push('koma1');
		eyesArray.push('sita2');
		eyesArray.push('urusita1');
		eyesArray.push('urusita2');
		eyesArray.push('toji1');
		this.setTachieHoppe(1);
		this.setTachieSweat(2);
	break;
	case 25:
		eyebrowsArray.push('nico1');
		eyebrowsArray.push('nico2');
		eyesArray.push('mae1');
		eyesArray.push('mae2');
		eyesArray.push('urumae1');
		eyesArray.push('urumae2');
		eyesArray.push('heartmae1');
		eyesArray.push('heartmae2');
		mouthArray.push('nico1');
		mouthArray.push('nico2');
		mouthArray.push('pero1');
		mouthArray.push('ho2');
		mouthArray.push('ho3');
		mouthArray.push('ahe2');
		mouthArray.push('ahe3');
		if(isAroused) this.setTachieHoppe(1);
	break;
	case 26:
		eyebrowsArray.push('nico1');
		eyebrowsArray.push('nico2');
		eyesArray.push('sita1');
		eyesArray.push('sita2');
		eyesArray.push('urusita1');
		eyesArray.push('urusita2');
		eyesArray.push('heartsita1');
		eyesArray.push('heartsita2');
		if(isAroused) this.setTachieHoppe(1);
	break;
	case 27:
		eyebrowsArray.push('nico1');
		eyebrowsArray.push('nico2');
		eyebrowsArray.push('koma1');
		eyebrowsArray.push('koma2');
		eyebrowsArray.push('kiri1');
		eyebrowsArray.push('kiri2');
		eyesArray.push('yoko1');
		eyesArray.push('yoko2');
		eyesArray.push('uruyoko1');
		eyesArray.push('uruyoko2');
		eyesArray.push('toji1');
		mouthArray.push('nico1');
		mouthArray.push('nico2');
		mouthArray.push('pero1');
		mouthArray.push('ahe2');
		mouthArray.push('ahe3');
		if(isAroused) this.setTachieHoppe(1);
		if(Math.random() < 0.5) this.setTachieSweat(1);
	break;
	case 28:
		eyebrowsArray.push('nico1');
		eyebrowsArray.push('nico2');
		eyebrowsArray.push('koma1');
		eyebrowsArray.push('kiri1');
		eyebrowsArray.push('kiri2');
		eyesArray.push('sita1');
		eyesArray.push('sita2');
		eyesArray.push('urusita2');
		mouthArray.push('nico1');
		mouthArray.push('nico2');
		mouthArray.push('pero1');
		mouthArray.push('ho1');
		mouthArray.push('ho2');
		mouthArray.push('ho3');
		mouthArray.push('ahe2');
		mouthArray.push('ahe3');
		if(isAroused) this.setTachieHoppe(1);
	break;
	case 29:
		eyebrowsArray.push('nico1');
		eyebrowsArray.push('nico2');
		eyebrowsArray.push('koma1');
		eyebrowsArray.push('koma2');
		eyebrowsArray.push('kiri1');
		eyebrowsArray.push('kiri2');
		eyesArray.push('yoko1');
		eyesArray.push('yoko2');
		eyesArray.push('uruyoko1');
		eyesArray.push('uruyoko2');
		eyesArray.push('heartyoko1');
		eyesArray.push('heartyoko2');
		eyesArray.push('toji1');
		eyesArray.push('ahe1');
		mouthArray.push('nico1');
		mouthArray.push('nico2');
		mouthArray.push('pero1');
		mouthArray.push('ho2');
		mouthArray.push('ahe2');
		mouthArray.push('ahe3');
		this.setTachieHoppe(1);
		if(Math.random() < 0.33) this.setTachieSweat(2);
		else if(Math.random() < 0.5) this.setTachieSweat(1);
	break;
	case 30:
		eyebrowsArray.push('nico1');
		eyebrowsArray.push('nico2');
		eyebrowsArray.push('koma1');
		eyebrowsArray.push('koma2');
		eyebrowsArray.push('oko1');
		eyebrowsArray.push('kiri1');
		eyebrowsArray.push('kiri2');
		eyesArray.push('uruyoko1');
		eyesArray.push('uruyoko2');
		eyesArray.push('heartyoko1');
		eyesArray.push('heartyoko2');
		eyesArray.push('heartahe1');
		eyesArray.push('toji1');
		eyesArray.push('ahe1');
		mouthArray.push('ku1');
		mouthArray.push('ho1');
		mouthArray.push('ho2');
		mouthArray.push('ho3');
		mouthArray.push('ahe1');
		mouthArray.push('ahe2');
		mouthArray.push('ahe3');
		this.setTachieHoppe(1);
		if(Math.random() < 0.33) this.setTachieSweat(2);
		else if(Math.random() < 0.5) this.setTachieSweat(1);
	break;
	case 31:
		eyebrowsArray.push('nico1');
		eyebrowsArray.push('nico2');
		eyebrowsArray.push('koma1');
		eyebrowsArray.push('koma2');
		eyesArray.push('mae1');
		eyesArray.push('mae2');
		mouthArray.push('fera_soft3');
		mouthArray.push('fera_soft4');
		if(isAroused) this.setTachieHoppe(1);
	break;
	case 32:
		eyebrowsArray.push('nico1');
		eyebrowsArray.push('nico2');
		eyebrowsArray.push('koma1');
		eyebrowsArray.push('koma2');
		eyebrowsArray.push('kiri1');
		eyebrowsArray.push('kiri2');
		eyesArray.push('urumae1');
		eyesArray.push('urumae2');
		eyesArray.push('heartmae1');
		eyesArray.push('heartmae2');
		eyesArray.push('ahe1');
		mouthArray.push('fera_soft1');
		mouthArray.push('fera_soft2');
		mouthArray.push('fera_soft3');
		mouthArray.push('fera_soft4');
		this.setTachieHoppe(1);
		if(Math.random() < 0.33) this.setTachieSweat(2);
		else if(Math.random() < 0.5) this.setTachieSweat(1);
	break;
	case 33:
		eyebrowsArray.push('nico1');
		eyebrowsArray.push('nico2');
		eyebrowsArray.push('kiri1');
		eyebrowsArray.push('kiri2');
		eyesArray.push('urumae1');
		eyesArray.push('urumae2');
		eyesArray.push('heartmae1');
		eyesArray.push('heartmae2');
		mouthArray.push('fera_hard3');
		mouthArray.push('fera_hard4');
		mouthArray.push('fera_hard5');
		mouthArray.push('fera_hard6');
		if(isAroused) this.setTachieHoppe(1);
		if(Math.random() < 0.5) this.setTachieSweat(1);
	break;
	case 34:
		eyebrowsArray.push('nico1');
		eyebrowsArray.push('nico2');
		eyebrowsArray.push('koma1');
		eyebrowsArray.push('koma2');
		eyebrowsArray.push('oko1');
		eyebrowsArray.push('kiri1');
		eyebrowsArray.push('kiri2');
		eyesArray.push('urumae1');
		eyesArray.push('urumae2');
		eyesArray.push('heartmae1');
		eyesArray.push('heartmae2');
		eyesArray.push('heartahe1');
		eyesArray.push('toji1');
		mouthArray.push('fera_hard1');
		mouthArray.push('fera_hard2');
		mouthArray.push('fera_hard3');
		mouthArray.push('fera_hard4');
		mouthArray.push('fera_hard5');
		mouthArray.push('fera_hard6');
		this.setTachieHoppe(1);
		if(Math.random() < 0.5) this.setTachieSweat(1);
		else this.setTachieSweat(2);
	break;
	case 35:
		eyebrowsArray.push('nico1');
		eyebrowsArray.push('nico2');
		eyebrowsArray.push('koma1');
		eyebrowsArray.push('koma2');
		eyebrowsArray.push('kiri1');
		eyebrowsArray.push('kiri2');
		eyesArray.push('mae1');
		eyesArray.push('mae2');
		eyesArray.push('sita1');
		eyesArray.push('sita2');
		eyesArray.push('urumae1');
		eyesArray.push('urumae2');
		eyesArray.push('urusita1');
		eyesArray.push('urusita2');
		if(isAroused) this.setTachieHoppe(1);
	break;
	case 36:
		eyebrowsArray.push('nico1');
		eyebrowsArray.push('nico2');
		eyebrowsArray.push('koma1');
		eyebrowsArray.push('koma2');
		eyebrowsArray.push('oko1');
		eyebrowsArray.push('kiri1');
		eyebrowsArray.push('kiri2');
		eyesArray.push('urusita1');
		eyesArray.push('urusita2');
		eyesArray.push('heartsita1');
		eyesArray.push('heartsita2');
		eyesArray.push('heartahe1');
		this.setTachieHoppe(1);
		if(Math.random() < 0.5) this.setTachieSweat(1);
		else this.setTachieSweat(2);
		break;
	}
	
	if(eyebrowsArray.length > 0) {
		this.setTachieEyebrows(eyebrowsArray[Math.randomInt(eyebrowsArray.length)]);
	}
	if(eyesArray.length > 0) {
		this.setTachieEyes(eyesArray[Math.randomInt(eyesArray.length)]);
	}
	
	if(faceHoleIsHard && !givingBJ) {
		this.resetTachieMouth();
	}
	else if(mouthArray.length > 0) {
		this.setTachieMouth(mouthArray[Math.randomInt(mouthArray.length)]);
 	}
	else {
		this.resetTachieMouth();
	}
	
	if(this.tachieMouth.includes('fera')) {
		this.setTachieStrayFaceExtension(ConfigManager.convertedTachieMouthName(this) + '_');
		this.setTachieFrontB('hair_' + this.getHairColorName() + '_fera_1');
	}
	else {
		this.resetTachieStrayFaceExtension();
		this.resetTachieFrontB();
	}
	
	if(this.tachieBoobs.includes('chikubi'))
		this.setTachieStrayBoobsExtension('chikubi_');
	else
		this.setTachieStrayBoobsExtension('normal_');
	
	this.setAllowTachieEmoteUpdate(true);
};

//Stand Right
Game_Actor.prototype.emoteGloryToiletStandRightPose = function() {
	this.setAllowTachieEmoteUpdate(false);
	let justOrgasmed = this.didLastGetHitBySkillType(JUST_SKILLTYPE_KARRYN_ORGASM) || this.justOrgasmed();
	let isAroused = this.isAroused() || justOrgasmed;
	let isNaked = !this.isWearingGlovesAndHat();
	
	let givingBJ = this.isBodySlotPenis(MOUTH_ID);
	let givingLeftHoleHJ = this.isBodySlotPenis(RIGHT_HAND_ID);
	let pussyInserted = this.isBodySlotPenis(PUSSY_ID);
	let analInserted = this.isBodySlotPenis(ANAL_ID);
	let leftHoleIsEmpty = $gameTroop.gloryBattle_leftHoleIsEmpty();
	let rightHoleIsEmpty = $gameTroop.gloryBattle_rightHoleIsEmpty();
	let mainHoleIsHard = !rightHoleIsEmpty && $gameTroop._gloryRightStall.isAroused();
	let mainHoleIsSoft = !rightHoleIsEmpty && !$gameTroop._gloryRightStall.isAroused();
	let faceHoleIsHard = !leftHoleIsEmpty && $gameTroop._gloryLeftStall.isAroused();
	let faceHoleIsSoft = !leftHoleIsEmpty && !$gameTroop._gloryLeftStall.isAroused();
	let mainHoleJustEjaculated = $gameTroop._gloryLastHoleToEjaculate === GLORY_RIGHT_STALL_ID;
	let faceHoleJustEjaculated = $gameTroop._gloryLastHoleToEjaculate === GLORY_LEFT_STALL_ID;
	
	let isMasturbating = this.tachieRightArm.includes('chikubi');
	let karrynJustUsedCockPet = this.didLastGetHitBySkillType(JUST_SKILLTYPE_KARRYN_PETTING);
	let karrynJustUsedCockStare = this.didLastGetHitBySkillType(JUST_SKILLTYPE_KARRYN_COCK_STARE);
	let lastHitBlowjob = this.didLastGetHitBySkillType(JUST_SKILLTYPE_KARRYN_BLOWJOB) || this.didLastGetHitBySkillType(JUST_SKILLTYPE_ENEMY_BLOWJOB);
	let lastHitHandjob = this.didLastGetHitBySkillType(JUST_SKILLTYPE_KARRYN_HANDJOB) || this.didLastGetHitBySkillType(JUST_SKILLTYPE_ENEMY_HANDJOB);
	let lastHitPussySex = this.didLastGetHitBySkillType(JUST_SKILLTYPE_ENEMY_PUSSY_SEX) || this.didLastGetHitBySkillType(JUST_SKILLTYPE_KARRYN_PUSSY_SEX);
	let lastHitAnalSex = this.didLastGetHitBySkillType(JUST_SKILLTYPE_ENEMY_ANAL_SEX) || this.didLastGetHitBySkillType(JUST_SKILLTYPE_KARRYN_ANAL_SEX);
	let lastHitToy = this.didLastGetHitBySkillType(JUST_SKILLTYPE_PASSIVE_TOY);
	
	let karrynSwallowingCum = this.didLastGetHitBySkillType(JUST_SKILLTYPE_ENEMY_CUM_SWALLOW);
	let karrynGotBukkaked = this.didLastGetHitBySkillType(JUST_SKILLTYPE_ENEMY_BUKKAKE);
	let justGotPussyCreampie = this.didLastGetHitBySkillType(JUST_SKILLTYPE_ENEMY_PUSSY_CREAMPIE);
	let justGotAnalCreampie = this.didLastGetHitBySkillType(JUST_SKILLTYPE_ENEMY_ANAL_CREAMPIE);
	
	let generalReactionScore = this.getReactionScore();
	let orgasmReactionScore = this.getOrgasmReactionScore();
	let bukkakeReactionScore = this.getBukkakeReactionScore();
	let swallowReactionScore = this.getSwallowReactionScore();
	let pussyCreampieReactionScore = this.getPussyCreampieReactionScore();
	let analCreampieReactionScore = this.getAnalCreampieReactionScore();
	
	let generallvl3 = generalReactionScore >= VAR_DEF_RS_LV3_REQ;
	let generallvl2 = generalReactionScore >= VAR_DEF_RS_LV2_REQ;
	let orgasmlvl3 = orgasmReactionScore >= VAR_DEF_RS_LV3_REQ;
	let orgasmlvl2 = orgasmReactionScore >= VAR_DEF_RS_LV2_REQ;
	let bukkakelvl3 = bukkakeReactionScore  >= VAR_DEF_RS_LV3_REQ;
	let bukkakelvl2 = bukkakeReactionScore >= VAR_DEF_RS_LV2_REQ;
	let pussyCreampielvl3 = pussyCreampieReactionScore  >= VAR_DEF_RS_LV3_REQ;
	let pussyCreampielvl2 = pussyCreampieReactionScore >= VAR_DEF_RS_LV2_REQ;
	let analCreampielvl3 = analCreampieReactionScore  >= VAR_DEF_RS_LV3_REQ;
	let analCreampielvl2 = analCreampieReactionScore >= VAR_DEF_RS_LV2_REQ;
	let swallowlvl3 = swallowReactionScore  >= VAR_DEF_RS_LV3_REQ;
	let swallowlvl2 = swallowReactionScore >= VAR_DEF_RS_LV2_REQ;
	
	let rightArmIsChikubi = this.tachieRightArm.includes('chikubi');
	
	if(!leftHoleIsEmpty) {
		let leftHoleName = '';
		let leftHoleEnemy = $gameTroop._gloryLeftStall;
		
		if(faceHoleIsHard) {
			leftHoleName += 'hard_';
		}
		else {
			leftHoleName += 'soft_';
		}
		
		if(givingBJ) {
			if(!faceHoleIsHard) {
				leftHoleName += 'bj_';
			}
		}
		
		if(givingLeftHoleHJ) {
			if(faceHoleIsHard) {
				if(isNaked) {
					this.setTachieRightArm('hj_naked');
					this.setTachieFrontA('rightarm_hj_naked');
				}
				else {
					this.setTachieRightArm('hj');
					this.setTachieFrontA('rightarm_hj');
				}
				
				this.setTachieSemenFrontAExtension('rightarm_hj_');
				this.setMaxTachieSemenFrontAId(1);
			}
			else {
				if(!givingBJ && !faceHoleIsHard)
					leftHoleName += 'pet_';
				if(isNaked) {
					this.setTachieRightArm('pet_naked');
					this.setTachieFrontA('rightarm_pet_naked');
				}
				else {
					this.setTachieRightArm('pet');
					this.setTachieFrontA('rightarm_pet');
				}
				
				this.setTachieSemenFrontAExtension('rightarm_pet_');
				this.setMaxTachieSemenFrontAId(1);
			}
			rightArmIsChikubi = false;
			this.setTachieFrontAHasHCup(false);
			this.setTachieFrontAHasPCup(false);
		}
		else if(karrynJustUsedCockPet) {
			if(!givingBJ && !faceHoleIsHard)
				leftHoleName += 'pet_';
			if(isNaked) {
				this.setTachieRightArm('pet_naked');
				this.setTachieFrontA('rightarm_pet_naked');
			}
			else {
				this.setTachieRightArm('pet');
				this.setTachieFrontA('rightarm_pet');
			}
				
			this.setTachieSemenFrontAExtension('rightarm_pet_');
			this.setMaxTachieSemenFrontAId(1);
			
			rightArmIsChikubi = false;
			this.setTachieFrontAHasHCup(false);
			this.setTachieFrontAHasPCup(false);
		}
		else {
			if(rightArmIsChikubi) {
				if(isNaked) {
					this.setTachieRightArm('chikubi_naked');
					this.setTachieFrontA('rightarm_chikubi_naked');
				}
				else {
					this.setTachieRightArm('chikubi');
					this.setTachieFrontA('rightarm_chikubi');
				}
				this.setTachieFrontAHasHCup(true);
				this.setTachieFrontAHasPCup(true);
				this.setMaxTachieSemenFrontAId(0);
			}
			else {
				this.setTachieFrontAHasHCup(false);
				this.setTachieFrontAHasPCup(false);
				this.toiletBattle_resetRightArmToNormal();
			}
		}
		
		
		leftHoleName += leftHoleEnemy.enemyCock();
		if(Karryn.isCensored())
			leftHoleName += '_cen';

		this.setTachieLeftHole(leftHoleName);
		
		if(faceHoleIsHard) {
			if(givingBJ)
				this.setTachieSemenHoleLeftExtension('hard_bj_');
			else
				this.setTachieSemenHoleLeftExtension('hard_');
		}
		else {
			if(givingBJ) {
				this.setTachieSemenHoleLeftExtension('soft_bj_');
			}
			else if(karrynJustUsedCockPet || givingLeftHoleHJ)
				this.setTachieSemenHoleLeftExtension('soft_pet_');
			else
				this.setTachieSemenHoleLeftExtension('soft_');
		}
		
		this.setMaxTachieSemenHoleLeftId(1);
	}
	else {
		this.resetTachieLeftHole();
		this.setMaxTachieSemenHoleLeftId(0);
		
		if(rightArmIsChikubi) {
			if(isNaked) {
				this.setTachieRightArm('chikubi_naked');
				this.setTachieFrontA('rightarm_chikubi_naked');
			}
			else {
				this.setTachieRightArm('chikubi');
				this.setTachieFrontA('rightarm_chikubi');
			}
			this.setTachieFrontAHasHCup(true);
			this.setTachieFrontAHasPCup(true);
			this.setMaxTachieSemenFrontAId(0);
		}
		else {
			this.setTachieFrontAHasHCup(false);
			this.setTachieFrontAHasPCup(false);
			this.toiletBattle_resetRightArmToNormal();
		}
	}
	
	if(!rightHoleIsEmpty) {
		let rightHoleName = '';
		let rightHoleEnemy = $gameTroop._gloryRightStall;
		
		if(rightHoleEnemy.isAroused()) {
			if(pussyInserted) {
				rightHoleName += 'manko_';
				this.setTachieBody('high');
				this.setTachieSemenHoleRightExtension('manko_');
			}
			else if(analInserted) {
				rightHoleName += 'anaru_';
				this.setTachieBody('low');
				this.setTachieSemenHoleRightExtension('anaru_');
			}
			else {
				if(this.tachieBody.includes('low')) {
					rightHoleName += 'hard_low_';
					this.setTachieSemenHoleRightExtension('hard_low_');
				}
				else {
					rightHoleName += 'hard_high_';
					this.setTachieSemenHoleRightExtension('hard_high_');
				}
			}
			
		}
		else {
			rightHoleName += 'soft_';
			this.setTachieSemenHoleRightExtension('soft_');
		}
		
		rightHoleName += rightHoleEnemy.enemyCock();
		if(Karryn.isCensored())
			rightHoleName += '_cen';
		
		this.setTachieRightHole(rightHoleName);
		
		this.setMaxTachieSemenHoleRightId(1);
	}
	else {
		this.resetTachieRightHole();
		this.setMaxTachieSemenHoleRightId(0);
		this.resetTachieSemenHoleRightExtension();
	}
	
	let bodyIsLow = this.tachieBody.includes('low');
	let bodyIsHigh = this.tachieBody.includes('high');
	
	if(rightArmIsChikubi) {
		this.setTachieSemenRightArmHasHCup(true);
		this.setTachieSemenRightArmHasPCup(true);
		this.setTachieBoobs('chikubi');
		this.setTachieSemenBoobsExtension('chikubi_');
		this.setTachieSemenRightArmExtension('chikubi_');
	}
	else {
		this.setTachieSemenRightArmHasHCup(false);
		this.setTachieSemenRightArmHasPCup(false);
		
		this.setTachieBoobs('normal');
		

		this.setTachieSemenBoobsExtension('normal_');
			
		if(this.tachieRightArm.includes('hj')) {
			this.setTachieSemenRightArmExtension('hj_');
		}
		else if(this.tachieRightArm.includes('pet')) {
			this.setTachieSemenRightArmExtension('pet_');
		}	
		else {
			this.setTachieSemenRightArmExtension('normal_');
		}

	}
	
	if(bodyIsLow) {
		this.setHasTachiePubic(false);
		
		this.setTachieSemenRightLegExtension('low_');
		this.setTachieSemenLeftLegExtension('low_');
		this.setTachieSemenBackExtension('low_');
		this.setTachieSemenBellyExtension('low_');
		this.setTachieSemenButtExtension('low_');
		this.setTachieSemenAnalExtension('low_');
		this.setTachieSemenCrotchExtension('low_');
		this.setTachieSemenWetExtension('low_');
		
		this.setTachiePussyToyExtension_gloryBattle('low_');
		this.setTachieAnalToyExtension_gloryBattle('low_');
		
		this.setMaxTachieStrayGroinId(1,1,1);
		this.setTachieStrayButtExtension('low_');
		this.setTachieStrayGroinExtension('low_');
		
		if(isNaked)
			this.setTachieClitToyExtension_gloryBattle('low_naked_');
		else
			this.setTachieClitToyExtension_gloryBattle('low_');
	}
	else {
		this.setTachiePubicExtension('high_');
		this.setHasTachiePubic(true);
		
		this.setTachieSemenRightLegExtension('high_');
		this.setTachieSemenLeftLegExtension('high_');
		this.setTachieSemenBackExtension('high_');
		this.setTachieSemenBellyExtension('high_');
		this.setTachieSemenButtExtension('high_');
		this.setTachieSemenAnalExtension('high_');
		this.setTachieSemenCrotchExtension('high_');
		this.setTachieSemenWetExtension('high_');
		
		this.setTachiePussyToyExtension_gloryBattle('high_');
		this.setTachieAnalToyExtension_gloryBattle('high_');
		
		this.setMaxTachieStrayGroinId(1,2,2);
		this.setTachieStrayButtExtension('high_');
		this.setTachieStrayGroinExtension('high_');
		
		if(isNaked)
			this.setTachieClitToyExtension_gloryBattle('high_naked_');
		else
			this.setTachieClitToyExtension_gloryBattle('high_');
	}
	
	this.setMaxTachieSemenBoobsId(1);
	this.setMaxTachieSemenRightArmId(1);
	this.setMaxTachieSemenRightLegId(1);
	this.setMaxTachieSemenLeftLegId(1);
	this.setMaxTachieSemenBackId(1);
	this.setMaxTachieSemenBellyId(1);
	this.setMaxTachieSemenButtId(1);
	this.setMaxTachieSemenAnalId(1);
	this.setMaxTachieSemenCrotchId(1);
	this.setMaxTachieWetId(1);
	
	if(isNaked) {
		this.setTachieLeftArm('normal_naked');
		this.resetTachieTie();
		
		if(bodyIsLow)
			this.setTachieBody('low_naked');
		else if(bodyIsHigh)
			this.setTachieBody('high_naked');
	}
	else {
		this.setTachieLeftArm('normal');
		this.setTachieTie(1);
	}
	
	let faceArray = [];
	this.resetTachieHoppe();
	this.resetTachieSweat();
	
	if(justOrgasmed) {
		if(givingBJ) {
			if(faceHoleIsHard) {
				if(orgasmlvl3) 
					faceArray.push(34);
				else if(orgasmlvl2) 
					faceArray.push(22);
				else
					faceArray.push(10);
			}
			else {
				if(orgasmlvl3) 
					faceArray.push(32);
				else if(orgasmlvl2) 
					faceArray.push(20);
				else
					faceArray.push(8);
			}
		}
		else if(givingLeftHoleHJ && faceHoleIsHard) {
			if(orgasmlvl3) 
				faceArray.push(36);
			else if(orgasmlvl2) 
				faceArray.push(24);
			else
				faceArray.push(12);
		}
		else {
			if(orgasmlvl3) 
				faceArray.push(30);
			else if(orgasmlvl2) 
				faceArray.push(18);
			else
				faceArray.push(6);
			
		}
	}
	else if(justGotPussyCreampie) { 
		if(givingBJ) {
			if(faceHoleIsHard) {
				if(pussyCreampielvl3) 
					faceArray.push(34);
				else if(pussyCreampielvl2) 
					faceArray.push(22);
				else
					faceArray.push(10);
			}
			else {
				if(pussyCreampielvl3) 
					faceArray.push(32);
				else if(pussyCreampielvl2) 
					faceArray.push(20);
				else
					faceArray.push(8);
			}
		}
		else {
			if(pussyCreampielvl3) 
				faceArray.push(29);
			else if(pussyCreampielvl2) 
				faceArray.push(17);
			else
				faceArray.push(5);
		}	
	}
	else if(justGotAnalCreampie) {
		if(givingBJ) {
			if(faceHoleIsHard) {
				if(analCreampielvl3) 
					faceArray.push(34);
				else if(analCreampielvl2) 
					faceArray.push(22);
				else
					faceArray.push(10);
			}
			else {
				if(analCreampielvl3) 
					faceArray.push(32);
				else if(analCreampielvl2) 
					faceArray.push(20);
				else
					faceArray.push(8);
			}
		}
		else {
			if(analCreampielvl3) 
				faceArray.push(29);
			else if(analCreampielvl2) 
				faceArray.push(17);
			else
				faceArray.push(5);
		}
	}
	else if(karrynSwallowingCum) {
		if(faceHoleIsHard) {
			if(swallowlvl3) 
				faceArray.push(34);
			else if(swallowlvl2) 
				faceArray.push(22);
			else
				faceArray.push(10);
		}
		else {
			if(swallowlvl3) 
				faceArray.push(32);
			else if(swallowlvl2) 
				faceArray.push(20);
			else
				faceArray.push(8);
		}
	}
	else if(karrynGotBukkaked) {
		if(mainHoleJustEjaculated) { 
			if(givingBJ) {
				if(faceHoleIsHard) {
					if(bukkakelvl3) 
						faceArray.push(34);
					else if(bukkakelvl2) 
						faceArray.push(22);
					else
						faceArray.push(10);
				}
				else {
					if(bukkakelvl3) 
						faceArray.push(32);
					else if(bukkakelvl2) 
						faceArray.push(20);
					else
						faceArray.push(8);
				}
			}
			else {
				if(faceHoleIsHard) {
					if(bukkakelvl3) 
						faceArray.push(36);
					else if(bukkakelvl2) 
						faceArray.push(24);
					else
						faceArray.push(12);
				}
				else {
					if(bukkakelvl3) 
						faceArray.push(29);
					else if(bukkakelvl2) 
						faceArray.push(17);
					else
						faceArray.push(5);
				}
			}
		}
		else {
			if(givingBJ) {
				if(faceHoleIsHard) {
					if(bukkakelvl3) 
						faceArray.push(34);
					else if(bukkakelvl2) 
						faceArray.push(22);
					else
						faceArray.push(10);
				}
				else {
					if(bukkakelvl3) 
						faceArray.push(32);
					else if(bukkakelvl2) 
						faceArray.push(20);
					else
						faceArray.push(8);
				}
			}
			else {
				if(faceHoleIsHard) {
					if(bukkakelvl3) 
						faceArray.push(36);
					else if(bukkakelvl2) 
						faceArray.push(24);
					else
						faceArray.push(12);
				}
				else {
					if(bukkakelvl3) 
						faceArray.push(30);
					else if(bukkakelvl2) 
						faceArray.push(18);
					else
						faceArray.push(6);
				}
			}
		}
	}
	else if(givingBJ) {
		if(faceHoleIsHard) {
			if(generallvl3) 
				faceArray.push(33);
			else if(generallvl2) 
				faceArray.push(21);
			else
				faceArray.push(9);
		}
		else {
			if(generallvl3) 
				faceArray.push(31);
			else if(generallvl2) 
				faceArray.push(19);
			else
				faceArray.push(7);
		}
	}
	else if(karrynJustUsedCockPet || karrynJustUsedCockStare) {
		if(faceHoleIsHard) {
			if(generallvl3) 
				faceArray.push(26);
			else if(generallvl2) 
				faceArray.push(14);
			else
				faceArray.push(2);
		}
		else {
			if(generallvl3) 
				faceArray.push(25);
			else if(generallvl2) 
				faceArray.push(13);
			else
				faceArray.push(1);
		}
	}
	else if(lastHitPussySex || lastHitAnalSex || lastHitToy) {
		if(generallvl3) 
			faceArray.push(27);
		else if(generallvl2) 
			faceArray.push(15);
		else
			faceArray.push(3);
	}
	else if(lastHitHandjob && faceHoleIsHard) {
		if(generallvl3) 
			faceArray.push(35);
		else if(generallvl2) 
			faceArray.push(23);
		else
			faceArray.push(11);
	}
	
	if(faceArray.length === 0) {
		if(isMasturbating) {
			if(generallvl3) 
				faceArray.push(28);
			else if(generallvl2) 
				faceArray.push(16);
			else
				faceArray.push(4);
		}
		if(givingLeftHoleHJ && faceHoleIsHard) {
			if(generallvl3) 
				faceArray.push(35);
			else if(generallvl2) 
				faceArray.push(23);
			else
				faceArray.push(11);
		}
		if(pussyInserted || analInserted) {
			if(generallvl3) 
				faceArray.push(27);
			else if(generallvl2) 
				faceArray.push(15);
			else
				faceArray.push(3);
		}
	}
	
	if(faceArray.length === 0) {
		if(generallvl3) 
			faceArray.push(27);
		else if(generallvl2) 
			faceArray.push(15);
		else
			faceArray.push(3);
			
		if(generallvl3) 
			faceArray.push(25);
		else if(generallvl2) 
			faceArray.push(13);
		else
			faceArray.push(1);	
	}
	
	let faceId = faceArray[Math.randomInt(faceArray.length)];
	let eyebrowsArray = [];
	let eyesArray = [];
	let mouthArray = [];
	
	switch(faceId) {
	case 1:
		eyebrowsArray.push('koma1');
		eyebrowsArray.push('koma2');
		eyebrowsArray.push('oko1');
		eyesArray.push('mae1');
		eyesArray.push('mae2');
		mouthArray.push('ku1');
		mouthArray.push('ku2');
		mouthArray.push('ho1');
		mouthArray.push('ho2');
		this.setTachieHoppe(1);
		this.setTachieSweat(1);
	break;
	case 2:
		eyebrowsArray.push('koma2');
		eyesArray.push('sita1');
		eyesArray.push('sita2');
		this.setTachieHoppe(1);
		this.setTachieSweat(1);
	break;
	case 3:
		eyebrowsArray.push('koma1');
		eyebrowsArray.push('koma2');
		eyesArray.push('yoko1');
		eyesArray.push('yoko2');
		mouthArray.push('ku1');
		mouthArray.push('ho1');
		mouthArray.push('ho2');
		this.setTachieHoppe(1);
		this.setTachieSweat(2);
	break;
	case 4:
		eyebrowsArray.push('koma1');
		eyebrowsArray.push('koma2');
		eyesArray.push('sita1');
		eyesArray.push('sita2');
		mouthArray.push('ho1');
		mouthArray.push('ho2');
		this.setTachieHoppe(1);
		this.setTachieSweat(2);
	break;
	case 5:
		eyebrowsArray.push('koma1');
		eyebrowsArray.push('koma2');
		eyesArray.push('yoko2');
		eyesArray.push('uruyoko2');
		eyesArray.push('toji1');
		mouthArray.push('ku1');
		mouthArray.push('ku2');
		mouthArray.push('ho1');
		mouthArray.push('ho2');
		this.setTachieHoppe(1);
		this.setTachieSweat(2);
	break;
	case 6:
		eyebrowsArray.push('koma1');
		eyebrowsArray.push('koma2');
		eyebrowsArray.push('oko1');
		eyesArray.push('yoko2');
		eyesArray.push('uruyoko2');
		eyesArray.push('toji1');
		mouthArray.push('ku1');
		mouthArray.push('ku2');
		mouthArray.push('ahe1');
		mouthArray.push('ho2');
		this.setTachieHoppe(1);
		this.setTachieSweat(2);
	break;
	case 7:
		eyebrowsArray.push('koma1');
		eyebrowsArray.push('koma2');
		eyesArray.push('mae1');
		eyesArray.push('mae2');
		mouthArray.push('fera_soft1');
		this.setTachieHoppe(1);
		this.setTachieSweat(2);
	break;
	case 8:
		eyebrowsArray.push('koma1');
		eyebrowsArray.push('koma2');
		eyebrowsArray.push('oko1');
		eyesArray.push('mae2');
		eyesArray.push('toji1');
		mouthArray.push('fera_soft1');
		this.setTachieHoppe(1);
		this.setTachieSweat(2);
	break;
	case 9:
		eyebrowsArray.push('koma1');
		eyebrowsArray.push('koma2');
		eyesArray.push('mae1');
		eyesArray.push('mae2');
		mouthArray.push('fera_hard1');
		mouthArray.push('fera_hard2');
		this.setTachieHoppe(1);
		this.setTachieSweat(2);
	break;
	case 10:
		eyebrowsArray.push('koma1');
		eyebrowsArray.push('koma2');
		eyebrowsArray.push('oko1');
		eyesArray.push('mae2');
		eyesArray.push('toji1');
		mouthArray.push('fera_hard1');
		mouthArray.push('fera_hard2');
		this.setTachieHoppe(1);
		this.setTachieSweat(2);
	break;
	case 11:
		eyebrowsArray.push('koma1');
		eyebrowsArray.push('koma2');
		eyesArray.push('mae1');
		eyesArray.push('mae2');
		eyesArray.push('sita1');
		eyesArray.push('sita2');
		this.setTachieHoppe(1);
		this.setTachieSweat(2);
	break;
	case 12:
		eyebrowsArray.push('koma1');
		eyebrowsArray.push('koma2');
		eyebrowsArray.push('oko1');
		eyesArray.push('sita2');
		eyesArray.push('toji1');
		this.setTachieHoppe(1);
		this.setTachieSweat(2);
	break;
	case 13:
		eyebrowsArray.push('kiri1');
		eyebrowsArray.push('kiri2');
		eyesArray.push('mae1');
		eyesArray.push('mae2');
		mouthArray.push('nico1');
		mouthArray.push('ho1');
		mouthArray.push('ho2');
		mouthArray.push('ho3');
		this.setTachieHoppe(1);
	break;
	case 14:
		eyebrowsArray.push('kiri2');
		eyesArray.push('sita1');
		eyesArray.push('sita2');
		this.setTachieHoppe(1);
		this.setTachieSweat(1);
	break;
	case 15:
		eyebrowsArray.push('kiri1');
		eyebrowsArray.push('kiri2');
		eyebrowsArray.push('koma1');
		eyesArray.push('yoko1');
		eyesArray.push('yoko2');
		mouthArray.push('nico1');
		mouthArray.push('ho1');
		mouthArray.push('ho2');
		mouthArray.push('ku1');
		mouthArray.push('ahe1');
		this.setTachieHoppe(1);
		this.setTachieSweat(1);
	break;
	case 16:
		eyebrowsArray.push('kiri1');
		eyebrowsArray.push('kiri2');
		eyebrowsArray.push('koma2');
		eyesArray.push('sita1');
		eyesArray.push('sita2');
		mouthArray.push('ho1');
		mouthArray.push('ho2');
		mouthArray.push('ho3');
		mouthArray.push('ku1');
		mouthArray.push('ahe1');
		this.setTachieHoppe(1);
		this.setTachieSweat(1);
	break;
	case 17:
		eyebrowsArray.push('kiri1');
		eyebrowsArray.push('kiri2');
		eyebrowsArray.push('oko1');
		eyebrowsArray.push('koma1');
		eyesArray.push('yoko2');
		eyesArray.push('uruyoko2');
		eyesArray.push('toji1');
		mouthArray.push('ho1');
		mouthArray.push('ho2');
		mouthArray.push('ho3');
		mouthArray.push('ku1');
		mouthArray.push('ahe1');
		this.setTachieHoppe(1);
		this.setTachieSweat(2);
	break;
	case 18:
		eyebrowsArray.push('kiri1');
		eyebrowsArray.push('kiri2');
		eyebrowsArray.push('oko1');
		eyebrowsArray.push('koma1');
		eyebrowsArray.push('koma2');
		eyesArray.push('yoko2');
		eyesArray.push('uruyoko2');
		eyesArray.push('toji1');
		eyesArray.push('ahe1');
		mouthArray.push('ku1');
		mouthArray.push('ho1');
		mouthArray.push('ho2');
		mouthArray.push('ho3');
		mouthArray.push('ahe1');
		mouthArray.push('ahe2');
		this.setTachieHoppe(1);
		this.setTachieSweat(2);
	break;
	case 19:
		eyebrowsArray.push('kiri1');
		eyebrowsArray.push('kiri2');
		eyesArray.push('mae1');
		eyesArray.push('mae2');
		mouthArray.push('fera_soft2');
		mouthArray.push('fera_soft3');
		this.setTachieHoppe(1);
		this.setTachieSweat(1);
	break;
	case 20:
		eyebrowsArray.push('kiri1');
		eyebrowsArray.push('kiri2');
		eyebrowsArray.push('oko1');
		eyebrowsArray.push('koma1');
		eyesArray.push('sita2');
		eyesArray.push('urusita1');
		eyesArray.push('urusita2');
		eyesArray.push('toji1');
		mouthArray.push('fera_soft1');
		mouthArray.push('fera_soft2');
		mouthArray.push('fera_soft3');
		this.setTachieHoppe(1);
		this.setTachieSweat(2);
	break;
	case 21:
		eyebrowsArray.push('kiri1');
		eyebrowsArray.push('kiri2');
		eyesArray.push('mae1');
		eyesArray.push('mae2');
		eyesArray.push('urumae1');
		mouthArray.push('fera_hard2');
		mouthArray.push('fera_hard3');
		mouthArray.push('fera_hard4');
		this.setTachieHoppe(1);
		this.setTachieSweat(1);
	break;
	case 22:
		eyebrowsArray.push('kiri1');
		eyebrowsArray.push('kiri2');
		eyebrowsArray.push('oko1');
		eyebrowsArray.push('koma1');
		eyesArray.push('mae2');
		eyesArray.push('urumae1');
		eyesArray.push('urumae2');
		eyesArray.push('toji1');
		eyesArray.push('ahe1');
		mouthArray.push('fera_hard1');
		mouthArray.push('fera_hard2');
		mouthArray.push('fera_hard3');
		this.setTachieHoppe(1);
		this.setTachieSweat(2);
	break;
	case 23:
		eyebrowsArray.push('kiri1');
		eyebrowsArray.push('kiri2');
		eyesArray.push('mae2');
		eyesArray.push('mae1');
		eyesArray.push('sita1');
		eyesArray.push('sita2');
		eyesArray.push('urumae1');
		eyesArray.push('urusita1');
		this.setTachieHoppe(1);
		this.setTachieSweat(1);
	break;
	case 24:
		eyebrowsArray.push('kiri1');
		eyebrowsArray.push('kiri2');
		eyebrowsArray.push('koma1');
		eyesArray.push('sita2');
		eyesArray.push('urusita1');
		eyesArray.push('urusita2');
		eyesArray.push('toji1');
		this.setTachieHoppe(1);
		this.setTachieSweat(2);
	break;
	case 25:
		eyebrowsArray.push('nico1');
		eyebrowsArray.push('nico2');
		eyesArray.push('mae1');
		eyesArray.push('mae2');
		eyesArray.push('urumae1');
		eyesArray.push('urumae2');
		eyesArray.push('heartmae1');
		eyesArray.push('heartmae2');
		mouthArray.push('nico1');
		mouthArray.push('nico2');
		mouthArray.push('pero1');
		mouthArray.push('ho2');
		mouthArray.push('ho3');
		mouthArray.push('ahe2');
		mouthArray.push('ahe3');
		if(isAroused) this.setTachieHoppe(1);
	break;
	case 26:
		eyebrowsArray.push('nico1');
		eyebrowsArray.push('nico2');
		eyesArray.push('sita1');
		eyesArray.push('sita2');
		eyesArray.push('urusita1');
		eyesArray.push('urusita2');
		eyesArray.push('heartsita1');
		eyesArray.push('heartsita2');
		if(isAroused) this.setTachieHoppe(1);
	break;
	case 27:
		eyebrowsArray.push('nico1');
		eyebrowsArray.push('nico2');
		eyebrowsArray.push('koma1');
		eyebrowsArray.push('koma2');
		eyebrowsArray.push('kiri1');
		eyebrowsArray.push('kiri2');
		eyesArray.push('yoko1');
		eyesArray.push('yoko2');
		eyesArray.push('uruyoko1');
		eyesArray.push('uruyoko2');
		eyesArray.push('toji1');
		mouthArray.push('nico1');
		mouthArray.push('nico2');
		mouthArray.push('pero1');
		mouthArray.push('ahe2');
		mouthArray.push('ahe3');
		if(isAroused) this.setTachieHoppe(1);
		if(Math.random() < 0.5) this.setTachieSweat(1);
	break;
	case 28:
		eyebrowsArray.push('nico1');
		eyebrowsArray.push('nico2');
		eyebrowsArray.push('koma1');
		eyebrowsArray.push('kiri1');
		eyebrowsArray.push('kiri2');
		eyesArray.push('sita1');
		eyesArray.push('sita2');
		eyesArray.push('urusita2');
		mouthArray.push('nico1');
		mouthArray.push('nico2');
		mouthArray.push('pero1');
		mouthArray.push('ho1');
		mouthArray.push('ho2');
		mouthArray.push('ho3');
		mouthArray.push('ahe2');
		mouthArray.push('ahe3');
		if(isAroused) this.setTachieHoppe(1);
	break;
	case 29:
		eyebrowsArray.push('nico1');
		eyebrowsArray.push('nico2');
		eyebrowsArray.push('koma1');
		eyebrowsArray.push('koma2');
		eyebrowsArray.push('kiri1');
		eyebrowsArray.push('kiri2');
		eyesArray.push('yoko1');
		eyesArray.push('yoko2');
		eyesArray.push('uruyoko1');
		eyesArray.push('uruyoko2');
		eyesArray.push('heartyoko1');
		eyesArray.push('heartyoko2');
		eyesArray.push('toji1');
		eyesArray.push('ahe1');
		mouthArray.push('nico1');
		mouthArray.push('nico2');
		mouthArray.push('pero1');
		mouthArray.push('ho2');
		mouthArray.push('ahe2');
		mouthArray.push('ahe3');
		this.setTachieHoppe(1);
		if(Math.random() < 0.33) this.setTachieSweat(2);
		else if(Math.random() < 0.5) this.setTachieSweat(1);
	break;
	case 30:
		eyebrowsArray.push('nico1');
		eyebrowsArray.push('nico2');
		eyebrowsArray.push('koma1');
		eyebrowsArray.push('koma2');
		eyebrowsArray.push('oko1');
		eyebrowsArray.push('kiri1');
		eyebrowsArray.push('kiri2');
		eyesArray.push('uruyoko1');
		eyesArray.push('uruyoko2');
		eyesArray.push('heartyoko1');
		eyesArray.push('heartyoko2');
		eyesArray.push('heartahe1');
		eyesArray.push('toji1');
		eyesArray.push('ahe1');
		mouthArray.push('ku1');
		mouthArray.push('ho1');
		mouthArray.push('ho2');
		mouthArray.push('ho3');
		mouthArray.push('ahe1');
		mouthArray.push('ahe2');
		mouthArray.push('ahe3');
		this.setTachieHoppe(1);
		if(Math.random() < 0.33) this.setTachieSweat(2);
		else if(Math.random() < 0.5) this.setTachieSweat(1);
	break;
	case 31:
		eyebrowsArray.push('nico1');
		eyebrowsArray.push('nico2');
		eyebrowsArray.push('koma1');
		eyebrowsArray.push('koma2');
		eyesArray.push('mae1');
		eyesArray.push('mae2');
		mouthArray.push('fera_soft3');
		mouthArray.push('fera_soft4');
		if(isAroused) this.setTachieHoppe(1);
	break;
	case 32:
		eyebrowsArray.push('nico1');
		eyebrowsArray.push('nico2');
		eyebrowsArray.push('koma1');
		eyebrowsArray.push('koma2');
		eyebrowsArray.push('kiri1');
		eyebrowsArray.push('kiri2');
		eyesArray.push('urumae1');
		eyesArray.push('urumae2');
		eyesArray.push('heartmae1');
		eyesArray.push('heartmae2');
		eyesArray.push('ahe1');
		mouthArray.push('fera_soft1');
		mouthArray.push('fera_soft2');
		mouthArray.push('fera_soft3');
		mouthArray.push('fera_soft4');
		this.setTachieHoppe(1);
		if(Math.random() < 0.33) this.setTachieSweat(2);
		else if(Math.random() < 0.5) this.setTachieSweat(1);
	break;
	case 33:
		eyebrowsArray.push('nico1');
		eyebrowsArray.push('nico2');
		eyebrowsArray.push('kiri1');
		eyebrowsArray.push('kiri2');
		eyesArray.push('urumae1');
		eyesArray.push('urumae2');
		eyesArray.push('heartmae1');
		eyesArray.push('heartmae2');
		mouthArray.push('fera_hard3');
		mouthArray.push('fera_hard4');
		mouthArray.push('fera_hard5');
		mouthArray.push('fera_hard6');
		if(isAroused) this.setTachieHoppe(1);
		if(Math.random() < 0.5) this.setTachieSweat(1);
	break;
	case 34:
		eyebrowsArray.push('nico1');
		eyebrowsArray.push('nico2');
		eyebrowsArray.push('koma1');
		eyebrowsArray.push('koma2');
		eyebrowsArray.push('oko1');
		eyebrowsArray.push('kiri1');
		eyebrowsArray.push('kiri2');
		eyesArray.push('urumae1');
		eyesArray.push('urumae2');
		eyesArray.push('heartmae1');
		eyesArray.push('heartmae2');
		eyesArray.push('heartahe1');
		eyesArray.push('toji1');
		mouthArray.push('fera_hard1');
		mouthArray.push('fera_hard2');
		mouthArray.push('fera_hard3');
		mouthArray.push('fera_hard4');
		mouthArray.push('fera_hard5');
		mouthArray.push('fera_hard6');
		this.setTachieHoppe(1);
		if(Math.random() < 0.5) this.setTachieSweat(1);
		else this.setTachieSweat(2);
	break;
	case 35:
		eyebrowsArray.push('nico1');
		eyebrowsArray.push('nico2');
		eyebrowsArray.push('koma1');
		eyebrowsArray.push('koma2');
		eyebrowsArray.push('kiri1');
		eyebrowsArray.push('kiri2');
		eyesArray.push('mae1');
		eyesArray.push('mae2');
		eyesArray.push('sita1');
		eyesArray.push('sita2');
		eyesArray.push('urumae1');
		eyesArray.push('urumae2');
		eyesArray.push('urusita1');
		eyesArray.push('urusita2');
		if(isAroused) this.setTachieHoppe(1);
	break;
	case 36:
		eyebrowsArray.push('nico1');
		eyebrowsArray.push('nico2');
		eyebrowsArray.push('koma1');
		eyebrowsArray.push('koma2');
		eyebrowsArray.push('oko1');
		eyebrowsArray.push('kiri1');
		eyebrowsArray.push('kiri2');
		eyesArray.push('urusita1');
		eyesArray.push('urusita2');
		eyesArray.push('heartsita1');
		eyesArray.push('heartsita2');
		eyesArray.push('heartahe1');
		this.setTachieHoppe(1);
		if(Math.random() < 0.5) this.setTachieSweat(1);
		else this.setTachieSweat(2);
		break;
	}
	
	if(eyebrowsArray.length > 0) {
		this.setTachieEyebrows(eyebrowsArray[Math.randomInt(eyebrowsArray.length)]);
	}
	if(eyesArray.length > 0) {
		this.setTachieEyes(eyesArray[Math.randomInt(eyesArray.length)]);
	}
	
	if(faceHoleIsHard && !givingBJ) {
		this.resetTachieMouth();
	}
	else if(mouthArray.length > 0) {
		this.setTachieMouth(mouthArray[Math.randomInt(mouthArray.length)]);
 	}
	else {
		this.resetTachieMouth();
	}
	
	if(this.tachieMouth.includes('fera')) {
		this.setTachieStrayFaceExtension(ConfigManager.convertedTachieMouthName(this) + '_');
		this.setTachieFrontB('hair_' + this.getHairColorName() + '_fera_1');
	}
	else {
		this.resetTachieStrayFaceExtension();
		this.resetTachieFrontB();
	}
	
	if(this.tachieBoobs.includes('chikubi'))
		this.setTachieStrayBoobsExtension('chikubi_');
	else
		this.setTachieStrayBoobsExtension('normal_');
	
	this.setAllowTachieEmoteUpdate(true);
};

// Stripper Intermission
Game_Actor.prototype.emoteStripperIntermissionPose = function() {
	this.setTachieFloorCondomId();
};
Game_Actor.prototype.setTachieFloorCondomId = function() {
	if(!this._stripper_stageCondomCount) {
		this.resetTachieCondomFloor();
	}
	else if(this._stripper_stageCondomCount < 3) {
		this.setTachieCondomFloor(1);
	}
	else if(this._stripper_stageCondomCount < 7) {
		this.setTachieCondomFloor(2);
	}
	else if(this._stripper_stageCondomCount < 11) {
		this.setTachieCondomFloor(3);
	}
	else if(this._stripper_stageCondomCount < 15) {
		this.setTachieCondomFloor(4);
	}
	else if(this._stripper_stageCondomCount < 19) {
		this.setTachieCondomFloor(5);
	}
	else if(this._stripper_stageCondomCount < 23) {
		this.setTachieCondomFloor(6);
	}
	else if(this._stripper_stageCondomCount < 27) {
		this.setTachieCondomFloor(7);
	}
	else if(this._stripper_stageCondomCount < 31) {
		this.setTachieCondomFloor(8);
	}
	else {
		this.setTachieCondomFloor(9);
	}
};

// Stripper Mouth
Game_Actor.prototype.emoteStripperMouthPose = function() {
	this.setAllowTachieEmoteUpdate(false);
	let justOrgasmed = this.didLastGetHitBySkillType(JUST_SKILLTYPE_KARRYN_ORGASM) || this.justOrgasmed();
	let isAroused = this.isAroused() || justOrgasmed;
	let isWearingPanties = this.isWearingPanties();
	let isWearingOuterOutfit = this.clothingStage === 1;
	let isWearingBra = this.clothingStage <= 2;
	let metBlowjobDesireReqs = this.mouthDesire >= this.blowjobMouthDesireRequirement() && this.cockDesire >= this.blowjobCockDesireRequirement();
	
	
	let isStandby = this.isInStripperStandby();
	let firstSetup = this.isStateAffected(STATE_STRIPPER_MOUTH_POSE_SETUP_ID);
	let rightArmIsBefore = this.tachieRightArm.includes('before');
	let rightArmIsFera = this.tachieRightArm.includes('fera');
	let rightArmIsSuckFinger = this.tachieRightArm.includes('suck_fingers');
	let justStripped = this.didLastGetHitBySkillType(JUST_SKILLTYPE_KARRYN_STRIP_CLOTHES);
	let reactingToCondom = this.didLastGetHitBySkillType(JUST_SKILLTYPE_ENEMY_TOSSED_CONDOM_STAGE) || this.didLastGetHitBySkillType(JUST_SKILLTYPE_ENEMY_TIPPED_CONDOM);
	
	let generalReactionScore = this.getReactionScore();
	let orgasmReactionScore = this.getOrgasmReactionScore();
	let patronCondomReactionScore = this.patronCondomReactionScore();
	
	let generallvl3 = generalReactionScore >= VAR_DEF_RS_LV3_REQ;
	let generallvl2 = generalReactionScore >= VAR_DEF_RS_LV2_REQ;
	let orgasmlvl3 = orgasmReactionScore >= VAR_DEF_RS_LV3_REQ;
	let orgasmlvl2 = orgasmReactionScore >= VAR_DEF_RS_LV2_REQ;
	let condomlvl3 = patronCondomReactionScore  >= VAR_DEF_RS_LV3_REQ;
	let condomlvl2 = patronCondomReactionScore >= VAR_DEF_RS_LV2_REQ;
	
	if(isWearingPanties) {
		this.setTachieBody(1);
		this.setTachiePanties(1);
	}
	else {
		this.setTachieBody(2);
		this.resetTachiePanties();
	}
	
	if(isWearingBra) {
		if(isAroused)
			this.setTachieBoobs('1_hard');
		else
			this.setTachieBoobs('1');
	}
	else {
		if(isAroused)
			this.setTachieBoobs('2_hard');
		else
			this.setTachieBoobs('2');
	}
	
	if(isWearingOuterOutfit) {
		this.setTachieBackA('outer_1');
		this.setTachieFrontA('outer_1');
	}
	else {
		this.resetTachieBackA();
		this.resetTachieFrontA();
	}
	
	let faceArray = [];
	this.resetTachieHoppe();
	this.resetTachieSweat();
	
	if(justOrgasmed) {
		if(orgasmlvl3) 
			faceArray.push(17);
		else if(orgasmlvl2) 
			faceArray.push(10);
		else
			faceArray.push(4);
	}
	else if(reactingToCondom) {
		if(condomlvl3) 
			faceArray.push(16);
		else if(condomlvl2) 
			faceArray.push(9);
		else
			faceArray.push(3);
	}
	else if(justStripped) {
		if(generallvl3) 
			faceArray.push(12);
		else if(generallvl2) 
			faceArray.push(6);
		else
			faceArray.push(2);
	}
	else if(isStandby) {
		if(generallvl3) 
			faceArray.push(11);
		else if(generallvl2) 
			faceArray.push(5);
		else
			faceArray.push(1);
	}
	else if(rightArmIsBefore) {
		if(generallvl3) {
			if(rightArmIsFera)
				faceArray.push(15);
			else
				faceArray.push(13);
		}
		else if(generallvl2) 
			faceArray.push(7);
		else
			faceArray.push(1);
	}
	else if(firstSetup) {
		if(generallvl3) {
			if(metBlowjobDesireReqs)
				faceArray.push(15);
			else
				faceArray.push(13);
		}
		else if(generallvl2) 
			faceArray.push(7);
		else
			faceArray.push(1);
	}
	else {
		if(generallvl3) {
			faceArray.push(11);
			faceArray.push(14);
		}
		else if(generallvl2) {
			faceArray.push(5);
			faceArray.push(9);
		}
		else
			faceArray.push(1);
	}
	
	let faceId = faceArray[Math.randomInt(faceArray.length)];
	let eyebrowsArray = [];
	let eyesArray = [];
	let mouthArray = [];
	let leftArmArray = [];
	let rightArmArray = [];
	
	
	if(faceId === 1) {
		eyebrowsArray.push('koma1');
		eyebrowsArray.push('koma2');
		eyesArray.push('mae1');
		eyesArray.push('mae2');
		mouthArray.push('ku1');
		mouthArray.push('mu1');
		mouthArray.push('mu2');
		mouthArray.push('ho1');
		mouthArray.push('ho2');
		rightArmArray.push('normal_1');
		leftArmArray.push('normal_1');
		this.setTachieHoppe(1);
		this.setTachieSweat(1);
	}
	else if(faceId === 2) {
		eyebrowsArray.push('koma1');
		eyebrowsArray.push('koma2');
		eyesArray.push('mae1');
		eyesArray.push('mae2');
		mouthArray.push('ku1');
		mouthArray.push('mu1');
		mouthArray.push('mu2');
		mouthArray.push('ho1');
		mouthArray.push('ho2');
		mouthArray.push('wa1');
		rightArmArray.push('up_1');
		leftArmArray.push('normal_1');
		this.setTachieHoppe(1);
		this.setTachieSweat(1);
	}
	else if(faceId === 3) {
		eyebrowsArray.push('koma1');
		eyebrowsArray.push('koma2');
		eyebrowsArray.push('oko1');
		eyesArray.push('mae1');
		eyesArray.push('mae2');
		eyesArray.push('mae3');
		mouthArray.push('ku1');
		mouthArray.push('mu2');
		mouthArray.push('ho1');
		mouthArray.push('ho2');
		mouthArray.push('ho3');
		if(rightArmIsBefore && !rightArmIsFera) rightArmArray.push('normal_1');
		this.setTachieHoppe(1);
		this.setTachieSweat(1);
	}
	else if(faceId === 4) {
		eyebrowsArray.push('koma1');
		eyebrowsArray.push('koma2');
		eyebrowsArray.push('oko1');
		eyesArray.push('mae3');
		eyesArray.push('urumae2');
		eyesArray.push('toji1');
		mouthArray.push('ku1');
		mouthArray.push('ho2');
		mouthArray.push('ho3');
		mouthArray.push('wa1');
		rightArmArray.push('up_1');
		leftArmArray.push('normal_1');
		this.setTachieHoppe(1);
		this.setTachieSweat(1);
	}
	else if(faceId === 5) {
		eyebrowsArray.push('kiri1');
		eyebrowsArray.push('kiri2');
		eyesArray.push('mae1');
		eyesArray.push('mae2');
		mouthArray.push('mu2');
		mouthArray.push('chu1');
		mouthArray.push('ho1');
		mouthArray.push('nico1');
		mouthArray.push('nico2');
		mouthArray.push('nico3');
		rightArmArray.push('normal_1');
		rightArmArray.push('kiss_after_1');
		leftArmArray.push('normal_1');
		this.setTachieHoppe(1);
	}
	else if(faceId === 6) {
		eyebrowsArray.push('kiri1');
		eyebrowsArray.push('kiri2');
		eyesArray.push('mae2');
		eyesArray.push('urumae2');
		mouthArray.push('mu2');
		mouthArray.push('chu1');
		mouthArray.push('pero1');
		mouthArray.push('nico1');
		mouthArray.push('nico2');
		mouthArray.push('nico3');
		rightArmArray.push('up_1');
		leftArmArray.push('pet_1');
		leftArmArray.push('pet_2');
		this.setTachieHoppe(1);
	}
	else if(faceId === 7) {
		eyebrowsArray.push('kiri1');
		eyebrowsArray.push('kiri2');
		eyebrowsArray.push('nico2');
		eyesArray.push('mae3');
		if(firstSetup) {
			this.resetTachieMouth();
			rightArmArray.push('kiss_before_1');
		}
		else {
			mouthArray.push('chu1');
			mouthArray.push('chu2');
			rightArmArray.push('kiss_after_1');
		}
		leftArmArray.push('normal_1');
		this.setTachieHoppe(1);
	}
	else if(faceId === 8) {
		eyebrowsArray.push('kiri1');
		eyebrowsArray.push('kiri2');
		eyebrowsArray.push('nico1');
		eyesArray.push('mae1');
		eyesArray.push('mae2');
		eyesArray.push('urumae1');
		eyesArray.push('urumae2');
		mouthArray.push('mu2');
		mouthArray.push('ho1');
		mouthArray.push('ho2');
		mouthArray.push('nico2');
		mouthArray.push('nico3');
		if(Math.random() < 0.5) rightArmArray.push('up_1');
		else if(rightArmIsBefore && !rightArmIsFera) rightArmArray.push('up_1');
		else if(rightArmIsSuckFinger) mouthArray = [];
		this.setTachieHoppe(1);
	}
	else if(faceId === 9) {
		eyebrowsArray.push('kiri1');
		eyebrowsArray.push('kiri2');
		eyebrowsArray.push('koma2');
		eyesArray.push('mae2');
		eyesArray.push('urumae2');
		mouthArray.push('suck1');
		mouthArray.push('suck2');
		rightArmArray.push('suck_fingers_1');
		if(isAroused) this.setTachieHoppe(1);
	}
	else if(faceId === 10) {
		eyebrowsArray.push('kiri1');
		eyebrowsArray.push('kiri2');
		eyebrowsArray.push('koma1');
		eyebrowsArray.push('koma2');
		eyesArray.push('mae3');
		eyesArray.push('urumae1');
		eyesArray.push('urumae2');
		eyesArray.push('toji1');
		eyesArray.push('ahe1');
		mouthArray.push('ho2');
		mouthArray.push('ho3');
		mouthArray.push('wa1');
		mouthArray.push('fera1');
		mouthArray.push('fera2');
		rightArmArray.push('up_1');
		rightArmArray.push('normal_1');
		leftArmArray.push('normal_1');
		this.setTachieHoppe(1);
		this.setTachieSweat(1);
	}
	else if(faceId === 11) {
		eyebrowsArray.push('nico1');
		eyebrowsArray.push('nico2');
		eyebrowsArray.push('kiri1');
		eyebrowsArray.push('kiri2');
		eyesArray.push('mae1');
		eyesArray.push('mae2');
		eyesArray.push('mae3');
		eyesArray.push('urumae2');
		mouthArray.push('nico1');
		mouthArray.push('nico2');
		mouthArray.push('nico3');
		mouthArray.push('nico4');
		mouthArray.push('pero1');
		rightArmArray.push('kiss_after_1');
		rightArmArray.push('kiss_after_2');
		rightArmArray.push('up_1');
		leftArmArray.push('pet_1');
		leftArmArray.push('pet_2');
		leftArmArray.push('pet_3');
		if(isAroused) this.setTachieHoppe(1);
	}
	else if(faceId === 12) {
		eyebrowsArray.push('nico1');
		eyebrowsArray.push('nico2');
		eyebrowsArray.push('kiri1');
		eyebrowsArray.push('kiri2');
		eyesArray.push('mae2');
		eyesArray.push('urumae2');
		mouthArray.push('nico2');
		mouthArray.push('nico3');
		mouthArray.push('nico4');
		mouthArray.push('nico5');
		mouthArray.push('pero1');
		rightArmArray.push('kiss_after_2');
		rightArmArray.push('up_1');
		leftArmArray.push('pet_1');
		leftArmArray.push('pet_2');
		leftArmArray.push('pet_3');
		if(isAroused) this.setTachieHoppe(1);
	}
	else if(faceId === 13) {
		eyebrowsArray.push('nico1');
		eyebrowsArray.push('nico2');
		if(firstSetup) {
			eyesArray.push('mae1');
			eyesArray.push('mae2');
			this.resetTachieMouth();
			rightArmArray.push('kiss_before_1');
		}
		else {
			eyesArray.push('mae3');
			eyesArray.push('heartmae2');
			eyesArray.push('toji1');
			mouthArray.push('chu1');
			mouthArray.push('chu2');
			mouthArray.push('nico5');
			mouthArray.push('fera3');
			rightArmArray.push('kiss_after_2');
		}
		leftArmArray.push('pet_1');
		leftArmArray.push('pet_2');
		leftArmArray.push('pet_3');
		this.setTachieHoppe(1);
	}
	else if(faceId === 14) {
		eyebrowsArray.push('nico1');
		eyebrowsArray.push('nico2');
		eyesArray.push('mae2');
		eyesArray.push('urumae1');
		eyesArray.push('urumae2');
		eyesArray.push('heartmae2');
		mouthArray.push('suck3');
		mouthArray.push('suck4');
		rightArmArray.push('suck_fingers_2');
		leftArmArray.push('pet_1');
		leftArmArray.push('pet_2');
		leftArmArray.push('pet_3');
		if(isAroused) this.setTachieHoppe(1);
	}
	else if(faceId === 15) {
		eyebrowsArray.push('nico1');
		eyebrowsArray.push('nico2');
		eyebrowsArray.push('kiri1');
		eyebrowsArray.push('kiri2');
		eyebrowsArray.push('koma2');
		eyesArray.push('mae2');
		eyesArray.push('mae3');
		eyesArray.push('urumae1');
		eyesArray.push('urumae2');
		eyesArray.push('heartmae1');
		mouthArray.push('fera1');
		mouthArray.push('fera2');
		mouthArray.push('fera3');
		mouthArray.push('fera4');
		if(firstSetup) {
			this.resetTachieMouth();
			rightArmArray.push('fera_before_1');
		}
		else {
			rightArmArray.push('fera_after_1');
		}
		leftArmArray.push('pet_1');
		leftArmArray.push('pet_2');
		leftArmArray.push('pet_3');
		this.setTachieHoppe(1);
	}
	else if(faceId === 16) {
		eyebrowsArray.push('nico1');
		eyebrowsArray.push('nico2');
		eyesArray.push('toji1');
		eyesArray.push('mae3');
		eyesArray.push('urumae1');
		eyesArray.push('urumae2');
		eyesArray.push('heartmae1');
		eyesArray.push('heartmae2');
		mouthArray.push('nico1');
		mouthArray.push('nico2');
		mouthArray.push('nico3');
		mouthArray.push('nico4');
		mouthArray.push('nico5');
		mouthArray.push('pero1');
		if(rightArmIsBefore && !rightArmIsFera) rightArmArray.push('up_1');
		else if(rightArmIsSuckFinger) mouthArray = [];
		leftArmArray.push('pet_1');
		leftArmArray.push('pet_2');
		leftArmArray.push('pet_3');
		if(isAroused) this.setTachieHoppe(1);
	}
	else if(faceId === 17) {
		eyebrowsArray.push('nico1');
		eyebrowsArray.push('nico2');
		eyebrowsArray.push('kiri1');
		eyebrowsArray.push('kiri2');
		eyebrowsArray.push('koma1');
		eyebrowsArray.push('oko1');
		eyesArray.push('toji1');
		eyesArray.push('mae3');
		eyesArray.push('ahe1');
		eyesArray.push('urumae1');
		eyesArray.push('urumae2');
		eyesArray.push('heartmae1');
		eyesArray.push('heartmae2');
		eyesArray.push('heartahe1');
		mouthArray.push('ku1');
		mouthArray.push('ho3');
		mouthArray.push('wa1');
		mouthArray.push('fera1');
		mouthArray.push('fera2');
		mouthArray.push('fera3');
		mouthArray.push('fera4');
		if(rightArmIsBefore && !rightArmIsFera) rightArmArray.push('up_1');
		else if(rightArmIsSuckFinger) mouthArray = [];
		leftArmArray.push('normal_1');
		if(isAroused) this.setTachieHoppe(1);
	}
	
	if(eyebrowsArray.length > 0) {
		this.setTachieEyebrows(eyebrowsArray[Math.randomInt(eyebrowsArray.length)]);
	}
	if(eyesArray.length > 0) {
		this.setTachieEyes(eyesArray[Math.randomInt(eyesArray.length)]);
	}
	if(mouthArray.length > 0) {
		this.setTachieMouth(mouthArray[Math.randomInt(mouthArray.length)]);
	}
	if(rightArmArray.length > 0) {
		this.setTachieRightArm(rightArmArray[Math.randomInt(rightArmArray.length)]);
	}
	if(leftArmArray.length > 0) {
		this.setTachieLeftArm(leftArmArray[Math.randomInt(leftArmArray.length)]);
	}
	
	
	if(this.tachieRightArm === 'fera_before_1') {
		this.setTachieFrontB('rightarm_fera_before_1');
	}
	else if(this.tachieRightArm === 'fera_after_1') {
		this.setTachieFrontB('rightarm_fera_after_1');
	}
	else if(this.tachieRightArm === 'kiss_before_1') {
		this.setTachieFrontB('rightarm_kiss_before_1');
	}
	else if(this.tachieRightArm === 'suck_fingers_1') {
		this.setTachieFrontB('rightarm_suck_fingers_1');
	}
	else if(this.tachieRightArm === 'suck_fingers_2') {
		this.setTachieFrontB('rightarm_suck_fingers_2');
	}
	else {
		this.resetTachieFrontB();
	}
	
	if(this._stripper_beltCondomCount >= 4) {
		this.setTachieCondomBelt(4);
	}
	else if(this._stripper_beltCondomCount >= 1) {
		this.setTachieCondomBelt(this._stripper_beltCondomCount);
	}
	else {
		this.resetTachieCondomBelt();
	}
	
	if(this._stripper_braCondomCount >= 4 && isWearingBra) {
		this.setTachieCondomBra(4);
	}
	else if(this._stripper_braCondomCount >= 1 && isWearingBra) {
		this.setTachieCondomBra(this._stripper_braCondomCount);
	}
	else {
		this.resetTachieCondomBra();
	}
	
	if(this._stripper_nipplesCondomCount >= 1 && this._stripper_nipplesCondomCount <= 2) {
		if(isWearingBra)
			this.setTachieCondomChikubi('bra_' + this._stripper_nipplesCondomCount);
		else
			this.setTachieCondomChikubi('naked_' + this._stripper_nipplesCondomCount);
	}
	else {
		this.resetTachieCondomChikubi();
	}
	
	if(this._stripper_headCondomCount >= 4) {
		this.setTachieCondomHead(4);
	}
	else if(this._stripper_headCondomCount >= 1) {
		this.setTachieCondomHead(this._stripper_headCondomCount);
	}
	else {
		this.resetTachieCondomHead();
	}
	
	this.setTachieFloorCondomId();
	
	if(this.tachieCondomBra == 4) {
		this.setTachieBackC('kon_bra_4');
	}
	else {
		this.resetTachieBackC();
	}
	
	if(this.tachieMouth.includes('fera'))
		this.setTachieStrayFaceExtension(ConfigManager.convertedTachieMouthName(this) + '_');
	else
		this.resetTachieStrayFaceExtension();

	this.setAllowTachieEmoteUpdate(true);
};

// Stripper Boobs
Game_Actor.prototype.emoteStripperBoobsPose = function() {
	this.setAllowTachieEmoteUpdate(false);
	let justOrgasmed = this.didLastGetHitBySkillType(JUST_SKILLTYPE_KARRYN_ORGASM) || this.justOrgasmed();
	let isAroused = this.isAroused() || justOrgasmed;
	let isWearingPanties = this.isWearingPanties();
	let isWearingOuterOutfit = this.clothingStage === 1;
	let isWearingBra = this.clothingStage <= 2;
	
	let justStripped = this.didLastGetHitBySkillType(JUST_SKILLTYPE_KARRYN_STRIP_CLOTHES);
	let reactingToCondom = this.didLastGetHitBySkillType(JUST_SKILLTYPE_ENEMY_TOSSED_CONDOM_STAGE) || this.didLastGetHitBySkillType(JUST_SKILLTYPE_ENEMY_TIPPED_CONDOM);
	
	let generalReactionScore = this.getReactionScore();
	let orgasmReactionScore = this.getOrgasmReactionScore();
	let patronCondomReactionScore = this.patronCondomReactionScore();
	
	let generallvl3 = generalReactionScore >= VAR_DEF_RS_LV3_REQ;
	let generallvl2 = generalReactionScore >= VAR_DEF_RS_LV2_REQ;
	let orgasmlvl3 = orgasmReactionScore >= VAR_DEF_RS_LV3_REQ;
	let orgasmlvl2 = orgasmReactionScore >= VAR_DEF_RS_LV2_REQ;
	let condomlvl3 = patronCondomReactionScore  >= VAR_DEF_RS_LV3_REQ;
	let condomlvl2 = patronCondomReactionScore >= VAR_DEF_RS_LV2_REQ;
	
	if(isWearingPanties) {
		this.setTachieBody(1);
		this.setTachiePanties(1);
	}
	else {
		this.setTachieBody(2);
		this.resetTachiePanties();
	}
	
	
	
	let faceArray = [];
	this.resetTachieHoppe();
	this.resetTachieSweat();
	
	if(justOrgasmed) {
		if(orgasmlvl3) 
			faceArray.push(12);
		else if(orgasmlvl2) 
			faceArray.push(8);
		else
			faceArray.push(4);
	}
	else if(reactingToCondom) {
		if(condomlvl3) 
			faceArray.push(11);
		else if(condomlvl2) 
			faceArray.push(9);
		else
			faceArray.push(3);
	}
	else if(justStripped) {
		if(generallvl3) 
			faceArray.push(10);
		else if(generallvl2) 
			faceArray.push(6);
		else
			faceArray.push(2);
	}
	else {
		if(generallvl3) 
			faceArray.push(9);
		else if(generallvl2) 
			faceArray.push(5);
		else
			faceArray.push(1);
	}
	
	let faceId = faceArray[Math.randomInt(faceArray.length)];
	let eyebrowsArray = [];
	let eyesArray = [];
	let mouthArray = [];
	let boobsArray = [];
	let frontDArray = [];

	
	if(faceId === 1) {
		eyebrowsArray.push('koma1');
		eyebrowsArray.push('koma2');
		eyesArray.push('mae1');
		eyesArray.push('mae2');
		mouthArray.push('ku1');
		mouthArray.push('ku2');
		mouthArray.push('mu1');
		mouthArray.push('mu2');
		mouthArray.push('wa1');
		boobsArray.push('cover');
		this.setTachieHoppe(1);
		this.setTachieSweat(1);
	}
	else if(faceId === 2) {
		eyebrowsArray.push('koma1');
		eyebrowsArray.push('koma2');
		eyesArray.push('mae2');
		eyesArray.push('mae3');
		eyesArray.push('urumae2');
		mouthArray.push('ku1');
		mouthArray.push('ku2');
		mouthArray.push('mu2');
		mouthArray.push('wa1');
		mouthArray.push('wa2');
		boobsArray.push('cover');
		this.setTachieHoppe(1);
		this.setTachieSweat(1);
	}
	else if(faceId === 3) {
		eyebrowsArray.push('koma1');
		eyebrowsArray.push('koma2');
		eyebrowsArray.push('oko1');
		eyesArray.push('mae2');
		eyesArray.push('mae3');
		eyesArray.push('urumae2');
		mouthArray.push('ku2');
		mouthArray.push('mu2');
		mouthArray.push('mu1');
		mouthArray.push('wa1');
		boobsArray.push('cover');
		this.setTachieHoppe(1);
		this.setTachieSweat(1);
	}
	else if(faceId === 4) {
		eyebrowsArray.push('koma1');
		eyebrowsArray.push('koma2');
		eyebrowsArray.push('oko1');
		eyesArray.push('mae3');
		eyesArray.push('toji1');
		eyesArray.push('urumae2');
		mouthArray.push('ahe1');
		mouthArray.push('ho1');
		mouthArray.push('wa2');
		mouthArray.push('wa3');
		boobsArray.push('cover');
		this.setTachieHoppe(1);
		this.setTachieSweat(1);
	}
	else if(faceId === 5) {
		eyebrowsArray.push('kiri1');
		eyebrowsArray.push('kiri2');
		eyesArray.push('mae1');
		eyesArray.push('mae2');
		mouthArray.push('hu1');
		mouthArray.push('hu2');
		mouthArray.push('hu3');
		mouthArray.push('mu1');
		mouthArray.push('mu2');
		boobsArray.push('zuri');
		if(Math.random() < 0.6) frontDArray.push('1');
		this.setTachieHoppe(1);
	}
	else if(faceId === 6) {
		eyebrowsArray.push('kiri1');
		eyebrowsArray.push('kiri2');
		eyesArray.push('mae2');
		eyesArray.push('mae3');
		eyesArray.push('urumae2');
		mouthArray.push('hu2');
		mouthArray.push('hu3');
		mouthArray.push('nico1');
		mouthArray.push('nico2');
		mouthArray.push('pero1');
		boobsArray.push('zuri');
		this.setTachieHoppe(1);
	}
	else if(faceId === 7) {
		eyebrowsArray.push('kiri1');
		eyebrowsArray.push('kiri2');
		eyebrowsArray.push('nico1');
		eyesArray.push('mae1');
		eyesArray.push('mae2');
		eyesArray.push('urumae1');
		eyesArray.push('urumae2');
		mouthArray.push('mu1');
		mouthArray.push('mu2');
		mouthArray.push('hu2');
		mouthArray.push('hu3');
		mouthArray.push('wa1');
		mouthArray.push('nico3');
		boobsArray.push('zuri');
		this.setTachieHoppe(1);
	}
	else if(faceId === 8) {
		eyebrowsArray.push('kiri1');
		eyebrowsArray.push('kiri2');
		eyebrowsArray.push('koma1');
		eyebrowsArray.push('koma2');
		eyesArray.push('mae3');
		eyesArray.push('urumae1');
		eyesArray.push('urumae2');
		eyesArray.push('toji1');
		eyesArray.push('ahe1');
		mouthArray.push('ahe1');
		mouthArray.push('ahe2');
		mouthArray.push('ho1');
		mouthArray.push('wa1');
		mouthArray.push('wa2');
		mouthArray.push('wa3');
		boobsArray.push('cover');
		this.setTachieHoppe(1);
		this.setTachieSweat(1);
	}
	else if(faceId === 9) {
		eyebrowsArray.push('nico1');
		eyebrowsArray.push('nico2');
		eyebrowsArray.push('kiri2');
		eyesArray.push('mae1');
		eyesArray.push('mae2');
		mouthArray.push('nico1');
		mouthArray.push('nico2');
		mouthArray.push('nico3');
		mouthArray.push('pero1');
		mouthArray.push('pero2');
		mouthArray.push('pero3');
		boobsArray.push('zuri');
		if(Math.random() < 0.6) {
			frontDArray.push('1');
			frontDArray.push('2');
		}
		if(isAroused) this.setTachieHoppe(1);
	}
	else if(faceId === 10) {
		eyebrowsArray.push('nico1');
		eyebrowsArray.push('nico2');
		eyebrowsArray.push('kiri2');
		eyesArray.push('mae1');
		eyesArray.push('mae2');
		eyesArray.push('mae3');
		eyesArray.push('urumae1');
		eyesArray.push('urumae2');
		mouthArray.push('hu2');
		mouthArray.push('hu3');
		mouthArray.push('nico1');
		mouthArray.push('nico2');
		mouthArray.push('nico3');
		mouthArray.push('pero1');
		boobsArray.push('zuri');
		if(isAroused) this.setTachieHoppe(1);
	}
	else if(faceId === 11) {
		eyebrowsArray.push('nico1');
		eyebrowsArray.push('nico2');
		eyesArray.push('toji1');
		eyesArray.push('mae3');
		eyesArray.push('urumae1');
		eyesArray.push('urumae2');
		eyesArray.push('heartmae1');
		eyesArray.push('heartmae2');
		mouthArray.push('nico1');
		mouthArray.push('nico2');
		mouthArray.push('nico3');
		mouthArray.push('pero1');
		mouthArray.push('pero2');
		mouthArray.push('pero3');
		mouthArray.push('ahe3');
		mouthArray.push('ahe4');
		boobsArray.push('zuri');
		if(isAroused) this.setTachieHoppe(1);
	}
	else if(faceId === 12) {
		eyebrowsArray.push('nico1');
		eyebrowsArray.push('nico2');
		eyebrowsArray.push('kiri1');
		eyebrowsArray.push('kiri2');
		eyebrowsArray.push('koma1');
		eyebrowsArray.push('oko1');
		eyesArray.push('toji1');
		eyesArray.push('mae3');
		eyesArray.push('ahe1');
		eyesArray.push('urumae1');
		eyesArray.push('urumae2');
		eyesArray.push('heartmae1');
		eyesArray.push('heartmae2');
		eyesArray.push('heartahe1');
		mouthArray.push('ahe1');
		mouthArray.push('ahe2');
		mouthArray.push('ahe3');
		mouthArray.push('ahe4');
		mouthArray.push('ahe5');
		mouthArray.push('wa3');
		mouthArray.push('ho1');
		boobsArray.push('cover');
		boobsArray.push('zuri');
		if(isAroused) this.setTachieHoppe(1);
	}
	

	if(eyebrowsArray.length > 0) {
		this.setTachieEyebrows(eyebrowsArray[Math.randomInt(eyebrowsArray.length)]);
	}
	if(eyesArray.length > 0) {
		this.setTachieEyes(eyesArray[Math.randomInt(eyesArray.length)]);
	}
	if(mouthArray.length > 0) {
		this.setTachieMouth(mouthArray[Math.randomInt(mouthArray.length)]);
	}
	if(boobsArray.length > 0) {
		let boobsName = boobsArray[Math.randomInt(boobsArray.length)]
		if(isWearingBra) 
			boobsName += '_1';
		else 
			boobsName += '_2';
		if(isAroused)
			boobsName += '_hard';
		this.setTachieBoobs(boobsName);
	}
	if(frontDArray.length > 0) {
		let frontDName = frontDArray[Math.randomInt(frontDArray.length)]
		if(isWearingBra) {
			frontDName = 'dancing_bra_' + frontDName;
		}
		else {
			frontDName = 'dancing_naked_' + frontDName;
		}
		
		if(isAroused && this.boobsSizeIsPCup()) {
			frontDName += '_hard';
		}
		
		this.setTachieFrontD(frontDName);
	}
	else {
		this.resetTachieFrontD();
	}
	
	if(isWearingOuterOutfit) {
		if(this.tachieBoobs.includes('cover_1')) {
			this.setTachieBackA('outer_1');
			this.setTachieFrontA('outer_cover_1');
		}
		else if(this.tachieBoobs.includes('cover_2')) {
			this.setTachieBackA('outer_1');
			this.setTachieFrontA('outer_cover_2');
		}
		else if(this.tachieBoobs.includes('zuri_1')) {
			this.setTachieBackA('outer_1');
			this.setTachieFrontA('outer_zuri_1');
		}
		else if(this.tachieBoobs.includes('zuri_2')) {
			this.setTachieBackA('outer_1');
			this.setTachieFrontA('outer_zuri_2');
		}
		else {
			this.resetTachieBackA();
			this.resetTachieFrontA();
		}
	}
	else {
		this.resetTachieBackA();
		this.resetTachieFrontA();
	}
	
	if(this._stripper_beltCondomCount >= 4) {
		this.setTachieCondomBelt(4);
	}
	else if(this._stripper_beltCondomCount >= 1) {
		this.setTachieCondomBelt(this._stripper_beltCondomCount);
	}
	else {
		this.resetTachieCondomBelt();
	}
	
	if(this._stripper_braCondomCount >= 4 && isWearingBra) {
		if(this.tachieBoobs.includes('cover')) {
			this.setTachieCondomBra('cover_4');
		}
		else {
			if(this.tachieFrontD.includes('dancing'))
				this.setTachieCondomBra('zuri_dancing_4');
			else
				this.setTachieCondomBra('zuri_4');
		}
	}
	else if(this._stripper_braCondomCount >= 1 && isWearingBra) {
		if(this.tachieBoobs.includes('cover')) {
			this.setTachieCondomBra('cover_' + this._stripper_braCondomCount);
		}
		else {
			if(this.tachieFrontD.includes('dancing')) {
				this.setTachieCondomBra('zuri_dancing_' + this._stripper_braCondomCount);
			}
			else {
				this.setTachieCondomBra('zuri_' + this._stripper_braCondomCount);
			}
		}
	}
	else {
		this.resetTachieCondomBra();
	}
	
	if(this._stripper_nipplesCondomCount >= 1 && this._stripper_nipplesCondomCount <= 2) {
		if(isWearingBra) {
			if(this.tachieBoobs.includes('cover'))
				this.setTachieCondomChikubi('cover_bra_' + this._stripper_nipplesCondomCount);
			else {
				if(this.tachieFrontD.includes('dancing'))
					this.setTachieCondomChikubi('zuri_bra_dancing_' + this._stripper_nipplesCondomCount);
				else
					this.setTachieCondomChikubi('zuri_bra_' + this._stripper_nipplesCondomCount);
			}
		}
		else {
			if(this.tachieBoobs.includes('cover'))
				this.setTachieCondomChikubi('cover_naked_' + this._stripper_nipplesCondomCount);
			else {
				if(this.tachieFrontD.includes('dancing'))
					this.setTachieCondomChikubi('zuri_naked_dancing_' + this._stripper_nipplesCondomCount);
				else
					this.setTachieCondomChikubi('zuri_naked_' + this._stripper_nipplesCondomCount);
			}
		}
	}
	else {
		this.resetTachieCondomChikubi();
	}
	
	if(this._stripper_headCondomCount >= 4) {
		this.setTachieCondomHead(4);
	}
	else if(this._stripper_headCondomCount >= 1) {
		this.setTachieCondomHead(this._stripper_headCondomCount);
	}
	else {
		this.resetTachieCondomHead();
	}
	
	this.setTachieFloorCondomId();
	
	if(this.tachieFrontD.includes('dancing'))
		this.setTachieStrayBoobsExtension('zuri_dancing_');
	else if(this.tachieBoobs.includes('zuri'))
		this.setTachieStrayBoobsExtension('zuri_');
	else
		this.setTachieStrayBoobsExtension('cover_');

	this.setAllowTachieEmoteUpdate(true);
};

// Stripper Pussy
Game_Actor.prototype.emoteStripperPussyPose = function() {
	this.setAllowTachieEmoteUpdate(false);
	let justOrgasmed = this.didLastGetHitBySkillType(JUST_SKILLTYPE_KARRYN_ORGASM) || this.justOrgasmed();
	let isAroused = this.isAroused() || justOrgasmed;
	let isWearingPanties = this.isWearingPanties();
	let isWearingOuterOutfit = this.clothingStage === 1;
	let isWearingBra = this.clothingStage <= 2;
	let metPussySexReqs = this.pussyDesire >= this.pussySexPussyDesireRequirement() && this.cockDesire >= this.pussySexCockDesireRequirement();
	let isPcup = this.boobsSizeIsPCup();
	
	let justStripped = this.didLastGetHitBySkillType(JUST_SKILLTYPE_KARRYN_STRIP_CLOTHES);
	let reactingToCondom = this.didLastGetHitBySkillType(JUST_SKILLTYPE_ENEMY_TOSSED_CONDOM_STAGE) || this.didLastGetHitBySkillType(JUST_SKILLTYPE_ENEMY_TIPPED_CONDOM);
	
	
	let generalReactionScore = this.getReactionScore();
	let orgasmReactionScore = this.getOrgasmReactionScore();
	let patronCondomReactionScore = this.patronCondomReactionScore();
	
	let generallvl3 = generalReactionScore >= VAR_DEF_RS_LV3_REQ;
	let generallvl2 = generalReactionScore >= VAR_DEF_RS_LV2_REQ;
	let orgasmlvl3 = orgasmReactionScore >= VAR_DEF_RS_LV3_REQ;
	let orgasmlvl2 = orgasmReactionScore >= VAR_DEF_RS_LV2_REQ;
	let condomlvl3 = patronCondomReactionScore  >= VAR_DEF_RS_LV3_REQ;
	let condomlvl2 = patronCondomReactionScore >= VAR_DEF_RS_LV2_REQ;
	
	if(isWearingBra) {
		if(isAroused)
			this.setTachieBoobs('1_hard');
		else
			this.setTachieBoobs('1');
	}
	else {
		if(isAroused)
			this.setTachieBoobs('2_hard');
		else
			this.setTachieBoobs('2');
	}
	
	let faceArray = [];
	this.resetTachieHoppe();
	this.resetTachieSweat();
	
	if(justOrgasmed) {
		if(orgasmlvl3) 
			faceArray.push(13);
		else if(orgasmlvl2) 
			faceArray.push(8);
		else
			faceArray.push(4);
	}
	else if(reactingToCondom) {
		if(condomlvl3) 
			faceArray.push(12);
		else if(condomlvl2) 
			faceArray.push(9);
		else
			faceArray.push(3);
	}
	else if(justStripped) {
		if(generallvl3) 
			faceArray.push(10);
		else if(generallvl2) 
			faceArray.push(6);
		else
			faceArray.push(2);
	}
	else {
		if(generallvl3) {
			faceArray.push(9);
			if(metPussySexReqs)
				faceArray.push(11);
		}
		else if(generallvl2) 
			faceArray.push(5);
		else
			faceArray.push(1);
	}
	
	let faceId = faceArray[Math.randomInt(faceArray.length)];
	let eyebrowsArray = [];
	let eyesArray = [];
	let mouthArray = [];
	let rightArmArray = [];
	let frontDArray = [];
	
	if(faceId === 1) {
		eyebrowsArray.push('koma1');
		eyebrowsArray.push('koma2');
		eyesArray.push('mae1');
		eyesArray.push('mae2');
		mouthArray.push('ku1');
		mouthArray.push('hu1');
		mouthArray.push('ho1');
		mouthArray.push('wa1');
		this.setTachieHoppe(1);
		this.setTachieSweat(1);
	}
	else if(faceId === 2) {
		eyebrowsArray.push('koma1');
		eyebrowsArray.push('koma2');
		eyesArray.push('mae2');
		eyesArray.push('mae3');
		eyesArray.push('urumae2');
		mouthArray.push('ku1');
		mouthArray.push('hu1');
		mouthArray.push('ho2');
		mouthArray.push('wa1');
		this.setTachieHoppe(1);
		this.setTachieSweat(1);
	}
	else if(faceId === 3) {
		eyebrowsArray.push('koma1');
		eyebrowsArray.push('koma2');
		eyebrowsArray.push('oko1');
		eyesArray.push('mae2');
		eyesArray.push('mae3');
		eyesArray.push('urumae2');
		mouthArray.push('ku1');
		mouthArray.push('hu1');
		mouthArray.push('ho1');
		mouthArray.push('ho2');
		mouthArray.push('wa1');
		this.setTachieHoppe(1);
		this.setTachieSweat(1);
	}
	else if(faceId === 4) {
		eyebrowsArray.push('koma1');
		eyebrowsArray.push('koma2');
		eyebrowsArray.push('oko1');
		eyesArray.push('mae3');
		eyesArray.push('toji1');
		eyesArray.push('urumae2');
		mouthArray.push('ahe1');
		mouthArray.push('ku1');
		mouthArray.push('ho3');
		mouthArray.push('wa2');
		mouthArray.push('wa3');
		this.setTachieHoppe(1);
		this.setTachieSweat(1);
	}
	else if(faceId === 5) {
		eyebrowsArray.push('kiri1');
		eyebrowsArray.push('kiri2');
		eyesArray.push('mae1');
		eyesArray.push('mae2');
		mouthArray.push('hu1');
		mouthArray.push('hu2');
		mouthArray.push('hu3');
		mouthArray.push('ho1');
		mouthArray.push('ho2');
		mouthArray.push('wa1');
		if(Math.random() < 0.6) frontDArray.push('1'); 
		this.setTachieHoppe(1);
	}
	else if(faceId === 6) {
		eyebrowsArray.push('kiri1');
		eyebrowsArray.push('kiri2');
		eyesArray.push('mae2');
		eyesArray.push('mae3');
		eyesArray.push('urumae2');
		mouthArray.push('hu2');
		mouthArray.push('hu3');
		mouthArray.push('ho2');
		mouthArray.push('nico1');
		mouthArray.push('pero1');
		rightArmArray.push('up_1');
		this.setTachieHoppe(1);
	}
	else if(faceId === 7) {
		eyebrowsArray.push('kiri1');
		eyebrowsArray.push('kiri2');
		eyebrowsArray.push('nico1');
		eyesArray.push('mae1');
		eyesArray.push('mae2');
		eyesArray.push('urumae1');
		eyesArray.push('urumae2');
		mouthArray.push('hu2');
		mouthArray.push('hu3');
		mouthArray.push('ho2');
		mouthArray.push('nico1');
		mouthArray.push('nico2');
		mouthArray.push('pero2');
		this.setTachieHoppe(1);
	}
	else if(faceId === 8) {
		eyebrowsArray.push('kiri1');
		eyebrowsArray.push('kiri2');
		eyebrowsArray.push('koma1');
		eyebrowsArray.push('koma2');
		eyesArray.push('mae3');
		eyesArray.push('urumae1');
		eyesArray.push('urumae2');
		eyesArray.push('toji1');
		eyesArray.push('ahe1');
		mouthArray.push('ahe1');
		mouthArray.push('ahe2');
		mouthArray.push('ho3');
		mouthArray.push('wa2');
		mouthArray.push('wa3');
		this.setTachieHoppe(1);
		this.setTachieSweat(1);
	}
	else if(faceId === 9) {
		eyebrowsArray.push('nico1');
		eyebrowsArray.push('nico2');
		eyebrowsArray.push('kiri2');
		eyesArray.push('mae1');
		eyesArray.push('mae2');
		mouthArray.push('nico1');
		mouthArray.push('nico2');
		mouthArray.push('nico3');
		mouthArray.push('nico4');
		mouthArray.push('pero1');
		mouthArray.push('pero2');
		mouthArray.push('ahe5');
		mouthArray.push('ho1');
		mouthArray.push('ho2');
		if(Math.random() < 0.6) {
			frontDArray.push('1'); 
			frontDArray.push('2'); 
		}
		if(isAroused) this.setTachieHoppe(1);
	}
	else if(faceId === 10) {
		eyebrowsArray.push('nico1');
		eyebrowsArray.push('nico2');
		eyebrowsArray.push('kiri2');
		eyesArray.push('mae1');
		eyesArray.push('mae2');
		eyesArray.push('mae3');
		eyesArray.push('urumae1');
		eyesArray.push('urumae2');
		mouthArray.push('hu2');
		mouthArray.push('hu3');
		mouthArray.push('ho1');
		mouthArray.push('nico2');
		mouthArray.push('nico3');
		mouthArray.push('nico4');
		rightArmArray.push('up_1');
		if(isAroused) this.setTachieHoppe(1);
	}
	else if(faceId === 11) {
		eyebrowsArray.push('nico1');
		eyebrowsArray.push('nico2');
		eyebrowsArray.push('koma2');
		eyesArray.push('mae2');
		eyesArray.push('mae3');
		eyesArray.push('urumae1');
		eyesArray.push('urumae2');
		eyesArray.push('heartmae1');
		mouthArray.push('hu3');
		mouthArray.push('ho1');
		mouthArray.push('nico1');
		mouthArray.push('nico2');
		mouthArray.push('nico3');
		mouthArray.push('nico4');
		mouthArray.push('pero2');
		mouthArray.push('ahe5');
		rightArmArray.push('kupa_1');
		if(isAroused) this.setTachieHoppe(1);
	}
	else if(faceId === 12) {
		eyebrowsArray.push('nico1');
		eyebrowsArray.push('nico2');
		eyesArray.push('toji1');
		eyesArray.push('mae3');
		eyesArray.push('urumae1');
		eyesArray.push('urumae2');
		eyesArray.push('heartmae1');
		eyesArray.push('heartmae2');
		mouthArray.push('nico1');
		mouthArray.push('nico2');
		mouthArray.push('nico3');
		mouthArray.push('nico4');
		mouthArray.push('pero1');
		mouthArray.push('pero2');
		mouthArray.push('ahe5');
		mouthArray.push('hu2');
		mouthArray.push('hu3');
		if(isAroused) this.setTachieHoppe(1);
	}
	else if(faceId === 13) {
		eyebrowsArray.push('nico1');
		eyebrowsArray.push('nico2');
		eyebrowsArray.push('kiri1');
		eyebrowsArray.push('kiri2');
		eyebrowsArray.push('koma1');
		eyebrowsArray.push('oko1');
		eyesArray.push('toji1');
		eyesArray.push('mae3');
		eyesArray.push('ahe1');
		eyesArray.push('urumae1');
		eyesArray.push('urumae2');
		eyesArray.push('heartmae1');
		eyesArray.push('heartmae2');
		eyesArray.push('heartahe1');
		mouthArray.push('ahe1');
		mouthArray.push('ahe2');
		mouthArray.push('ahe3');
		mouthArray.push('ahe4');
		mouthArray.push('ahe5');
		mouthArray.push('wa2');
		mouthArray.push('wa3');
		mouthArray.push('ho2');
		mouthArray.push('ho3');
		this.setTachieHoppe(1);
		this.setTachieSweat(1);
	}
	
	

	if(eyebrowsArray.length > 0) {
		this.setTachieEyebrows(eyebrowsArray[Math.randomInt(eyebrowsArray.length)]);
	}
	if(eyesArray.length > 0) {
		this.setTachieEyes(eyesArray[Math.randomInt(eyesArray.length)]);
	}
	if(mouthArray.length > 0) {
		this.setTachieMouth(mouthArray[Math.randomInt(mouthArray.length)]);
	}
	if(rightArmArray.length > 0) {
		this.setTachieRightArm(rightArmArray[Math.randomInt(rightArmArray.length)]);
	}
	else {
		this.setTachieRightArm('normal_1');
	}
	if(frontDArray.length > 0) {
		let frontDName = '';
		if(isPcup) {
			if(isWearingBra) {
				frontDName = 'dancing_bra_' + frontDArray[Math.randomInt(frontDArray.length)];
			}
			else {
				frontDName = 'dancing_naked_' + frontDArray[Math.randomInt(frontDArray.length)];
			}
			if(isAroused) frontDName += '_hard';
			
		}
		else {
			frontDName = 'dancing_' + frontDArray[Math.randomInt(frontDArray.length)];
		}
		this.setTachieFrontD(frontDName);
	}
	else {
		this.resetTachieFrontD();
	}
	
	let isDancing = this.tachieFrontD.includes('dancing');
	let isRightArmKupa = this.tachieRightArm.includes('kupa');
	
	if(isRightArmKupa) {
		if(Karryn.isCensored())
			this.setTachieBody('kupa_1_cen');
		else
			this.setTachieBody('kupa_1');
		
		this.setTachieFrontB('rightarm_kupa_1');
	}
	else {
		if(Karryn.isCensored())
			this.setTachieBody('1_cen');
		else
			this.setTachieBody('1');
		
		this.resetTachieFrontB();
	}
	
	if(isWearingOuterOutfit) {
		if(isDancing)
			this.setTachieFrontA('outer_dancing_1');
		else
			this.setTachieFrontA('outer_1');
	}
	else {
		this.resetTachieFrontA();
	}
	
	if(isWearingPanties) {
		if(isRightArmKupa) {
			if(isDancing)
				this.setTachiePanties('kupa_dancing_1');
			else
				this.setTachiePanties('kupa_1');
		}
		else {
			if(isDancing)
				this.setTachiePanties('normal_dancing_1');
			else
				this.setTachiePanties('normal_1');
		}
	}
	else {
		this.resetTachiePanties();
	}
	
	if(isDancing) {
		if(isRightArmKupa) {
			this.setTachiePubicExtension('kupa_');
			this.setTachieSemenWetExtension('kupa_dancing_');
		}
		else {
			this.setTachiePubicExtension('dancing_');
			this.setTachieSemenWetExtension('dancing_');
		}
	}
	else {
		if(isRightArmKupa){
			this.setTachiePubicExtension('kupa_');
			this.setTachieSemenWetExtension('kupa_');
		}
		else {
			this.resetTachiePubicExtension();
			this.resetTachieSemenWetExtension();
		}
	}
	
	
	if(this._stripper_beltCondomCount >= 4) {
		if(isPcup && isRightArmKupa) {
			this.setTachieCondomBelt('rightarm_kupa_4');
			this.setTachieCondomBeltHasPCup(true);
		}
		else if(this.tachieFrontD.includes('dancing')) {
			this.setTachieCondomBelt('dancing_4');
			this.setTachieCondomBeltHasPCup(false);
		}
		else {
			this.setTachieCondomBelt('4');
			this.setTachieCondomBeltHasPCup(false);
		}
	}
	else if(this._stripper_beltCondomCount >= 1) {
		if(isPcup && isRightArmKupa) {
			this.setTachieCondomBelt('rightarm_kupa_' + this._stripper_beltCondomCount);
			this.setTachieCondomBeltHasPCup(true);
		}
		else if(this.tachieFrontD.includes('dancing')) {
			this.setTachieCondomBelt('dancing_' + this._stripper_beltCondomCount);
			this.setTachieCondomBeltHasPCup(false);
		}
		else {
			this.setTachieCondomBelt(this._stripper_beltCondomCount);
			this.setTachieCondomBeltHasPCup(true);
		}
	}
	else {
		this.resetTachieCondomBelt();
	}
	
	if(this._stripper_braCondomCount >= 4 && isWearingBra) {
		if(isPcup && isDancing)
			this.setTachieCondomBra('dancing_4');
		else
			this.setTachieCondomBra(4);
	}
	else if(this._stripper_braCondomCount >= 1 && isWearingBra) {
		if(isPcup && isDancing)
			this.setTachieCondomBra('dancing_' + this._stripper_braCondomCount);
		else
			this.setTachieCondomBra(this._stripper_braCondomCount);
	}
	else {
		this.resetTachieCondomBra();
	}
	
	if(isWearingBra && isPcup) {
		if(this._stripper_braCondomCount >= 4)
			this.setTachieBackA('kon_bra_4');
		else if(this._stripper_braCondomCount == 3)
			this.setTachieBackA('kon_bra_3');
	}
	else {
		this.resetTachieBackA();
	}
	
	if(this._stripper_nipplesCondomCount >= 1 && this._stripper_nipplesCondomCount <= 2) {
		if(isWearingBra) {
			if(isPcup && isDancing)
				this.setTachieCondomChikubi('bra_dancing_' + this._stripper_nipplesCondomCount);
			else
				this.setTachieCondomChikubi('bra_' + this._stripper_nipplesCondomCount);
		}
		else {
			if(isPcup && isDancing)
				this.setTachieCondomChikubi('naked_dancing_' + this._stripper_nipplesCondomCount);
			else
				this.setTachieCondomChikubi('naked_' + this._stripper_nipplesCondomCount);
		}
	}
	else {
		this.resetTachieCondomChikubi();
	}
	
	if(this._stripper_headCondomCount >= 4) {
		this.setTachieCondomHead(4);
	}
	else if(this._stripper_headCondomCount >= 1) {
		this.setTachieCondomHead(this._stripper_headCondomCount);
	}
	else {
		this.resetTachieCondomHead();
	}
	
	this.setTachieFloorCondomId();

	if(isDancing) {
		if(isRightArmKupa)
			this.setTachieStrayGroinExtension('kupa_dancing_');
		else
			this.setTachieStrayGroinExtension('dancing_');
		
		this.setTachieStrayButtExtension('dancing_');
		
		if(isPcup)
			this.setTachieStrayBoobsExtension('dancing_');
		else
			this.resetTachieStrayBoobsExtension();
	}
	else if(isRightArmKupa) {
		this.setTachieStrayGroinExtension('kupa_');
		this.resetTachieStrayButtExtension();
		this.resetTachieStrayBoobsExtension();
	}
	else {
		this.resetTachieStrayGroinExtension();
		this.resetTachieStrayButtExtension();
		this.resetTachieStrayBoobsExtension();
	}

	this.setAllowTachieEmoteUpdate(true);
};

// Stripper Butt
Game_Actor.prototype.emoteStripperButtPose = function() {
	this.setAllowTachieEmoteUpdate(false);
	let justOrgasmed = this.didLastGetHitBySkillType(JUST_SKILLTYPE_KARRYN_ORGASM) || this.justOrgasmed();
	let isAroused = this.isAroused() || justOrgasmed;
	let isWearingPanties = this.isWearingPanties();
	let isWearingOuterOutfit = this.clothingStage === 1;
	let isWearingBra = this.clothingStage <= 2;
	let metAnalSexReqs = this.buttDesire >= this.analSexButtDesireRequirement() && this.cockDesire >= this.analSexCockDesireRequirement();
	
	let justStripped = this.didLastGetHitBySkillType(JUST_SKILLTYPE_KARRYN_STRIP_CLOTHES);
	let reactingToCondom = this.didLastGetHitBySkillType(JUST_SKILLTYPE_ENEMY_TOSSED_CONDOM_STAGE) || this.didLastGetHitBySkillType(JUST_SKILLTYPE_ENEMY_TIPPED_CONDOM);
	
	
	let generalReactionScore = this.getReactionScore();
	let orgasmReactionScore = this.getOrgasmReactionScore();
	let patronCondomReactionScore = this.patronCondomReactionScore();
	
	let generallvl3 = generalReactionScore >= VAR_DEF_RS_LV3_REQ;
	let generallvl2 = generalReactionScore >= VAR_DEF_RS_LV2_REQ;
	let orgasmlvl3 = orgasmReactionScore >= VAR_DEF_RS_LV3_REQ;
	let orgasmlvl2 = orgasmReactionScore >= VAR_DEF_RS_LV2_REQ;
	let condomlvl3 = patronCondomReactionScore  >= VAR_DEF_RS_LV3_REQ;
	let condomlvl2 = patronCondomReactionScore >= VAR_DEF_RS_LV2_REQ;
	
	
	if(isWearingBra) {
		this.setTachieBoobs('1');
		this.setTachieFrontE('bow_1');
	}
	else {
		this.setTachieBoobs('2');
		this.resetTachieFrontE();
	}
	
	let faceArray = [];
	this.resetTachieHoppe();
	this.resetTachieSweat();
	
	if(justOrgasmed) {
		if(orgasmlvl3) 
			faceArray.push(13);
		else if(orgasmlvl2) 
			faceArray.push(8);
		else
			faceArray.push(4);
	}
	else if(reactingToCondom) {
		if(condomlvl3) 
			faceArray.push(12);
		else if(condomlvl2) 
			faceArray.push(9);
		else
			faceArray.push(3);
	}
	else if(justStripped) {
		if(generallvl3) 
			faceArray.push(10);
		else if(generallvl2) 
			faceArray.push(6);
		else
			faceArray.push(2);
	}
	else {
		if(generallvl3) {
			faceArray.push(9);
			if(metAnalSexReqs)
				faceArray.push(11);
		}
		else if(generallvl2) 
			faceArray.push(5);
		else
			faceArray.push(1);
	}
	
	let faceId = faceArray[Math.randomInt(faceArray.length)];
	let eyebrowsArray = [];
	let eyesArray = [];
	let mouthArray = [];
	let rightArmArray = [];
	let frontDArray = [];
	
	if(faceId === 1) {
		eyebrowsArray.push('koma1');
		eyebrowsArray.push('koma2');
		eyesArray.push('yoko1');
		eyesArray.push('yoko2');
		mouthArray.push('ku1');
		mouthArray.push('mu1');
		mouthArray.push('mu3');
		mouthArray.push('ho1');
		mouthArray.push('ho2');
		this.setTachieHoppe(1);
		this.setTachieSweat(1);
	}
	else if(faceId === 2) {
		eyebrowsArray.push('koma1');
		eyebrowsArray.push('koma2');
		eyesArray.push('yoko2');
		eyesArray.push('uruyoko2');
		mouthArray.push('mu1');
		mouthArray.push('ho1');
		mouthArray.push('ho2');
		this.setTachieHoppe(1);
		this.setTachieSweat(1);
	}
	else if(faceId === 3) {
		eyebrowsArray.push('koma1');
		eyebrowsArray.push('koma2');
		eyebrowsArray.push('oko1');
		eyesArray.push('yoko2');
		eyesArray.push('uruyoko2');
		mouthArray.push('ku1');
		mouthArray.push('mu1');
		mouthArray.push('mu3');
		mouthArray.push('ho1');
		mouthArray.push('ho2');
		mouthArray.push('ho3');
		mouthArray.push('wa1');
		this.setTachieHoppe(1);
		this.setTachieSweat(1);
	}
	else if(faceId === 4) {
		eyebrowsArray.push('koma1');
		eyebrowsArray.push('koma2');
		eyebrowsArray.push('oko1');
		eyesArray.push('toji1');
		eyesArray.push('uruyoko2');
		mouthArray.push('ku1');
		mouthArray.push('mu3');
		mouthArray.push('ho2');
		mouthArray.push('ho3');
		mouthArray.push('wa2');
		mouthArray.push('wa1');
		this.setTachieHoppe(1);
		this.setTachieSweat(1);
	}
	else if(faceId === 5) {
		eyebrowsArray.push('kiri1');
		eyebrowsArray.push('kiri2');
		eyesArray.push('yoko1');
		eyesArray.push('yoko2');
		mouthArray.push('mu1');
		mouthArray.push('mu3');
		mouthArray.push('mu2');
		mouthArray.push('ho3');
		mouthArray.push('ho1');
		if(Math.random() < 0.6) frontDArray.push('dancing_1');
		this.setTachieHoppe(1);
	}
	else if(faceId === 6) {
		eyebrowsArray.push('kiri1');
		eyebrowsArray.push('kiri2');
		eyesArray.push('yoko2');
		eyesArray.push('uruyoko2');
		mouthArray.push('mu1');
		mouthArray.push('mu2');
		mouthArray.push('ho3');
		mouthArray.push('ho1');
		rightArmArray.push('strip_1');
		this.setTachieHoppe(1);
	}
	else if(faceId === 7) {
		eyebrowsArray.push('kiri1');
		eyebrowsArray.push('kiri2');
		eyebrowsArray.push('nico1');
		eyesArray.push('yoko1');
		eyesArray.push('yoko2');
		eyesArray.push('uruyoko1');
		eyesArray.push('uruyoko2');
		mouthArray.push('mu1');
		mouthArray.push('mu2');
		mouthArray.push('ho3');
		mouthArray.push('ho1');
		mouthArray.push('nico1');
		this.setTachieHoppe(1);
	}
	else if(faceId === 8) {
		eyebrowsArray.push('kiri1');
		eyebrowsArray.push('kiri2');
		eyebrowsArray.push('koma1');
		eyebrowsArray.push('koma2');
		eyesArray.push('toji1');
		eyesArray.push('ahe1');
		eyesArray.push('uruyoko1');
		eyesArray.push('uruyoko2');
		mouthArray.push('ku1');
		mouthArray.push('mu3');
		mouthArray.push('ho3');
		mouthArray.push('ho2');
		mouthArray.push('wa1');
		mouthArray.push('wa2');
		this.setTachieHoppe(1);
		this.setTachieSweat(1);
	}
	else if(faceId === 9) {
		eyebrowsArray.push('nico1');
		eyebrowsArray.push('nico2');
		eyebrowsArray.push('kiri2');
		eyesArray.push('yoko1');
		eyesArray.push('yoko2');
		mouthArray.push('nico1');
		mouthArray.push('nico2');
		mouthArray.push('nico3');
		mouthArray.push('mu1');
		mouthArray.push('mu2');
		mouthArray.push('ho3');
		if(Math.random() < 0.6) {
			frontDArray.push('dancing_1');
			frontDArray.push('dancing_2');
		}
		if(isAroused) this.setTachieHoppe(1);
	}
	else if(faceId === 10) {
		eyebrowsArray.push('nico1');
		eyebrowsArray.push('nico2');
		eyebrowsArray.push('kiri2');
		eyesArray.push('toji1');
		eyesArray.push('yoko1');
		eyesArray.push('yoko2');
		eyesArray.push('uruyoko1');
		eyesArray.push('uruyoko2');
		mouthArray.push('nico1');
		mouthArray.push('nico2');
		mouthArray.push('mu1');
		mouthArray.push('mu2');
		mouthArray.push('ho3');
		mouthArray.push('ho2');
		mouthArray.push('ho1');
		rightArmArray.push('strip_1');
		if(isAroused) this.setTachieHoppe(1);
	}
	else if(faceId === 11) {
		eyebrowsArray.push('nico1');
		eyebrowsArray.push('nico2');
		eyebrowsArray.push('koma2');
		eyesArray.push('yoko2');
		eyesArray.push('toji1');
		eyesArray.push('uruyoko1');
		eyesArray.push('uruyoko2');
		eyesArray.push('heartyoko1');
		mouthArray.push('nico1');
		mouthArray.push('nico2');
		mouthArray.push('mu1');
		mouthArray.push('mu2');
		mouthArray.push('nico3');
		rightArmArray.push('kupa_1');
		if(isAroused) this.setTachieHoppe(1);
	}
	else if(faceId === 12) {
		eyebrowsArray.push('nico1');
		eyebrowsArray.push('nico2');
		eyesArray.push('toji1');
		eyesArray.push('yoko2');
		eyesArray.push('uruyoko1');
		eyesArray.push('uruyoko2');
		eyesArray.push('heartyoko1');
		eyesArray.push('heartyoko2');
		mouthArray.push('nico1');
		mouthArray.push('nico2');
		mouthArray.push('nico3');
		mouthArray.push('mu1');
		mouthArray.push('mu2');
		mouthArray.push('ho2');
		mouthArray.push('ho3');
		if(isAroused) this.setTachieHoppe(1);
	}
	else if(faceId === 13) {
		eyebrowsArray.push('nico1');
		eyebrowsArray.push('nico2');
		eyebrowsArray.push('kiri1');
		eyebrowsArray.push('kiri2');
		eyebrowsArray.push('koma1');
		eyebrowsArray.push('oko1');
		eyesArray.push('toji1');
		eyesArray.push('yoko2');
		eyesArray.push('ahe1');
		eyesArray.push('uruyoko1');
		eyesArray.push('uruyoko2');
		eyesArray.push('heartyoko1');
		eyesArray.push('heartyoko2');
		eyesArray.push('heartahe1');
		mouthArray.push('ku1');
		mouthArray.push('nico1');
		mouthArray.push('nico2');
		mouthArray.push('mu3');
		mouthArray.push('ho2');
		mouthArray.push('ho3');
		mouthArray.push('wa1');
		mouthArray.push('wa2');
		this.setTachieHoppe(1);
		this.setTachieSweat(1);
	}

	if(eyebrowsArray.length > 0) {
		this.setTachieEyebrows(eyebrowsArray[Math.randomInt(eyebrowsArray.length)]);
	}
	if(eyesArray.length > 0) {
		this.setTachieEyes(eyesArray[Math.randomInt(eyesArray.length)]);
	}
	if(mouthArray.length > 0) {
		this.setTachieMouth(mouthArray[Math.randomInt(mouthArray.length)]);
	}
	if(rightArmArray.length > 0) {
		this.setTachieRightArm(rightArmArray[Math.randomInt(rightArmArray.length)]);
	}
	else {
		this.setTachieRightArm('normal_1');
	}
	if(frontDArray.length > 0) {
		this.setTachieFrontD(frontDArray[Math.randomInt(frontDArray.length)]);
	}
	else {
		this.resetTachieFrontD();
	}
	
	if(this.tachieRightArm.includes('kupa')) {
		this.setTachieFrontB('rightarm_kupa_1');
		this.setTachieFrontC('butt_kupa_1');
	}
	else if(this.tachieRightArm.includes('strip')) {
		this.setTachieFrontB('rightarm_strip_1');
		this.resetTachieFrontC();
	}
	else {
		this.resetTachieFrontB();
		this.resetTachieFrontC();
	}
	
	if(isWearingOuterOutfit) {
		if(this.tachieFrontD.includes('dancing'))
			this.setTachieFrontA('outer_dancing_1');
		else
			this.setTachieFrontA('outer_1');
	}
	else {
		this.resetTachieFrontA();
	}
	
	if(isWearingPanties) {
		if(this.tachieFrontD.includes('dancing')) {
			this.setTachiePanties('dancing_1');
			this.setTachiePubicExtension('dancing_panties_');
		}
		else {
			this.setTachiePanties(1);
			this.setTachiePubicExtension('panties_');
		}
		if(Karryn.isCensored())
			this.setTachieBody('1_cen');
		else
			this.setTachieBody('1');
	}
	else {
		this.resetTachiePanties();
		if(this.tachieFrontD.includes('dancing')) {
			this.setTachiePubicExtension('dancing_');
		}
		else {
			this.setTachiePanties(1);
			this.resetTachiePubicExtension();
		}
		if(Karryn.isCensored())
			this.setTachieBody('2_cen');
		else
			this.setTachieBody('2');
	}
	
	if(this.tachieFrontD.includes('dancing')) {
		this.setTachieSemenWetExtension('dancing_');
	}
	else {
		this.resetTachieSemenWetExtension();
	}
	
	if(this._stripper_beltCondomCount >= 4) {
		if(this.tachieFrontD.includes('dancing'))
			this.setTachieCondomBelt('dancing_4');
		else
			this.setTachieCondomBelt(4);
	}
	else if(this._stripper_beltCondomCount >= 1) {
		if(this.tachieFrontD.includes('dancing'))
			this.setTachieCondomBelt('dancing_' + this._stripper_beltCondomCount);
		else
			this.setTachieCondomBelt(this._stripper_beltCondomCount);
	}
	else {
		this.resetTachieCondomBelt();
	}
	
	if(this._stripper_braCondomCount >= 4 && isWearingBra) {
		this.setTachieCondomBra(4);
	}
	else if(this._stripper_braCondomCount >= 1 && isWearingBra) {
		this.setTachieCondomBra(this._stripper_braCondomCount);
	}
	else {
		this.resetTachieCondomBra();
	}
	
	if(this._stripper_nipplesCondomCount >= 1 && this._stripper_nipplesCondomCount <= 2) {
		if(isWearingBra)
			this.setTachieCondomChikubi('bra_' + this._stripper_nipplesCondomCount);
		else
			this.setTachieCondomChikubi('naked_' + this._stripper_nipplesCondomCount);
	}
	else {
		this.resetTachieCondomChikubi();
	}
	
	if(this._stripper_headCondomCount >= 4) {
		this.setTachieCondomHead(4);
	}
	else if(this._stripper_headCondomCount >= 1) {
		this.setTachieCondomHead(this._stripper_headCondomCount);
	}
	else {
		this.resetTachieCondomHead();
	}
	
	if(this._stripper_buttCondomCount >= 4) {
		if(this.tachieFrontB.includes('kupa')) {
			if(this.tachieFrontD.includes('dancing'))
				this.setTachieCondomButt('kupa_dancing_4');
			else
				this.setTachieCondomButt('kupa_4');
		}
		else {
			if(this.tachieFrontD.includes('dancing'))
				this.setTachieCondomButt('normal_dancing_4');
			else
				this.setTachieCondomButt('normal_4');
		}
	}
	else if(this._stripper_buttCondomCount >= 1) {
		if(this.tachieFrontB.includes('kupa')) {
			if(this.tachieFrontD.includes('dancing'))
				this.setTachieCondomButt('kupa_dancing_' + this._stripper_buttCondomCount);
			else
				this.setTachieCondomButt('kupa_' + this._stripper_buttCondomCount);
		}
		else {
			if(this.tachieFrontD.includes('dancing'))
				this.setTachieCondomButt('normal_dancing_' + this._stripper_buttCondomCount);
			else
				this.setTachieCondomButt('normal_' + this._stripper_buttCondomCount);
		}
	}
	else {
		this.resetTachieCondomButt();
	}
	
	this.setTachieFloorCondomId();
	
	if(this.tachieFrontD.includes('dancing')) {
		this.setTachieStrayButtExtension('dancing_');
		this.setTachieStrayGroinExtension('dancing_');
	}
	else if(this.tachieFrontB.includes('kupa')) {
		this.setTachieStrayButtExtension('kupa_');
		this.resetTachieStrayGroinExtension();
	}
	else {
		this.setTachieStrayButtExtension('dancing_');
		this.resetTachieStrayGroinExtension();
	}
	
	this.setAllowTachieEmoteUpdate(true);
};

//Stripper Sex
//Stripper VIP
Game_Actor.prototype.emoteStripperVIPPose = function() {
	this.setAllowTachieEmoteUpdate(false);
	let justOrgasmed = this.didLastGetHitBySkillType(JUST_SKILLTYPE_KARRYN_ORGASM) || this.justOrgasmed();
	let isAroused = this.isAroused() || justOrgasmed;
	let givingBJ = this.isBodySlotPenis(MOUTH_ID);
	
	let justGotHarassed = this.didLastGetHitBySkillType(JUST_SKILLTYPE_ENEMY_TOY_PLAY) || this.didLastGetHitBySkillType(JUST_SKILLTYPE_PASSIVE_TOY) || this.didLastGetHitBySkillType(JUST_SKILLTYPE_ENEMY_PETTING);
	let lastHitPussySex = this.didLastGetHitBySkillType(JUST_SKILLTYPE_ENEMY_PUSSY_SEX) || this.didLastGetHitBySkillType(JUST_SKILLTYPE_KARRYN_PUSSY_SEX);
	let lastHitAnalSex = this.didLastGetHitBySkillType(JUST_SKILLTYPE_ENEMY_ANAL_SEX) || this.didLastGetHitBySkillType(JUST_SKILLTYPE_KARRYN_ANAL_SEX);
	let lastHitTittyFuck = this.didLastGetHitBySkillType(JUST_SKILLTYPE_ENEMY_TITTYFUCK) || this.didLastGetHitBySkillType(JUST_SKILLTYPE_KARRYN_TITTYFUCK);
	let lastHitBlowjob = this.didLastGetHitBySkillType(JUST_SKILLTYPE_KARRYN_BLOWJOB) || this.didLastGetHitBySkillType(JUST_SKILLTYPE_ENEMY_BLOWJOB);
	let lastHitHandjob = this.didLastGetHitBySkillType(JUST_SKILLTYPE_KARRYN_HANDJOB) || this.didLastGetHitBySkillType(JUST_SKILLTYPE_ENEMY_HANDJOB);
	let lastHandjobIsToRight = this._lastHandUsedForHandjob === RIGHT_HAND_ID;
	let lastHandjobIsToLeft = this._lastHandUsedForHandjob === LEFT_HAND_ID;
	let karrynSwallowingCum = this.didLastGetHitBySkillType(JUST_SKILLTYPE_ENEMY_CUM_SWALLOW);
	let justGotPussyCreampie = this.didLastGetHitBySkillType(JUST_SKILLTYPE_ENEMY_PUSSY_CREAMPIE);
	let justGotAnalCreampie = this.didLastGetHitBySkillType(JUST_SKILLTYPE_ENEMY_ANAL_CREAMPIE);
	let karrynGotBukkaked = this.didLastGetHitBySkillType(JUST_SKILLTYPE_ENEMY_BUKKAKE);
	
	let generalReactionScore = this.getReactionScore();
	let orgasmReactionScore = this.getOrgasmReactionScore();
	let bukkakeReactionScore = this.getBukkakeReactionScore();
	let swallowReactionScore = this.getSwallowReactionScore();
	let pussyCreampieReactionScore = this.getPussyCreampieReactionScore();
	let analCreampieReactionScore = this.getAnalCreampieReactionScore();
	
	let generallvl3 = generalReactionScore >= VAR_DEF_RS_LV3_REQ;
	let generallvl2 = generalReactionScore >= VAR_DEF_RS_LV2_REQ;
	let orgasmlvl3 = orgasmReactionScore >= VAR_DEF_RS_LV3_REQ;
	let orgasmlvl2 = orgasmReactionScore >= VAR_DEF_RS_LV2_REQ;
	let bukkakelvl3 = bukkakeReactionScore >= VAR_DEF_RS_LV3_REQ;
	let bukkakelvl2 = bukkakeReactionScore >= VAR_DEF_RS_LV2_REQ;
	let swallowlvl3 = swallowReactionScore  >= VAR_DEF_RS_LV3_REQ;
	let swallowlvl2 = swallowReactionScore >= VAR_DEF_RS_LV2_REQ;
	let pussyCreampielvl3 = pussyCreampieReactionScore  >= VAR_DEF_RS_LV3_REQ;
	let pussyCreampielvl2 = pussyCreampieReactionScore >= VAR_DEF_RS_LV2_REQ;
	let analCreampielvl3 = analCreampieReactionScore  >= VAR_DEF_RS_LV3_REQ;
	let analCreampielvl2 = analCreampieReactionScore >= VAR_DEF_RS_LV2_REQ;
	
	let faceArray = [];
	this.resetTachieHoppe();
	this.resetTachieSweat();
	let headType = "normal_";
	if(givingBJ) {
		headType = 'fera_'
	}
	
	if(givingBJ) {
		if(justOrgasmed) {
			if(orgasmlvl3) 
				faceArray.push(21);
			else if(orgasmlvl2) 
				faceArray.push(14);
			else
				faceArray.push(7);
		}
		else if(karrynSwallowingCum) {
			if(swallowlvl3) 
				faceArray.push(18);
			else if(swallowlvl2) 
				faceArray.push(11);
			else
				faceArray.push(4);
		}
		else if(justGotPussyCreampie) {
			if(pussyCreampielvl3) 
				faceArray.push(21);
			else if(pussyCreampielvl2) 
				faceArray.push(14);
			else
				faceArray.push(7);
		}
		else if(justGotAnalCreampie) {
			if(analCreampielvl3) 
				faceArray.push(21);
			else if(analCreampielvl2) 
				faceArray.push(14);
			else
				faceArray.push(7);
		}
		else if(karrynGotBukkaked) {
			if(bukkakelvl3) 
				faceArray.push(18);
			else if(bukkakelvl2) 
				faceArray.push(11);
			else
				faceArray.push(4);
		}
		else if(lastHitHandjob) {
			if(generallvl3) 
				faceArray.push(19);
			else if(generallvl2) 
				faceArray.push(12);
			else
				faceArray.push(5);
		}
		else if(lastHitPussySex || lastHitTittyFuck || lastHitAnalSex) {
			if(generallvl3) 
				faceArray.push(20);
			else if(generallvl2) 
				faceArray.push(13);
			else
				faceArray.push(6);
		}
		else {
			if(generallvl3) 
				faceArray.push(18);
			else if(generallvl2) 
				faceArray.push(11);
			else
				faceArray.push(4);
		}
	}
	//Not Bj
	else {
		if(justOrgasmed) {
			if(orgasmlvl3) 
				faceArray.push(17);
			else if(orgasmlvl2) 
				faceArray.push(10);
			else
				faceArray.push(3);
		}
		else if(justGotPussyCreampie) {
			if(pussyCreampielvl3) 
				faceArray.push(17);
			else if(pussyCreampielvl2) 
				faceArray.push(10);
			else
				faceArray.push(3);
		}
		else if(justGotAnalCreampie) {
			if(analCreampielvl3) 
				faceArray.push(17);
			else if(analCreampielvl2) 
				faceArray.push(10);
			else
				faceArray.push(3);
		}
		else if(karrynGotBukkaked) {
			if(bukkakelvl3) 
				faceArray.push(15);
			else if(bukkakelvl2) 
				faceArray.push(8);
			else
				faceArray.push(1);
		}
		else if(lastHitPussySex || lastHitAnalSex) {
			if(generallvl3) 
				faceArray.push(16);
			else if(generallvl2) 
				faceArray.push(9);
			else
				faceArray.push(2);
		}
		else {
			if(generallvl3) 
				faceArray.push(15);
			else if(generallvl2) 
				faceArray.push(8);
			else
				faceArray.push(1);
		}
	}
	
	let faceId = faceArray[Math.randomInt(faceArray.length)];
	let eyebrowsArray = [];
	let eyesArray = [];
	let mouthArray = [];
	let tachieHoppeName = '';
	let tachieSweatName = '';
	let displayTachieHoppe = false;
	let displayTachieSweat = false;
	
	if(faceId === 1) {
		eyebrowsArray.push('koma1');
		eyebrowsArray.push('koma2');
		eyebrowsArray.push('oko1');
		if(lastHitHandjob) {
			if(lastHandjobIsToLeft) {
				eyesArray.push('left1');
				eyesArray.push('left2');
			}
			else {
				eyesArray.push('right1');
				eyesArray.push('right2');
			}
		}
		else {
			eyesArray.push('mae1');
			eyesArray.push('mae2');
		}
		mouthArray.push('ku1');
		mouthArray.push('ku2');
		mouthArray.push('ho1');
		mouthArray.push('mu1');
		mouthArray.push('mu2');
		mouthArray.push('wa2');
		tachieHoppeName += '1';
		displayTachieHoppe = true;
		tachieSweatName += '1';
		displayTachieSweat = true;
	}
	else if(faceId === 2) {
		eyebrowsArray.push('oko1');
		eyebrowsArray.push('koma1');
		eyebrowsArray.push('koma2');
		eyesArray.push('mae1');
		eyesArray.push('mae2');
		mouthArray.push('ahe1');
		mouthArray.push('ku1');
		mouthArray.push('wa1');
		mouthArray.push('wa2');
		tachieHoppeName += '1';
		displayTachieHoppe = true;
		tachieSweatName += '1';
		displayTachieSweat = true;
	}
	else if(faceId === 3) {
		eyebrowsArray.push('oko1');
		eyebrowsArray.push('koma1');
		eyebrowsArray.push('koma2');
		eyesArray.push('mae2');
		eyesArray.push('mae3');
		eyesArray.push('urumae1');
		eyesArray.push('urumae2');
		mouthArray.push('ahe1');
		mouthArray.push('ho2');
		mouthArray.push('wa1');
		mouthArray.push('wa2');
		mouthArray.push('ku1');
		tachieHoppeName += '1';
		displayTachieHoppe = true;
		tachieSweatName += '1';
		displayTachieSweat = true;
	}
	else if(faceId === 4) {
		eyebrowsArray.push('oko1');
		eyebrowsArray.push('koma1');
		eyebrowsArray.push('koma2');
		eyesArray.push('mae1');
		eyesArray.push('mae2');
		if(karrynSwallowingCum)
			eyesArray.push('toji1');
		mouthArray.push('1');
		mouthArray.push('2');
		tachieHoppeName += '1';
		displayTachieHoppe = true;
		tachieSweatName += '1';
		displayTachieSweat = true;
	}
	else if(faceId === 5) {
		eyebrowsArray.push('oko1');
		eyebrowsArray.push('koma1');
		eyebrowsArray.push('koma2');
		if(lastHandjobIsToLeft) {
			eyesArray.push('sita1');
			eyesArray.push('sita2');
		}
		else {
			eyesArray.push('mae1');
			eyesArray.push('mae2');
		}
		mouthArray.push('1');
		mouthArray.push('2');
		tachieHoppeName += '1';
		displayTachieHoppe = true;
		tachieSweatName += '1';
		displayTachieSweat = true;
	}
	else if(faceId === 6) {
		eyebrowsArray.push('oko1');
		eyebrowsArray.push('koma1');
		eyebrowsArray.push('koma2');
		eyesArray.push('sita2');
		eyesArray.push('sita1');
		mouthArray.push('1');
		mouthArray.push('2');
		tachieHoppeName += '1';
		displayTachieHoppe = true;
		tachieSweatName += '1';
		displayTachieSweat = true;
	}
	else if(faceId === 7) {
		eyebrowsArray.push('oko1');
		eyebrowsArray.push('koma1');
		eyebrowsArray.push('koma2');
		eyesArray.push('sita2');
		eyesArray.push('urusita1');
		eyesArray.push('urusita2');
		if(justOrgasmed)
			eyesArray.push('toji1');
		mouthArray.push('1');
		mouthArray.push('2');
		tachieHoppeName += '1';
		displayTachieHoppe = true;
		tachieSweatName += '1';
		displayTachieSweat = true;
	}
	else if(faceId === 8) {
		eyebrowsArray.push('kiri1');
		eyebrowsArray.push('kiri2');
		if(lastHitHandjob) {
			if(lastHandjobIsToLeft) {
				eyesArray.push('left1');
				eyesArray.push('left2');
			}
			else {
				eyesArray.push('right1');
				eyesArray.push('right2');
			}
		}
		else {
			eyesArray.push('mae1');
			eyesArray.push('mae2');
		}
		mouthArray.push('ku1');
		mouthArray.push('ho1');
		mouthArray.push('mu1');
		mouthArray.push('mu2');
		mouthArray.push('mu3');
		mouthArray.push('mu4');
		mouthArray.push('nico1');
		tachieHoppeName += '1';
		displayTachieHoppe = true;
	}
	else if(faceId === 9) {
		eyebrowsArray.push('kiri1');
		eyebrowsArray.push('kiri2');
		eyebrowsArray.push('koma2');
		eyesArray.push('mae1');
		eyesArray.push('mae2');
		eyesArray.push('urumae2');
		mouthArray.push('ahe1');
		mouthArray.push('mu2');
		mouthArray.push('mu4');
		mouthArray.push('ho1');
		mouthArray.push('ku2');
		mouthArray.push('wa2');
		tachieHoppeName += '1';
		displayTachieHoppe = true;
	}
	else if(faceId === 10) {
		eyebrowsArray.push('kiri1');
		eyebrowsArray.push('kiri2');
		eyebrowsArray.push('koma1');
		eyebrowsArray.push('koma2');
		eyesArray.push('mae2');
		eyesArray.push('mae3');
		eyesArray.push('urumae1');
		eyesArray.push('urumae2');
		if(justOrgasmed)
			eyesArray.push('ahe1');
		mouthArray.push('ahe1');
		mouthArray.push('ho2');
		mouthArray.push('wa1');
		mouthArray.push('wa2');
		mouthArray.push('ku1');
		tachieHoppeName += '1';
		displayTachieHoppe = true;
		tachieSweatName += '1';
		displayTachieSweat = true;
	}
	else if(faceId === 11) {
		eyebrowsArray.push('kiri1');
		eyebrowsArray.push('kiri2');
		eyesArray.push('mae1');
		eyesArray.push('mae2');
		eyesArray.push('urumae1');
		eyesArray.push('urumae2');
		if(karrynSwallowingCum)
			eyesArray.push('toji1');
		mouthArray.push('2');
		mouthArray.push('3');
		mouthArray.push('4');
		tachieHoppeName += '1';
		displayTachieHoppe = true;
	}
	else if(faceId === 12) {
		eyebrowsArray.push('kiri1');
		eyebrowsArray.push('kiri2');
		if(lastHandjobIsToLeft) {
			eyesArray.push('sita1');
			eyesArray.push('sita2');
			eyesArray.push('urusita1');
			eyesArray.push('urusita2');
		}
		else {
			eyesArray.push('mae1');
			eyesArray.push('mae2');
			eyesArray.push('urumae1');
			eyesArray.push('urumae2');
		}
		mouthArray.push('2');
		mouthArray.push('3');
		mouthArray.push('4');
		tachieHoppeName += '1';
		displayTachieHoppe = true;
	}
	else if(faceId === 13) {
		eyebrowsArray.push('kiri1');
		eyebrowsArray.push('kiri2');
		eyebrowsArray.push('koma2');
		eyesArray.push('sita2');
		eyesArray.push('sita1');
		eyesArray.push('urusita2');
		eyesArray.push('urusita1');
		mouthArray.push('2');
		mouthArray.push('3');
		mouthArray.push('4');
		tachieHoppeName += '1';
		displayTachieHoppe = true;
	}
	else if(faceId === 14) {
		eyebrowsArray.push('kiri1');
		eyebrowsArray.push('kiri2');
		eyebrowsArray.push('koma1');
		eyebrowsArray.push('koma2');
		eyesArray.push('sita2');
		eyesArray.push('urusita1');
		eyesArray.push('urusita2');
		if(justOrgasmed) {
			eyesArray.push('toji1');
			eyesArray.push('ahe1');
		}
		mouthArray.push('2');
		mouthArray.push('3');
		mouthArray.push('4');
		tachieHoppeName += '1';
		displayTachieHoppe = true;
		tachieSweatName += '1';
		displayTachieSweat = true;
	}
	else if(faceId === 15) {
		eyebrowsArray.push('nico1');
		eyebrowsArray.push('nico2');
		eyebrowsArray.push('kiri2');
		if(lastHitHandjob) {
			if(lastHandjobIsToLeft) {
				eyesArray.push('left1');
				eyesArray.push('left2');
				eyesArray.push('uruleft1');
				eyesArray.push('uruleft2');
				eyesArray.push('heartleft1');
				eyesArray.push('heartleft2');
			}
			else {
				eyesArray.push('right1');
				eyesArray.push('right2');
				eyesArray.push('ururight1');
				eyesArray.push('ururight2');
				eyesArray.push('heartright1');
				eyesArray.push('heartright2');
			}
		}
		else {
			eyesArray.push('mae1');
			eyesArray.push('mae2');
			eyesArray.push('urumae1');
			eyesArray.push('urumae2');
		}
		mouthArray.push('nico2');
		mouthArray.push('nico3');
		mouthArray.push('nico4');
		mouthArray.push('nico5');
		mouthArray.push('pero1');
		mouthArray.push('ho1');
		mouthArray.push('mu4');
		mouthArray.push('ahe2');
		if(isAroused) {
			tachieHoppeName += '1';
			displayTachieHoppe = true;
		}
	}
	else if(faceId === 16) {
		eyebrowsArray.push('nico1');
		eyebrowsArray.push('nico2');
		eyebrowsArray.push('kiri2');
		eyebrowsArray.push('koma2');
		eyesArray.push('mae1');
		eyesArray.push('mae2');
		eyesArray.push('urumae1');
		eyesArray.push('urumae2');
		eyesArray.push('heartmae1');
		eyesArray.push('heartmae2');
		mouthArray.push('nico2');
		mouthArray.push('nico3');
		mouthArray.push('nico4');
		mouthArray.push('nico5');
		mouthArray.push('pero1');
		mouthArray.push('ahe3');
		mouthArray.push('ahe2');
		if(isAroused) {
			tachieHoppeName += '1';
			displayTachieHoppe = true;
		}
	}
	else if(faceId === 17) {
		eyebrowsArray.push('nico1');
		eyebrowsArray.push('nico2');
		eyebrowsArray.push('kiri2');
		eyebrowsArray.push('koma1');
		eyebrowsArray.push('oko1');
		eyesArray.push('mae2');
		eyesArray.push('mae3');
		eyesArray.push('urumae1');
		eyesArray.push('urumae2');
		eyesArray.push('heartmae1');
		eyesArray.push('heartmae2');
		if(justOrgasmed) {
			eyesArray.push('ahe1');
			eyesArray.push('heartahe1');
		}
		mouthArray.push('wa1');
		mouthArray.push('wa2');
		mouthArray.push('nico4');
		mouthArray.push('nico5');
		mouthArray.push('ahe1');
		mouthArray.push('ahe3');
		mouthArray.push('ahe2');
		mouthArray.push('ku1');
		mouthArray.push('mu1');
		mouthArray.push('ho2')
		tachieHoppeName += '1';
		displayTachieHoppe = true;
		tachieSweatName += '1';
		displayTachieSweat = true;
	}
	else if(faceId === 18) {
		eyebrowsArray.push('nico1');
		eyebrowsArray.push('nico2');
		eyebrowsArray.push('kiri2');
		eyesArray.push('mae1');
		eyesArray.push('mae2');
		eyesArray.push('urumae1');
		eyesArray.push('urumae2');
		if(karrynSwallowingCum) {
			eyesArray.push('toji1');
			eyesArray.push('heartmae1');
		}
		mouthArray.push('2');
		mouthArray.push('3');
		mouthArray.push('4');
		mouthArray.push('5');
		mouthArray.push('6');
		if(isAroused) {
			tachieHoppeName += '1';
			displayTachieHoppe = true;
		}
	}
	else if(faceId === 19) {
		eyebrowsArray.push('nico1');
		eyebrowsArray.push('nico2');
		eyebrowsArray.push('kiri2');
		if(lastHandjobIsToRight) {
			eyesArray.push('mae1');
			eyesArray.push('mae2');
			eyesArray.push('urumae1');
			eyesArray.push('urumae2');
			eyesArray.push('heartmae1');
			eyesArray.push('heartmae2');
		}
		else {
			eyesArray.push('sita1');
			eyesArray.push('sita2');
			eyesArray.push('urusita1');
			eyesArray.push('urusita2');
			eyesArray.push('heartsita1');
			eyesArray.push('heartsita2');
		}
		mouthArray.push('2');
		mouthArray.push('3');
		mouthArray.push('4');
		mouthArray.push('5');
		mouthArray.push('6');
		if(isAroused) {
			tachieHoppeName += '1';
			displayTachieHoppe = true;
		}
	}
	else if(faceId === 20) {
		eyebrowsArray.push('nico1');
		eyebrowsArray.push('nico2');
		eyebrowsArray.push('kiri2');
		eyebrowsArray.push('koma1');
		if(justOrgasmed) {
			eyebrowsArray.push('oko1');
			eyesArray.push('ahe1');
			eyesArray.push('heartahe1');
		}
		eyesArray.push('sita1');
		eyesArray.push('sita2');
		eyesArray.push('urusita1');
		eyesArray.push('urusita2');
		eyesArray.push('heartsita1');
		eyesArray.push('heartsita2');
		eyesArray.push('toji1');
		mouthArray.push('2');
		mouthArray.push('3');
		mouthArray.push('4');
		mouthArray.push('5');
		mouthArray.push('6');
		tachieHoppeName += '1';
		displayTachieHoppe = true;
		tachieSweatName += '1';
		displayTachieSweat = true;
	}
	
	
	if(eyebrowsArray.length > 0) {
		this.setTachieEyebrows('' + headType + eyebrowsArray[Math.randomInt(eyebrowsArray.length)]);
	}
	if(eyesArray.length > 0) {
		this.setTachieEyes('' + headType + eyesArray[Math.randomInt(eyesArray.length)]);
	}
	if(mouthArray.length > 0) {
		this.setTachieMouth('' + headType + mouthArray[Math.randomInt(mouthArray.length)]);
	}
	
	if(displayTachieHoppe) this.setTachieHoppe('' + headType + tachieHoppeName);
	if(displayTachieSweat) this.setTachieSweat('' + headType + tachieSweatName);
	
	if(givingBJ) {
		this.setTachieHead('fera');
		this.setTachieHairExtension('fera_');
		this.setTachieSemenFaceExtension('fera_');
	}
	else {
		this.setTachieHead('normal');
		this.setTachieHairExtension('normal_');
		this.setTachieSemenFaceExtension('normal_');
	}
	
	
	if(this._stripper_beltCondomCount >= 4) {
		this.setTachieCondomBelt(4);
	}
	else if(this._stripper_beltCondomCount >= 1) {
		this.setTachieCondomBelt(this._stripper_beltCondomCount);
	}
	else {
		this.resetTachieCondomBelt();
	}
	
	if(this._stripper_nipplesCondomCount >= 1 && this._stripper_nipplesCondomCount <= 2) {
		if(this.tachieBoobs.includes('zuri'))
			this.setTachieCondomChikubi('zuri_' + this._stripper_nipplesCondomCount);
		else
			this.setTachieCondomChikubi('normal_' + this._stripper_nipplesCondomCount);
	}
	else {
		this.resetTachieCondomChikubi();
	}
	
	if(this._stripper_headCondomCount >= 4) {
		if(this.tachieHead.includes('fera'))
			this.setTachieCondomHead('fera_4');
		else
			this.setTachieCondomHead('normal_4');
	}
	else if(this._stripper_headCondomCount >= 1) {
		if(this.tachieHead.includes('fera'))
			this.setTachieCondomHead('fera_' + this._stripper_headCondomCount);
		else
			this.setTachieCondomHead('normal_' + this._stripper_headCondomCount);
	}
	else {
		this.resetTachieCondomHead();
	}
	
	//?????????????????????????????????????????????
	//???????????????????????????????????????????????????????????????????
	if(this.tachieHead.includes('fera')) {
		let printError = false;
		let errorMouth = '';
		let errorEyebrows = '';
		let errorEyes = '';
		if(!this.tachieMouth.includes('fera')) {
			errorMouth = this.tachieMouth;
			
			if(generallvl3) 
				this.setTachieMouth('fera_1');
			else if(generallvl2) 
				this.setTachieMouth('fera_2');
			else
				this.setTachieMouth('fera_1');
			
			printError = true;
		}
		if(!this.tachieEyebrows.includes('fera')) {
			errorEyebrows = this.tachieEyebrows;
			
			if(generallvl3) 
				this.setTachieEyebrows('fera_nico1');
			else if(generallvl2) 
				this.setTachieEyebrows('fera_kiri2');
			else
				this.setTachieEyebrows('fera_koma1');
			
			printError = true;
		}
		if(!this.tachieEyes.includes('fera')) {
			errorEyes = this.tachieEyes;
			
			if(generallvl3) 
				this.setTachieEyes('fera_urusita2');
			else if(generallvl2) 
				this.setTachieEyes('fera_sita2');
			else
				this.setTachieEyes('fera_urusita1');
			
			printError = true;
		}
		
		if(printError) {
			console.error('Stripper VIP mysterious fera orgasm misplaced expression issue');
			console.error('faceId:' + faceId);	
			if(this.tachieCockMouth) console.error('tachieCockMouth:' + this.tachieCockMouth);
			else console.error('no tachieCockMouth');
			console.error('givingBJ:' + givingBJ);
			console.error('justOrgasmed:' + justOrgasmed);
			console.error('tachieMouth:' + errorMouth);
			console.error('tachieEyebrows:' + errorEyebrows);
			console.error('tachieEyes:' + errorEyes);
		}
	}
	
	if(this.tachieMouth.includes('fera')) {
		this.setTachieStrayFaceExtension(ConfigManager.convertedTachieMouthName(this) + '_');
		this.setMaxTachieStrayFaceId(1,1,1);
	}
	else {
		this.setTachieStrayFaceExtension('normal_');
		this.setMaxTachieStrayFaceId(1,2,2);
	}
	
	this.setAllowTachieEmoteUpdate(true);
};

// Trainer Standby
Game_Actor.prototype.emoteTrainerStandbyPose = function() {
	
};

// Trainer Tekoki
Game_Actor.prototype.emoteTrainerTekokiPose = function() {
	this.setAllowTachieEmoteUpdate(false);
	let justOrgasmed = this.didLastGetHitBySkillType(JUST_SKILLTYPE_KARRYN_ORGASM) || this.justOrgasmed();
	let isAroused = this.isAroused() || justOrgasmed;
	let isHorny = this.trainerBattle_isUsingHornyVariation();
	let target = $gameTroop.trainerBattle_getGymGoerAtTrainerLocation();
	let targetIsErect = target && target.isErect;
	
	let justMoved = this.didLastGetHitBySkillType(JUST_SKILLTYPE_TRAINER_MOVING);
	let justObserved = this.didLastGetHitBySkillType(JUST_SKILLTYPE_TRAINER_OBSERVING);
	let justAdvised = this.didLastGetHitBySkillType(JUST_SKILLTYPE_TRAINER_ADVISING);
	let justUsedCockPet = this.isStateAffected(STATE_TRAINER_USED_COCK_PET_ID);
	let hasLeftHandjob = this.isBodySlotPenis(LEFT_HAND_ID) && target && targetIsErect;
	let lastHitHandjob = this.didLastGetHitBySkillType(JUST_SKILLTYPE_KARRYN_HANDJOB)
	let karrynGotBukkaked = this.didLastGetHitBySkillType(JUST_SKILLTYPE_ENEMY_BUKKAKE);
	let enemyJustCameOntoFloor = this.didLastGetHitBySkillType(JUST_SKILLTYPE_ENEMY_FLOOR_BUKKAKE);
	
	let generalReactionScore = this.getReactionScore();
	let orgasmReactionScore = this.getOrgasmReactionScore();
	let bukkakeReactionScore = this.getBukkakeReactionScore();
	
	let generallvl3 = generalReactionScore >= VAR_DEF_RS_LV3_REQ;
	let generallvl2 = generalReactionScore >= VAR_DEF_RS_LV2_REQ;
	let orgasmlvl3 = orgasmReactionScore >= VAR_DEF_RS_LV3_REQ;
	let orgasmlvl2 = orgasmReactionScore >= VAR_DEF_RS_LV2_REQ;
	let bukkakelvl3 = bukkakeReactionScore >= VAR_DEF_RS_LV3_REQ;
	let bukkakelvl2 = bukkakeReactionScore >= VAR_DEF_RS_LV2_REQ;
	
	
	let faceArray = [];
	this.resetTachieHoppe();
	this.resetTachieSweat();
	
	if(justOrgasmed) {
		if(orgasmlvl3) 
			faceArray.push(27);
		else if(orgasmlvl2) 
			faceArray.push(18);
		else
			faceArray.push(9);
	}
	else if(karrynGotBukkaked) {
		if(bukkakelvl3) 
			faceArray.push(26);
		else if(bukkakelvl2) 
			faceArray.push(17);
		else
			faceArray.push(8);
	}
	else if(enemyJustCameOntoFloor) {
		if(bukkakelvl3) 
			faceArray.push(22);
		else if(bukkakelvl2) 
			faceArray.push(13);
		else
			faceArray.push(4);
	}
	else if(lastHitHandjob || justUsedCockPet || (justAdvised && hasLeftHandjob)) {
		if(generallvl3) 
			faceArray.push(25);
		else if(generallvl2) 
			faceArray.push(16);
		else
			faceArray.push(7);
	}
	else if(justAdvised) {
		if(isHorny) {
			if(generallvl3) 
				faceArray.push(24);
			else if(generallvl2) 
				faceArray.push(15);
			else
				faceArray.push(6);
		}
		else {
			if(generallvl3) 
				faceArray.push(23);
			else if(generallvl2) 
				faceArray.push(14);
			else
				faceArray.push(5);
		}
	}
	else if(justObserved) {
		if(target.reachedOrgasmPoint()) {
			if(generallvl3) 
				faceArray.push(22);
			else if(generallvl2) 
				faceArray.push(13);
			else
				faceArray.push(4);
		}
		else if(targetIsErect) {
			if(generallvl3) 
				faceArray.push(21);
			else if(generallvl2) 
				faceArray.push(12);
			else
				faceArray.push(3);
		}
		else {
			if(generallvl3) 
				faceArray.push(20);
			else if(generallvl2) 
				faceArray.push(11);
			else
				faceArray.push(2);
		}
	}
	else {
		if(generallvl3) 
			faceArray.push(19);
		else if(generallvl2) 
			faceArray.push(10);
		else
			faceArray.push(1);
	}
	
	let faceId = faceArray[Math.randomInt(faceArray.length)];
	let eyebrowsArray = [];
	let eyesArray = [];
	let mouthArray = [];
	let rightArmName = 'normal';
	let leftArmName = 'normal';
	let ranNum = 0;
	
	switch(faceId) {
	case 1:
		eyebrowsArray.push('kiri1');
		eyebrowsArray.push('kiri2');
		eyesArray.push('mae1');
		eyesArray.push('mae2');
		mouthArray.push('ku1');
		mouthArray.push('ho1');
		mouthArray.push('ho2');
		mouthArray.push('ho3');
		if(isAroused) this.setTachieHoppe(1);
		rightArmName = 'normal';
		leftArmName = 'normal';
		break;
	case 2:
		eyebrowsArray.push('kiri1');
		eyebrowsArray.push('kiri2');
		eyesArray.push('mae1');
		eyesArray.push('mae2');
		mouthArray.push('ku1');
		mouthArray.push('mu1');
		mouthArray.push('mu2');
		mouthArray.push('mu3');
		mouthArray.push('ho1');
		if(isAroused) this.setTachieHoppe(1);
		ranNum = Math.randomInt(2);
		if(ranNum === 1) rightArmName = 'thigh';
		else rightArmName = 'normal';
		leftArmName = 'normal';
		break;
	case 3:
		eyebrowsArray.push('oko1');
		eyesArray.push('sita1');
		eyesArray.push('sita2');
		mouthArray.push('ku1');
		mouthArray.push('ku2');
		mouthArray.push('ku3');
		mouthArray.push('mu2');
		mouthArray.push('mu3');
		this.setTachieHoppe(1);
		this.setTachieSweat(1);
		rightArmName = 'normal';
		leftArmName = 'normal';
		break;
	case 4:
		eyebrowsArray.push('oko1');
		eyesArray.push('mae2');
		mouthArray.push('ku1');
		mouthArray.push('ku2');
		mouthArray.push('ku3');
		mouthArray.push('mu2');
		mouthArray.push('mu3');
		this.setTachieHoppe(1);
		this.setTachieSweat(1);
		rightArmName = 'normal';
		leftArmName = 'normal';
		break;
	case 5:
		eyebrowsArray.push('kiri1');
		eyebrowsArray.push('kiri2');
		eyesArray.push('mae1');
		eyesArray.push('mae2');
		mouthArray.push('ho1');
		mouthArray.push('ho2');
		mouthArray.push('ho3');
		mouthArray.push('ho4');
		mouthArray.push('mu1');
		if(isAroused || targetIsErect) this.setTachieHoppe(1);
		if(targetIsErect) this.setTachieSweat(1);
		ranNum = Math.randomInt(2);
		if(ranNum === 1) rightArmName = 'thigh';
		else rightArmName = 'normal';
		ranNum = Math.randomInt(2);
		if(ranNum === 1) leftArmName = 'thigh';
		else leftArmName = 'normal';
		break;
	case 6:
		eyebrowsArray.push('koma1');
		eyebrowsArray.push('koma2');
		eyebrowsArray.push('oko1');
		eyesArray.push('mae1');
		eyesArray.push('mae2');
		eyesArray.push('sita1');
		eyesArray.push('sita2');
		mouthArray.push('ku1');
		mouthArray.push('ku2');
		mouthArray.push('ho1');
		mouthArray.push('ho2');
		mouthArray.push('ho3');
		mouthArray.push('ho4');
		this.setTachieHoppe(1);
		this.setTachieSweat(1);
		ranNum = Math.randomInt(2);
		if(ranNum === 1) rightArmName = 'thigh';
		else rightArmName = 'normal';
		ranNum = Math.randomInt(2);
		if(ranNum === 1) leftArmName = 'thigh';
		else leftArmName = 'normal';
		break;
	case 7:
		eyebrowsArray.push('koma1');
		eyebrowsArray.push('koma2');
		eyesArray.push('sita1');
		eyesArray.push('sita2');
		mouthArray.push('ku1');
		mouthArray.push('ku2');
		mouthArray.push('mu1');
		mouthArray.push('ho1');
		mouthArray.push('ho2');
		mouthArray.push('ho3');
		mouthArray.push('ho4');
		this.setTachieHoppe(1);
		this.setTachieSweat(1);
		rightArmName = 'normal';
		if(justAdvised) leftArmName = 'thigh';
		else if(hasLeftHandjob) leftArmName = 'hj';
		else leftArmName = 'pet';
		break;
	case 8:
		eyebrowsArray.push('oko1');
		eyesArray.push('mae2');
		eyesArray.push('mae3');
		mouthArray.push('ku2');
		mouthArray.push('ku3');
		mouthArray.push('mu2');
		mouthArray.push('mu3');
		mouthArray.push('ho3');
		this.setTachieHoppe(1);
		this.setTachieSweat(1);
		rightArmName = 'normal';
		leftArmName = 'normal';
		break;
	case 9:
		eyebrowsArray.push('koma1');
		eyebrowsArray.push('koma2');
		eyebrowsArray.push('oko1');
		eyesArray.push('mae2');
		eyesArray.push('mae3');
		eyesArray.push('toji1');
		mouthArray.push('ho4');
		mouthArray.push('ho5');
		mouthArray.push('wa1');
		mouthArray.push('ahe1');
		this.setTachieHoppe(1);
		this.setTachieSweat(1);
		rightArmName = 'normal';
		leftArmName = 'normal';
		break;
	case 10:
		eyebrowsArray.push('kiri1');
		eyebrowsArray.push('kiri2');
		eyesArray.push('mae1');
		eyesArray.push('mae2');
		mouthArray.push('nico1');
		mouthArray.push('nico2');
		mouthArray.push('nico3');
		mouthArray.push('nico4');
		if(isAroused) this.setTachieHoppe(1);
		rightArmName = 'normal';
		leftArmName = 'normal';
		break;
	case 11:
		eyebrowsArray.push('kiri1');
		eyebrowsArray.push('kiri2');
		eyesArray.push('sita1');
		eyesArray.push('sita2');
		mouthArray.push('ku1');
		mouthArray.push('mu1');
		mouthArray.push('mu2');
		mouthArray.push('ho1');
		mouthArray.push('ho2');
		mouthArray.push('ho3');
		if(isAroused) this.setTachieHoppe(1);
		ranNum = Math.randomInt(2);
		if(ranNum === 1) rightArmName = 'thigh';
		else rightArmName = 'normal';
		leftArmName = 'normal';
		break;
	case 12:
		eyebrowsArray.push('kiri1');
		eyebrowsArray.push('kiri2');
		eyesArray.push('sita1');
		eyesArray.push('sita2');
		mouthArray.push('nico1');
		mouthArray.push('nico2');
		mouthArray.push('nico3');
		mouthArray.push('nico4');
		if(isAroused) this.setTachieHoppe(1);
		ranNum = Math.randomInt(2);
		rightArmName = 'normal';
		if(ranNum === 1) leftArmName = 'normal';
		else leftArmName = 'crotch';
		break;
	case 13:
		eyebrowsArray.push('kiri1');
		eyebrowsArray.push('kiri2');
		eyesArray.push('mae2');
		mouthArray.push('nico1');
		mouthArray.push('nico2');
		mouthArray.push('nico3');
		mouthArray.push('nico4');
		this.setTachieHoppe(1);
		ranNum = Math.randomInt(2);
		if(ranNum === 1) rightArmName = 'thigh';
		else rightArmName = 'normal';
		ranNum = Math.randomInt(3);
		if(ranNum === 1) leftArmName = 'normal';
		else if(ranNum === 2) leftArmName = 'advice';
		else leftArmName = 'thigh';
		break;
	case 14:
		eyebrowsArray.push('kiri1');
		eyebrowsArray.push('kiri2');
		eyesArray.push('mae1');
		eyesArray.push('mae2');
		mouthArray.push('nico2');
		mouthArray.push('nico3');
		mouthArray.push('nico4');
		mouthArray.push('nico5');
		if(isAroused) this.setTachieHoppe(1);
		ranNum = Math.randomInt(2);
		rightArmName = 'thigh';
		if(ranNum === 1) leftArmName = 'thigh';
		else leftArmName = 'good';
		break;
	case 15:
		eyebrowsArray.push('kiri2');
		eyesArray.push('mae1');
		eyesArray.push('mae2');
		eyesArray.push('sita1');
		eyesArray.push('sita2');
		eyesArray.push('urumae2');
		eyesArray.push('urusita2');
		mouthArray.push('ho3');
		mouthArray.push('ho4');
		mouthArray.push('nico2');
		mouthArray.push('nico3');
		mouthArray.push('nico4');
		this.setTachieHoppe(1);
		ranNum = Math.randomInt(2);
		if(ranNum === 1) rightArmName = 'thigh';
		else rightArmName = 'mouth';
		ranNum = Math.randomInt(3);
		if(ranNum === 1) leftArmName = 'good';
		else if(ranNum === 2) leftArmName = 'advice';
		else leftArmName = 'thigh';
		break;
	case 16:
		eyebrowsArray.push('kiri1');
		eyebrowsArray.push('kiri2');
		eyesArray.push('sita1');
		eyesArray.push('sita2');
		mouthArray.push('ho3');
		mouthArray.push('ho4');
		mouthArray.push('nico2');
		mouthArray.push('nico3');
		if(isAroused) this.setTachieHoppe(1);
		if(isAroused) this.setTachieSweat(1)
		ranNum = Math.randomInt(3);
		if(ranNum === 1) rightArmName = 'normal';
		else if(ranNum === 1) rightArmName = 'thigh';
		else rightArmName = 'mouth';
		if(justAdvised) {
			ranNum = Math.randomInt(3);
			if(ranNum === 1) leftArmName = 'good';
			else if(ranNum === 2) leftArmName = 'advice';
			else leftArmName = 'thigh';
		}
		else if(hasLeftHandjob) leftArmName = 'hj';
		else leftArmName = 'pet';
		break;
	case 17:
		eyebrowsArray.push('kiri1');
		eyebrowsArray.push('kiri2');
		eyebrowsArray.push('koma2');
		eyesArray.push('mae2');
		eyesArray.push('mae3');
		eyesArray.push('urumae2');
		mouthArray.push('mu1');
		mouthArray.push('mu3');
		mouthArray.push('ho2');
		mouthArray.push('nico2');
		this.setTachieHoppe(1);
		this.setTachieSweat(1)
		ranNum = Math.randomInt(3);
		rightArmName = 'mouth';
		if(ranNum === 1) leftArmName = 'thigh';
		else if(ranNum === 2) leftArmName = 'advice';
		else leftArmName = 'crotch';
		break;
	case 18:
		eyebrowsArray.push('koma1');
		eyebrowsArray.push('koma2');
		eyesArray.push('mae3');
		eyesArray.push('toji1');
		eyesArray.push('ahe1');
		eyesArray.push('urumae2');
		mouthArray.push('ho5');
		mouthArray.push('wa1');
		mouthArray.push('ahe1');
		mouthArray.push('ahe2');
		this.setTachieHoppe(1);
		this.setTachieSweat(1)
		ranNum = Math.randomInt(3);
		if(ranNum === 1) rightArmName = 'normal';
		else if(ranNum === 2) rightArmName = 'thigh';
		else rightArmName = 'mouth';
		ranNum = Math.randomInt(4);
		if(ranNum === 1) leftArmName = 'normal';
		else if(ranNum === 2) leftArmName = 'pet';
		else if(ranNum === 3) leftArmName = 'advice';
		else leftArmName = 'thigh';
		break;
	case 19:
		eyebrowsArray.push('nico1');
		eyebrowsArray.push('nico2');
		eyesArray.push('mae1');
		eyesArray.push('mae2');
		eyesArray.push('mae3');
		mouthArray.push('nico3');
		mouthArray.push('nico4');
		mouthArray.push('nico5');
		if(isAroused) this.setTachieHoppe(1);
		ranNum = Math.randomInt(4);
		if(ranNum === 1) rightArmName = 'normal';
		else if(ranNum === 2) rightArmName = 'thigh';
		else if(ranNum === 3) rightArmName = 'peace';
		else rightArmName = 'mouth';
		ranNum = Math.randomInt(3);
		if(ranNum === 1) leftArmName = 'normal';
		else if(ranNum === 2) leftArmName = 'good';
		else leftArmName = 'crotch';
		break;
	case 20:
		eyebrowsArray.push('nico1');
		eyebrowsArray.push('nico2');
		eyesArray.push('sita1');
		eyesArray.push('sita2');
		mouthArray.push('nico1');
		mouthArray.push('nico2');
		mouthArray.push('nico3');
		mouthArray.push('nico4');
		mouthArray.push('nico5');
		mouthArray.push('pero1');
		if(isAroused) this.setTachieHoppe(1);
		ranNum = Math.randomInt(3);
		if(ranNum === 1) rightArmName = 'normal';
		else if(ranNum === 2) rightArmName = 'thigh';
		else rightArmName = 'mouth';
		ranNum = Math.randomInt(3);
		if(ranNum === 1) leftArmName = 'normal';
		else if(ranNum === 2) leftArmName = 'advice';
		else leftArmName = 'crotch';
		break;
	case 21:
		eyebrowsArray.push('nico1');
		eyebrowsArray.push('nico2');
		eyesArray.push('sita1');
		eyesArray.push('sita2');
		eyesArray.push('urusita2');
		eyesArray.push('heartsita2');
		mouthArray.push('nico5');
		mouthArray.push('nico6');
		mouthArray.push('nico7');
		mouthArray.push('nico8');
		mouthArray.push('ahe4');
		mouthArray.push('pero1');
		if(isAroused) this.setTachieHoppe(1);
		ranNum = Math.randomInt(4);
		if(ranNum === 1) rightArmName = 'normal';
		else if(ranNum === 2) rightArmName = 'thigh';
		else if(ranNum === 3) rightArmName = 'peace';
		else rightArmName = 'mouth';
		ranNum = Math.randomInt(3);
		if(ranNum === 1) leftArmName = 'normal';
		else if(ranNum === 2) leftArmName = 'advice';
		else leftArmName = 'crotch';
		break;
	case 22:
		eyebrowsArray.push('nico1');
		eyebrowsArray.push('nico2');
		eyebrowsArray.push('kiri2');
		eyesArray.push('mae3');
		eyesArray.push('urumae2');
		eyesArray.push('heartmae2');
		mouthArray.push('nico1');
		mouthArray.push('nico3');
		mouthArray.push('nico5');
		mouthArray.push('nico8');
		if(isAroused) this.setTachieHoppe(1);
		ranNum = Math.randomInt(2);
		if(ranNum === 1) rightArmName = 'normal';
		else rightArmName = 'thigh';
		ranNum = Math.randomInt(3);
		if(ranNum === 1) leftArmName = 'thigh';
		else if(ranNum === 2) leftArmName = 'advice';
		else leftArmName = 'crotch';
		break;
	case 23:
		eyebrowsArray.push('nico1');
		eyebrowsArray.push('nico2');
		eyesArray.push('mae1');
		eyesArray.push('mae2');
		eyesArray.push('toji1');
		mouthArray.push('nico2');
		mouthArray.push('nico3');
		mouthArray.push('nico4');
		mouthArray.push('nico5');
		mouthArray.push('nico6');
		if(isAroused) this.setTachieHoppe(1);
		ranNum = Math.randomInt(2);
		if(ranNum === 1) rightArmName = 'mouth';
		else rightArmName = 'thigh';
		ranNum = Math.randomInt(3);
		if(ranNum === 1) leftArmName = 'thigh';
		else if(ranNum === 2) leftArmName = 'advice';
		else leftArmName = 'good';
		break;
	case 24:
		eyebrowsArray.push('nico1');
		eyebrowsArray.push('nico2');
		eyebrowsArray.push('koma1');
		eyebrowsArray.push('koma2');
		eyesArray.push('mae2');
		eyesArray.push('sita2');
		eyesArray.push('urumae1');
		eyesArray.push('urumae2');
		eyesArray.push('urusita1');
		eyesArray.push('urusita2');
		mouthArray.push('mu1');
		mouthArray.push('nico2');
		mouthArray.push('nico3');
		mouthArray.push('nico4');
		mouthArray.push('nico5');
		mouthArray.push('nico6');
		mouthArray.push('nico7');
		this.setTachieHoppe(1);
		if(ranNum === 1) rightArmName = 'mouth';
		else rightArmName = 'thigh';
		leftArmName = 'advice';
		break;
	case 25:
		eyebrowsArray.push('nico1');
		eyebrowsArray.push('nico2');
		eyebrowsArray.push('kiri2');
		eyebrowsArray.push('koma2');
		eyesArray.push('mae3');
		eyesArray.push('sita3');
		eyesArray.push('urumae1');
		eyesArray.push('urumae2');
		eyesArray.push('urusita1');
		eyesArray.push('urusita2');
		eyesArray.push('heartsita1');
		mouthArray.push('nico5');
		mouthArray.push('nico6');
		mouthArray.push('nico7');
		mouthArray.push('nico8');
		mouthArray.push('ahe3');
		mouthArray.push('ahe4');
		if(isAroused) this.setTachieHoppe(1);
		ranNum = Math.randomInt(3);
		if(ranNum === 1) rightArmName = 'mouth';
		else if(ranNum === 2) rightArmName = 'normal';
		else rightArmName = 'thigh';
		if(justAdvised) leftArmName = 'advice';
		else if(hasLeftHandjob) leftArmName = 'hj';
		else leftArmName = 'pet';
		break;
	case 26:
		eyebrowsArray.push('nico1');
		eyebrowsArray.push('nico2');
		eyebrowsArray.push('kiri2');
		eyebrowsArray.push('koma2');
		eyesArray.push('mae3');
		eyesArray.push('toji1');
		eyesArray.push('urumae1');
		eyesArray.push('urumae2');
		eyesArray.push('heartmae1');
		eyesArray.push('heartmae2');
		mouthArray.push('ho5');
		mouthArray.push('wa1');
		mouthArray.push('nico1');
		mouthArray.push('nico2');
		mouthArray.push('nico3');
		mouthArray.push('nico4');
		mouthArray.push('pero1');
		mouthArray.push('ahe4');
		if(isAroused) this.setTachieHoppe(1);
		if(Math.randomInt(2) === 0) this.setTachieSweat(1);
		ranNum = Math.randomInt(2);
		if(ranNum === 1) rightArmName = 'peace';
		else rightArmName = 'mouth';
		ranNum = Math.randomInt(5);
		if(ranNum === 1) leftArmName = 'thigh';
		else if(ranNum === 2) leftArmName = 'advice';
		else if(ranNum === 3) leftArmName = 'crotch';
		else if(ranNum === 4) leftArmName = 'pet';
		else leftArmName = 'good';
		break;
	case 27:
		eyebrowsArray.push('nico1');
		eyebrowsArray.push('nico2');
		eyebrowsArray.push('kiri1');
		eyebrowsArray.push('koma1');
		eyebrowsArray.push('oko1');
		eyesArray.push('mae3');
		eyesArray.push('sita3');
		eyesArray.push('toji1');
		eyesArray.push('ahe1');
		eyesArray.push('heartmae1');
		eyesArray.push('heartmae2');
		eyesArray.push('heartsita1');
		eyesArray.push('heartsita2');
		eyesArray.push('heartahe1');
		mouthArray.push('ho5');
		mouthArray.push('wa1');
		mouthArray.push('nico6');
		mouthArray.push('nico7');
		mouthArray.push('nico8');
		mouthArray.push('ahe3');
		mouthArray.push('ahe4');
		mouthArray.push('ahe5');
		this.setTachieHoppe(1);
		this.setTachieSweat(1);
		ranNum = Math.randomInt(4);
		if(ranNum === 1) rightArmName = 'normal';
		else if(ranNum === 2) rightArmName = 'thigh';
		else if(ranNum === 3) rightArmName = 'peace';
		else rightArmName = 'mouth';
		ranNum = Math.randomInt(5);
		if(ranNum === 1) leftArmName = 'thigh';
		else if(ranNum === 2) leftArmName = 'advice';
		else if(ranNum === 3) leftArmName = 'crotch';
		else if(ranNum === 4) leftArmName = 'pet';
		else leftArmName = 'good';
		break;
	
	}
	
	if(eyebrowsArray.length > 0) {
		this.setTachieEyebrows(eyebrowsArray[Math.randomInt(eyebrowsArray.length)]);
	}
	if(eyesArray.length > 0) {
		this.setTachieEyes(eyesArray[Math.randomInt(eyesArray.length)]);
	}
	if(mouthArray.length > 0) {
		this.setTachieMouth(mouthArray[Math.randomInt(mouthArray.length)]);
	}
	
	if(this.isWearingTrainerCap()) {
		this.setTachieCap(1);
	}
	else {
		this.resetTachieCap();
	}
	if(this.isWearingTrainerHood()) {
		this.setTachieHood('on_' + this.gymOutfitColor);
		this.setTachieHoodHasHCup(false);
	}
	else {
		this.setTachieHood('off_' + this.gymOutfitColor);
		this.setTachieHoodHasHCup(true);
	}
	
	if(hasLeftHandjob && !this.tachieBody.includes('hj')) {
		leftArmName = 'hj';
	}
	
	switch(leftArmName) {
		case 'hj':
			if(generallvl2 && Math.random() > 0.5) 
				leftArmName = 'hj_2';
			else 
				leftArmName = 'hj_1';
			break;
		case 'pet':
			if(targetIsErect) {
				if(target._gym_shortsStripped)
					leftArmName = 'pet_hard';
				else
					leftArmName = 'pet_shorts_hard';
			}
			else {
				leftArmName = 'pet_soft';
			}
			break;
		case 'advice':
			if(targetIsErect) {
				if(target._gym_shortsStripped)
					leftArmName = 'advice_hard';
				else
					leftArmName = 'advice_shorts_hard';
			}
			else {
				leftArmName = 'advice_soft';
			}
			break;
		
	}
	
	
	switch(leftArmName) {
    case 'hj_1':
        this.setTachieFrontA('leftarm_hj_1');
		this.setTachieLeftArm(leftArmName + '_' + this.gymOutfitColor);
		this.setTachieSemenLeftArmExtension(leftArmName + '_');
		this.setTachieLeftArmHasPCup(true);
		this.setTachieFrontAHasHCup(false);
		this.setTachieFrontAHasPCup(true);
		this.setTachieSemenLeftArmHasPCup(true);
        break;
    case 'hj_2':
        this.setTachieFrontA('leftarm_hj_2');
		this.setTachieLeftArm(leftArmName + '_' + this.gymOutfitColor);
		this.setTachieSemenLeftArmExtension(leftArmName + '_');
		this.setTachieLeftArmHasPCup(true);
		this.setTachieFrontAHasHCup(false);
		this.setTachieFrontAHasPCup(true);
		this.setTachieSemenLeftArmHasPCup(true);
        break;
	case 'pet_soft':
        this.setTachieFrontA('leftarm_pet_soft');
		this.setTachieLeftArm(leftArmName + '_' + this.gymOutfitColor);
		this.setTachieSemenLeftArmExtension(leftArmName + '_');
		this.setTachieLeftArmHasPCup(false);
		this.setTachieFrontAHasHCup(false);
		this.setTachieFrontAHasPCup(true);
		this.setTachieSemenLeftArmHasPCup(true);
        break;
	case 'pet_hard':
        this.setTachieFrontA('leftarm_pet_hard');
		this.setTachieLeftArm(leftArmName + '_' + this.gymOutfitColor);
		this.setTachieSemenLeftArmExtension(leftArmName + '_');
		this.setTachieLeftArmHasPCup(false);
		this.setTachieFrontAHasHCup(false);
		this.setTachieFrontAHasPCup(true);
		this.setTachieSemenLeftArmHasPCup(true);
        break;
	case 'pet_shorts_hard':
        this.setTachieFrontA('leftarm_pet_shorts_hard');
		this.setTachieLeftArm(leftArmName + '_' + this.gymOutfitColor);
		this.setTachieSemenLeftArmExtension(leftArmName + '_');
		this.setTachieLeftArmHasPCup(false);
		this.setTachieFrontAHasHCup(false);
		this.setTachieFrontAHasPCup(true);
		this.setTachieSemenLeftArmHasPCup(true);
        break;
	case 'advice_soft':
        this.setTachieFrontA('leftarm_advice_soft' + '_' + this.gymOutfitColor);
		this.setTachieLeftArm(leftArmName);
		this.setTachieSemenLeftArmExtension(leftArmName + '_');
		this.setTachieLeftArmHasPCup(false);
		this.setTachieFrontAHasHCup(true);
		this.setTachieFrontAHasPCup(true);
		this.setTachieSemenLeftArmHasPCup(true);
        break;
	case 'advice_hard':
        this.setTachieFrontA('leftarm_advice_hard' + '_' + this.gymOutfitColor);
		this.setTachieLeftArm(leftArmName);
		this.setTachieSemenLeftArmExtension(leftArmName + '_');
		this.setTachieLeftArmHasPCup(false);
		this.setTachieFrontAHasHCup(true);
		this.setTachieFrontAHasPCup(true);
		this.setTachieSemenLeftArmHasPCup(true);
        break;
	case 'advice_shorts_hard':
        this.setTachieFrontA('leftarm_advice_shorts_hard' + '_' + this.gymOutfitColor);
		this.setTachieLeftArm(leftArmName);
		this.setTachieSemenLeftArmExtension(leftArmName + '_');
		this.setTachieLeftArmHasPCup(false);
		this.setTachieFrontAHasHCup(true);
		this.setTachieFrontAHasPCup(true);
		this.setTachieSemenLeftArmHasPCup(true);
        break;
	case 'thigh':
        this.setTachieFrontA('leftarm_thigh');
		this.setTachieLeftArm(leftArmName + '_' + this.gymOutfitColor);
		this.setTachieSemenLeftArmExtension(leftArmName + '_');
		this.setTachieLeftArmHasPCup(false);
		this.setTachieFrontAHasHCup(false);
		this.setTachieFrontAHasPCup(false);
		this.setTachieSemenLeftArmHasPCup(true);
        break;
	case 'good':
	case 'crotch':
	case 'normal':
        this.resetTachieFrontA();
		this.setTachieLeftArm(leftArmName + '_' + this.gymOutfitColor);
		this.setTachieSemenLeftArmExtension(leftArmName + '_');
		this.setTachieLeftArmHasPCup(false);
		this.setTachieFrontAHasHCup(false);
		this.setTachieFrontAHasPCup(true);
		this.setTachieSemenLeftArmHasPCup(false);
        break;
    }
	this.setMaxTachieSemenLeftArmId(1);
	
	switch(rightArmName) {
	case 'normal':
		this.setTachieRightArm(rightArmName + '_' + this.gymOutfitColor);
		this.setTachieSemenRightArmExtension(rightArmName + '_');
		this.setTachieRightArmHasPCup(false);
		this.setTachieSemenRightArmHasPCup(false);
		break;
    case 'mouth':
	case 'peace':
		this.setTachieRightArm(rightArmName + '_' + this.gymOutfitColor);
		this.setTachieSemenRightArmExtension(rightArmName + '_');
		this.setTachieRightArmHasPCup(true);
		this.setTachieSemenRightArmHasPCup(false);
		break;
	case 'thigh':
		this.setTachieRightArm(rightArmName + '_' + this.gymOutfitColor);
		this.setTachieSemenRightArmExtension(rightArmName + '_');
		this.setTachieRightArmHasPCup(false);
		this.setTachieSemenRightArmHasPCup(true);
        break;
	}
	this.setMaxTachieSemenRightArmId(1);
	
   
	this.setTrainerTachieGymGoer(target);
	this.setAllowTachieEmoteUpdate(true);
};

// Trainer Kisu
Game_Actor.prototype.emoteTrainerKisuPose = function() {
	this.setAllowTachieEmoteUpdate(false);
	let justOrgasmed = this.didLastGetHitBySkillType(JUST_SKILLTYPE_KARRYN_ORGASM) || this.justOrgasmed();
	let isAroused = this.isAroused() || justOrgasmed;
	let isHorny = this.trainerBattle_isUsingHornyVariation();
	let target = $gameTroop.trainerBattle_getGymGoerAtTrainerLocation();
	let targetIsErect = target && target.isErect;
	
	let isKissing = this.isStateAffected(STATE_TRAINER_USED_KISS_ID) || this.isStateAffected(STATE_TRAINER_USED_KISS_LAST_TURN_ID);
	let hasLeftHandjob = this.isBodySlotPenis(LEFT_HAND_ID) && target && target.isErect;
	let lastHitHandjob = this.didLastGetHitBySkillType(JUST_SKILLTYPE_KARRYN_HANDJOB)
	let justObserved = this.didLastGetHitBySkillType(JUST_SKILLTYPE_TRAINER_OBSERVING);
	let justAdvised = this.didLastGetHitBySkillType(JUST_SKILLTYPE_TRAINER_ADVISING);
	let justUsedCockPet = this.isStateAffected(STATE_TRAINER_USED_COCK_PET_ID);
	
	let karrynGotBukkaked = this.didLastGetHitBySkillType(JUST_SKILLTYPE_ENEMY_BUKKAKE);
	let enemyJustCameOntoFloor = this.didLastGetHitBySkillType(JUST_SKILLTYPE_ENEMY_FLOOR_BUKKAKE);
	
	let generalReactionScore = this.getReactionScore();
	let orgasmReactionScore = this.getOrgasmReactionScore();
	let bukkakeReactionScore = this.getBukkakeReactionScore();
	
	let generallvl3 = generalReactionScore >= VAR_DEF_RS_LV3_REQ;
	let generallvl2 = generalReactionScore >= VAR_DEF_RS_LV2_REQ;
	let orgasmlvl3 = orgasmReactionScore >= VAR_DEF_RS_LV3_REQ;
	let orgasmlvl2 = orgasmReactionScore >= VAR_DEF_RS_LV2_REQ;
	let bukkakelvl3 = bukkakeReactionScore >= VAR_DEF_RS_LV3_REQ;
	let bukkakelvl2 = bukkakeReactionScore >= VAR_DEF_RS_LV2_REQ;
	
	
	let faceArray = [];
	this.resetTachieHoppe();
	this.resetTachieSweat();
	
	if(justOrgasmed) {
		if(isKissing) {
			if(orgasmlvl3) 
				faceArray.push(30);
			else if(orgasmlvl2) 
				faceArray.push(20);
			else
				faceArray.push(10);
		}
		else {
			if(orgasmlvl3) 
				faceArray.push(26);
			else if(orgasmlvl2) 
				faceArray.push(16);
			else
				faceArray.push(6);
		}
	}
	else if(karrynGotBukkaked) {
		if(isKissing) {
			if(bukkakelvl3) 
				faceArray.push(29);
			else if(bukkakelvl2) 
				faceArray.push(19);
			else
				faceArray.push(9);
		}
		else {
			if(bukkakelvl3) 
				faceArray.push(25);
			else if(bukkakelvl2) 
				faceArray.push(15);
			else
				faceArray.push(5);
		}
	}
	else if(enemyJustCameOntoFloor) {
		if(isKissing) {
			if(bukkakelvl3) 
				faceArray.push(27);
			else if(bukkakelvl2) 
				faceArray.push(17);
			else
				faceArray.push(7);
		}
		else {
			if(bukkakelvl3) 
				faceArray.push(23);
			else if(bukkakelvl2) 
				faceArray.push(13);
			else
				faceArray.push(3);
		}
	}
	else if(lastHitHandjob || justUsedCockPet || (justAdvised && hasLeftHandjob)) {
		if(isKissing) {
			if(generallvl3) 
				faceArray.push(28);
			else if(generallvl2) 
				faceArray.push(18);
			else
				faceArray.push(8);
		}
		else {
			if(generallvl3) 
				faceArray.push(24);
			else if(generallvl2) 
				faceArray.push(14);
			else
				faceArray.push(4);
		}
	}
	else if(justAdvised) {
		if(isKissing) {
			if(generallvl3) 
				faceArray.push(28);
			else if(generallvl2) 
				faceArray.push(18);
			else
				faceArray.push(8);
		}
		else {
			if(generallvl3) 
				faceArray.push(23);
			else if(generallvl2) 
				faceArray.push(14);
			else
				faceArray.push(5);
		}
	}
	else if(isKissing) {
			if(generallvl3) 
				faceArray.push(27);
			else if(generallvl2) 
				faceArray.push(17);
			else
				faceArray.push(7);
	}
	else if(justObserved) {
		if(target.reachedOrgasmPoint()) {
			if(generallvl3) 
				faceArray.push(23);
			else if(generallvl2) 
				faceArray.push(13);
			else
				faceArray.push(3);
		}
		else if(targetIsErect) {
			if(generallvl3) 
				faceArray.push(22);
			else if(generallvl2) 
				faceArray.push(12);
			else
				faceArray.push(2);
		}
		else {
			if(generallvl3) 
				faceArray.push(21);
			else if(generallvl2) 
				faceArray.push(11);
			else
				faceArray.push(1);
		}
	}
	else {
		if(generallvl3) 
			faceArray.push(21);
		else if(generallvl2) 
			faceArray.push(11);
		else
			faceArray.push(1);
	}
	
	let faceId = faceArray[Math.randomInt(faceArray.length)];
	let eyebrowsArray = [];
	let eyesArray = [];
	let mouthArray = [];
	let tachieHeadType = 'far';
	let tachieHoppeName = '';
	let tachieSweatName = '';
	let displayTachieHoppe = false;
	let displayTachieSweat = false;
	let leftArmName = false;
	let ranNum = 0;

	switch(faceId) {
	case 1:
		tachieHeadType = 'close';
		eyebrowsArray.push('kiri1');
		eyebrowsArray.push('kiri2');
		eyesArray.push('mae1');
		eyesArray.push('mae2');
		mouthArray.push('mu1');
		mouthArray.push('mu2');
		mouthArray.push('mu3');
		mouthArray.push('ho1');
		mouthArray.push('ho2');
		if(isAroused) {
			tachieHoppeName = '1';
			displayTachieHoppe = true;
		}
		break;
	case 2:
		tachieHeadType = 'close';
		eyebrowsArray.push('kiri1');
		eyebrowsArray.push('kiri2');
		eyesArray.push('mae1');
		eyesArray.push('mae2');
		mouthArray.push('mu1');
		mouthArray.push('mu2');
		mouthArray.push('mu3');
		mouthArray.push('ho1');
		mouthArray.push('wa1');
		tachieHoppeName = '1';
		displayTachieHoppe = true;
		tachieSweatName = '1';
		displayTachieSweat = true;
		break;
	case 3:
		tachieHeadType = 'close';
		eyebrowsArray.push('oko1');
		eyesArray.push('mae2');
		mouthArray.push('mu1');
		mouthArray.push('mu2');
		mouthArray.push('mu3');
		mouthArray.push('ho1');
		mouthArray.push('ho2');
		tachieHoppeName = '1';
		displayTachieHoppe = true;
		tachieSweatName = '1';
		displayTachieSweat = true;
		break;
	case 4:
		tachieHeadType = 'close';
		eyebrowsArray.push('koma1');
		eyebrowsArray.push('koma2');
		eyesArray.push('mae1');
		eyesArray.push('mae2');
		mouthArray.push('mu1');
		mouthArray.push('mu2');
		mouthArray.push('mu3');
		mouthArray.push('ho1');
		mouthArray.push('ho2');
		tachieHoppeName = '1';
		displayTachieHoppe = true;
		tachieSweatName = '1';
		displayTachieSweat = true;
		if(justAdvised) leftArmName = 'advice';
		else if(hasLeftHandjob) leftArmName = 'hj';
		else if(justUsedCockPet) leftArmName = 'pet';
		else leftArmName = 'thigh';
		break;
	case 5:
		tachieHeadType = 'close';
		eyebrowsArray.push('oko1');
		eyesArray.push('mae2');
		eyesArray.push('mae3');
		mouthArray.push('mu1');
		mouthArray.push('wa1');
		mouthArray.push('wa2');
		mouthArray.push('ho1');
		mouthArray.push('ho3');
		tachieHoppeName = '1';
		displayTachieHoppe = true;
		tachieSweatName = '1';
		displayTachieSweat = true;
		break;	
	case 6:
		tachieHeadType = 'close';
		eyebrowsArray.push('koma1');
		eyebrowsArray.push('koma2');
		eyebrowsArray.push('oko1');
		eyesArray.push('mae2');
		eyesArray.push('mae3');
		eyesArray.push('toji1');
		mouthArray.push('ho3');
		mouthArray.push('ho4');
		mouthArray.push('wa2');
		mouthArray.push('wa3');
		tachieHoppeName = '1';
		displayTachieHoppe = true;
		tachieSweatName = '1';
		displayTachieSweat = true;
		ranNum = Math.randomInt(2);
		if(ranNum === 1) leftArmName = 'thigh';
		break;	
	case 7:
		tachieHeadType = 'far';
		eyebrowsArray.push('koma1');
		eyebrowsArray.push('koma2');
		eyesArray.push('mae1');
		eyesArray.push('mae2');
		mouthArray.push('chu1');
		mouthArray.push('ho1');
		mouthArray.push('re1');
		tachieHoppeName = '1';
		displayTachieHoppe = true;
		tachieSweatName = '1';
		displayTachieSweat = true;
		break;
	case 8:
		tachieHeadType = 'far';
		eyebrowsArray.push('koma1');
		eyebrowsArray.push('koma2');
		eyesArray.push('mae1');
		eyesArray.push('mae2');
		mouthArray.push('bero1');
		mouthArray.push('ho1');
		mouthArray.push('re1');
		tachieHoppeName = '1';
		displayTachieHoppe = true;
		tachieSweatName = '1';
		displayTachieSweat = true;
		if(justAdvised) leftArmName = 'thigh';
		else if(hasLeftHandjob) leftArmName = 'hj';
		else if(justUsedCockPet) leftArmName = 'pet';
		else leftArmName = 'thigh';
		break;
	case 9:
		tachieHeadType = 'far';
		eyebrowsArray.push('oko1');
		eyesArray.push('mae2');
		eyesArray.push('mae3');
		mouthArray.push('bero1');
		mouthArray.push('ho1');
		mouthArray.push('re1');
		tachieHoppeName = '1';
		displayTachieHoppe = true;
		tachieSweatName = '1';
		displayTachieSweat = true;
		break;	
	case 10:
		tachieHeadType = 'far';
		eyebrowsArray.push('oko1');
		eyebrowsArray.push('koma1');
		eyebrowsArray.push('koma2');
		eyesArray.push('mae2');
		eyesArray.push('mae3');
		eyesArray.push('toji1');
		mouthArray.push('bero1');
		mouthArray.push('ho2');
		mouthArray.push('re1');
		mouthArray.push('re2');
		tachieHoppeName = '1';
		displayTachieHoppe = true;
		tachieSweatName = '1';
		displayTachieSweat = true;
		ranNum = Math.randomInt(2);
		if(ranNum === 1) leftArmName = 'thigh';
		break;
	case 11:
		tachieHeadType = 'close';
		eyebrowsArray.push('kiri1');
		eyebrowsArray.push('kiri2');
		eyesArray.push('mae1');
		eyesArray.push('mae2');
		mouthArray.push('nico1');
		mouthArray.push('mu2');
		mouthArray.push('mu3');
		mouthArray.push('ho1');
		mouthArray.push('ho2');
		if(isAroused) {
			tachieHoppeName = '1';
			displayTachieHoppe = true;
		}
		break;
	case 12:
		tachieHeadType = 'close';
		eyebrowsArray.push('kiri1');
		eyebrowsArray.push('kiri2');
		eyesArray.push('mae1');
		eyesArray.push('mae2');
		mouthArray.push('nico1');
		mouthArray.push('nico2');
		mouthArray.push('nico3');
		mouthArray.push('nico4');
		mouthArray.push('wa1');
		if(isAroused) {
			tachieHoppeName = '1';
			displayTachieHoppe = true;
		}
		break;
	case 13:
		tachieHeadType = 'close';
		eyebrowsArray.push('kiri1');
		eyebrowsArray.push('kiri2');
		eyesArray.push('mae2');
		mouthArray.push('nico1');
		mouthArray.push('nico2');
		mouthArray.push('nico3');
		mouthArray.push('nico4');
		tachieHoppeName = '1';
		displayTachieHoppe = true;
		ranNum = Math.randomInt(2);
		if(ranNum === 1) leftArmName = 'advice';
		break;
	case 14:
		tachieHeadType = 'close';
		eyebrowsArray.push('kiri1');
		eyebrowsArray.push('kiri2');
		eyesArray.push('mae1');
		eyesArray.push('mae2');
		eyesArray.push('urumae1');
		eyesArray.push('urumae2');
		mouthArray.push('nico1');
		mouthArray.push('nico2');
		mouthArray.push('nico3');
		mouthArray.push('nico4');
		mouthArray.push('wa1');
		tachieHoppeName = '1';
		displayTachieHoppe = true;
		if(justAdvised) {
			ranNum = Math.randomInt(2);
			if(ranNum === 1) leftArmName = 'advice';
			else leftArmName = 'thigh';
		}
		else if(hasLeftHandjob) leftArmName = 'hj';
		else if(justUsedCockPet) leftArmName = 'pet';
		else {
			ranNum = Math.randomInt(2);
			if(ranNum === 1) leftArmName = 'advice';
			else leftArmName = 'thigh';
		}
		break;
	case 15:
		tachieHeadType = 'close';
		eyebrowsArray.push('kiri1');
		eyebrowsArray.push('kiri2');
		eyebrowsArray.push('koma2');
		eyesArray.push('mae2');
		eyesArray.push('mae3');
		eyesArray.push('urumae2');
		mouthArray.push('nico1');
		mouthArray.push('mu2');
		mouthArray.push('mu3');
		mouthArray.push('ho2');
		mouthArray.push('ho3');
		tachieHoppeName = '1';
		displayTachieHoppe = true;
		tachieSweatName = '1';
		displayTachieSweat = true;
		ranNum = Math.randomInt(3);
		if(ranNum === 1) leftArmName = 'advice';
		else if(ranNum === 2) leftArmName = 'pet';
		break;
	case 16:
		tachieHeadType = 'close';
		eyebrowsArray.push('koma1');
		eyebrowsArray.push('koma2');
		eyesArray.push('mae3');
		eyesArray.push('toji1');
		eyesArray.push('ahe1');
		eyesArray.push('urumae2');
		mouthArray.push('ho4');
		mouthArray.push('ho5');
		mouthArray.push('wa2');
		mouthArray.push('wa3');
		mouthArray.push('ahe1');
		tachieHoppeName = '1';
		displayTachieHoppe = true;
		tachieSweatName = '1';
		displayTachieSweat = true;
		ranNum = Math.randomInt(2);
		if(ranNum === 1) leftArmName = 'thigh';
		break;
	case 17:
		tachieHeadType = 'far';
		eyebrowsArray.push('kiri1');
		eyebrowsArray.push('kiri2');
		eyesArray.push('mae1');
		eyesArray.push('mae2');
		mouthArray.push('chu1');
		mouthArray.push('chu2');
		mouthArray.push('chu3');
		mouthArray.push('ho3');
		mouthArray.push('re1');
		mouthArray.push('re2');
		mouthArray.push('re3');
		if(isAroused) {
			tachieHoppeName = '1';
			displayTachieHoppe = true;
		}
		break;
	case 18:
		tachieHeadType = 'far';
		eyebrowsArray.push('kiri1');
		eyebrowsArray.push('kiri2');
		eyesArray.push('mae1');
		eyesArray.push('mae2');
		mouthArray.push('chu1');
		mouthArray.push('chu2');
		mouthArray.push('bero1');
		mouthArray.push('re1');
		mouthArray.push('re2');
		mouthArray.push('re3');
		if(isAroused) {
			tachieHoppeName = '1';
			displayTachieHoppe = true;
		}
		if(justAdvised) leftArmName = 'thigh';
		else if(hasLeftHandjob) leftArmName = 'hj';
		else if(justUsedCockPet) leftArmName = 'pet';
		else leftArmName = 'thigh';
		break;	
	case 19:
		tachieHeadType = 'far';
		eyebrowsArray.push('kiri1');
		eyebrowsArray.push('kiri2');
		eyebrowsArray.push('koma2');
		eyesArray.push('mae2');
		eyesArray.push('mae3');
		eyesArray.push('urumae2');
		mouthArray.push('chu1');
		mouthArray.push('chu2');
		mouthArray.push('ho2');
		mouthArray.push('re1');
		mouthArray.push('re2');
		mouthArray.push('ho3');
		tachieHoppeName = '1';
		displayTachieHoppe = true;
		tachieSweatName = '1';
		displayTachieSweat = true;
		ranNum = Math.randomInt(3);
		if(ranNum === 1) leftArmName = 'advice';
		else if(ranNum === 2) leftArmName = 'pet';
		break;	
	case 20:
		tachieHeadType = 'far';
		eyebrowsArray.push('koma1');
		eyebrowsArray.push('koma2');
		eyesArray.push('mae3');
		eyesArray.push('toji1');
		eyesArray.push('ahe1');
		eyesArray.push('urumae2');
		mouthArray.push('bero2');
		mouthArray.push('ho2');
		mouthArray.push('re1');
		mouthArray.push('re2');
		mouthArray.push('re3');
		mouthArray.push('re4');
		tachieHoppeName = '1';
		displayTachieHoppe = true;
		tachieSweatName = '1';
		displayTachieSweat = true;
		ranNum = Math.randomInt(2);
		if(ranNum === 1) leftArmName = 'thigh';
		break;
	case 21:
		tachieHeadType = 'close';
		eyebrowsArray.push('nico1');
		eyebrowsArray.push('nico2');
		eyesArray.push('mae1');
		eyesArray.push('mae2');
		mouthArray.push('nico1');
		mouthArray.push('nico2');
		mouthArray.push('nico3');
		mouthArray.push('nico4');
		mouthArray.push('mu4');
		mouthArray.push('pero1');
		if(isAroused) {
			tachieHoppeName = '1';
			displayTachieHoppe = true;
		}
		break;	
	case 22:
		tachieHeadType = 'close';
		eyebrowsArray.push('nico1');
		eyebrowsArray.push('nico2');
		eyesArray.push('mae1');
		eyesArray.push('mae2');
		eyesArray.push('urumae2');
		mouthArray.push('nico1');
		mouthArray.push('nico2');
		mouthArray.push('nico3');
		mouthArray.push('nico4');
		mouthArray.push('nico5');
		mouthArray.push('pero1');
		if(isAroused) {
			tachieHoppeName = '1';
			displayTachieHoppe = true;
		}
		break;		
	case 23:
		tachieHeadType = 'close';
		eyebrowsArray.push('nico1');
		eyebrowsArray.push('nico2');
		eyebrowsArray.push('kiri2');
		eyesArray.push('mae2');
		eyesArray.push('heartmae2');
		eyesArray.push('urumae2');
		mouthArray.push('nico3');
		mouthArray.push('nico4');
		mouthArray.push('nico6');
		mouthArray.push('nico7');
		mouthArray.push('mu4');
		mouthArray.push('pero1');
		if(isAroused) {
			tachieHoppeName = '1';
			displayTachieHoppe = true;
		}
		ranNum = Math.randomInt(2);
		if(ranNum === 1) leftArmName = 'advice';
		break;	
	case 24:
		tachieHeadType = 'close';
		eyebrowsArray.push('nico1');
		eyebrowsArray.push('nico2');
		eyesArray.push('mae1');
		eyesArray.push('mae2');
		eyesArray.push('urumae1');
		eyesArray.push('urumae2');
		mouthArray.push('nico2');
		mouthArray.push('nico3');
		mouthArray.push('nico4');
		mouthArray.push('nico5');
		mouthArray.push('nico7');
		mouthArray.push('pero1');
		tachieHoppeName = '1';
		displayTachieHoppe = true;
		if(justAdvised) leftArmName = 'advice';
		else if(hasLeftHandjob) leftArmName = 'hj';
		else if(justUsedCockPet) leftArmName = 'pet';
		else leftArmName = 'advice';
		break;
	case 25:
		tachieHeadType = 'close';
		eyebrowsArray.push('nico1');
		eyebrowsArray.push('nico2');
		eyebrowsArray.push('kiri2');
		eyebrowsArray.push('koma2');
		eyesArray.push('mae3');
		eyesArray.push('toji2');
		eyesArray.push('urumae1');
		eyesArray.push('urumae2');
		eyesArray.push('heartmae1');
		eyesArray.push('heartmae2');
		mouthArray.push('mu4');
		mouthArray.push('ho1');
		mouthArray.push('ho2');
		mouthArray.push('ho3');
		mouthArray.push('nico1');
		mouthArray.push('nico2');
		mouthArray.push('nico4');
		mouthArray.push('pero1');
		if(isAroused) {
			tachieHoppeName = '1';
			displayTachieHoppe = true;
		}
		if(Math.randomInt(2) === 0) {
			tachieSweatName = '1';
			displayTachieSweat = true;
		}
		ranNum = Math.randomInt(3);
		if(ranNum === 1) leftArmName = 'advice';
		else if(ranNum === 2) leftArmName = 'pet';
		break;
	case 26:
		tachieHeadType = 'close';
		eyebrowsArray.push('nico1');
		eyebrowsArray.push('nico2');
		eyebrowsArray.push('kiri1');
		eyebrowsArray.push('koma1');
		eyebrowsArray.push('oko1');
		eyesArray.push('mae3');
		eyesArray.push('toji1');
		eyesArray.push('ahe1');
		eyesArray.push('urumae2');
		eyesArray.push('heartmae1');
		eyesArray.push('heartmae2');
		eyesArray.push('heartahe1');
		mouthArray.push('ho4');
		mouthArray.push('ho5');
		mouthArray.push('wa2');
		mouthArray.push('wa3');
		mouthArray.push('nico6');
		mouthArray.push('nico7');
		mouthArray.push('ahe1');
		mouthArray.push('pero1');
		tachieHoppeName = '1';
		displayTachieHoppe = true;
		tachieSweatName = '1';
		displayTachieSweat = true;
		ranNum = Math.randomInt(3);
		if(ranNum === 1) leftArmName = 'advice';
		else if(ranNum === 2) leftArmName = 'pet';
		else leftArmName = 'thigh';
		break;
	case 27:
		tachieHeadType = 'far';
		eyebrowsArray.push('nico1');
		eyebrowsArray.push('nico2');
		eyesArray.push('mae1');
		eyesArray.push('mae2');
		eyesArray.push('urumae1');
		eyesArray.push('urumae2');
		eyesArray.push('toji2');
		mouthArray.push('chu2');
		mouthArray.push('chu3');
		mouthArray.push('re3');
		mouthArray.push('re4');
		mouthArray.push('re5');
		mouthArray.push('bero1');
		mouthArray.push('bero2');
		mouthArray.push('bero3');
		if(isAroused) {
			tachieHoppeName = '1';
			displayTachieHoppe = true;
		}
		ranNum = Math.randomInt(2);
		if(ranNum === 1) leftArmName = 'thigh';
		break;
	case 28:
		tachieHeadType = 'far';
		eyebrowsArray.push('nico1');
		eyebrowsArray.push('nico2');
		eyesArray.push('mae2');
		eyesArray.push('urumae1');
		eyesArray.push('urumae2');
		eyesArray.push('heartmae1');
		eyesArray.push('heartmae2');
		mouthArray.push('chu3');
		mouthArray.push('re3');
		mouthArray.push('re5');
		mouthArray.push('bero1');
		mouthArray.push('bero2');
		mouthArray.push('bero3');
		mouthArray.push('ho3');
		if(isAroused) {
			tachieHoppeName = '1';
			displayTachieHoppe = true;
		}
		if(justAdvised) leftArmName = 'advice';
		else if(hasLeftHandjob) leftArmName = 'hj';
		else if(justUsedCockPet) leftArmName = 'pet';
		else leftArmName = 'advice';
		break;
	case 29:
		tachieHeadType = 'far';
		eyebrowsArray.push('nico1');
		eyebrowsArray.push('nico2');
		eyesArray.push('mae2');
		eyesArray.push('mae3');
		eyesArray.push('urumae2');
		eyesArray.push('heartmae2');
		eyesArray.push('toji2');
		mouthArray.push('chu1');
		mouthArray.push('chu2');
		mouthArray.push('re1');
		mouthArray.push('re2');
		mouthArray.push('ho2');
		mouthArray.push('ho3');
		if(isAroused) {
			tachieHoppeName = '1';
			displayTachieHoppe = true;
		}
		if(Math.randomInt(2) === 0) {
			tachieSweatName = '1';
			displayTachieSweat = true;
		}
		ranNum = Math.randomInt(3);
		if(ranNum === 1) leftArmName = 'advice';
		else if(ranNum === 2) leftArmName = 'pet';
		break;
	case 30:
		tachieHeadType = 'far';
		eyebrowsArray.push('nico1');
		eyebrowsArray.push('nico2');
		eyesArray.push('mae3');
		eyesArray.push('toji1');
		eyesArray.push('ahe1');
		eyesArray.push('urumae2');
		eyesArray.push('heartmae2');
		eyesArray.push('heartmae1');
		eyesArray.push('heartahe1');
		mouthArray.push('chu2');
		mouthArray.push('ho2');
		mouthArray.push('ho3');
		mouthArray.push('re3');
		mouthArray.push('re4');
		mouthArray.push('re5');
		mouthArray.push('bero1');
		mouthArray.push('bero2');
		mouthArray.push('bero3');
		tachieHoppeName = '1';
		displayTachieHoppe = true;
		tachieSweatName = '1';
		displayTachieSweat = true;
		ranNum = Math.randomInt(3);
		if(ranNum === 1) leftArmName = 'advice';
		else if(ranNum === 2) leftArmName = 'pet';
		else if(ranNum === 3) leftArmName = 'hj';
		break;
	}
	
	if(eyebrowsArray.length > 0) {
		this.setTachieEyebrows('' + tachieHeadType + '_' + eyebrowsArray[Math.randomInt(eyebrowsArray.length)]);
	}
	if(eyesArray.length > 0) {
		this.setTachieEyes('' + tachieHeadType + '_' + eyesArray[Math.randomInt(eyesArray.length)]);
	}
	if(mouthArray.length > 0) {
		this.setTachieMouth('' + tachieHeadType + '_' + mouthArray[Math.randomInt(mouthArray.length)]);
	}
	
	if(displayTachieHoppe) this.setTachieHoppe('' + tachieHeadType + '_' + tachieHoppeName);
	if(displayTachieSweat) this.setTachieSweat('' + tachieHeadType + '_' + tachieSweatName);
	
	switch(leftArmName) {
		case 'thigh':
			this.setTachieLeftArm('thigh_' + this.gymOutfitColor);
			this.setTachieSemenLeftArmExtension('thigh_');
			break;
		case 'hj':
			if(generallvl2 && Math.random() > 0.5) {
				this.setTachieLeftArm('hj_2');
				this.setTachieSemenLeftArmExtension('hj_2_');
			}
			else {
				this.setTachieLeftArm('hj_1');
				this.setTachieSemenLeftArmExtension('hj_1_');
			}
			break;
		case 'pet':
			if(target.isErect) {
				if(target._gym_shortsStripped) {
					this.setTachieLeftArm('pet_hard');
					this.setTachieSemenLeftArmExtension('pet_hard_');
				}
				else {
					this.setTachieLeftArm('pet_shorts_hard_' + this.gymOutfitColor);
					this.setTachieSemenLeftArmExtension('pet_shorts_hard_');
				}
			}
			else {
				this.setTachieLeftArm('pet_soft');
				this.setTachieSemenLeftArmExtension('pet_soft_');
			}
			break;
		case 'advice':
			if(targetIsErect) {
				if(target._gym_shortsStripped) {
					this.setTachieLeftArm('advice_hard');
					this.setTachieSemenLeftArmExtension('advice_hard_');
				}
				else {
					this.setTachieLeftArm('advice_shorts_hard');
					this.setTachieSemenLeftArmExtension('advice_shorts_hard_');
				}
			}
			else {
				this.setTachieLeftArm('advice_soft');
				this.setTachieSemenLeftArmExtension('advice_soft_');
			}
			break;
		default:
			this.resetTachieLeftArm();
			//this.resetTachieSemenLeftArmExtension();
			break;
	}
	
	if(leftArmName) {
		this.setMaxTachieSemenLeftArmId(1);
	}
	else {
		this.setMaxTachieSemenLeftArmId(0);
	}
	
	if(this.isWearingTrainerCap()) {
		if(tachieHeadType == 'close')
			this.setTachieCap('close_1');
		else
			this.setTachieCap('far_1');
	}
	else {
		this.resetTachieCap();
	}
	if(this.isWearingTrainerHood()) {
		if(tachieHeadType == 'close')
			this.setTachieHood('on_close_' + this.gymOutfitColor);
		else
			this.setTachieHood('on_far_' + this.gymOutfitColor);
	}
	else {
		if(tachieHeadType == 'close')
			this.setTachieHood('off_close_' + this.gymOutfitColor);
		else
			this.setTachieHood('off_far_' + this.gymOutfitColor);
	}
	
	if(tachieHeadType == 'close') {
		this.setTachieHead('close');
		this.setTachieHairExtension('close_');
		this.setTachieStrayFaceExtension('close_');
		this.setTachieSemenFaceExtension('close_');
	}
	else {
		this.setTachieHead('far');
		this.setTachieHairExtension('far_');
		this.setTachieStrayFaceExtension(this.tachieMouth + '_');
		this.setTachieSemenFaceExtension('far_');
	}
	this.setMaxTachieSemenFaceId(1);
	
	this.setTrainerTachieGymGoer(target);
	this.setAllowTachieEmoteUpdate(true);
};

// Trainer Fera
Game_Actor.prototype.emoteTrainerFeraPose = function() {
	this.setAllowTachieEmoteUpdate(false);
	let justOrgasmed = this.didLastGetHitBySkillType(JUST_SKILLTYPE_KARRYN_ORGASM) || this.justOrgasmed();
	let isAroused = this.isAroused() || justOrgasmed;
	let isHorny = this.trainerBattle_isUsingHornyVariation();
	let target = $gameTroop.trainerBattle_getGymGoerAtTrainerLocation();
	let targetIsErect = target && target.isErect;
	
	let givingBJ = this.isBodySlotPenis(MOUTH_ID) && target && target.isErect;
	let justObserved = this.didLastGetHitBySkillType(JUST_SKILLTYPE_TRAINER_OBSERVING);
	let justAdvised = this.didLastGetHitBySkillType(JUST_SKILLTYPE_TRAINER_ADVISING);
	let justUsedCockPet = this.isStateAffected(STATE_TRAINER_USED_COCK_PET_ID);
	let justPulledShorts = this.didLastGetHitBySkillType(JUST_SKILLTYPE_TRAINER_PULLING_SHORTS);
	let karrynSwallowingCum = this.didLastGetHitBySkillType(JUST_SKILLTYPE_ENEMY_CUM_SWALLOW);
	let karrynGotBukkaked = this.didLastGetHitBySkillType(JUST_SKILLTYPE_ENEMY_BUKKAKE);
	let enemyJustCameOntoFloor = this.didLastGetHitBySkillType(JUST_SKILLTYPE_ENEMY_FLOOR_BUKKAKE);
	
	let generalReactionScore = this.getReactionScore();
	let orgasmReactionScore = this.getOrgasmReactionScore();
	let bukkakeReactionScore = this.getBukkakeReactionScore();
	let swallowReactionScore = this.getSwallowReactionScore();
	
	let generallvl3 = generalReactionScore >= VAR_DEF_RS_LV3_REQ;
	let generallvl2 = generalReactionScore >= VAR_DEF_RS_LV2_REQ;
	let orgasmlvl3 = orgasmReactionScore >= VAR_DEF_RS_LV3_REQ;
	let orgasmlvl2 = orgasmReactionScore >= VAR_DEF_RS_LV2_REQ;
	let bukkakelvl3 = bukkakeReactionScore >= VAR_DEF_RS_LV3_REQ;
	let bukkakelvl2 = bukkakeReactionScore >= VAR_DEF_RS_LV2_REQ;
	let swallowlvl3 = swallowReactionScore  >= VAR_DEF_RS_LV3_REQ;
	let swallowlvl2 = swallowReactionScore >= VAR_DEF_RS_LV2_REQ;
	
	let faceArray = [];
	this.resetTachieHoppe();
	this.resetTachieSweat();
	
	if(givingBJ) {
		if(justOrgasmed) {
			if(orgasmlvl3) 
				faceArray.push(30);
			else if(orgasmlvl2) 
				faceArray.push(20);
			else
				faceArray.push(10);
		}
		else if(karrynSwallowingCum) {
			if(swallowlvl3) 
				faceArray.push(28);
			else if(swallowlvl2) 
				faceArray.push(18);
			else
				faceArray.push(8);
		}
		else if(karrynGotBukkaked || enemyJustCameOntoFloor) {
			if(bukkakelvl3) 
				faceArray.push(29);
			else if(bukkakelvl2) 
				faceArray.push(19);
			else
				faceArray.push(9);
		}
		else {
			if(generallvl3) 
				faceArray.push(27);
			else if(generallvl2) 
				faceArray.push(17);
			else
				faceArray.push(7);
		}
	}
	else {
		if(justOrgasmed) {
			if(orgasmlvl3) 
				faceArray.push(26);
			else if(orgasmlvl2) 
				faceArray.push(16);
			else
				faceArray.push(6);
		}
		else if(karrynGotBukkaked) {
			if(bukkakelvl3) 
				faceArray.push(25);
			else if(bukkakelvl2) 
				faceArray.push(15);
			else
				faceArray.push(5);
		}
		else if(enemyJustCameOntoFloor) {
			if(bukkakelvl3) 
				faceArray.push(23);
			else if(bukkakelvl2) 
				faceArray.push(13);
			else
				faceArray.push(3);
		}
		else if(justUsedCockPet || (justAdvised && isHorny)) {
			if(generallvl3) 
				faceArray.push(24);
			else if(generallvl2) 
				faceArray.push(14);
			else
				faceArray.push(4);
		}
		else if(justObserved) {
			if(target.reachedOrgasmPoint()) {
				if(generallvl3) 
					faceArray.push(23);
				else if(generallvl2) 
					faceArray.push(13);
				else
					faceArray.push(3);
			}
			else if(targetIsErect) {
				if(generallvl3) 
					faceArray.push(22);
				else if(generallvl2) 
					faceArray.push(12);
				else
					faceArray.push(2);
			}
			else {
				if(generallvl3) 
					faceArray.push(21);
				else if(generallvl2) 
					faceArray.push(11);
				else
					faceArray.push(1);
			}
		}
		else if(justPulledShorts) {
			if(generallvl3) 
				faceArray.push(23);
			else if(generallvl2) 
				faceArray.push(12);
			else
				faceArray.push(2);
		}
		else {
			if(generallvl3) 
				faceArray.push(21);
			else if(generallvl2) 
				faceArray.push(11);
			else
				faceArray.push(1);
		}
	}
	
	let faceId = faceArray[Math.randomInt(faceArray.length)];
	let eyebrowsArray = [];
	let eyesArray = [];
	let mouthArray = [];
	let tachieBodyType = 'far';
	let tachieHoppeName = '';
	let tachieSweatName = '';
	let displayTachieHoppe = false;
	let displayTachieSweat = false;
	let armsName = false;
	let ranNum = 0;

	switch(faceId) {
	case 1:
		tachieBodyType = 'far';
		eyebrowsArray.push('kiri1');
		eyebrowsArray.push('kiri2');
		eyesArray.push('mae1');
		eyesArray.push('mae2');
		mouthArray.push('mu1');
		mouthArray.push('mu2');
		mouthArray.push('mu3');
		mouthArray.push('ho1');
		mouthArray.push('ho2');
		if(isAroused) {
			tachieHoppeName = '1';
			displayTachieHoppe = true;
		}
		break;
	case 2:
		tachieBodyType = 'far';
		eyebrowsArray.push('koma1');
		eyebrowsArray.push('koma2');
		eyesArray.push('mae1');
		eyesArray.push('mae2');
		mouthArray.push('mu1');
		mouthArray.push('mu2');
		mouthArray.push('mu3');
		mouthArray.push('ho1');
		mouthArray.push('wa1');
		tachieHoppeName = '1';
		displayTachieHoppe = true;
		tachieSweatName = '1';
		displayTachieSweat = true;
		if(justPulledShorts) armsName = 'pull';
		break;
	case 3:
		tachieBodyType = 'far';
		eyebrowsArray.push('oko1');
		eyesArray.push('mae2');
		mouthArray.push('mu1');
		mouthArray.push('mu2');
		mouthArray.push('mu3');
		mouthArray.push('ho1');
		mouthArray.push('ho2');
		tachieHoppeName = '1';
		displayTachieHoppe = true;
		tachieSweatName = '1';
		displayTachieSweat = true;
		break;
	case 4:
		tachieBodyType = 'far';
		eyebrowsArray.push('koma1');
		eyebrowsArray.push('koma2');
		eyesArray.push('mae1');
		eyesArray.push('mae2');
		mouthArray.push('mu1');
		mouthArray.push('mu2');
		mouthArray.push('mu3');
		mouthArray.push('ho1');
		mouthArray.push('wa1');
		tachieHoppeName = '1';
		displayTachieHoppe = true;
		tachieSweatName = '1';
		displayTachieSweat = true;
		if(justAdvised) armsName = 'normal';
		else if(justUsedCockPet) armsName = 'pet';
		else armsName = 'normal';
		break;
	case 5:
		tachieBodyType = 'far';
		eyebrowsArray.push('oko1');
		eyesArray.push('mae2');
		eyesArray.push('mae3');
		mouthArray.push('mu1');
		mouthArray.push('mu2');
		mouthArray.push('mu3');
		mouthArray.push('wa1');
		mouthArray.push('wa2');
		mouthArray.push('ho2');
		mouthArray.push('ho3');
		tachieHoppeName = '1';
		displayTachieHoppe = true;
		tachieSweatName = '1';
		displayTachieSweat = true;
		break;	
	case 6:
		tachieBodyType = 'far';
		eyebrowsArray.push('koma1');
		eyebrowsArray.push('koma2');
		eyebrowsArray.push('oko1');
		eyesArray.push('mae2');
		eyesArray.push('mae3');
		eyesArray.push('toji1');
		mouthArray.push('ho3');
		mouthArray.push('ho4');
		mouthArray.push('wa2');
		mouthArray.push('wa3');
		tachieHoppeName = '1';
		displayTachieHoppe = true;
		tachieSweatName = '1';
		displayTachieSweat = true;
		ranNum = Math.randomInt(2);
		if(ranNum === 1) armsName = 'normal';
		break;
	case 7:
		tachieBodyType = 'close';
		eyebrowsArray.push('koma1');
		eyebrowsArray.push('koma2');
		eyesArray.push('mae1');
		eyesArray.push('mae2');
		mouthArray.push('fera1');
		mouthArray.push('fera2');
		tachieHoppeName = '1';
		displayTachieHoppe = true;
		tachieSweatName = '1';
		displayTachieSweat = true;
		armsName = 'normal';
		break;
	case 8:
		tachieBodyType = 'close';
		eyebrowsArray.push('koma1');
		eyebrowsArray.push('koma2');
		eyesArray.push('mae2');
		eyesArray.push('mae3');
		eyesArray.push('toji1');
		mouthArray.push('fera1');
		mouthArray.push('fera2');
		tachieHoppeName = '1';
		displayTachieHoppe = true;
		tachieSweatName = '1';
		displayTachieSweat = true;
		armsName = 'normal';
		break;
	case 9:
		tachieBodyType = 'close';
		eyebrowsArray.push('oko1');
		eyesArray.push('mae2');
		eyesArray.push('mae3');
		mouthArray.push('fera1');
		mouthArray.push('fera2');
		tachieHoppeName = '1';
		displayTachieHoppe = true;
		tachieSweatName = '1';
		displayTachieSweat = true;
		armsName = 'normal';
		break;
	case 10:
		tachieBodyType = 'close';
		eyebrowsArray.push('koma1');
		eyebrowsArray.push('koma2');
		eyebrowsArray.push('oko1');
		eyesArray.push('mae2');
		eyesArray.push('mae3');
		eyesArray.push('toji1');
		mouthArray.push('fera1');
		mouthArray.push('fera2');
		tachieHoppeName = '1';
		displayTachieHoppe = true;
		tachieSweatName = '1';
		displayTachieSweat = true;
		armsName = 'normal';
		break;	
	case 11:
		tachieBodyType = 'far';
		eyebrowsArray.push('kiri1');
		eyebrowsArray.push('kiri2');
		eyesArray.push('mae1');
		eyesArray.push('mae2');
		mouthArray.push('mu2');
		mouthArray.push('mu3');
		mouthArray.push('mu4');
		mouthArray.push('ho1');
		mouthArray.push('ho2');
		mouthArray.push('chu1');
		if(isAroused) {
			tachieHoppeName = '1';
			displayTachieHoppe = true;
		}
		break;
	case 12:
		tachieBodyType = 'far';
		eyebrowsArray.push('kiri1');
		eyebrowsArray.push('kiri2');
		eyesArray.push('mae1');
		eyesArray.push('mae2');
		mouthArray.push('nico1');
		mouthArray.push('nico2');
		mouthArray.push('nico3');
		mouthArray.push('nico4');
		if(isAroused) {
			tachieHoppeName = '1';
			displayTachieHoppe = true;
		}
		if(justPulledShorts) armsName = 'pull';
		else armsName = 'normal';
		break;
	case 13:
		tachieBodyType = 'far';
		eyebrowsArray.push('kiri1');
		eyebrowsArray.push('kiri2');
		eyesArray.push('mae2');
		mouthArray.push('nico1');
		mouthArray.push('nico2');
		mouthArray.push('nico3');
		mouthArray.push('nico4');
		mouthArray.push('pero1');
		tachieHoppeName = '1';
		displayTachieHoppe = true;
		armsName = 'normal';
		break;
	case 14:
		tachieBodyType = 'far';
		eyebrowsArray.push('kiri2');
		eyesArray.push('mae1');
		eyesArray.push('mae2');
		eyesArray.push('urumae2');
		mouthArray.push('nico1');
		mouthArray.push('nico2');
		mouthArray.push('nico3');
		mouthArray.push('nico4');
		mouthArray.push('pero1');
		tachieHoppeName = '1';
		displayTachieHoppe = true;
		if(Math.randomInt(2) === 0) {
			tachieSweatName = '1';
			displayTachieSweat = true;
		}
		if(justAdvised) armsName = 'normal';
		else if(justUsedCockPet) armsName = 'pet';
		else armsName = 'normal';
		break;
	case 15:
		tachieBodyType = 'far';
		eyebrowsArray.push('kiri1');
		eyebrowsArray.push('kiri2');
		eyebrowsArray.push('koma2');
		eyesArray.push('mae2');
		eyesArray.push('mae3');
		eyesArray.push('urumae2');
		mouthArray.push('mu4');
		mouthArray.push('ho1');
		mouthArray.push('ho2');
		mouthArray.push('ho3');
		mouthArray.push('wa1');
		mouthArray.push('chu1');
		mouthArray.push('nico1');
		tachieHoppeName = '1';
		displayTachieHoppe = true;
		tachieSweatName = '1';
		displayTachieSweat = true;
		armsName = 'normal';
		break;
	case 16:
		tachieBodyType = 'far';
		eyebrowsArray.push('koma1');
		eyebrowsArray.push('koma2');
		eyesArray.push('mae2');
		eyesArray.push('mae3');
		eyesArray.push('toji1');
		mouthArray.push('ho4');
		mouthArray.push('ho5');
		mouthArray.push('wa2');
		mouthArray.push('wa3');
		mouthArray.push('ahe1');
		mouthArray.push('nico6');
		tachieHoppeName = '1';
		displayTachieHoppe = true;
		tachieSweatName = '1';
		displayTachieSweat = true;
		ranNum = Math.randomInt(3);
		if(ranNum === 1) armsName = 'normal';
		else if(ranNum === 2) armsName = 'chin';
		break;
	case 17:
		tachieBodyType = 'close';
		eyebrowsArray.push('kiri1');
		eyebrowsArray.push('kiri2');
		eyesArray.push('mae1');
		eyesArray.push('mae2');
		mouthArray.push('fera2');
		mouthArray.push('fera3');
		mouthArray.push('fera4');
		if(isAroused) {
			tachieHoppeName = '1';
			displayTachieHoppe = true;
		}
		armsName = 'normal';
		break;
	case 18:
		tachieBodyType = 'close';
		eyebrowsArray.push('kiri2');
		eyebrowsArray.push('koma2');
		eyesArray.push('mae2');
		eyesArray.push('mae3');
		eyesArray.push('urumae2');
		mouthArray.push('fera2');
		mouthArray.push('fera3');
		mouthArray.push('fera4');
		tachieHoppeName = '1';
		displayTachieHoppe = true;
		if(Math.randomInt(2) === 0) {
			tachieSweatName = '1';
			displayTachieSweat = true;
		}
		armsName = 'chin';
		break;
	case 19:
		tachieBodyType = 'close';
		eyebrowsArray.push('kiri1');
		eyebrowsArray.push('kiri2');
		eyesArray.push('mae2');
		eyesArray.push('mae3');
		eyesArray.push('urumae2');
		mouthArray.push('fera2');
		mouthArray.push('fera3');
		mouthArray.push('fera4');
		tachieHoppeName = '1';
		displayTachieHoppe = true;
		if(Math.randomInt(2) === 0) {
			tachieSweatName = '1';
			displayTachieSweat = true;
		}
		armsName = 'normal';
		break;
	case 20:
		tachieBodyType = 'close';
		eyebrowsArray.push('kiri1');
		eyebrowsArray.push('kiri2');
		eyebrowsArray.push('koma1');
		eyesArray.push('mae2');
		eyesArray.push('mae3');
		eyesArray.push('toji1');
		eyesArray.push('ahe1');
		eyesArray.push('urumae2');
		mouthArray.push('fera2');
		mouthArray.push('fera3');
		mouthArray.push('fera4');
		tachieHoppeName = '1';
		displayTachieHoppe = true;
		tachieSweatName = '1';
		displayTachieSweat = true;
		ranNum = Math.randomInt(3);
		if(ranNum === 1) armsName = 'normal';
		else if(ranNum === 2) armsName = 'chin';
		break;
	case 21:
		tachieBodyType = 'far';
		eyebrowsArray.push('nico1');
		eyebrowsArray.push('nico2');
		eyesArray.push('mae1');
		eyesArray.push('mae2');
		mouthArray.push('nico1');
		mouthArray.push('nico2');
		mouthArray.push('nico3');
		mouthArray.push('nico4');
		mouthArray.push('nico5');
		mouthArray.push('pero1');
		if(isAroused) {
			tachieHoppeName = '1';
			displayTachieHoppe = true;
		}
		ranNum = Math.randomInt(3);
		if(ranNum === 1) armsName = 'normal';
		else if(ranNum === 2) armsName = 'pet_soft';
		else armsName = 'far_peace';
		break;
	case 22:
		tachieBodyType = 'far';
		eyebrowsArray.push('nico1');
		eyebrowsArray.push('nico2');
		eyesArray.push('mae1');
		eyesArray.push('mae2');
		eyesArray.push('urumae1');
		eyesArray.push('urumae2');
		mouthArray.push('nico3');
		mouthArray.push('nico4');
		mouthArray.push('nico5');
		mouthArray.push('nico6');
		mouthArray.push('nico7');
		mouthArray.push('pero1');
		mouthArray.push('pero2');
		if(isAroused) {
			tachieHoppeName = '1';
			displayTachieHoppe = true;
		}
		armsName = 'chin';
		break;
	case 23:
		tachieBodyType = 'far';
		eyebrowsArray.push('nico1');
		eyebrowsArray.push('nico2');
		eyebrowsArray.push('kiri1');
		eyesArray.push('mae2');
		eyesArray.push('urumae2');
		eyesArray.push('heartmae2');
		mouthArray.push('nico1');
		mouthArray.push('nico2');
		mouthArray.push('nico3');
		mouthArray.push('nico4');
		mouthArray.push('pero1');
		mouthArray.push('pero2');
		if(isAroused) {
			tachieHoppeName = '1';
			displayTachieHoppe = true;
		}
		if(justPulledShorts) armsName = 'pull';
		else armsName = 'normal';
		break;
	case 24:
		tachieBodyType = 'far';
		eyebrowsArray.push('nico1');
		eyebrowsArray.push('nico2');
		eyebrowsArray.push('koma1');
		eyebrowsArray.push('koma2');
		eyesArray.push('mae2');
		eyesArray.push('urumae1');
		eyesArray.push('urumae2');
		mouthArray.push('nico3');
		mouthArray.push('nico4');
		mouthArray.push('nico5');
		mouthArray.push('nico6');
		mouthArray.push('nico7');
		mouthArray.push('pero2');
		mouthArray.push('ahe2');
		if(isAroused) {
			tachieHoppeName = '1';
			displayTachieHoppe = true;
		}
		if(justAdvised) armsName = 'chin';
		else if(justUsedCockPet) armsName = 'pet';
		else armsName = 'chin';
		break;
	case 25:
		tachieBodyType = 'far';
		eyebrowsArray.push('nico1');
		eyebrowsArray.push('nico2');
		eyebrowsArray.push('kiri2');
		eyebrowsArray.push('koma2');
		eyesArray.push('mae3');
		eyesArray.push('toji1');
		eyesArray.push('urumae1');
		eyesArray.push('urumae2');
		eyesArray.push('heartmae1');
		eyesArray.push('heartmae2');
		mouthArray.push('nico4');
		mouthArray.push('nico5');
		mouthArray.push('nico6');
		mouthArray.push('nico7');
		mouthArray.push('pero1');
		mouthArray.push('pero2');
		mouthArray.push('ahe2');
		mouthArray.push('ahe3');
		if(isAroused) {
			tachieHoppeName = '1';
			displayTachieHoppe = true;
		}
		if(Math.randomInt(2) === 0) {
			tachieSweatName = '1';
			displayTachieSweat = true;
		}
		armsName = 'far_peace';
		break;
	case 26:
		tachieBodyType = 'far';
		eyebrowsArray.push('nico1');
		eyebrowsArray.push('nico2');
		eyebrowsArray.push('kiri1');
		eyebrowsArray.push('koma1');
		eyebrowsArray.push('oko1');
		eyesArray.push('mae3');
		eyesArray.push('toji1');
		eyesArray.push('ahe1');
		eyesArray.push('urumae2');
		eyesArray.push('heartmae1');
		eyesArray.push('heartmae2');
		eyesArray.push('heartahe1');
		mouthArray.push('ho5');
		mouthArray.push('wa3');
		mouthArray.push('ahe1');
		mouthArray.push('ahe2');
		mouthArray.push('ahe3');
		mouthArray.push('ahe4');
		mouthArray.push('nico7');
		mouthArray.push('pero2');
		tachieHoppeName = '1';
		displayTachieHoppe = true;
		tachieSweatName = '1';
		displayTachieSweat = true;
		ranNum = Math.randomInt(3);
		if(ranNum === 1) armsName = 'normal';
		else if(ranNum === 2) armsName = 'chin';
		break;	
	case 27:
		tachieBodyType = 'close';
		eyebrowsArray.push('nico1');
		eyebrowsArray.push('nico2');
		eyesArray.push('mae1');
		eyesArray.push('mae2');
		eyesArray.push('urumae1');
		eyesArray.push('urumae2');
		mouthArray.push('fera3');
		mouthArray.push('fera4');
		mouthArray.push('fera5');
		mouthArray.push('fera6');
		if(isAroused) {
			tachieHoppeName = '1';
			displayTachieHoppe = true;
		}
		ranNum = Math.randomInt(2);
		if(ranNum === 1) armsName = 'normal';
		else armsName = 'close_peace';
		break;	
	case 28:
		tachieBodyType = 'close';
		eyebrowsArray.push('nico1');
		eyebrowsArray.push('nico2');
		eyebrowsArray.push('kiri2');
		eyesArray.push('mae2');
		eyesArray.push('mae3');
		eyesArray.push('urumae1');
		eyesArray.push('heartmae2');
		mouthArray.push('fera3');
		mouthArray.push('fera4');
		mouthArray.push('fera5');
		mouthArray.push('fera6');
		if(isAroused) {
			tachieHoppeName = '1';
			displayTachieHoppe = true;
		}
		if(Math.randomInt(2) === 0) {
			tachieSweatName = '1';
			displayTachieSweat = true;
		}
		if(ranNum === 1) armsName = 'chin';
		else armsName = 'close_peace';
		break;
	case 29:
		tachieBodyType = 'close';
		eyebrowsArray.push('nico1');
		eyebrowsArray.push('nico2');
		eyesArray.push('mae2');
		eyesArray.push('urumae1');
		eyesArray.push('heartmae1');
		eyesArray.push('heartmae2');
		mouthArray.push('fera2');
		mouthArray.push('fera3');
		mouthArray.push('fera4');
		mouthArray.push('fera5');
		if(isAroused) {
			tachieHoppeName = '1';
			displayTachieHoppe = true;
		}
		if(Math.randomInt(2) === 0) {
			tachieSweatName = '1';
			displayTachieSweat = true;
		}
		if(ranNum === 1) armsName = 'chin';
		else armsName = 'close_peace';
		break;
	case 30:
		tachieBodyType = 'close';
		eyebrowsArray.push('nico1');
		eyebrowsArray.push('nico2');
		eyebrowsArray.push('kiri1');
		eyebrowsArray.push('koma1');
		eyebrowsArray.push('oko1');
		eyesArray.push('mae3');
		eyesArray.push('toji1');
		eyesArray.push('ahe1');
		eyesArray.push('urumae2');
		eyesArray.push('heartmae1');
		eyesArray.push('heartmae2');
		eyesArray.push('heartahe1');
		mouthArray.push('fera1');
		mouthArray.push('fera2');
		mouthArray.push('fera3');
		mouthArray.push('fera4');
		mouthArray.push('fera5');
		mouthArray.push('fera6');
		tachieHoppeName = '1';
		displayTachieHoppe = true;
		tachieSweatName = '1';
		displayTachieSweat = true;
		ranNum = Math.randomInt(4);
		if(ranNum === 1) armsName = 'normal';
		else if(ranNum === 2) armsName = 'chin';
		else if(ranNum === 3) armsName = 'close_peace';
		break;
	}
	
	
	if(eyebrowsArray.length > 0) {
		this.setTachieEyebrows('' + tachieBodyType + '_' + eyebrowsArray[Math.randomInt(eyebrowsArray.length)]);
	}
	if(eyesArray.length > 0) {
		this.setTachieEyes('' + tachieBodyType + '_' + eyesArray[Math.randomInt(eyesArray.length)]);
	}
	if(mouthArray.length > 0) {
		this.setTachieMouth('' + tachieBodyType + '_' + mouthArray[Math.randomInt(mouthArray.length)]);
	}
	
	if(displayTachieHoppe) this.setTachieHoppe('' + tachieBodyType + '_' + tachieHoppeName);
	if(displayTachieSweat) this.setTachieSweat('' + tachieBodyType + '_' + tachieSweatName);
	
	switch(armsName) {
		case 'normal':
			this.setTachieFrontA('arms_normal');
			this.resetTachieFrontB();
			if(tachieBodyType == 'close') {
				this.setTachieSemenLeftArmExtension('close_normal_');
				this.setTachieSemenRightArmExtension('close_normal_');
			}
			else {
				this.setTachieSemenLeftArmExtension('far_normal_');
				this.setTachieSemenRightArmExtension('far_normal_');
			}
			this.setMaxTachieSemenLeftArmId(1);
			this.setMaxTachieSemenRightArmId(1);
			break;
		case 'pet':
			if(targetIsErect) {
				if(target._gym_shortsStripped) {
					this.setTachieFrontA('arms_pet_hard');
					this.setTachieSemenLeftArmExtension('far_pet_hard_');
					this.setTachieSemenRightArmExtension('far_pet_hard_');
				}
				else {
					this.setTachieFrontA('arms_pet_shorts_hard');
					this.setTachieSemenLeftArmExtension('far_pet_shorts_hard_');
					this.setTachieSemenRightArmExtension('far_pet_shorts_hard_');
				}
				this.setTachieFrontB('arms_pet_hard');
			}
			else {
				this.setTachieFrontA('arms_pet_soft');
				this.setTachieFrontB('arms_pet_soft');
				this.setTachieSemenLeftArmExtension('far_pet_soft_');
				this.setTachieSemenRightArmExtension('far_pet_soft_');
			}
			this.setMaxTachieSemenLeftArmId(1);
			this.setMaxTachieSemenRightArmId(1);
			break;
		case 'pull':
			this.setTachieFrontA('arms_pull');
			this.resetTachieFrontB();
			this.setTachieSemenLeftArmExtension('far_pull_');
			this.setTachieSemenRightArmExtension('far_pull_');
			this.setMaxTachieSemenLeftArmId(1);
			this.setMaxTachieSemenRightArmId(1);
			break;
		case 'chin':
			this.setTachieFrontA('arms_chin');
			this.setTachieFrontB('arms_chin');
			if(tachieBodyType == 'close') {
				this.setTachieSemenLeftArmExtension('close_chin_');
				this.setTachieSemenRightArmExtension('close_chin_');
			}
			else {
				this.setTachieSemenLeftArmExtension('far_chin_');
				this.setTachieSemenRightArmExtension('far_chin_');
			}
			this.setMaxTachieSemenLeftArmId(1);
			this.setMaxTachieSemenRightArmId(1);
			break;
		case 'far_peace':
			this.setTachieFrontA('arms_far_peace');
			this.setTachieFrontB('arms_far_peace_' + this.gymOutfitColor);
			this.setTachieSemenLeftArmExtension('far_peace_');
			this.setTachieSemenRightArmExtension('far_peace_');
			this.setMaxTachieSemenLeftArmId(1);
			this.setMaxTachieSemenRightArmId(1);
			break;
		case 'close_peace':
			this.setTachieFrontA('arms_close_peace');
			this.setTachieFrontB('arms_close_peace_' + this.gymOutfitColor);
			this.setTachieSemenLeftArmExtension('close_peace_');
			this.setTachieSemenRightArmExtension('close_peace_');
			this.setMaxTachieSemenLeftArmId(1);
			this.setMaxTachieSemenRightArmId(1);
			break;
		default:
			this.resetTachieFrontA();
			this.resetTachieFrontB();
			if(tachieBodyType == 'far') {
				this.setTachieSemenLeftArmExtension('far_free_');
				this.setTachieSemenRightArmExtension('far_free_');
				this.setMaxTachieSemenLeftArmId(1);
				this.setMaxTachieSemenRightArmId(1);
			}
			else {
				this.setMaxTachieSemenLeftArmId(0);
				this.setMaxTachieSemenRightArmId(0);
			}
		break;
	}
	
	
	if(this.isWearingTrainerCap()) {
		if(tachieBodyType == 'close')
			this.setTachieCap('close_1');
		else
			this.setTachieCap('far_1');
	}
	else {
		this.resetTachieCap();
	}
	if(this.isWearingTrainerHood()) {
		if(tachieBodyType == 'close')
			this.setTachieHood('close_on_' + this.gymOutfitColor);
		else
			this.setTachieHood('far_on_' + this.gymOutfitColor);
	}
	else {
		if(tachieBodyType == 'close')
			this.setTachieHood('close_off_' + this.gymOutfitColor);
		else
			this.setTachieHood('far_off_' + this.gymOutfitColor);
	}
	
	if(tachieBodyType == 'close') {
		this.setTachieBody('close_' + this.gymOutfitColor);
		this.setTachieHead('close');
		this.setTachieHairExtension('close_');
		this.setTachieStrayFaceExtension(ConfigManager.convertedTachieMouthName(this) + '_');
		this.setTachieSemenFaceExtension('close_');
		this.setTachieSemenBoobsExtension('close_');
	}
	else {
		this.setTachieBody('far_' + this.gymOutfitColor);
		this.resetTachieHead();
		this.setTachieHairExtension('far_');
		this.setTachieStrayFaceExtension('far_');
		this.setTachieSemenFaceExtension('far_');
		this.setTachieSemenBoobsExtension('far_');
	}
	this.setMaxTachieSemenFaceId(1);
	this.setMaxTachieSemenBoobsId(1);
	
	this.setTrainerTachieGymGoer(target);
	this.setAllowTachieEmoteUpdate(true);
};

// Trainer Paizuri
Game_Actor.prototype.emoteTrainerPaizuriPose = function() {
	this.setAllowTachieEmoteUpdate(false);
	let justOrgasmed = this.didLastGetHitBySkillType(JUST_SKILLTYPE_KARRYN_ORGASM) || this.justOrgasmed();
	let isAroused = this.isAroused() || justOrgasmed;
	let isHorny = this.trainerBattle_isUsingHornyVariation();
	let target = $gameTroop.trainerBattle_getGymGoerAtTrainerLocation();
	let targetIsErect = target && target.isErect;
	
	let givingPaizuri = this.isBodySlotPenis(BOOBS_ID);
	let justObserved = this.didLastGetHitBySkillType(JUST_SKILLTYPE_TRAINER_OBSERVING);
	let justAdvised = this.didLastGetHitBySkillType(JUST_SKILLTYPE_TRAINER_ADVISING);
	let justUsedCockPet = this.isStateAffected(STATE_TRAINER_USED_COCK_PET_ID);
	let karrynGotBukkaked = this.didLastGetHitBySkillType(JUST_SKILLTYPE_ENEMY_BUKKAKE);
	let enemyJustCameOntoFloor = this.didLastGetHitBySkillType(JUST_SKILLTYPE_ENEMY_FLOOR_BUKKAKE);
	
	let generalReactionScore = this.getReactionScore();
	let orgasmReactionScore = this.getOrgasmReactionScore();
	let bukkakeReactionScore = this.getBukkakeReactionScore();
	
	let generallvl3 = generalReactionScore >= VAR_DEF_RS_LV3_REQ;
	let generallvl2 = generalReactionScore >= VAR_DEF_RS_LV2_REQ;
	let orgasmlvl3 = orgasmReactionScore >= VAR_DEF_RS_LV3_REQ;
	let orgasmlvl2 = orgasmReactionScore >= VAR_DEF_RS_LV2_REQ;
	let bukkakelvl3 = bukkakeReactionScore >= VAR_DEF_RS_LV3_REQ;
	let bukkakelvl2 = bukkakeReactionScore >= VAR_DEF_RS_LV2_REQ;
	
	let faceArray = [];
	this.resetTachieHoppe();
	this.resetTachieSweat();
	
	
	if(justOrgasmed) {
		if(orgasmlvl3) 
			faceArray.push(24);
		else if(orgasmlvl2) 
			faceArray.push(16);
		else
			faceArray.push(8);
	}
	else if(karrynGotBukkaked) {
		if(bukkakelvl3) 
			faceArray.push(21);
		else if(bukkakelvl2) 
			faceArray.push(13);
		else
			faceArray.push(5);
	}
	else if(givingPaizuri) {
		if(justAdvised) {
			if(generallvl3) 
				faceArray.push(23);
			else if(generallvl2) 
				faceArray.push(15);
			else
				faceArray.push(7);
		}
		else {
			if(generallvl3) 
				faceArray.push(22);
			else if(generallvl2) 
				faceArray.push(14);
			else
				faceArray.push(6);
		}
	}
	else if(enemyJustCameOntoFloor) {
		if(bukkakelvl3) 
			faceArray.push(19);
		else if(bukkakelvl2) 
			faceArray.push(11);
		else
			faceArray.push(2);
	}
	else if(justObserved) {
		if(target.reachedOrgasmPoint()) {
			if(generallvl3) 
				faceArray.push(19);
			else if(generallvl2) 
				faceArray.push(11);
			else
				faceArray.push(3);
		}
		else if(targetIsErect) {
			if(generallvl3) 
				faceArray.push(18);
			else if(generallvl2) 
				faceArray.push(10);
			else
				faceArray.push(2);
		}
		else {
			if(generallvl3) 
				faceArray.push(17);
			else if(generallvl2) 
				faceArray.push(9);
			else
				faceArray.push(1);
		}
	}
	else if(justUsedCockPet || (justAdvised && isHorny)) {
		if(generallvl3) 
			faceArray.push(20);
		else if(generallvl2) 
			faceArray.push(12);
		else
			faceArray.push(4);
	}
	else {
		if(generallvl3) 
			faceArray.push(17);
		else if(generallvl2) 
			faceArray.push(9);
		else
			faceArray.push(1);
	}
		
	let faceId = faceArray[Math.randomInt(faceArray.length)];
	let eyebrowsArray = [];
	let eyesArray = [];
	let mouthArray = [];
	let armsName = false;
	let ranNum = 0;
	
	switch(faceId) {
	case 1:
		eyebrowsArray.push('kiri1');
		eyebrowsArray.push('kiri2');
		eyesArray.push('mae1');
		eyesArray.push('mae2');
		mouthArray.push('mu1');
		mouthArray.push('mu2');
		mouthArray.push('mu3');
		mouthArray.push('ho1');
		if(isAroused) this.setTachieHoppe(1);
		armsName = 'normal';
		break;
	case 2:
		eyebrowsArray.push('oko1');
		eyesArray.push('mae1');
		eyesArray.push('mae2');
		mouthArray.push('mu1');
		mouthArray.push('mu2');
		mouthArray.push('mu3');
		mouthArray.push('ku1');
		mouthArray.push('ku2');
		this.setTachieHoppe(1);
		this.setTachieSweat(1);
		armsName = 'normal';
		break;
	case 3:
		eyebrowsArray.push('oko1');
		eyesArray.push('mae2');
		mouthArray.push('mu1');
		mouthArray.push('mu2');
		mouthArray.push('mu3');
		mouthArray.push('ho1');
		mouthArray.push('ku2');
		this.setTachieHoppe(1);
		this.setTachieSweat(1);
		armsName = 'normal';
		break;	
	case 4:
		eyebrowsArray.push('koma1');
		eyebrowsArray.push('koma2');
		eyesArray.push('mae1');
		eyesArray.push('mae2');
		mouthArray.push('mu1');
		mouthArray.push('mu2');
		mouthArray.push('mu3');
		mouthArray.push('ho1');
		mouthArray.push('ho2');
		this.setTachieHoppe(1);
		this.setTachieSweat(1);
		if(justUsedCockPet) armsName = 'pet';
		else armsName = 'normal';
		break;		
	case 5:
		eyebrowsArray.push('oko1');
		eyesArray.push('mae2');
		eyesArray.push('mae3');
		mouthArray.push('ku1');
		mouthArray.push('ku2');
		mouthArray.push('mu2');
		mouthArray.push('mu3');
		mouthArray.push('ho1');
		mouthArray.push('ho2');
		mouthArray.push('wa1');
		this.setTachieHoppe(1);
		this.setTachieSweat(1);
		if(givingPaizuri) armsName = 'zuri';
		else armsName = 'normal';
		break;		
	case 6:
		eyebrowsArray.push('koma1');
		eyebrowsArray.push('koma2');
		eyesArray.push('mae2');
		eyesArray.push('mae1');
		mouthArray.push('ku1');
		mouthArray.push('ku2');
		mouthArray.push('mu2');
		mouthArray.push('mu3');
		mouthArray.push('mu1');
		this.setTachieHoppe(1);
		this.setTachieSweat(1);
		armsName = 'zuri';
		break;		
	case 7:
		eyebrowsArray.push('koma1');
		eyebrowsArray.push('kiri1');
		eyebrowsArray.push('kiri2');
		eyesArray.push('mae2');
		eyesArray.push('mae1');
		mouthArray.push('ku2');
		mouthArray.push('ho1');
		mouthArray.push('mu2');
		mouthArray.push('mu3');
		mouthArray.push('mu1');
		this.setTachieHoppe(1);
		this.setTachieSweat(1);
		armsName = 'zuri';
		break;	
	case 8:
		eyebrowsArray.push('koma1');
		eyebrowsArray.push('koma2');
		eyebrowsArray.push('oko1');
		eyesArray.push('mae2');
		eyesArray.push('mae3');
		eyesArray.push('toji1');
		mouthArray.push('ho2');
		mouthArray.push('ho3');
		mouthArray.push('wa1');
		mouthArray.push('wa2');
		mouthArray.push('ahe1');
		this.setTachieHoppe(1);
		this.setTachieSweat(1);
		armsName = 'zuri';
		break;	
	case 9:
		eyebrowsArray.push('kiri1');
		eyebrowsArray.push('kiri2');
		eyesArray.push('mae1');
		eyesArray.push('mae2');
		mouthArray.push('nico1');
		mouthArray.push('nico2');
		mouthArray.push('nico3');
		mouthArray.push('mu4');
		mouthArray.push('ho1');
		if(isAroused) this.setTachieHoppe(1);
		ranNum = Math.randomInt(3);
		if(ranNum === 1) armsName = 'normal';
		else if(ranNum === 2) armsName = 'face';
		else armsName = 'boobs';
		break;	
	case 10:
		eyebrowsArray.push('kiri1');
		eyebrowsArray.push('kiri2');
		eyesArray.push('mae1');
		eyesArray.push('mae2');
		mouthArray.push('nico1');
		mouthArray.push('nico2');
		mouthArray.push('nico3');
		mouthArray.push('mu4');
		mouthArray.push('nico4');
		if(isAroused) this.setTachieHoppe(1);
		ranNum = Math.randomInt(3);
		if(ranNum === 1) armsName = 'normal';
		else if(ranNum === 2) armsName = 'face';
		else armsName = 'boobs';
		break;	
	case 11:
		eyebrowsArray.push('kiri1');
		eyebrowsArray.push('kiri2');
		eyesArray.push('mae2');
		mouthArray.push('nico1');
		mouthArray.push('nico3');
		mouthArray.push('nico4');
		mouthArray.push('mu4');
		mouthArray.push('pero1');
		if(isAroused) this.setTachieHoppe(1);
		ranNum = Math.randomInt(3);
		if(ranNum === 1) armsName = 'normal';
		else if(ranNum === 2) armsName = 'face';
		else armsName = 'boobs';
		break;	
	case 12:
		eyebrowsArray.push('kiri1');
		eyebrowsArray.push('kiri2');
		eyesArray.push('mae1');
		eyesArray.push('mae2');
		mouthArray.push('nico1');
		mouthArray.push('nico2');
		mouthArray.push('nico3');
		mouthArray.push('mu4');
		mouthArray.push('ho1');
		this.setTachieHoppe(1);
		if(justUsedCockPet) {
			armsName = 'pet';
		}
		else {
			ranNum = Math.randomInt(3);
			if(ranNum === 1) armsName = 'face';
			else armsName = 'boobs';
		}
		break;	
	case 13:
		eyebrowsArray.push('kiri1');
		eyebrowsArray.push('kiri2');
		eyebrowsArray.push('koma2');
		eyesArray.push('mae1');
		eyesArray.push('mae2');
		eyesArray.push('urumae2');
		mouthArray.push('nico3');
		mouthArray.push('mu4');
		mouthArray.push('ho1');
		mouthArray.push('ho2');
		mouthArray.push('wa1');
		this.setTachieHoppe(1);
		this.setTachieSweat(1);
		if(givingPaizuri) armsName = 'zuri';
		else armsName = 'boobs';
		break;	
	case 14:
		eyebrowsArray.push('kiri1');
		eyebrowsArray.push('kiri2');
		eyesArray.push('mae1');
		eyesArray.push('mae2');
		mouthArray.push('nico2');
		mouthArray.push('nico3');
		mouthArray.push('mu3');
		mouthArray.push('mu4');
		mouthArray.push('ho2');
		if(isAroused) this.setTachieHoppe(1);
		armsName = 'zuri';
		break;	
	case 15:
		eyebrowsArray.push('kiri1');
		eyebrowsArray.push('kiri2');
		eyebrowsArray.push('koma2');
		eyesArray.push('mae1');
		eyesArray.push('mae2');
		mouthArray.push('nico2');
		mouthArray.push('nico3');
		mouthArray.push('nico1');
		mouthArray.push('mu4');
		if(isAroused) this.setTachieHoppe(1);
		if(Math.randomInt(2) === 0) this.setTachieSweat(1);
		ranNum = Math.randomInt(2);
		if(ranNum === 1) armsName = 'zuri_face';
		else armsName = 'zuri';
		break;	
	case 16:
		eyebrowsArray.push('koma1');
		eyebrowsArray.push('koma2');
		eyesArray.push('mae3');
		eyesArray.push('toji1');
		eyesArray.push('ahe1');
		eyesArray.push('urumae2');
		mouthArray.push('ahe1');
		mouthArray.push('ho2');
		mouthArray.push('ho3');
		mouthArray.push('wa1');
		mouthArray.push('wa2');
		this.setTachieHoppe(1);
		this.setTachieSweat(1);
		armsName = 'zuri';
		break;	
	case 17:
		eyebrowsArray.push('nico1');
		eyebrowsArray.push('nico2');
		eyesArray.push('mae1');
		eyesArray.push('mae2');
		mouthArray.push('nico1');
		mouthArray.push('nico2');
		mouthArray.push('nico3');
		mouthArray.push('nico4');
		mouthArray.push('nico5');
		mouthArray.push('pero1');
		mouthArray.push('mu3');
		mouthArray.push('mu4');
		if(isAroused) this.setTachieHoppe(1);
		ranNum = Math.randomInt(2);
		if(ranNum === 1) armsName = 'face';
		else armsName = 'boobs';
		break;		
	case 18:
		eyebrowsArray.push('nico1');
		eyebrowsArray.push('nico2');
		eyesArray.push('mae1');
		eyesArray.push('mae2');
		eyesArray.push('urumae2');
		eyesArray.push('heartmae2');
		mouthArray.push('nico3');
		mouthArray.push('nico4');
		mouthArray.push('nico5');
		mouthArray.push('nico6');
		mouthArray.push('pero1');
		mouthArray.push('pero2');
		mouthArray.push('ahe2');
		if(isAroused) this.setTachieHoppe(1);
		ranNum = Math.randomInt(2);
		if(ranNum === 1) armsName = 'face';
		else armsName = 'boobs';
		break;		
	case 19:
		eyebrowsArray.push('nico1');
		eyebrowsArray.push('nico2');
		eyebrowsArray.push('kiri2');
		eyesArray.push('mae2');
		eyesArray.push('urumae2');
		eyesArray.push('heartmae2');
		mouthArray.push('nico1');
		mouthArray.push('nico3');
		mouthArray.push('nico4');
		mouthArray.push('pero1');
		mouthArray.push('mu3');
		if(isAroused) this.setTachieHoppe(1);
		ranNum = Math.randomInt(3);
		if(ranNum === 1) armsName = 'face';
		else if(ranNum === 2) armsName = 'normal';
		else armsName = 'boobs';
		break;		
	case 20:
		eyebrowsArray.push('nico1');
		eyebrowsArray.push('nico2');
		eyebrowsArray.push('kiri2');
		eyebrowsArray.push('koma2');
		eyesArray.push('mae1');
		eyesArray.push('mae2');
		eyesArray.push('mae3');
		eyesArray.push('urumae1');
		eyesArray.push('urumae2');
		mouthArray.push('nico1');
		mouthArray.push('nico2');
		mouthArray.push('nico3');
		mouthArray.push('nico4');
		mouthArray.push('nico5');
		mouthArray.push('pero1');
		mouthArray.push('mu4');
		mouthArray.push('ahe3');
		this.setTachieHoppe(1);
		if(justUsedCockPet) {
			armsName = 'pet';
		}
		else {
			ranNum = Math.randomInt(2);
			if(ranNum === 1) armsName = 'face';
			else armsName = 'boobs';
		}
		break;		
	case 21:
		eyebrowsArray.push('nico1');
		eyebrowsArray.push('nico2');
		eyebrowsArray.push('koma1');
		eyebrowsArray.push('koma2');
		eyesArray.push('mae3');
		eyesArray.push('toji1');
		eyesArray.push('urumae2');
		eyesArray.push('heartmae2');
		mouthArray.push('nico4');
		mouthArray.push('nico5');
		mouthArray.push('nico6');
		mouthArray.push('pero1');
		mouthArray.push('pero2');
		mouthArray.push('ahe2');
		mouthArray.push('wa2');
		mouthArray.push('ho3');
		if(isAroused) this.setTachieHoppe(1);
		if(givingPaizuri) {
			armsName = 'zuri';
		}
		else {
			ranNum = Math.randomInt(2);
			if(ranNum === 1) armsName = 'face';
			else armsName = 'boobs';
		}
		break;	
	case 22:
		eyebrowsArray.push('nico1');
		eyebrowsArray.push('nico2');
		eyesArray.push('mae1');
		eyesArray.push('mae2');
		eyesArray.push('urumae1');
		eyesArray.push('urumae2');
		mouthArray.push('nico2');
		mouthArray.push('nico3');
		mouthArray.push('nico4');
		mouthArray.push('nico5');
		mouthArray.push('nico6');
		mouthArray.push('mu4');
		mouthArray.push('pero2');
		if(isAroused) this.setTachieHoppe(1);
		armsName = 'zuri';
		break;
	case 23:
		eyebrowsArray.push('nico1');
		eyebrowsArray.push('nico2');
		eyebrowsArray.push('koma2');
		eyesArray.push('heartmae1');
		eyesArray.push('heartmae2');
		eyesArray.push('urumae1');
		eyesArray.push('urumae2');
		mouthArray.push('nico1');
		mouthArray.push('nico2');
		mouthArray.push('nico3');
		mouthArray.push('nico4');
		mouthArray.push('nico5');
		mouthArray.push('nico6');
		mouthArray.push('ho2');
		mouthArray.push('pero2');
		if(isAroused) this.setTachieHoppe(1);
		if(Math.randomInt(2) === 0) this.setTachieSweat(1);
		ranNum = Math.randomInt(2);
		if(ranNum === 1) armsName = 'zuri_face';
		else armsName = 'zuri';
		break;
	case 24:
		eyebrowsArray.push('nico1');
		eyebrowsArray.push('nico2');
		eyebrowsArray.push('kiri1');
		eyebrowsArray.push('koma1');
		eyebrowsArray.push('oko1');
		eyesArray.push('heartmae1');
		eyesArray.push('heartmae2');
		eyesArray.push('heartahe1');
		eyesArray.push('mae3');
		eyesArray.push('toji1');
		eyesArray.push('ahe1');
		mouthArray.push('nico5');
		mouthArray.push('nico6');
		mouthArray.push('ahe1');
		mouthArray.push('ahe2');
		mouthArray.push('ahe3');
		mouthArray.push('wa2');
		mouthArray.push('ho2');
		mouthArray.push('ho3');
		mouthArray.push('ku1');
		this.setTachieHoppe(1);
		this.setTachieSweat(1);
		armsName = 'zuri';
		break;
	
	}
	
	if(eyebrowsArray.length > 0) {
		this.setTachieEyebrows(eyebrowsArray[Math.randomInt(eyebrowsArray.length)]);
	}
	if(eyesArray.length > 0) {
		this.setTachieEyes(eyesArray[Math.randomInt(eyesArray.length)]);
	}
	if(mouthArray.length > 0) {
		this.setTachieMouth(mouthArray[Math.randomInt(mouthArray.length)]);
	}
	
	if(givingPaizuri && !this.tachieBody.includes('zuri')) {
		armsName = 'zuri';
	}
	
	switch(armsName) {
		case 'normal':
			this.setTachieBody('normal_' + this.gymOutfitColor);
			this.setTachieBoobs('normal_1');
			this.resetTachieFrontA();
			this.resetTachieFrontC();
			this.setTachieFrontB('arms_' + armsName + '_' + this.gymOutfitColor);
			this.setTachieStrayBoobsExtension('normal_');
			this.setTachieSemenBoobsExtension('normal_');
			this.setTachieSemenLeftArmExtension('normal_normal_');
			this.setTachieSemenRightArmExtension('normal_normal_');
			this.setTachieFrontBHasHCup(false);
			this.setTachieFrontBHasPCup(false);
			break;
		case 'face':
			this.setTachieBody('normal_' + this.gymOutfitColor);
			this.setTachieBoobs('normal_1');
			this.setTachieFrontA('arms_' + armsName + '_' + this.gymOutfitColor);
			this.resetTachieFrontB();
			this.resetTachieFrontC();
			this.setTachieStrayBoobsExtension('normal_');
			this.setTachieSemenBoobsExtension('normal_');
			this.setTachieSemenLeftArmExtension('normal_face_');
			this.setTachieSemenRightArmExtension('normal_face_');
			this.setTachieFrontBHasHCup(false);
			this.setTachieFrontBHasPCup(false);
			break;
		case 'boobs':
			this.setTachieBody(armsName + '_' + this.gymOutfitColor);
			this.setTachieBoobs('boobs_1');
			this.setTachieFrontA('arms_' + armsName + '_' + this.gymOutfitColor);
			this.setTachieFrontB('arms_boobs');
			this.resetTachieFrontC();
			this.setTachieStrayBoobsExtension('boobs_');
			this.setTachieSemenBoobsExtension('boobs_');
			this.setTachieSemenLeftArmExtension('boobs_');
			this.setTachieSemenRightArmExtension('boobs_');
			this.setTachieFrontBHasHCup(true);
			this.setTachieFrontBHasPCup(true);
			break;
		case 'zuri_face':
			this.setTachieBody(armsName + '_' + this.gymOutfitColor);
			this.setTachieBoobs('zuri_face_1');
			this.setTachieFrontA('arms_' + armsName + '_' + this.gymOutfitColor);
			this.resetTachieFrontB();
			this.resetTachieFrontC();
			this.setTachieStrayBoobsExtension('zuri1_');
			this.setTachieSemenBoobsExtension('zuri_face_');
			this.setTachieSemenLeftArmExtension('zuri_face_');
			this.setTachieSemenRightArmExtension('zuri_face_');
			this.setTachieFrontBHasHCup(false);
			this.setTachieFrontBHasPCup(false);
			break;
		case 'pet':
			this.setTachieBody('normal_' + this.gymOutfitColor);
			this.setTachieBoobs('normal_1');
			this.resetTachieFrontB();
			this.resetTachieFrontC();
			if(target.isErect) {
				if(target._gym_shortsStripped) {
					this.setTachieFrontA('arms_pet_hard_' + this.gymOutfitColor);
					this.setTachieSemenLeftArmExtension('pet_hard_');
					this.setTachieSemenRightArmExtension('pet_hard_');
				}
				else {
					this.setTachieFrontA('arms_pet_hard_shorts_' + this.gymOutfitColor);
					this.setTachieSemenLeftArmExtension('pet_shorts_hard_');
					this.setTachieSemenRightArmExtension('pet_shorts_hard_');
				}
			}
			else {
				this.setTachieFrontA('arms_pet_soft_' + this.gymOutfitColor);
				this.setTachieSemenLeftArmExtension('pet_soft_');
				this.setTachieSemenRightArmExtension('pet_soft_');
			}
			this.setTachieStrayBoobsExtension('normal_');
			this.setTachieSemenBoobsExtension('normal_');
			this.setTachieFrontBHasHCup(false);
			this.setTachieFrontBHasPCup(false);
			break;
		case 'zuri':
			let maxBodyNum = 1;
			if(generallvl3) maxBodyNum = 3;
			else if(generallvl2) maxBodyNum = 2;
			let bodyNum = 1;
			if(maxBodyNum > 1) bodyNum = Math.randomInt(maxBodyNum) + 1;
			this.setTachieBody(armsName + '_1_' + this.gymOutfitColor);
			this.setTachieBoobs('zuri_1');
			this.resetTachieFrontA();
			this.resetTachieFrontB();
			if(bodyNum > 1) this.setTachieFrontC('zuri_' + (bodyNum - 1) + '_' + this.gymOutfitColor);
			else this.resetTachieFrontC();
			this.setTachieStrayBoobsExtension('zuri' + bodyNum + '_');
			this.setTachieSemenBoobsExtension('zuri_' + bodyNum + '_');
			this.setTachieSemenLeftArmExtension('zuri_boobs_' + bodyNum + '_');
			this.setTachieSemenRightArmExtension('zuri_boobs_' + bodyNum + '_');
			this.setTachieFrontBHasHCup(false);
			this.setTachieFrontBHasPCup(false);
			break;
	}
	this.setMaxTachieSemenBoobsId(1);
	this.setMaxTachieSemenLeftArmId(1);
	this.setMaxTachieSemenRightArmId(1);
	
	if(this.isWearingTrainerCap()) {
		this.setTachieCap(1);
	}
	else {
		this.resetTachieCap();
	}
	if(this.isWearingTrainerHood()) {
		if(this.tachieBody.includes('zuri')) {
			this.setTachieHood('zuri_on_' + this.gymOutfitColor);
			this.setTachieHoodHasHCup(false);
			this.setTachieHoodHasPCup(true);
		}
		else {
			this.setTachieHood('normal_on_' + this.gymOutfitColor);
			this.setTachieHoodHasHCup(true);
			this.setTachieHoodHasPCup(false);
		}
	}
	else {
		if(this.tachieBody.includes('zuri')) {
			this.setTachieHood('zuri_off_' + this.gymOutfitColor);
			this.setTachieHoodHasHCup(false);
			this.setTachieHoodHasPCup(true);
		}
		else {
			this.setTachieHood('normal_off_' + this.gymOutfitColor);
			this.setTachieHoodHasHCup(true);
			this.setTachieHoodHasPCup(false);
		}
	}
	
	this.setTrainerTachieGymGoer(target);
	this.setAllowTachieEmoteUpdate(true);
};

// Trainer Rinkan
Game_Actor.prototype.emoteTrainerRinkanPose = function() {
	this.setAllowTachieEmoteUpdate(false);
	let justOrgasmed = this.didLastGetHitBySkillType(JUST_SKILLTYPE_KARRYN_ORGASM) || this.justOrgasmed();
	let isAroused = this.isAroused() || justOrgasmed;
	let justGotSpanked = this.didLastGetHitBySkillType(JUST_SKILLTYPE_ENEMY_SPANKING);
	let givingBJ = this.isBodySlotPenis(MOUTH_ID);
	let lastHitBlowjob = this.didLastGetHitBySkillType(JUST_SKILLTYPE_KARRYN_BLOWJOB) || this.didLastGetHitBySkillType(JUST_SKILLTYPE_ENEMY_BLOWJOB);
	let lastHitPussySex = this.didLastGetHitBySkillType(JUST_SKILLTYPE_ENEMY_PUSSY_SEX) || this.didLastGetHitBySkillType(JUST_SKILLTYPE_KARRYN_PUSSY_SEX);
	let lastHitAnalSex = this.didLastGetHitBySkillType(JUST_SKILLTYPE_ENEMY_ANAL_SEX) || this.didLastGetHitBySkillType(JUST_SKILLTYPE_KARRYN_ANAL_SEX);
	let karrynSwallowingCum = this.didLastGetHitBySkillType(JUST_SKILLTYPE_ENEMY_CUM_SWALLOW);
	let karrynGotBukkaked = this.didLastGetHitBySkillType(JUST_SKILLTYPE_ENEMY_BUKKAKE);
	let justGotPussyCreampie = this.didLastGetHitBySkillType(JUST_SKILLTYPE_ENEMY_PUSSY_CREAMPIE);
	let justGotAnalCreampie = this.didLastGetHitBySkillType(JUST_SKILLTYPE_ENEMY_ANAL_CREAMPIE);
	
	let generalReactionScore = this.getReactionScore();
	let orgasmReactionScore = this.getOrgasmReactionScore();
	let bukkakeReactionScore = this.getBukkakeReactionScore();
	let swallowReactionScore = this.getSwallowReactionScore();
	let pussyCreampieReactionScore = this.getPussyCreampieReactionScore();
	let analCreampieReactionScore = this.getAnalCreampieReactionScore();
	
	let generallvl3 = generalReactionScore >= VAR_DEF_RS_LV3_REQ;
	let generallvl2 = generalReactionScore >= VAR_DEF_RS_LV2_REQ;
	let orgasmlvl3 = orgasmReactionScore >= VAR_DEF_RS_LV3_REQ;
	let orgasmlvl2 = orgasmReactionScore >= VAR_DEF_RS_LV2_REQ;
	let bukkakelvl3 = bukkakeReactionScore  >= VAR_DEF_RS_LV3_REQ;
	let bukkakelvl2 = bukkakeReactionScore >= VAR_DEF_RS_LV2_REQ;
	let pussyCreampielvl3 = pussyCreampieReactionScore  >= VAR_DEF_RS_LV3_REQ;
	let pussyCreampielvl2 = pussyCreampieReactionScore >= VAR_DEF_RS_LV2_REQ;
	let analCreampielvl3 = analCreampieReactionScore  >= VAR_DEF_RS_LV3_REQ;
	let analCreampielvl2 = analCreampieReactionScore >= VAR_DEF_RS_LV2_REQ;
	let swallowlvl3 = swallowReactionScore  >= VAR_DEF_RS_LV3_REQ;
	let swallowlvl2 = swallowReactionScore >= VAR_DEF_RS_LV2_REQ;
	
	let faceArray = [];
	this.resetTachieHoppe();
	this.resetTachieSweat();
	let tachieHeadType = this.tachieHead;
	
	if(givingBJ) {
		if(justOrgasmed) {
			if(orgasmlvl3) 
				faceArray.push(33);
			else if(orgasmlvl2) 
				faceArray.push(22);
			else
				faceArray.push(11);
		}
		else if(karrynSwallowingCum) {
			if(swallowlvl3) 
				faceArray.push(32);
			else if(swallowlvl2) 
				faceArray.push(21);
			else
				faceArray.push(10);
		}
		else if(karrynGotBukkaked) {
			if(bukkakelvl3) 
				faceArray.push(31);
			else if(bukkakelvl2) 
				faceArray.push(20);
			else
				faceArray.push(9);
		}
		else if(justGotPussyCreampie) {
			if(pussyCreampielvl3) 
				faceArray.push(31);
			else if(pussyCreampielvl2) 
				faceArray.push(20);
			else
				faceArray.push(9);
		}
		else if(justGotAnalCreampie) {
			if(analCreampielvl3) 
				faceArray.push(31);
			else if(analCreampielvl2) 
				faceArray.push(20);
			else
				faceArray.push(9);
		}
		else if(lastHitPussySex || lastHitAnalSex) {
			if(generallvl3) 
				faceArray.push(30);
			else if(generallvl2) 
				faceArray.push(19);
			else
				faceArray.push(8);
		}
		else if(justGotSpanked) {
			if(generallvl3) 
				faceArray.push(29);
			else if(generallvl2) 
				faceArray.push(18);
			else
				faceArray.push(7);
		}
		else {
			if(generallvl3) 
				faceArray.push(28);
			else if(generallvl2) 
				faceArray.push(17);
			else
				faceArray.push(6);
		}
		
	}
	//not bj
	else {
		if(justOrgasmed) {
			if(orgasmlvl3) 
				faceArray.push(27);
			else if(orgasmlvl2) 
				faceArray.push(16);
			else
				faceArray.push(5);
		}
		else if(karrynGotBukkaked) {
			if(bukkakelvl3) 
				faceArray.push(26);
			else if(bukkakelvl2) 
				faceArray.push(15);
			else
				faceArray.push(4);
		}
		else if(justGotPussyCreampie) {
			if(pussyCreampielvl3) 
				faceArray.push(26);
			else if(pussyCreampielvl2) 
				faceArray.push(15);
			else
				faceArray.push(4);
		}
		else if(justGotAnalCreampie) {
			if(analCreampielvl3) 
				faceArray.push(26);
			else if(analCreampielvl2) 
				faceArray.push(15);
			else
				faceArray.push(4);
		}
		else if(lastHitPussySex || lastHitAnalSex) {
			if(generallvl3) 
				faceArray.push(25);
			else if(generallvl2) 
				faceArray.push(14);
			else
				faceArray.push(3);
		}
		else if(justGotSpanked) {
			if(generallvl3) 
				faceArray.push(24);
			else if(generallvl2) 
				faceArray.push(13);
			else
				faceArray.push(2);
		}
		else {
			if(generallvl3) 
				faceArray.push(23);
			else if(generallvl2) 
				faceArray.push(12);
			else
				faceArray.push(1);
		}
	}
	
	let faceId = faceArray[Math.randomInt(faceArray.length)];
	let eyebrowsArray = [];
	let eyesArray = [];
	let mouthArray = [];
	let tachieHoppeName = '';
	let tachieSweatName = '';
	let displayTachieHoppe = false;
	let displayTachieSweat = false;
	

	if(faceId === 1) {
		eyebrowsArray.push('oko1');
		eyebrowsArray.push('koma1');
		eyebrowsArray.push('koma2');
		eyesArray.push('yoko1');
		eyesArray.push('yoko2');
		mouthArray.push('nico1');
		tachieHoppeName = '1';
		displayTachieHoppe = true;
		tachieSweatName = '1';
		displayTachieSweat = true;
	}
	else if(faceId === 2) {
		eyebrowsArray.push('oko1');
		eyesArray.push('yoko2');
		eyesArray.push('yoko3');
		eyesArray.push('uruyoko2');
		mouthArray.push('ku1');
		mouthArray.push('ku2');
		mouthArray.push('wa1');
		mouthArray.push('ho1');
		mouthArray.push('ho2');
		tachieHoppeName = '1';
		displayTachieHoppe = true;
		tachieSweatName = '1';
		displayTachieSweat = true;
	}
	else if(faceId === 3) {
		eyebrowsArray.push('oko1');
		eyebrowsArray.push('koma1');
		eyebrowsArray.push('koma2');
		eyesArray.push('yoko1');
		eyesArray.push('yoko2');
		mouthArray.push('ho1');
		mouthArray.push('ho2');
		mouthArray.push('ho3');
		mouthArray.push('wa1');
		tachieHoppeName = '1';
		displayTachieHoppe = true;
		tachieSweatName = '1';
		displayTachieSweat = true;
	}
	else if(faceId === 4) {
		eyebrowsArray.push('oko1');
		eyebrowsArray.push('koma1');
		eyebrowsArray.push('koma2');
		eyesArray.push('yoko2');
		eyesArray.push('yoko3');
		eyesArray.push('uruyoko2');
		mouthArray.push('ku1');
		mouthArray.push('ho2');
		mouthArray.push('ho3');
		mouthArray.push('wa1');
		mouthArray.push('wa2');
		tachieHoppeName = '1';
		displayTachieHoppe = true;
		tachieSweatName = '1';
		displayTachieSweat = true;
	}
	else if(faceId === 5) {
		eyebrowsArray.push('oko1');
		eyebrowsArray.push('koma1');
		eyebrowsArray.push('koma2');
		eyesArray.push('yoko3');
		eyesArray.push('toji1');
		eyesArray.push('uruyoko2');
		mouthArray.push('ku1');
		mouthArray.push('ho1');
		mouthArray.push('ho2');
		mouthArray.push('ho3');
		mouthArray.push('wa2');
		mouthArray.push('ahe1');
		mouthArray.push('ahe2');
		tachieHoppeName = '1';
		displayTachieHoppe = true;
		tachieSweatName = '1';
		displayTachieSweat = true;
	}
	else if(faceId === 6) {
		eyebrowsArray.push('oko1');
		eyebrowsArray.push('koma1');
		eyebrowsArray.push('koma2');
		eyesArray.push('mae1');
		eyesArray.push('mae2');
		mouthArray.push('1');
		mouthArray.push('2');
		tachieHoppeName = '1';
		displayTachieHoppe = true;
		tachieSweatName = '1';
		displayTachieSweat = true;
	}
	else if(faceId === 7) {
		eyebrowsArray.push('oko1');
		eyesArray.push('yoko2');
		eyesArray.push('uruyoko2');
		mouthArray.push('1');
		mouthArray.push('2');
		tachieHoppeName = '1';
		displayTachieHoppe = true;
		tachieSweatName = '1';
		displayTachieSweat = true;
	}
	else if(faceId === 8) {
		eyebrowsArray.push('oko1');
		eyebrowsArray.push('koma1');
		eyebrowsArray.push('koma2');
		eyesArray.push('yoko1');
		eyesArray.push('yoko2');
		mouthArray.push('1');
		mouthArray.push('2');
		tachieHoppeName = '1';
		displayTachieHoppe = true;
		tachieSweatName = '1';
		displayTachieSweat = true;
	}
	else if(faceId === 9) {
		eyebrowsArray.push('oko1');
		eyebrowsArray.push('koma1');
		eyebrowsArray.push('koma2');
		eyesArray.push('yoko2');
		eyesArray.push('uruyoko2');
		mouthArray.push('1');
		mouthArray.push('2');
		tachieHoppeName = '1';
		displayTachieHoppe = true;
		tachieSweatName = '1';
		displayTachieSweat = true;
	}
	else if(faceId === 10) {
		eyebrowsArray.push('oko1');
		eyebrowsArray.push('koma1');
		eyebrowsArray.push('koma2');
		eyesArray.push('mae2');
		eyesArray.push('urumae2');
		mouthArray.push('1');
		mouthArray.push('2');
		tachieHoppeName = '1';
		displayTachieHoppe = true;
		tachieSweatName = '1';
		displayTachieSweat = true;
	}
	else if(faceId === 11) {
		eyebrowsArray.push('oko1');
		eyebrowsArray.push('koma1');
		eyebrowsArray.push('koma2');
		eyesArray.push('toji1');
		eyesArray.push('urumae2');
		eyesArray.push('ahe1');
		mouthArray.push('1');
		mouthArray.push('2');
		tachieHoppeName = '1';
		displayTachieHoppe = true;
		tachieSweatName = '1';
		displayTachieSweat = true;
	}
	else if(faceId === 12) {
		eyebrowsArray.push('kiri1');
		eyebrowsArray.push('kiri2');
		eyesArray.push('yoko1');
		eyesArray.push('yoko2');
		mouthArray.push('ku2');
		mouthArray.push('ho1');
		mouthArray.push('ho3');
		mouthArray.push('chu1');
		mouthArray.push('chu2');
		tachieHoppeName = '1';
		displayTachieHoppe = true;
	}
	else if(faceId === 13) {
		eyebrowsArray.push('kiri1');
		eyebrowsArray.push('kiri2');
		eyesArray.push('yoko2');
		eyesArray.push('yoko3');
		eyesArray.push('uruyoko2');
		mouthArray.push('ho2');
		mouthArray.push('ho1');
		mouthArray.push('ho3');
		mouthArray.push('wa1');
		mouthArray.push('wa2');
		mouthArray.push('ahe1');
		tachieHoppeName = '1';
		displayTachieHoppe = true;
	}
	else if(faceId === 14) {
		eyebrowsArray.push('kiri1');
		eyebrowsArray.push('kiri2');
		eyesArray.push('yoko1');
		eyesArray.push('yoko2');
		eyesArray.push('uruyoko1');
		mouthArray.push('ho2');
		mouthArray.push('ho1');
		mouthArray.push('ho3');
		mouthArray.push('chu1');
		mouthArray.push('chu2');
		mouthArray.push('ahe1');
		tachieHoppeName = '1';
		displayTachieHoppe = true;
	}
	else if(faceId === 15) {
		eyebrowsArray.push('kiri1');
		eyebrowsArray.push('kiri2');
		eyebrowsArray.push('koma2');
		eyesArray.push('yoko2');
		eyesArray.push('yoko3');
		eyesArray.push('uruyoko2');
		mouthArray.push('ho1');
		mouthArray.push('ho2');
		mouthArray.push('ho3');
		mouthArray.push('wa1');
		mouthArray.push('ahe1');
		mouthArray.push('ahe3');
		tachieHoppeName = '1';
		displayTachieHoppe = true;
		tachieSweatName = '1';
		displayTachieSweat = true;
	}
	else if(faceId === 16) {
		eyebrowsArray.push('kiri1');
		eyebrowsArray.push('kiri2');
		eyebrowsArray.push('koma1');
		eyebrowsArray.push('koma2');
		eyebrowsArray.push('oko1');
		eyesArray.push('toji1');
		eyesArray.push('yoko3');
		eyesArray.push('ahe1');
		eyesArray.push('uruyoko2');
		eyesArray.push('heartyoko2');
		mouthArray.push('ho2');
		mouthArray.push('wa2');
		mouthArray.push('ahe2');
		mouthArray.push('ahe4');
		mouthArray.push('ahe1');
		mouthArray.push('ahe3');
		tachieHoppeName = '1';
		displayTachieHoppe = true;
		tachieSweatName = '1';
		displayTachieSweat = true;
	}
	else if(faceId === 17) {
		eyebrowsArray.push('kiri1');
		eyebrowsArray.push('kiri2');
		eyesArray.push('mae1');
		eyesArray.push('mae2');
		mouthArray.push('2');
		mouthArray.push('3');
		mouthArray.push('4');
		tachieHoppeName = '1';
		displayTachieHoppe = true;
	}
	else if(faceId === 18) {
		eyebrowsArray.push('koma1');
		eyebrowsArray.push('koma2');
		eyesArray.push('yoko2');
		eyesArray.push('uruyoko2');
		mouthArray.push('2');
		mouthArray.push('3');
		mouthArray.push('4');
		tachieHoppeName = '1';
		displayTachieHoppe = true;
		tachieSweatName = '1';
		displayTachieSweat = true;
	}
	else if(faceId === 19) {
		eyebrowsArray.push('kiri1');
		eyebrowsArray.push('kiri2');
		eyesArray.push('yoko1');
		eyesArray.push('yoko2');
		mouthArray.push('2');
		mouthArray.push('3');
		mouthArray.push('4');
		tachieHoppeName = '1';
		displayTachieHoppe = true;
	}
	else if(faceId === 20) {
		eyebrowsArray.push('kiri1');
		eyebrowsArray.push('kiri2');
		eyesArray.push('yoko2');
		eyesArray.push('uruyoko2');
		mouthArray.push('2');
		mouthArray.push('3');
		mouthArray.push('4');
		tachieHoppeName = '1';
		displayTachieHoppe = true;
		tachieSweatName = '1';
		displayTachieSweat = true;
	}
	else if(faceId === 21) {
		eyebrowsArray.push('kiri1');
		eyebrowsArray.push('kiri2');
		eyesArray.push('mae2');
		eyesArray.push('urumae1');
		eyesArray.push('urumae2');
		mouthArray.push('2');
		mouthArray.push('3');
		mouthArray.push('4');
		tachieHoppeName = '1';
		displayTachieHoppe = true;
		tachieSweatName = '1';
		displayTachieSweat = true;
	}
	else if(faceId === 22) {
		eyebrowsArray.push('kiri1');
		eyebrowsArray.push('kiri2');
		eyesArray.push('toji1');
		eyesArray.push('ahe1');
		eyesArray.push('urumae2');
		mouthArray.push('2');
		mouthArray.push('3');
		mouthArray.push('4');
		tachieHoppeName = '1';
		displayTachieHoppe = true;
		tachieSweatName = '1';
		displayTachieSweat = true;
	}
	else if(faceId === 23) {
		eyebrowsArray.push('nico1');
		eyebrowsArray.push('nico2');
		eyebrowsArray.push('kiri2');
		eyesArray.push('yoko1');
		eyesArray.push('yoko2');
		eyesArray.push('uruyoko1');
		eyesArray.push('uruyoko2');
		mouthArray.push('nico1');
		mouthArray.push('nico2');
		mouthArray.push('nico3');
		mouthArray.push('nico4');
		mouthArray.push('ahe5');
		mouthArray.push('chu2');
		mouthArray.push('ku3');
		if(isAroused) {
			tachieHoppeName = '1';
			displayTachieHoppe = true;
		}
	}
	else if(faceId === 24) {
		eyebrowsArray.push('nico1');
		eyebrowsArray.push('nico2');
		eyebrowsArray.push('koma1');
		eyebrowsArray.push('koma2');
		eyesArray.push('yoko1');
		eyesArray.push('yoko2');
		eyesArray.push('yoko3');
		eyesArray.push('toji1');
		eyesArray.push('uruyoko1');
		eyesArray.push('heartyoko2');
		eyesArray.push('ahe1');
		mouthArray.push('nico2');
		mouthArray.push('nico4');
		mouthArray.push('ahe5');
		mouthArray.push('ahe6');
		mouthArray.push('ho2');
		mouthArray.push('ku3');
		if(isAroused) {
			tachieHoppeName = '1';
			displayTachieHoppe = true;
		}
		if(Math.randomInt(2) === 0) {
			tachieSweatName = '1';
			displayTachieSweat = true;
		}
	}
	else if(faceId === 25) {
		eyebrowsArray.push('nico1');
		eyebrowsArray.push('nico2');
		eyebrowsArray.push('kiri2');
		eyesArray.push('yoko1');
		eyesArray.push('yoko2');
		eyesArray.push('uruyoko1');
		eyesArray.push('uruyoko2');
		eyesArray.push('heartyoko2');
		mouthArray.push('nico1');
		mouthArray.push('nico2');
		mouthArray.push('nico3');
		mouthArray.push('nico4');
		mouthArray.push('ho3');
		mouthArray.push('ku3');
		mouthArray.push('chu1');
		mouthArray.push('ahe5');
		tachieHoppeName = '1';
		displayTachieHoppe = true;
		if(Math.randomInt(2) === 0) {
			tachieSweatName = '1';
			displayTachieSweat = true;
		}
	}
	else if(faceId === 26) {
		eyebrowsArray.push('nico1');
		eyebrowsArray.push('nico2');
		eyebrowsArray.push('koma2');
		eyebrowsArray.push('kiri2');
		eyesArray.push('yoko2');
		eyesArray.push('uruyoko1');
		eyesArray.push('uruyoko2');
		eyesArray.push('heartyoko1');
		eyesArray.push('heartyoko2');
		eyesArray.push('ahe1');
		mouthArray.push('nico2');
		mouthArray.push('nico3');
		mouthArray.push('nico4');
		mouthArray.push('ho1');
		mouthArray.push('ho2');
		mouthArray.push('ho3');
		mouthArray.push('wa1');
		mouthArray.push('ahe5');
		tachieHoppeName = '1';
		displayTachieHoppe = true;
		tachieSweatName = '1';
		displayTachieSweat = true;

	}
	else if(faceId === 27) {
		eyebrowsArray.push('nico1');
		eyebrowsArray.push('nico2');
		eyebrowsArray.push('koma1');
		eyebrowsArray.push('koma2');
		eyebrowsArray.push('kiri1');
		eyebrowsArray.push('kiri2');
		eyebrowsArray.push('oko1');
		eyesArray.push('yoko3');
		eyesArray.push('uruyoko1');
		eyesArray.push('heartyoko1');
		eyesArray.push('heartyoko2');
		eyesArray.push('toji1');
		eyesArray.push('ahe1');
		eyesArray.push('heartahe1');
		mouthArray.push('ho2');
		mouthArray.push('nico2');
		mouthArray.push('wa1');
		mouthArray.push('wa2');
		mouthArray.push('ahe1');
		mouthArray.push('ahe2');
		mouthArray.push('ahe3');
		mouthArray.push('ahe4');
		mouthArray.push('ahe5');
		mouthArray.push('ahe6');
		tachieHoppeName = '1';
		displayTachieHoppe = true;
		tachieSweatName = '1';
		displayTachieSweat = true;
	}
	else if(faceId === 28) {
		eyebrowsArray.push('nico1');
		eyebrowsArray.push('nico2');
		eyebrowsArray.push('kiri2');
		eyesArray.push('mae1');
		eyesArray.push('mae2');
		eyesArray.push('urumae1');
		eyesArray.push('urumae2');
		mouthArray.push('3');
		mouthArray.push('4');
		mouthArray.push('5');
		mouthArray.push('6');
		if(isAroused) {
			tachieHoppeName = '1';
			displayTachieHoppe = true;
		}
	}
	else if(faceId === 29) {
		eyebrowsArray.push('nico1');
		eyebrowsArray.push('nico2');
		eyebrowsArray.push('koma1');
		eyebrowsArray.push('koma2');
		eyesArray.push('yoko1');
		eyesArray.push('yoko2');
		eyesArray.push('toji1');
		eyesArray.push('uruyoko1');
		eyesArray.push('heartyoko2');
		eyesArray.push('ahe1');
		mouthArray.push('3');
		mouthArray.push('4');
		mouthArray.push('5');
		mouthArray.push('6');
		if(isAroused) {
			tachieHoppeName = '1';
			displayTachieHoppe = true;
		}
		if(Math.randomInt(2) === 0) {
			tachieSweatName = '1';
			displayTachieSweat = true;
		}
	}
	else if(faceId === 30) {
		eyebrowsArray.push('nico1');
		eyebrowsArray.push('nico2');
		eyebrowsArray.push('kiri2');
		eyesArray.push('yoko1');
		eyesArray.push('yoko2');
		eyesArray.push('uruyoko1');
		eyesArray.push('uruyoko2');
		eyesArray.push('heartyoko2');
		mouthArray.push('3');
		mouthArray.push('4');
		mouthArray.push('5');
		mouthArray.push('6');
		if(isAroused) {
			tachieHoppeName = '1';
			displayTachieHoppe = true;
		}
		if(Math.randomInt(2) === 0) {
			tachieSweatName = '1';
			displayTachieSweat = true;
		}
	}
	else if(faceId === 31) {
		eyebrowsArray.push('nico1');
		eyebrowsArray.push('nico2');
		eyebrowsArray.push('koma2');
		eyebrowsArray.push('kiri2');
		eyesArray.push('uruyoko1');
		eyesArray.push('uruyoko2');
		eyesArray.push('heartyoko1');
		eyesArray.push('heartyoko2');
		eyesArray.push('ahe1');
		mouthArray.push('3');
		mouthArray.push('4');
		mouthArray.push('5');
		mouthArray.push('6');
		if(isAroused) {
			tachieHoppeName = '1';
			displayTachieHoppe = true;
		}
		if(Math.randomInt(2) === 0) {
			tachieSweatName = '1';
			displayTachieSweat = true;
		}
	}
	else if(faceId === 32) {
		eyebrowsArray.push('nico1');
		eyebrowsArray.push('nico2');
		eyebrowsArray.push('koma2');
		eyebrowsArray.push('kiri2');
		eyesArray.push('urumae1');
		eyesArray.push('urumae2');
		eyesArray.push('heartmae1');
		eyesArray.push('heartmae2');
		eyesArray.push('toji1');
		mouthArray.push('3');
		mouthArray.push('4');
		mouthArray.push('5');
		mouthArray.push('6');
		if(isAroused) {
			tachieHoppeName = '1';
			displayTachieHoppe = true;
		}
		tachieSweatName = '1';
		displayTachieSweat = true;
	}
	else if(faceId === 33) {
		eyebrowsArray.push('nico1');
		eyebrowsArray.push('nico2');
		eyebrowsArray.push('koma1');
		eyebrowsArray.push('koma2');
		eyebrowsArray.push('kiri1');
		eyebrowsArray.push('kiri2');
		eyebrowsArray.push('oko1');
		eyesArray.push('urumae1');
		eyesArray.push('urumae2');
		eyesArray.push('heartmae1');
		eyesArray.push('heartmae2');
		eyesArray.push('toji1');
		eyesArray.push('ahe1');
		eyesArray.push('heartahe1');
		mouthArray.push('1');
		mouthArray.push('2');
		mouthArray.push('3');
		mouthArray.push('4');
		mouthArray.push('5');
		mouthArray.push('6');
		tachieHoppeName = '1';
		displayTachieHoppe = true;
		tachieSweatName = '1';
		displayTachieSweat = true;
	}
	
	
	if(eyebrowsArray.length > 0) {
		this.setTachieEyebrows('' + tachieHeadType + '_' + eyebrowsArray[Math.randomInt(eyebrowsArray.length)]);
	}
	if(eyesArray.length > 0) {
		this.setTachieEyes('' + tachieHeadType + '_' + eyesArray[Math.randomInt(eyesArray.length)]);
	}
	if(mouthArray.length > 0) {
		this.setTachieMouth('' + tachieHeadType + '_' + mouthArray[Math.randomInt(mouthArray.length)]);
	}
	
	if(displayTachieHoppe) this.setTachieHoppe('' + tachieHeadType + '_' + tachieHoppeName);
	if(displayTachieSweat) this.setTachieSweat('' + tachieHeadType + '_' + tachieSweatName);
	
	if(this.isWearingTrainerCap()) {
		if(tachieHeadType == 'normal')
			this.setTachieCap('normal_1');
		else
			this.setTachieCap('fera_1');
	}
	else {
		this.resetTachieCap();
	}
	if(this.isWearingTrainerHood()) {
		if(tachieHeadType == 'normal')
			this.setTachieHood('normal_on_' + this.gymOutfitColor);
		else
			this.setTachieHood('fera_on_' + this.gymOutfitColor);
	}
	else {
		if(tachieHeadType == 'normal')
			this.setTachieHood('normal_off_' + this.gymOutfitColor);
		else
			this.setTachieHood('fera_off_' + this.gymOutfitColor);
	}
	
	if(this.tachieMouth.includes('fera')) {
		this.setMaxTachieStrayFaceId(1,1,1);
		this.setTachieStrayFaceExtension(ConfigManager.convertedTachieMouthName(this) + '_');
	}
	else {
		this.setMaxTachieStrayFaceId(1,2,2);
		this.setTachieStrayFaceExtension('normal_');
	}
	
	this.setAllowTachieEmoteUpdate(true);
};

// Waitress Serving 
Game_Actor.prototype.emoteWaitressServingPose = function() {
	this.setAllowTachieEmoteUpdate(false);
	let justOrgasmed = this.didLastGetHitBySkillType(JUST_SKILLTYPE_KARRYN_ORGASM) || this.justOrgasmed();
	let isAroused = this.isAroused() || justOrgasmed;
	let isHorny = this.isHorny;
	let isDeadDrunk = this.isDeadDrunk;
	let isDrunk = this.isDrunk || isDeadDrunk;
	let isTipsy = this.isTipsy && !isDrunk && !isDeadDrunk;
	let isTrayEmpty = this.waitressBattle_isTrayEmpty();
	let locationIsAtBar = this._barLocation === BAR_LOCATION_STANDBY;
	let locationIsAtTable = !locationIsAtBar;
	let isAtTableWithGuests = this.showEval_tableTakeOrder() && this.customReq_tableTakeOrder();
	let brawlGoingOn = $gameParty.waitressBattle_ongoingBrawl();
	let isNotAcceptingAnyAlcohol = this.isNotAcceptingAnyAlcohol();
	
	let justGotHarassed = this.didLastGetHitBySkillType(JUST_SKILLTYPE_ENEMY_PETTING) || this.didLastGetHitBySkillType(JUST_SKILLTYPE_ENEMY_TALK) || this.didLastGetHitBySkillType(JUST_SKILLTYPE_ENEMY_KISS) || this.didLastGetHitBySkillType(JUST_SKILLTYPE_ENEMY_TOY_PLAY) || this.didLastGetHitBySkillType(JUST_SKILLTYPE_ENEMY_STRIP) || this.didLastGetHitBySkillType(JUST_SKILLTYPE_ENEMY_SPANKING);

	let justUsedKick = this.didLastGetHitBySkillType(JUST_SKILLTYPE_KARRYN_SADISM);
	let isMoving = this.didLastGetHitBySkillType(JUST_SKILLTYPE_WAITRESS_MOVING);
	let isDrinking = this.didLastGetHitBySkillType(JUST_SKILLTYPE_WAITRESS_DRINK);
	let isFlashing = this.didLastGetHitBySkillType(JUST_SKILLTYPE_WAITRESS_FLASH);
	
	//let flashingLvlOne = this.tachieBoobs == 'waitress_1_flash' || this.tachieBoobs == 'waitress_1_flash_hard';
	//let flashingLvlTwo = this.tachieBoobs == 'waitress_2_flash' || this.tachieBoobs == 'waitress_2_flash_hard';
	
	let generalReactionScore = this.getReactionScore();
	let orgasmReactionScore = this.getOrgasmReactionScore();
	
	let generallvl3 = generalReactionScore >= VAR_DEF_RS_LV3_REQ;
	let generallvl2 = generalReactionScore >= VAR_DEF_RS_LV2_REQ;
	let orgasmlvl3 = orgasmReactionScore >= VAR_DEF_RS_LV3_REQ;
	let orgasmlvl2 = orgasmReactionScore >= VAR_DEF_RS_LV2_REQ;
	
	//this.takeOffGlovesAndHat();
	//this.setTachieBody(2);
	
	if(isFlashing) {
		let flashingTachieBoobs = '';
		if(this.clothingStage === 1) {
			flashingTachieBoobs = 'waitress_1_flash';
			if(isAroused && this.tachieHasBoobsHard()) flashingTachieBoobs += '_hard';
		}
		else {
			flashingTachieBoobs = 'waitress_2_flash';
			if(isAroused && this.tachieHasBoobsHard()) flashingTachieBoobs += '_hard';
		}
		this.setTachieBoobs(flashingTachieBoobs);
		
		if(isTrayEmpty) {
			this.setTachieHips('3');
		}
	}
	else {
		this.setBoobsType('waitress');
		this.setPoseClothing();
	}
	this.setPosePanties();

	//Tray
	//Is Flashing
	if(isFlashing) {
		this.setTachieLeftArm('5_naked');
		
		if(!isTrayEmpty) {
			this.setTachieTrayContents();
		}
		else {
			this.setTachieRightArm('zipper_1');
		}
	}
	//not Flashing
	else {
		if(this.isAroused() && generallvl3 && Math.random() < 0.33)
			this.setTachieLeftArm('up1_naked');
		else
			this.setTachieLeftArm('4_naked');
		
		if(isTrayEmpty) {
			this.resetTachieFrontC();
			this.resetTachieFrontD();
			this.resetTachieFrontE();
			this.setTachieRightArm('3_naked');
		}
		else {
			this.setTachieTrayContents();
		}
	}
	
	
	//Face Array
	let faceArray = [];

	if(isFlashing) {
		if(generallvl3) 
			faceArray.push(31);
		else if(generallvl2) 
			faceArray.push(30);
		else
			faceArray.push(16);
	}
	else if(justOrgasmed) {
		if(isDrunk) {
			faceArray.push(26);
		}
		else {
			if(orgasmlvl3) 
				faceArray.push(25);
			else if(orgasmlvl2) 
				faceArray.push(22);
			else
				faceArray.push(19);
		}
	}
	else if(isDrinking) {
		if(generallvl3) 
			faceArray.push(29);
		else if(generallvl2) 
			faceArray.push(28);
		else
			faceArray.push(27);
	}
	else if(justGotHarassed) {
		if(generallvl3) 
			faceArray.push(24);
		else if(generallvl2) 
			faceArray.push(21);
		else
			faceArray.push(18);
	}
	else if(justUsedKick) {
		if(generallvl3) 
			faceArray.push(13);
		else if(generallvl2) 
			faceArray.push(8);
		else
			faceArray.push(3);
	}
	else if(isHorny) {
		if(generallvl3) 
			faceArray.push(23);
		else if(generallvl2) 
			faceArray.push(20);
		else
			faceArray.push(17);
	}
	else if(brawlGoingOn) {
		if(generallvl3) 
			faceArray.push(13);
		else if(generallvl2) 
			faceArray.push(8);
		else
			faceArray.push(3);
	}
	else if(isDrunk) {
		if(generallvl3) 
			faceArray.push(15);
		else if(generallvl2) 
			faceArray.push(10);
		else
			faceArray.push(5);
	}
	else if(!isNotAcceptingAnyAlcohol && isAtTableWithGuests) {
		if(generallvl3) 
			faceArray.push(14);
		else if(generallvl2) 
			faceArray.push(9);
		else
			faceArray.push(4);
	}
	else if(!isTrayEmpty && (isAtTableWithGuests || (!generallvl3 && !generallvl2))) {
		if(generallvl3) 
			faceArray.push(12);
		else if(generallvl2) 
			faceArray.push(7);
		else
			faceArray.push(2);
	}
	else {
		if(generallvl3) 
			faceArray.push(11);
		else if(generallvl2) 
			faceArray.push(6);
		else
			faceArray.push(1);
	}
	
	
	//Face ID
	let faceId = faceArray[Math.randomInt(faceArray.length)];
	let headType = 'normal';
	//this.resetTachieSweat();
	//this.resetTachieHoppe();
	
	let eyebrowsArray = [];
	let eyesArray = [];
	let mouthArray = [];
	let tachieHoppeName = '';
	let tachieSweatName = '';
	let displayTachieHoppe = false;
	let displayTachieSweat = false;
	let dontResetTachieHoppe = false;
	let dontResetTachieSweat = false;
	
	if(faceId === 1) {
		eyebrowsArray.push('kiri1');
		eyebrowsArray.push('kiri2');
		eyesArray.push('yoko1');
		eyesArray.push('mae1');
		mouthArray.push('mu1');
		mouthArray.push('mu2');
		mouthArray.push('ho1');
		mouthArray.push('ho2');
		if(isAroused) {
			tachieHoppeName += '1';
			displayTachieHoppe = true;
		}
	}
	else if(faceId === 2) {
		eyebrowsArray.push('kiri1');
		eyebrowsArray.push('kiri2');
		eyesArray.push('yoko2');
		eyesArray.push('mae2');
		mouthArray.push('mu1');
		mouthArray.push('mu2');
		mouthArray.push('ho1');
		mouthArray.push('ho2');
		if(isAroused) {
			tachieHoppeName += '1';
			displayTachieHoppe = true;
		}
		displayTachieSweat = true;
			tachieSweatName += '1';
	}
	else if(faceId === 3) {
		eyebrowsArray.push('oko1');
		eyebrowsArray.push('oko2');
		eyesArray.push('yoko2');
		eyesArray.push('mae2');
		eyesArray.push('yoko1');
		eyesArray.push('oko1');
		mouthArray.push('wa3');
		mouthArray.push('wa4');
		if(isDrunk) {
			displayTachieHoppe = true;
			tachieHoppeName += '2';
			displayTachieSweat = true;
			tachieSweatName += '2';
		}
		else {
			if(isAroused) {
				tachieHoppeName += '1';
				displayTachieHoppe = true;
			}
			displayTachieSweat = true;
			tachieSweatName += '2';
		}
	}
	else if(faceId === 4) {
		eyebrowsArray.push('nico1');
		eyebrowsArray.push('nico2');
		eyesArray.push('yoko2');
		eyesArray.push('yoko1');
		mouthArray.push('nico1');
		mouthArray.push('wara2');
		mouthArray.push('ho2');
		if(isAroused) {
			tachieHoppeName += '1';
			displayTachieHoppe = true;
		}
	}
	else if(faceId === 5) {
		eyebrowsArray.push('koma1');
		eyebrowsArray.push('koma2');
		eyesArray.push('toji1');
		eyesArray.push('uruyoko2');
		eyesArray.push('drunk1');
		mouthArray.push('mu1');
		mouthArray.push('mu2');
		mouthArray.push('ho1');
		mouthArray.push('wa2');
		displayTachieHoppe = true;
		tachieHoppeName += '2';
		displayTachieSweat = true;
		tachieSweatName += '2';
	}
	else if(faceId === 6) {
		eyebrowsArray.push('nico1');
		eyebrowsArray.push('nico2');
		eyesArray.push('yoko2');
		eyesArray.push('yoko1');
		eyesArray.push('mae1');
		eyesArray.push('mae2');
		mouthArray.push('nico1');
		mouthArray.push('wa1');
		mouthArray.push('ho1');
		mouthArray.push('ho2');
		if(isAroused) {
			tachieHoppeName += '1';
			displayTachieHoppe = true;
		}
	}
	else if(faceId === 7) {
		eyebrowsArray.push('nico1');
		eyebrowsArray.push('nico2');
		eyesArray.push('yoko2');
		eyesArray.push('yoko1');
		eyesArray.push('mae1');
		eyesArray.push('mae2');
		mouthArray.push('nico1');
		mouthArray.push('wa1');
		mouthArray.push('ho1');
		mouthArray.push('ho2');
		if(isAroused) {
			tachieHoppeName += '1';
			displayTachieHoppe = true;
		}
	}
	else if(faceId === 8) {
		eyebrowsArray.push('oko1');
		eyebrowsArray.push('kiri2');
		eyesArray.push('yoko2');
		eyesArray.push('yoko1');
		eyesArray.push('mae1');
		eyesArray.push('mae2');
		mouthArray.push('wa3');
		mouthArray.push('ku1');
		if(isDrunk) {
			displayTachieHoppe = true;
			tachieHoppeName += '2';
		}
		else if(isAroused) {
			tachieHoppeName += '1';
			displayTachieHoppe = true;
		}
		displayTachieSweat = true;
		tachieSweatName += '1';
	}
	else if(faceId === 9) {
		eyebrowsArray.push('nico1');
		eyebrowsArray.push('nico2');
		eyesArray.push('yoko2');
		eyesArray.push('yoko1');
		mouthArray.push('nico1');
		mouthArray.push('nico2');
		mouthArray.push('wara1');
		mouthArray.push('wara2');
		if(isAroused) {
			tachieHoppeName += '1';
			displayTachieHoppe = true;
		}
	}
	else if(faceId === 10) {
		eyebrowsArray.push('koma1');
		eyebrowsArray.push('koma2');
		eyebrowsArray.push('oko1');
		eyesArray.push('toji1');
		eyesArray.push('uruyoko1');
		eyesArray.push('uruyoko2');
		eyesArray.push('mae2');
		eyesArray.push('drunk1');
		mouthArray.push('wara1');
		mouthArray.push('nico2');
		mouthArray.push('ho1');
		mouthArray.push('ho2');
		mouthArray.push('wa1');
		tachieHoppeName += '2';
		displayTachieHoppe = true;
		displayTachieSweat = true;
		tachieSweatName += '1';
	}
	else if(faceId === 11) {
		eyebrowsArray.push('nico3');
		eyebrowsArray.push('nico2');
		eyesArray.push('yoko2');
		eyesArray.push('yoko1');
		eyesArray.push('mae1');
		eyesArray.push('mae2');
		eyesArray.push('toji2');
		mouthArray.push('nico1');
		mouthArray.push('nico2');
		mouthArray.push('wa1');
		mouthArray.push('wara1');
		if(isAroused) {
			tachieHoppeName += '1';
			displayTachieHoppe = true;
		}
	}
	else if(faceId === 12) {
		eyebrowsArray.push('nico1');
		eyebrowsArray.push('nico2');
		eyesArray.push('yoko2');
		eyesArray.push('yoko1');
		eyesArray.push('mae1');
		eyesArray.push('mae2');
		mouthArray.push('nico1');
		mouthArray.push('nico2');
		mouthArray.push('wara1');
		mouthArray.push('wara2');
		if(isAroused) {
			tachieHoppeName += '1';
			displayTachieHoppe = true;
		}
	}
	else if(faceId === 13) {
		eyebrowsArray.push('nico1');
		eyebrowsArray.push('kiri1');
		eyesArray.push('yoko2');
		eyesArray.push('yoko1');
		eyesArray.push('mae2');
		mouthArray.push('ho1');
		mouthArray.push('ho2');
		mouthArray.push('wa2');
		if(isDrunk) {
			displayTachieHoppe = true;
			tachieHoppeName += '2';
		}
		else if(isAroused) {
			tachieHoppeName += '1';
			displayTachieHoppe = true;
		}
	}
	else if(faceId === 14) {
		eyebrowsArray.push('nico3');
		eyebrowsArray.push('nico2');
		eyesArray.push('uruyoko1');
		eyesArray.push('yoko2');
		eyesArray.push('toji2');
		mouthArray.push('nico1');
		mouthArray.push('nico2');
		mouthArray.push('wara1');
		mouthArray.push('pero2');
		mouthArray.push('pero1');
		if(isAroused) {
			tachieHoppeName += '1';
			displayTachieHoppe = true;
		}
	}
	else if(faceId === 15) {
		eyebrowsArray.push('nico3');
		eyebrowsArray.push('nico2');
		eyesArray.push('uruyoko1');
		eyesArray.push('uruyoko2');
		eyesArray.push('drunk1');
		eyesArray.push('toji1');
		eyesArray.push('toji2');
		mouthArray.push('nico1');
		mouthArray.push('nico2');
		mouthArray.push('wara1');
		mouthArray.push('pero2');
		mouthArray.push('pero1');
		if(isAroused) {
			tachieHoppeName += '1';
			displayTachieHoppe = true;
		}
	}
	else if(faceId === 16) {
		eyebrowsArray.push('koma1');
		eyebrowsArray.push('koma2');
		eyesArray.push('yoko2');
		eyesArray.push('yoko3');
		eyesArray.push('yoko4');
		eyesArray.push('uruyoko1');
		mouthArray.push('wa2');
		mouthArray.push('wa3');
		mouthArray.push('ho1');
		mouthArray.push('ho2');
		displayTachieHoppe = true;
		if(isDrunk) {
			tachieHoppeName += '2';
		}
		else {
			tachieHoppeName += '1';
		}
		displayTachieSweat = true;
		if(isDrunk) {
			tachieSweatName += '2';
		}
		else {
			tachieSweatName += '1';
		}
	}
	else if(faceId === 17) {
		eyebrowsArray.push('koma1');
		eyebrowsArray.push('koma2');
		eyebrowsArray.push('oko1');
		eyesArray.push('yoko2');
		eyesArray.push('yoko3');
		eyesArray.push('mae2');
		mouthArray.push('ho1');
		mouthArray.push('wa3');
		mouthArray.push('wa2');
		if(isDrunk) {
			tachieHoppeName += '2';
			displayTachieHoppe = true;
			tachieSweatName += '2';
			displayTachieSweat = true;
		}
		else {
			tachieHoppeName += '1';
			displayTachieHoppe = true;
			tachieSweatName += '1';
			displayTachieSweat = true;
		}
	}
	else if(faceId === 18) {
		eyebrowsArray.push('oko2');
		eyebrowsArray.push('oko1');
		eyesArray.push('yoko4');
		eyesArray.push('yoko3');
		eyesArray.push('mae2');
		eyesArray.push('mae1');
		mouthArray.push('ku1');
		mouthArray.push('ku2');
		mouthArray.push('wa3');
		mouthArray.push('wa4');
		if(isDrunk) {
			tachieHoppeName += '2';
			displayTachieHoppe = true;
			tachieSweatName += '2';
			displayTachieSweat = true;
		}
		else {
			tachieHoppeName += '1';
			displayTachieHoppe = true;
			tachieSweatName += '1';
			displayTachieSweat = true;
		}
	}
	else if(faceId === 19) {
		eyebrowsArray.push('oko2');
		eyebrowsArray.push('koma2');
		eyebrowsArray.push('koma1');
		eyesArray.push('yoko4');
		eyesArray.push('toji2');
		mouthArray.push('ku1');
		mouthArray.push('ku2');
		mouthArray.push('ahe1');
		mouthArray.push('wa4');
		tachieHoppeName += '1';
		displayTachieHoppe = true;
		tachieSweatName += '2';
		displayTachieSweat = true;
	}
	else if(faceId === 20) {
		eyebrowsArray.push('koma2');
		eyebrowsArray.push('koma1');
		eyesArray.push('uruyoko1');
		eyesArray.push('uruyoko2');
		mouthArray.push('wa1');
		mouthArray.push('ho2');
		mouthArray.push('wara1');
		if(isDrunk) {
			tachieHoppeName += '2';
			displayTachieHoppe = true;
		}
		else {
			tachieHoppeName += '1';
			displayTachieHoppe = true;
		}
		tachieSweatName += '1';
		displayTachieSweat = true;
	}
	else if(faceId === 21) {
		eyebrowsArray.push('koma2');
		eyebrowsArray.push('koma1');
		eyebrowsArray.push('oko1');
		eyesArray.push('uruyoko1');
		eyesArray.push('uruyoko2');
		eyesArray.push('yoko4');
		mouthArray.push('wa2');
		mouthArray.push('wa3');
		mouthArray.push('wa4');
		if(isDrunk) {
			tachieHoppeName += '2';
			displayTachieHoppe = true;
		}
		else {
			tachieHoppeName += '1';
			displayTachieHoppe = true;
		}
		tachieSweatName += '1';
		displayTachieSweat = true;
	}
	else if(faceId === 22) {
		eyebrowsArray.push('koma2');
		eyebrowsArray.push('koma1');
		eyebrowsArray.push('oko1');
		eyesArray.push('toji1');
		eyesArray.push('toji2');
		eyesArray.push('uruyoko2');
		eyesArray.push('yoko4');
		mouthArray.push('wa2');
		mouthArray.push('wa3');
		mouthArray.push('wa4');
		tachieHoppeName += '1';
		displayTachieHoppe = true;
	}
	else if(faceId === 23) {
		eyebrowsArray.push('nico1');
		eyebrowsArray.push('nico2');
		eyebrowsArray.push('nico3');
		eyebrowsArray.push('koma1');
		eyebrowsArray.push('koma2');
		eyesArray.push('heartyoko1');
		eyesArray.push('heartyoko2');
		mouthArray.push('pero1');
		mouthArray.push('pero2');
		mouthArray.push('wara2');
		mouthArray.push('ahe2');
		mouthArray.push('ahe3');
		if(isDrunk) {
			tachieHoppeName += '3';
			displayTachieHoppe = true;
		}
		else {
			tachieHoppeName += '1';
			displayTachieHoppe = true;
		}
	}
	else if(faceId === 24) {
		eyebrowsArray.push('nico1');
		eyebrowsArray.push('nico2');
		eyebrowsArray.push('nico3');
		eyesArray.push('uruyoko1');
		eyesArray.push('uruyoko2');
		eyesArray.push('yoko4');
		mouthArray.push('nico2');
		mouthArray.push('pero2');
		mouthArray.push('wara2');
		mouthArray.push('ahe2');
		mouthArray.push('ahe3');
		if(isDrunk) {
			tachieHoppeName += '3';
			displayTachieHoppe = true;
		}
		else {
			tachieHoppeName += '1';
			displayTachieHoppe = true;
		}
	}
	else if(faceId === 25) {
		eyebrowsArray.push('nico1');
		eyebrowsArray.push('nico2');
		eyebrowsArray.push('koma1');
		eyebrowsArray.push('koma2');
		eyesArray.push('toji2');
		eyesArray.push('uruyoko2');
		eyesArray.push('yoko4');
		mouthArray.push('wara2');
		mouthArray.push('pero2');
		mouthArray.push('ahe1');
		mouthArray.push('ahe2');
		mouthArray.push('ahe3');
		tachieHoppeName += '1';
		displayTachieHoppe = true;
		displayTachieSweat = true;
		tachieSweatName += '1';
	}
	else if(faceId === 26) {
		eyebrowsArray.push('koma2');
		eyesArray.push('drunk1');
		mouthArray.push('ahe1');
		mouthArray.push('ahe2');
		mouthArray.push('ahe3');
		tachieHoppeName += '3';
		displayTachieHoppe = true;
		displayTachieSweat = true;
		tachieSweatName += '2';
	}
	else if(faceId === 27) {
		eyebrowsArray.push('kiri2');
		mouthArray.push('mu1');
		mouthArray.push('mu2');
		mouthArray.push('ho2');
		displayTachieSweat = true;
		tachieSweatName += '1';
		dontResetTachieHoppe = true;
	}
	else if(faceId === 28) {
		eyebrowsArray.push('nico1');
		mouthArray.push('mu1');
		mouthArray.push('nico1');
		mouthArray.push('ho2');
		dontResetTachieHoppe = true;
		dontResetTachieSweat = true;
	}
	else if(faceId === 29) {
		eyebrowsArray.push('nico2');
		eyebrowsArray.push('nico3');
		mouthArray.push('nico2');
		mouthArray.push('nico1');
		mouthArray.push('ho2');
		mouthArray.push('pero1');
		dontResetTachieHoppe = true;
		dontResetTachieSweat = true;
	}
	else if(faceId === 30) {
		eyebrowsArray.push('kiri1');
		eyebrowsArray.push('kiri2');
		eyebrowsArray.push('nico1');
		eyesArray.push('yoko1');
		eyesArray.push('yoko2');
		eyesArray.push('yoko3');
		eyesArray.push('uruyoko1');
		eyesArray.push('uruyoko2');
		mouthArray.push('wa1');
		mouthArray.push('wara1');
		mouthArray.push('ho1');
		mouthArray.push('ho2');
		mouthArray.push('nico1');
		displayTachieHoppe = true;
		if(isDrunk) {
			tachieHoppeName += '2';
		}
		else {
			tachieHoppeName += '1';
		}
		dontResetTachieSweat = true;
	}
	else if(faceId === 31) {
		eyebrowsArray.push('nico1');
		eyebrowsArray.push('nico2');
		eyebrowsArray.push('nico3');
		eyesArray.push('yoko2');
		eyesArray.push('yoko3');
		eyesArray.push('yoko4');
		eyesArray.push('toji2');
		eyesArray.push('uruyoko1');
		eyesArray.push('uruyoko2');
		eyesArray.push('heartyoko1');
		mouthArray.push('wara1');
		mouthArray.push('wara2');
		mouthArray.push('pero1');
		mouthArray.push('pero2');
		mouthArray.push('pero3');
		mouthArray.push('nico2');
		mouthArray.push('ahe2');
		mouthArray.push('ahe3');
		displayTachieHoppe = true;
		if(isDrunk) {
			tachieHoppeName += '3';
		}
		else {
			tachieHoppeName += '1';
		}
	}

	if(eyebrowsArray.length > 0) {
		this.setTachieEyebrows('' + headType + '_' + eyebrowsArray[Math.randomInt(eyebrowsArray.length)]);
	}
	if(eyesArray.length > 0) {
		this.setTachieEyes('' + headType + '_' + eyesArray[Math.randomInt(eyesArray.length)]);
	}
	if(mouthArray.length > 0) {
		this.setTachieMouth('' + headType + '_' + mouthArray[Math.randomInt(mouthArray.length)]);
	}
	if(displayTachieHoppe) this.setTachieHoppe('' + headType + '_' + tachieHoppeName);
	else if(!dontResetTachieHoppe) this.resetTachieHoppe();
	if(displayTachieSweat) this.setTachieSweat('' + headType + '_' + tachieSweatName);
	else if(!dontResetTachieSweat) this.resetTachieSweat();
	
	this.setWardenMapPoseExtensions();
	
	this.setAllowTachieEmoteUpdate(true);
};


//////////
// Emote Waitress Sex Pose
///////////

Game_Actor.prototype.emoteWaitressSexPose = function() {
	this.setAllowTachieEmoteUpdate(false);
	let justOrgasmed = this.didLastGetHitBySkillType(JUST_SKILLTYPE_KARRYN_ORGASM) || this.justOrgasmed();
	let isAroused = this.isAroused() || justOrgasmed;
	let isDrunk = this.isDrunk;
	let notDrinkingFromStraw = this.tachieStraw === REM_TACHIE_NULL;
	let mugIsSemen = this._karrynMugContent === ALCOHOL_TYPE_SEMEN && this._karrynMugAmount > 0;
	let givingBJ = this.isBodySlotPenis(MOUTH_ID) && this.tachieCockMouth;
	let givingRightHJ = this.isBodySlotPenis(RIGHT_HAND_ID);
	let justGotHarassed = this.didLastGetHitBySkillType(JUST_SKILLTYPE_ENEMY_PETTING);
	let justGotToyPlayed = this.didLastGetHitBySkillType(JUST_SKILLTYPE_ENEMY_TOY_PLAY) || this.didLastGetHitBySkillType(JUST_SKILLTYPE_PASSIVE_TOY);
	let lastHitHandjob = this.didLastGetHitBySkillType(JUST_SKILLTYPE_ENEMY_HANDJOB) || this.didLastGetHitBySkillType(JUST_SKILLTYPE_KARRYN_HANDJOB);
	let lastHitBlowjob = this.didLastGetHitBySkillType(JUST_SKILLTYPE_KARRYN_BLOWJOB) || this.didLastGetHitBySkillType(JUST_SKILLTYPE_ENEMY_BLOWJOB);
	let lastHitSex = this.didLastGetHitBySkillType(JUST_SKILLTYPE_ENEMY_PUSSY_SEX) || this.didLastGetHitBySkillType(JUST_SKILLTYPE_ENEMY_ANAL_SEX) || this.didLastGetHitBySkillType(JUST_SKILLTYPE_KARRYN_PUSSY_SEX) || this.didLastGetHitBySkillType(JUST_SKILLTYPE_KARRYN_ANAL_SEX) || this.didLastGetHitBySkillType(JUST_SKILLTYPE_ENEMY_TOY_PLAY_PUSSY);
	let holeInserted = this.isBodySlotPenis(ANAL_ID) || this.isBodySlotPenis(PUSSY_ID) || this.isBodySlotToy(PUSSY_ID) || this.isBodySlotToy(ANAL_ID);
	let analInserted = this.isBodySlotPenis(ANAL_ID) || this.isBodySlotToy(ANAL_ID);
	let pussyInserted = this.isBodySlotPenis(PUSSY_ID) || this.isBodySlotToy(PUSSY_ID);
	let doublePenetrated = pussyInserted && analInserted;
	let karrynSwallowingCum = this.didLastGetHitBySkillType(JUST_SKILLTYPE_ENEMY_CUM_SWALLOW);
	let karrynGotBukkaked = this.didLastGetHitBySkillType(JUST_SKILLTYPE_ENEMY_BUKKAKE);
	let justGotPussyCreampie = this.didLastGetHitBySkillType(JUST_SKILLTYPE_ENEMY_PUSSY_CREAMPIE);
	let justGotAnalCreampie = this.didLastGetHitBySkillType(JUST_SKILLTYPE_ENEMY_ANAL_CREAMPIE);
	let enemyCummingFromLeftHJ = $gameTroop._lastEnemySlotToCum === LEFT_HAND_ID;
	let enemyCummingFromMouth = $gameTroop._lastEnemySlotToCum === MOUTH_ID;
	let enemyJustCameIntoMug = this.didLastGetHitBySkillType(JUST_SKILLTYPE_WAITRESS_MUG_BUKKAKE);
	let enemyJustCameOntoFloor = this.didLastGetHitBySkillType(JUST_SKILLTYPE_ENEMY_FLOOR_BUKKAKE);
	
	let generalReactionScore = this.getReactionScore();
	let orgasmReactionScore = this.getOrgasmReactionScore();
	let bukkakeReactionScore = this.getBukkakeReactionScore();
	let swallowReactionScore = this.getSwallowReactionScore();
	let pussyCreampieReactionScore = this.getPussyCreampieReactionScore();
	let analCreampieReactionScore = this.getAnalCreampieReactionScore();
	
	let generallvl3 = generalReactionScore >= VAR_DEF_RS_LV3_REQ;
	let generallvl2 = generalReactionScore >= VAR_DEF_RS_LV2_REQ;
	let orgasmlvl3 = orgasmReactionScore >= VAR_DEF_RS_LV3_REQ;
	let orgasmlvl2 = orgasmReactionScore >= VAR_DEF_RS_LV2_REQ;
	let bukkakelvl3 = bukkakeReactionScore  >= VAR_DEF_RS_LV3_REQ;
	let bukkakelvl2 = bukkakeReactionScore >= VAR_DEF_RS_LV2_REQ;
	let pussyCreampielvl3 = pussyCreampieReactionScore  >= VAR_DEF_RS_LV3_REQ;
	let pussyCreampielvl2 = pussyCreampieReactionScore >= VAR_DEF_RS_LV2_REQ;
	let analCreampielvl3 = analCreampieReactionScore  >= VAR_DEF_RS_LV3_REQ;
	let analCreampielvl2 = analCreampieReactionScore >= VAR_DEF_RS_LV2_REQ;
	let swallowlvl3 = swallowReactionScore  >= VAR_DEF_RS_LV3_REQ;
	let swallowlvl2 = swallowReactionScore >= VAR_DEF_RS_LV2_REQ;
	
	
	let faceArray = [];
	this.resetTachieHoppe();
	this.resetTachieSweat();
	
	if(givingBJ) {
		this.resetTachieStraw();
		notDrinkingFromStraw = true;
	}
	
	if(notDrinkingFromStraw) {
		if(justOrgasmed) {
			if(orgasmlvl3) 
				faceArray.push(33);
			else if(orgasmlvl2) 
				faceArray.push(22);
			else
				faceArray.push(11);
		}
		else if(karrynSwallowingCum && givingBJ) {
			if(swallowlvl3) 
				faceArray.push(32);
			else if(swallowlvl2) 
				faceArray.push(21);
			else
				faceArray.push(10);
		}
		else if(justGotPussyCreampie) {
			if(pussyCreampielvl3) 
				faceArray.push(25);
			else if(pussyCreampielvl2) 
				faceArray.push(14);
			else
				faceArray.push(3);
		}
		else if(justGotAnalCreampie) {
			if(analCreampielvl3) 
				faceArray.push(25);
			else if(analCreampielvl2) 
				faceArray.push(14);
			else
				faceArray.push(3);
		}
		else if(enemyJustCameIntoMug) {
			if(swallowlvl3) 
				faceArray.push(28);
			else if(swallowlvl2) 
				faceArray.push(17);
			else
				faceArray.push(6);
		}
		else if(karrynGotBukkaked) {
			if(enemyCummingFromLeftHJ) {
				if(bukkakelvl3) 
					faceArray.push(27);
				else if(bukkakelvl2) 
					faceArray.push(16);
				else
					faceArray.push(5);
			}
			else {
				if(bukkakelvl3) 
					faceArray.push(28);
				else if(bukkakelvl2) 
					faceArray.push(17);
				else
					faceArray.push(6);
			}
		}
		else if(lastHitBlowjob) {
			if(generallvl3) 
				faceArray.push(31);
			else if(generallvl2) 
				faceArray.push(20);
			else
				faceArray.push(9);
		}
		else if(lastHitHandjob) {
			if(generallvl3) 
				faceArray.push(26);
			else if(generallvl2) 
				faceArray.push(15);
			else
				faceArray.push(4);
		}
		else if(lastHitSex) {
			if(generallvl3) 
				faceArray.push(14);
			else if(generallvl2) 
				faceArray.push(13);
			else
				faceArray.push(2);
		}
		else if(justGotToyPlayed) {
			if(generallvl3) 
				faceArray.push(14);
			else if(generallvl2) 
				faceArray.push(13);
			else
				faceArray.push(2);
		}
		else if(justGotHarassed) {
			if(generallvl3) 
				faceArray.push(28);
			else if(generallvl2) 
				faceArray.push(17);
			else
				faceArray.push(6);
		}
		else {
			if(generallvl3) 
				faceArray.push(23);
			else if(generallvl2) 
				faceArray.push(12);
			else
				faceArray.push(1);
		}
	}
	//drinking from straw
	else {
		if(mugIsSemen) {
			if(generallvl3) 
				faceArray.push(30);
			else if(generallvl2) 
				faceArray.push(19);
			else
				faceArray.push(8);
		}
		else {
			if(generallvl3) 
				faceArray.push(29);
			else if(generallvl2) 
				faceArray.push(18);
			else
				faceArray.push(7);
		}
	}
	
	
	let faceId = faceArray[Math.randomInt(faceArray.length)];
	let eyebrowsArray = [];
	let eyesArray = [];
	let mouthArray = [];
	
	if(faceId === 1) {
		eyebrowsArray.push('koma1');
		eyebrowsArray.push('koma2');
		eyebrowsArray.push('oko1');
		eyesArray.push('sita1');
		eyesArray.push('sita2');
		mouthArray.push('ku1');
		mouthArray.push('ku2');
		mouthArray.push('mu1');
		mouthArray.push('wa1');
		mouthArray.push('ho1');
		mouthArray.push('ahe1');
		this.setTachieHoppe(1);
		this.setTachieSweat(1);
	}
	else if(faceId === 2) {
		eyebrowsArray.push('koma1');
		eyebrowsArray.push('koma2');
		eyebrowsArray.push('oko1');
		eyesArray.push('yoko1');
		eyesArray.push('yoko2');
		mouthArray.push('ku1');
		mouthArray.push('wa1');
		mouthArray.push('wa2');
		mouthArray.push('ho1');
		mouthArray.push('ho2');
		mouthArray.push('ahe1');
		this.setTachieHoppe(1);
		this.setTachieSweat(1);
	}
	else if(faceId === 3) {
		eyebrowsArray.push('koma1');
		eyebrowsArray.push('koma2');
		eyesArray.push('yoko2');
		eyesArray.push('yoko3');
		eyesArray.push('uruyoko2');
		mouthArray.push('wa2');
		mouthArray.push('ho1');
		mouthArray.push('ho2');
		mouthArray.push('ho3');
		mouthArray.push('ahe1');
		mouthArray.push('ahe2');
		this.setTachieHoppe(1);
		this.setTachieSweat(1);
	}
	else if(faceId === 4) {
		eyebrowsArray.push('koma1');
		eyebrowsArray.push('koma2');
		eyesArray.push('mae1');
		eyesArray.push('mae2');
		mouthArray.push('ku1');
		mouthArray.push('wa1');
		mouthArray.push('mu1');
		mouthArray.push('ho1');
		this.setTachieHoppe(1);
		this.setTachieSweat(1);
	}
	else if(faceId === 5) {
		eyebrowsArray.push('koma1');
		eyebrowsArray.push('koma2');
		eyebrowsArray.push('oko1');
		eyesArray.push('mae2');
		eyesArray.push('mae3');
		eyesArray.push('urumae2');
		mouthArray.push('ku1');
		mouthArray.push('ku2');
		mouthArray.push('wa1');
		mouthArray.push('mu1');
		mouthArray.push('ho2');
		mouthArray.push('ahe1');
		this.setTachieHoppe(1);
		this.setTachieSweat(1);
	}
	else if(faceId === 6) {
		eyebrowsArray.push('koma1');
		eyebrowsArray.push('koma2');
		eyebrowsArray.push('oko1');
		eyesArray.push('sita2');
		eyesArray.push('sita3');
		eyesArray.push('urusita2');
		mouthArray.push('ku1');
		mouthArray.push('ku2');
		mouthArray.push('wa1');
		mouthArray.push('mu1');
		mouthArray.push('ho1');
		mouthArray.push('ahe1');
		this.setTachieHoppe(1);
		this.setTachieSweat(1);
	}
	else if(faceId === 7) {
		eyebrowsArray.push('koma1');
		eyebrowsArray.push('koma2');
		eyesArray.push('sita1');
		eyesArray.push('sita2');
		mouthArray.push('straw1');
		this.setTachieHoppe(1);
		this.setTachieSweat(1);
	}
	else if(faceId === 8) {
		eyebrowsArray.push('koma1');
		eyebrowsArray.push('koma2');
		eyebrowsArray.push('oko1');
		eyesArray.push('sita2');
		eyesArray.push('sita3');
		eyesArray.push('urusita2');
		mouthArray.push('straw1');
		mouthArray.push('straw2');
		this.setTachieHoppe(1);
		this.setTachieSweat(1);
	}
	else if(faceId === 9) {
		eyebrowsArray.push('koma1');
		eyebrowsArray.push('koma2');
		eyesArray.push('sita1');
		eyesArray.push('sita2');
		mouthArray.push('fera1');
		mouthArray.push('fera2');
		this.setTachieHoppe(1);
		this.setTachieSweat(1);
	}
	else if(faceId === 10) {
		eyebrowsArray.push('koma1');
		eyebrowsArray.push('koma2');
		eyebrowsArray.push('oko1');
		eyesArray.push('sita2');
		eyesArray.push('sita3');
		eyesArray.push('urusita2');
		mouthArray.push('fera1');
		this.setTachieHoppe(1);
		this.setTachieSweat(1);
	}
	else if(faceId === 11) {
		eyebrowsArray.push('koma1');
		eyebrowsArray.push('koma2');
		eyebrowsArray.push('oko1');
		eyesArray.push('sita2');
		eyesArray.push('sita3');
		eyesArray.push('urusita1');
		eyesArray.push('urusita2');
		eyesArray.push('toji1');
		mouthArray.push('wa2');
		mouthArray.push('ho1');
		mouthArray.push('ho2');
		mouthArray.push('ho3');
		mouthArray.push('ahe1');
		mouthArray.push('ahe2');
		mouthArray.push('ahe3');
		this.setTachieHoppe(1);
		this.setTachieSweat(1);
	}
	else if(faceId === 12) {
		eyebrowsArray.push('kiri1');
		eyebrowsArray.push('kiri2');
		eyesArray.push('sita1');
		eyesArray.push('sita2');
		mouthArray.push('chu1');
		mouthArray.push('chu2');
		mouthArray.push('mu1');
		mouthArray.push('wa1');
		mouthArray.push('nico1');
		mouthArray.push('nico2');
		this.setTachieHoppe(1);
	}
	else if(faceId === 13) {
		eyebrowsArray.push('kiri1');
		eyebrowsArray.push('kiri2');
		eyesArray.push('yoko1');
		eyesArray.push('yoko2');
		mouthArray.push('chu2');
		mouthArray.push('wa1');
		mouthArray.push('ho2');
		mouthArray.push('ho3');
		mouthArray.push('ahe2');
		mouthArray.push('nico2');
		this.setTachieHoppe(1);
	}
	else if(faceId === 14) {
		eyebrowsArray.push('kiri1');
		eyebrowsArray.push('kiri2');
		eyebrowsArray.push('koma2');
		eyesArray.push('yoko1');
		eyesArray.push('yoko2');
		eyesArray.push('uruyoko1');
		eyesArray.push('uruyoko2');
		mouthArray.push('wa2');
		mouthArray.push('ho1');
		mouthArray.push('ho2');
		mouthArray.push('ho3');
		mouthArray.push('ahe1');
		mouthArray.push('ahe2');
		this.setTachieHoppe(1);
		this.setTachieSweat(1);
	}
	else if(faceId === 15) {
		eyebrowsArray.push('kiri1');
		eyebrowsArray.push('kiri2');
		eyesArray.push('mae1');
		eyesArray.push('mae2');
		mouthArray.push('chu1');
		mouthArray.push('chu2');
		mouthArray.push('nico1');
		mouthArray.push('nico2');
		mouthArray.push('ho2');
		this.setTachieHoppe(1);
	}
	else if(faceId === 16) {
		eyebrowsArray.push('kiri1');
		eyebrowsArray.push('kiri2');
		eyesArray.push('mae2');
		eyesArray.push('mae3');
		eyesArray.push('urumae1');
		eyesArray.push('urumae2');
		mouthArray.push('wa1');
		mouthArray.push('ho1');
		mouthArray.push('ho2');
		mouthArray.push('ho3');
		mouthArray.push('ahe1');
		mouthArray.push('nico1');
		mouthArray.push('nico2');
		this.setTachieHoppe(1);
		this.setTachieSweat(1);
	}
	else if(faceId === 17) {
		eyebrowsArray.push('kiri1');
		eyebrowsArray.push('kiri2');
		eyebrowsArray.push('koma2');
		eyesArray.push('sita1');
		eyesArray.push('sita2');
		eyesArray.push('urusita1');
		eyesArray.push('urusita2');
		mouthArray.push('ho1');
		mouthArray.push('ho2');
		mouthArray.push('ho3');
		mouthArray.push('ahe1');
		mouthArray.push('nico1');
		mouthArray.push('nico2');
		mouthArray.push('nico3');
		this.setTachieHoppe(1);
		this.setTachieSweat(1);
	}
	else if(faceId === 18) {
		eyebrowsArray.push('nico1');
		eyebrowsArray.push('kiri2');
		eyesArray.push('sita1');
		eyesArray.push('sita2');
		mouthArray.push('straw1');
		mouthArray.push('straw2');
		this.setTachieHoppe(1);
	}
	else if(faceId === 19) {
		eyebrowsArray.push('kiri1');
		eyebrowsArray.push('kiri2');
		eyebrowsArray.push('koma2');
		eyesArray.push('sita1');
		eyesArray.push('sita2');
		eyesArray.push('urusita1');
		eyesArray.push('urusita2');
		mouthArray.push('straw1');
		mouthArray.push('straw2');
		mouthArray.push('straw3');
		this.setTachieHoppe(1);
		this.setTachieSweat(1);
	}
	else if(faceId === 20) {
		eyebrowsArray.push('kiri1');
		eyebrowsArray.push('kiri2');
		eyesArray.push('sita1');
		eyesArray.push('sita2');
		mouthArray.push('fera2');
		mouthArray.push('fera3');
		mouthArray.push('fera4');
		this.setTachieHoppe(1);
	}
	else if(faceId === 21) {
		eyebrowsArray.push('kiri1');
		eyebrowsArray.push('kiri2');
		eyebrowsArray.push('koma2');
		eyesArray.push('sita2');
		eyesArray.push('sita3');
		eyesArray.push('urusita1');
		eyesArray.push('urusita2');
		mouthArray.push('fera3');
		mouthArray.push('fera4');
		this.setTachieHoppe(1);
		this.setTachieSweat(1);
	}
	else if(faceId === 22) {
		eyebrowsArray.push('kiri1');
		eyebrowsArray.push('kiri2');
		eyebrowsArray.push('koma1');
		eyebrowsArray.push('oko1');
		eyesArray.push('sita2');
		eyesArray.push('sita3');
		eyesArray.push('urusita1');
		eyesArray.push('urusita2');
		eyesArray.push('toji1');
		eyesArray.push('ahe1');
		mouthArray.push('ku1');
		mouthArray.push('wa2');
		mouthArray.push('ho3');
		mouthArray.push('ahe1');
		mouthArray.push('ahe2');
		mouthArray.push('ahe3');
		mouthArray.push('ahe4');
		this.setTachieHoppe(1);
		this.setTachieSweat(1);
	}
	else if(faceId === 23) {
		eyebrowsArray.push('nico1');
		eyebrowsArray.push('nico2');
		eyebrowsArray.push('kiri2');
		eyesArray.push('sita1');
		eyesArray.push('sita2');
		eyesArray.push('urusita1');
		eyesArray.push('urusita2');
		mouthArray.push('chu2');
		mouthArray.push('ho1');
		mouthArray.push('pero1');
		mouthArray.push('nico1');
		mouthArray.push('nico2');
		mouthArray.push('nico3');
		mouthArray.push('nico4');
		mouthArray.push('ahe3');
		if(isAroused) this.setTachieHoppe(1);
	}
	else if(faceId === 24) {
		eyebrowsArray.push('nico1');
		eyebrowsArray.push('nico2');
		eyebrowsArray.push('kiri2');
		eyesArray.push('yoko1');
		eyesArray.push('yoko2');
		eyesArray.push('uruyoko1');
		eyesArray.push('uruyoko2');
		mouthArray.push('ho1');
		mouthArray.push('pero1');
		mouthArray.push('nico1');
		mouthArray.push('nico2');
		mouthArray.push('nico3');
		mouthArray.push('nico4');
		mouthArray.push('ahe2');
		mouthArray.push('ahe3');
		if(isAroused) this.setTachieHoppe(1);
	}
	else if(faceId === 25) {
		eyebrowsArray.push('nico1');
		eyebrowsArray.push('nico2');
		eyebrowsArray.push('kiri2');
		eyebrowsArray.push('koma2');
		eyesArray.push('yoko2');
		eyesArray.push('yoko3');
		eyesArray.push('uruyoko1');
		eyesArray.push('uruyoko2');
		eyesArray.push('heartyoko1');
		eyesArray.push('heartyoko2');
		mouthArray.push('ho2');
		mouthArray.push('ho3');
		mouthArray.push('pero1');
		mouthArray.push('nico3');
		mouthArray.push('nico4');
		mouthArray.push('ahe2');
		mouthArray.push('ahe3');
		mouthArray.push('ahe5');
		if(isAroused) this.setTachieHoppe(1);
		if(Math.randomInt(2) === 0) this.setTachieSweat(1);
	}
	else if(faceId === 26) {
		eyebrowsArray.push('nico1');
		eyebrowsArray.push('nico2');
		eyebrowsArray.push('kiri2');
		eyesArray.push('mae1');
		eyesArray.push('mae2');
		eyesArray.push('urumae1');
		eyesArray.push('urumae2');
		mouthArray.push('chu2');
		mouthArray.push('pero1');
		mouthArray.push('nico1');
		mouthArray.push('nico2');
		mouthArray.push('nico3');
		mouthArray.push('nico4');
		if(isAroused) this.setTachieHoppe(1);
	}
	else if(faceId === 27) {
		eyebrowsArray.push('nico1');
		eyebrowsArray.push('nico2');
		eyebrowsArray.push('kiri2');
		eyebrowsArray.push('koma2');
		eyesArray.push('mae2');
		eyesArray.push('mae3');
		eyesArray.push('urumae1');
		eyesArray.push('urumae2');
		eyesArray.push('heartmae1');
		eyesArray.push('heartmae2');
		mouthArray.push('ho2');
		mouthArray.push('pero1');
		mouthArray.push('nico1');
		mouthArray.push('nico2');
		mouthArray.push('nico3');
		mouthArray.push('nico4');
		mouthArray.push('ahe5');
		if(isAroused) this.setTachieHoppe(1);
		if(Math.randomInt(2) === 0) this.setTachieSweat(1);
	}
	else if(faceId === 28) {
		eyebrowsArray.push('nico1');
		eyebrowsArray.push('nico2');
		eyesArray.push('sita1');
		eyesArray.push('sita2');
		eyesArray.push('urusita1');
		eyesArray.push('urusita2');
		eyesArray.push('toji1');
		mouthArray.push('pero1');
		mouthArray.push('nico1');
		mouthArray.push('nico2');
		mouthArray.push('nico3');
		mouthArray.push('nico4');
		mouthArray.push('ahe2');
		if(isAroused) this.setTachieHoppe(1);
		if(Math.randomInt(2) === 0) this.setTachieSweat(1);
	}
	else if(faceId === 29) {
		eyebrowsArray.push('nico1');
		eyebrowsArray.push('nico2');
		eyesArray.push('sita1');
		eyesArray.push('sita2');
		mouthArray.push('straw1');
		mouthArray.push('straw2');
		mouthArray.push('straw3');
		this.setTachieHoppe(1);
	}
	else if(faceId === 30) {
		eyebrowsArray.push('nico1');
		eyebrowsArray.push('nico2');
		eyebrowsArray.push('kiri2');
		eyebrowsArray.push('koma2');
		eyesArray.push('sita1');
		eyesArray.push('sita2');
		eyesArray.push('urusita1');
		eyesArray.push('urusita2');
		eyesArray.push('ahe1');
		eyesArray.push('heartahe1');
		mouthArray.push('straw4');
		mouthArray.push('straw2');
		mouthArray.push('straw3');
		if(isAroused) this.setTachieHoppe(1);
		if(Math.randomInt(2) === 0) this.setTachieSweat(1);
	}
	else if(faceId === 31) {
		eyebrowsArray.push('nico1');
		eyebrowsArray.push('nico2');
		eyebrowsArray.push('kiri2');
		eyesArray.push('sita1');
		eyesArray.push('sita2');
		eyesArray.push('urusita1');
		eyesArray.push('urusita2');
		eyesArray.push('heartsita1');
		mouthArray.push('fera2');
		mouthArray.push('fera3');
		mouthArray.push('fera4');
		mouthArray.push('fera5');
		mouthArray.push('fera6');
		if(isAroused) this.setTachieHoppe(1);
	}
	else if(faceId === 32) {
		eyebrowsArray.push('nico1');
		eyebrowsArray.push('nico2');
		eyebrowsArray.push('kiri2');
		eyesArray.push('sita2');
		eyesArray.push('urusita1');
		eyesArray.push('urusita2');
		eyesArray.push('heartsita1');
		eyesArray.push('heartsita2');
		mouthArray.push('fera2');
		mouthArray.push('fera3');
		mouthArray.push('fera4');
		mouthArray.push('fera5');
		mouthArray.push('fera6');
		this.setTachieHoppe(1);
		if(Math.randomInt(2) === 0) this.setTachieSweat(1);
	}
	else if(faceId === 33) {
		eyebrowsArray.push('nico1');
		eyebrowsArray.push('nico2');
		eyebrowsArray.push('kiri1');
		eyebrowsArray.push('koma1');
		eyebrowsArray.push('oko1');
		eyesArray.push('sita3');
		eyesArray.push('toji1');
		eyesArray.push('urusita1');
		eyesArray.push('urusita2');
		eyesArray.push('heartsita1');
		eyesArray.push('heartsita2');
		eyesArray.push('heartahe1');
		mouthArray.push('nico4');
		mouthArray.push('ku1');
		mouthArray.push('ku2');
		mouthArray.push('wa2');
		mouthArray.push('ho3');
		mouthArray.push('ahe2');
		mouthArray.push('ahe3');
		mouthArray.push('ahe4');
		mouthArray.push('ahe5');
		mouthArray.push('ahe6');
		this.setTachieHoppe(1);
		this.setTachieSweat(1);
	}
	
	if(givingBJ && this.tachieCockMouth) {
		if(enemyJustCameOntoFloor && enemyCummingFromMouth) {}
		else {
			if((faceId >= 1 && faceId <= 6) || faceId === 11) {
				mouthArray = [];
				mouthArray.push('fera1');
				mouthArray.push('fera2');
			}
			else if((faceId >= 12 && faceId <= 17) || faceId === 22) {
				mouthArray = [];
				mouthArray.push('fera2');
				mouthArray.push('fera3');
				mouthArray.push('fera4');
			}
			else if((faceId >= 23 && faceId <= 28) || faceId === 33) {
				mouthArray = [];
				mouthArray.push('fera2');
				mouthArray.push('fera3');
				mouthArray.push('fera4');
				mouthArray.push('fera5');
				mouthArray.push('fera6');
			}
		}
	}
	
	if(eyebrowsArray.length > 0) {
		this.setTachieEyebrows(eyebrowsArray[Math.randomInt(eyebrowsArray.length)]);
	}
	if(eyesArray.length > 0) {
		this.setTachieEyes(eyesArray[Math.randomInt(eyesArray.length)]);
	}
	if(mouthArray.length > 0) {
		this.setTachieMouth(mouthArray[Math.randomInt(mouthArray.length)]);
	}
	
	if(this.tachieHoppe && this.tachieMouth.includes('fera'))
		this.setTachieHoppe('fera_1');
	
	if(this.tachieMouth.includes('fera') || this.tachieMouth.includes('straw'))
		this.setTachieStrayFaceExtension(ConfigManager.convertedTachieMouthName(this) + '_');
	else
		this.resetTachieStrayFaceExtension();
	
	this.setAllowTachieEmoteUpdate(true);
};

Game_Actor.prototype.emoteReceptionistPose = function() {
	this.setAllowTachieEmoteUpdate(false);
	let justOrgasmed = this.didLastGetHitBySkillType(JUST_SKILLTYPE_KARRYN_ORGASM) || this.justOrgasmed();
	let isAroused = this.isAroused() || justOrgasmed;
	let receptionistIsHavingSexBehind = this.receptionistBattle_isHavingSexBehind();
	let receptionistIsOnRadio = this._receptionist_checkingVisitingRoom_startingPhoneCall;
	let receptionistIsWorking = this._receptionist_currentlyProcessingPapers;
	
	let receptionistIsShakingHands = this.receptionistBattle_isShakingHands();
	let receptionistIsKissing = this.receptionistBattle_isKissing();
	let receptionistIsGettingBoobsRubbed = this.receptionistBattle_gettingBoobsRubbed();
	let receptionistIsGivingBJ = this.receptionistBattle_isGivingBlowjob();
	let receptionistIsGivingHJ = this.receptionistBattle_isGivingHandjob();
	
	let receptionistIsGettingPussyLicked = this.isBodySlotTongue(PUSSY_ID);
	let receptionistIsGettingPussyFucked = this.isBodySlotPenis(PUSSY_ID);
	let receptionistIsGettingAnalFucked = this.isBodySlotPenis(ANAL_ID);
	
	let thereIsAGoblinBehind = $gameTroop._goblins_distanceSlot && $gameTroop._goblins_distanceSlot[GOBLIN_DISTANCE_CLOSE];
	let thereIsVisitorAtDesk = $gameTroop.receptionistBattle_thereIsVisitorAtDesk();
	let thereIsAIdentifiedPervInFront = thereIsVisitorAtDesk && $gameTroop.receptionistBattle_visitorAtDesk()._visitor_isPervert && ($gameTroop.receptionistBattle_visitorAtDesk()._visitor_isIdentified || $gameTroop.receptionistBattle_visitorAtDesk().isWanted);
	let thereIsAGoblinFront = thereIsVisitorAtDesk && $gameTroop.receptionistBattle_visitorAtDesk()._visitor_isGoblin;
	let thereIsAnOrcFront = thereIsVisitorAtDesk && $gameTroop.receptionistBattle_visitorAtDesk()._visitor_isOrc;
	let thereIsALizardmanFront = thereIsVisitorAtDesk && $gameTroop.receptionistBattle_visitorAtDesk()._visitor_isLizardman;
	let thereIsAHumanFront = thereIsVisitorAtDesk && !thereIsAGoblinFront && !thereIsAnOrcFront && !thereIsALizardmanFront;
	
	let karrynGotPetted = this.didLastGetHitBySkillType(JUST_SKILLTYPE_ENEMY_PETTING);
	let karrynSwallowingCum = this.didLastGetHitBySkillType(JUST_SKILLTYPE_ENEMY_CUM_SWALLOW);
	let justGotPussyCreampie = this.didLastGetHitBySkillType(JUST_SKILLTYPE_ENEMY_PUSSY_CREAMPIE);
	let justGotAnalCreampie = this.didLastGetHitBySkillType(JUST_SKILLTYPE_ENEMY_ANAL_CREAMPIE);
	let lastHitPussySex = this.didLastGetHitBySkillType(JUST_SKILLTYPE_ENEMY_PUSSY_SEX) || this.didLastGetHitBySkillType(JUST_SKILLTYPE_KARRYN_PUSSY_SEX);
	let lastHitAnalSex = this.didLastGetHitBySkillType(JUST_SKILLTYPE_ENEMY_ANAL_SEX) || this.didLastGetHitBySkillType(JUST_SKILLTYPE_KARRYN_ANAL_SEX);
	let lastHitCunnilingus = this.didLastGetHitBySkillType(JUST_SKILLTYPE_ENEMY_CUNNILINGUS);
	
	
	let generalReactionScore = this.getReactionScore();
	let orgasmReactionScore = this.getOrgasmReactionScore();
	let pussyCreampieReactionScore = this.getPussyCreampieReactionScore();
	let analCreampieReactionScore = this.getAnalCreampieReactionScore();
	let swallowReactionScore = this.getSwallowReactionScore();

	let generallvl3 = generalReactionScore >= VAR_DEF_RS_LV3_REQ;
	let generallvl2 = generalReactionScore >= VAR_DEF_RS_LV2_REQ;
	let orgasmlvl3 = orgasmReactionScore >= VAR_DEF_RS_LV3_REQ;
	let orgasmlvl2 = orgasmReactionScore >= VAR_DEF_RS_LV2_REQ;
	let pussyCreampielvl3 = pussyCreampieReactionScore  >= VAR_DEF_RS_LV3_REQ;
	let pussyCreampielvl2 = pussyCreampieReactionScore >= VAR_DEF_RS_LV2_REQ;
	let analCreampielvl3 = analCreampieReactionScore  >= VAR_DEF_RS_LV3_REQ;
	let analCreampielvl2 = analCreampieReactionScore >= VAR_DEF_RS_LV2_REQ;
	let swallowlvl3 = swallowReactionScore  >= VAR_DEF_RS_LV3_REQ;
	let swallowlvl2 = swallowReactionScore >= VAR_DEF_RS_LV2_REQ;
	
	
	let faceArray = [];
	this.resetTachieEyes();
	this.resetTachieEyebrows();
	this.resetTachieMouth();
	this.resetTachieHoppe();
	this.resetTachieSweat();
	
	this.updateReceptionistBattleGoblinTachie();
	this.updateReceptionistBattleVisitorQueueTachie();
	
	this.setPosePanties();
	let wearingGlasses = this._receptionist_wearingGlasses;
	let tachieClothesName = '';
	let tachieHoppeName = '';
	let tachieSweatName = '';
	let tachieEyesName = '';
	let tachieEyebrowsName = '';
	let tachieMouthName = '';
	let displayTachieHoppe = false;
	let displayTachieSweat = false;
	
	if(receptionistIsGivingBJ && !thereIsAGoblinFront) {
		this.setTachieBody('fera');
		this.setTachieBoobs('fera_1');
		this.setTachieHairExtension('fera_');
		if(wearingGlasses) this.setTachieGlasses('fera_1');
		this.resetTachieRightArm();
		
		if(receptionistIsGivingHJ)
			this.setTachieLeftArm('fera_hj');
		else
			this.setTachieLeftArm('fera_normal');
		
		tachieClothesName = 'fera_';
		tachieEyesName = 'fera_';
		tachieEyebrowsName = 'fera_';
		tachieMouthName = 'fera_';
		tachieHoppeName = 'fera_';
		tachieSweatName = 'fera_';
		
		this.setTachieSemenBoobsExtension('fera_');
		this.setTachieSemenFaceExtension('fera_');
		this.setTachieStrayBoobsExtension('fera_');
		this.setTachieStrayFaceExtension('fera_');
	}
	else if(receptionistIsWorking || (thereIsAGoblinFront && receptionistIsGivingBJ)) {
		if(thereIsAGoblinFront && receptionistIsGivingBJ) {
			this.setTachieBody('working_goblin_fera');
			this.setTachieHairExtension('working_goblin_fera_');
			this.setTachieSemenFaceExtension('working_goblin_fera_');
			if(wearingGlasses) this.setTachieGlasses('working_goblin_fera_1');
			this.setTachieStrayFaceExtension('working_goblin_fera_');
		}
		else {
			this.setTachieBody('working');
			this.setTachieHairExtension('working_');
			this.setTachieSemenFaceExtension('working_');
			if(wearingGlasses) this.setTachieGlasses('working_1');
			this.setTachieStrayFaceExtension('working_');
		}
		this.setTachieBoobs('working_1');
		this.setTachieRightArm('working_writing');
		if(thereIsAGoblinFront && receptionistIsGivingBJ && receptionistIsGivingHJ)
			this.setTachieLeftArm('working_goblin_fera_hj');
		else
			this.setTachieLeftArm('working_normal');
		
		tachieClothesName = 'working_';
		tachieEyesName = 'working_';
		tachieEyebrowsName = 'working_';
		tachieMouthName = 'working_';
		tachieHoppeName = 'working_';
		tachieSweatName = 'working_';
		
		if(thereIsAGoblinFront && receptionistIsGivingBJ) {
			tachieHoppeName += 'goblin_fera_';
			tachieSweatName += 'goblin_fera_';
		}
		
		this.setTachieSemenBoobsExtension('working_');
		this.setTachieStrayBoobsExtension('working_');
	}
	//standing
	else {
		this.setTachieBody('standing');
		this.setTachieHairExtension('standing_');
		if(receptionistIsGettingBoobsRubbed) {
			if(thereIsAGoblinFront) {
				if(this.boobsSizeIsPCup()) {
					if(receptionistIsGivingHJ) {
						this.setTachieBoobs('standing_goblin_momi_hj_1');
						this.setTachieSemenBoobsExtension('standing_goblin_momi_hj_');
						this.setTachieStrayBoobsExtension('standing_goblin_momi_hj_');
					}
					else {
						this.setTachieBoobs('standing_goblin_momi_1');
						this.setTachieSemenBoobsExtension('standing_goblin_momi_');
						this.setTachieStrayBoobsExtension('standing_goblin_momi_');
					}
				}
				else {
					this.setTachieBoobs('standing_goblin_momi_1');
					this.setTachieSemenBoobsExtension('standing_goblin_momi_');
					this.setTachieStrayBoobsExtension('standing_goblin_momi_');
				}
			}
			else if(thereIsAnOrcFront) {
				if(this.boobsSizeIsPCup()) {
					if(receptionistIsKissing) {
						this.setTachieBoobs('standing_orc_kiss_momi_1');
						this.setTachieSemenBoobsExtension('standing_orc_kiss_momi_');
						this.setTachieStrayBoobsExtension('standing_orc_kiss_momi_');
					}
					else {
						this.setTachieBoobs('standing_orc_momi_1');
						this.setTachieSemenBoobsExtension('standing_orc_momi_');
						this.setTachieStrayBoobsExtension('standing_orc_momi_');
					}
				}
				else {
					this.setTachieBoobs('standing_orc_momi_1');
					this.setTachieSemenBoobsExtension('standing_orc_momi_');
					this.setTachieStrayBoobsExtension('standing_orc_momi_');
				}
			}
			else if(thereIsALizardmanFront) {
				if(this.boobsSizeIsPCup()) {
					if(receptionistIsKissing && receptionistIsGivingHJ) {
						this.setTachieBoobs('standing_lizardman_kiss_momi_hj_1');
						this.setTachieSemenBoobsExtension('standing_lizardman_kiss_momi_hj_');
						this.setTachieStrayBoobsExtension('standing_lizardman_kiss_momi_hj_');
					}
					else {
						this.setTachieBoobs('standing_momi_1');
						this.setTachieSemenBoobsExtension('standing_momi_');
						this.setTachieStrayBoobsExtension('standing_momi_');
					}
				}
				else {
					this.setTachieBoobs('standing_momi_1');
					this.setTachieSemenBoobsExtension('standing_human_momi_');
					this.setTachieStrayBoobsExtension('standing_momi_');
				}
			}
			else { //human
				if(this.boobsSizeIsPCup()) {
					if(receptionistIsKissing && receptionistIsGivingHJ) {
						this.setTachieBoobs('standing_human_kiss_momi_hj_1');
						this.setTachieSemenBoobsExtension('standing_human_kiss_momi_hj_');
						this.setTachieStrayBoobsExtension('standing_human_kiss_momi_hj_');
					}
					else {
						this.setTachieBoobs('standing_momi_1');
						this.setTachieSemenBoobsExtension('standing_momi_');
						this.setTachieStrayBoobsExtension('standing_momi_');
					}
				}
				else {
					this.setTachieBoobs('standing_momi_1');
					this.setTachieSemenBoobsExtension('standing_human_momi_');
					this.setTachieStrayBoobsExtension('standing_momi_');
				}
			}
		}
		else { //not momi
			if(this.boobsSizeIsPCup()) {
				if(thereIsAGoblinFront) {
					if(receptionistIsGivingHJ) {
						this.setTachieBoobs('standing_hj_1');
						this.setTachieSemenBoobsExtension('standing_hj_');
						this.setTachieStrayBoobsExtension('standing_hj_');
					}
					else {
						this.setTachieBoobs('standing_goblin_boobs_1');
						this.setTachieSemenBoobsExtension('standing_normal_');
						this.setTachieStrayBoobsExtension('standing_normal_');
					}
				}
				else if(thereIsAnOrcFront) {
					if(receptionistIsKissing) {
						if(receptionistIsGivingHJ) {
							this.setTachieBoobs('standing_orc_kiss_hj_1');
							this.setTachieSemenBoobsExtension('standing_orc_kiss_hj_');
							this.setTachieStrayBoobsExtension('standing_kiss_normal_');
						}
						else {
							this.setTachieBoobs('standing_kiss_normal_1');
							this.setTachieSemenBoobsExtension('standing_kiss_normal_');
							this.setTachieStrayBoobsExtension('standing_kiss_normal_');
						}
					}
					else {
						if(receptionistIsGivingHJ) {
							this.setTachieBoobs('standing_hj_1');
							this.setTachieSemenBoobsExtension('standing_hj_');
							this.setTachieStrayBoobsExtension('standing_hj_');
						}
						else {
							this.setTachieBoobs('standing_normal_1');
							this.setTachieSemenBoobsExtension('standing_normal_');
							this.setTachieStrayBoobsExtension('standing_normal_');
						}
					}
				}
				else if(thereIsALizardmanFront) {
					if(receptionistIsKissing) {
						if(receptionistIsGivingHJ) {
							this.setTachieBoobs('standing_lizardman_kiss_hj_1');
							this.setTachieSemenBoobsExtension('standing_human_kiss_hj_');
							this.setTachieStrayBoobsExtension('standing_human_kiss_hj_');
						}
						else {
							this.setTachieBoobs('standing_kiss_normal_1');
							this.setTachieSemenBoobsExtension('standing_kiss_normal_');
							this.setTachieStrayBoobsExtension('standing_kiss_normal_');
						}
					}
					else {
						if(receptionistIsGivingHJ) {
							this.setTachieBoobs('standing_hj_1');
							this.setTachieSemenBoobsExtension('standing_hj_');
							this.setTachieStrayBoobsExtension('standing_hj_');
						}
						else {
							this.setTachieBoobs('standing_normal_1');
							this.setTachieSemenBoobsExtension('standing_normal_');
							this.setTachieStrayBoobsExtension('standing_normal_');
						}
					}
				}
				else {
					if(receptionistIsKissing) {
						if(receptionistIsGivingHJ) {
							this.setTachieBoobs('standing_human_kiss_hj_1');
							this.setTachieSemenBoobsExtension('standing_human_kiss_hj_');
							this.setTachieStrayBoobsExtension('standing_human_kiss_hj_');
						}
						else {
							this.setTachieBoobs('standing_kiss_normal_1');
							this.setTachieSemenBoobsExtension('standing_kiss_normal_');
							this.setTachieStrayBoobsExtension('standing_kiss_normal_');
						}
					}
					else {
						if(receptionistIsGivingHJ) {
							this.setTachieBoobs('standing_hj_1');
							this.setTachieSemenBoobsExtension('standing_hj_');
							this.setTachieStrayBoobsExtension('standing_hj_');
						}
						else {
							this.setTachieBoobs('standing_normal_1');
							this.setTachieSemenBoobsExtension('standing_normal_');
							this.setTachieStrayBoobsExtension('standing_normal_');
						}
					}
				}
			}
			else {
				this.setTachieBoobs('standing_1');
				this.setTachieSemenBoobsExtension('standing_');
				this.setTachieStrayBoobsExtension('standing_');
			}
		}
		if(wearingGlasses) this.setTachieGlasses('standing_1');
		
		if(thereIsAGoblinFront) {
			if(receptionistIsGettingBoobsRubbed) {
				if(receptionistIsGivingHJ)
					this.setTachieLeftArm('standing_goblin_boobs_hj');
				else
					this.setTachieLeftArm('standing_goblin_boobs');
			}
			else if(receptionistIsGivingHJ) {
				this.setTachieLeftArm('standing_goblin_hj');
			}
			else if(thereIsAIdentifiedPervInFront && this._tachieVisitorA.includes('ero')) {
				this.setTachieLeftArm('standing_goblin_boobs');
			}
			else {
				this.setTachieLeftArm('standing_normal');
			}
		}
		else if(receptionistIsGivingHJ) {
			if(receptionistIsKissing) {
				if(thereIsAnOrcFront)
					this.setTachieLeftArm('standing_orc_kiss_hj');
				else if(thereIsALizardmanFront)
					this.setTachieLeftArm('standing_lizardman_kiss_hj');
				else
					this.setTachieLeftArm('standing_human_kiss_hj');
			}
			else  {
				if(thereIsAnOrcFront)
					this.setTachieLeftArm('standing_orc_hj');
				else if(thereIsALizardmanFront)
					this.setTachieLeftArm('standing_lizardman_hj');
				else
					this.setTachieLeftArm('standing_human_hj');
			}
		}
		else {
			this.setTachieLeftArm('standing_normal');
		}
		
		if(receptionistIsShakingHands) {
			if(thereIsAGoblinFront) 
				this.setTachieRightArm('standing_goblin_handshake');
			else if(thereIsAnOrcFront) 
				this.setTachieRightArm('standing_orc_handshake');
			else
				this.setTachieRightArm('standing_handshake');
		}
		else if(receptionistIsOnRadio)
			this.setTachieRightArm('standing_radio');
		else
			this.setTachieRightArm('standing_normal');
		
		tachieClothesName = 'standing_';
		tachieEyesName = 'standing_';
		tachieEyebrowsName = 'standing_';
		tachieMouthName = 'standing_';
		tachieHoppeName = 'standing_';
		tachieSweatName = 'standing_';
		
		this.setTachieSemenFaceExtension('standing_');
		this.setTachieStrayFaceExtension('standing_');
	}
	
	//let goblinTachieStillInserted = this.tachieFrontD == 'goblin_manko' || this.tachieFrontD == 'goblin_manko_cen' || this.tachieFrontD == 'goblin_anaru' || this.tachieFrontD == 'goblin_anaru_cen';
	if(receptionistIsHavingSexBehind) {
		tachieClothesName += 'spread_1';
		this.setTachieButt('spread_1');
		this.resetTachieSkirt();
		this.setTachieSemenAnalExtension('spread_');
		this.setTachieSemenButtExtension('spread_');
		this.setTachieSemenCrotchExtension('spread_');
		this.setTachieSemenWetExtension('spread_');
	}
	//if not spread
	else {
		tachieClothesName += '1';
		this.setTachieButt(1);
		
		if(this.clothingStage < 3)
			this.setTachieSkirt(this.clothingStage)
		else
			this.resetTachieSkirt();
		
		this.resetTachieSemenAnalExtension();
		this.resetTachieSemenButtExtension();
		this.resetTachieSemenCrotchExtension();
		this.resetTachieSemenWetExtension();
	}
	this.setTachieClothes(tachieClothesName);
	
	
	//Blowjob
	if(receptionistIsGivingBJ) {
		if(karrynSwallowingCum) {
			faceArray.push(50);
		}
		else {
			if(generallvl3)
				faceArray.push(49);
			if(generallvl2)
				faceArray.push(48);
			else
				faceArray.push(47);
		}
	}
	//Working
	else if(receptionistIsWorking) {
		if(thereIsAGoblinBehind) {
			if(justGotPussyCreampie) {
				if(pussyCreampielvl3)
					faceArray.push(46);
				else
					faceArray.push(42);
			}
			else if(justGotAnalCreampie) {
				if(analCreampielvl3)
					faceArray.push(46);
				else
					faceArray.push(42);
			}
			else if(justOrgasmed) {
				if(orgasmlvl3)
					faceArray.push(46);
				else
					faceArray.push(42);
			}
			else if(karrynGotPetted) {
				if(generallvl3)
					faceArray.push(44);
				else
					faceArray.push(40);
			}
			else if(lastHitPussySex || lastHitAnalSex || receptionistIsGettingPussyLicked || receptionistIsGettingPussyFucked || receptionistIsGettingAnalFucked) {
				if(generallvl3)
					faceArray.push(45);
				else
					faceArray.push(41);
			}
			else {
				if(generallvl3)
					faceArray.push(43);
				else
					faceArray.push(39);
			}
		}
		else {
			if(generallvl3)
					faceArray.push(43);
				else
					faceArray.push(38);
		}
	}
	//Standing
	else {
		if(justGotPussyCreampie) {
			if(pussyCreampielvl3)
				faceArray.push(37);
			else if(pussyCreampielvl2)
				faceArray.push(24);
			else
				faceArray.push(12);
		}
		else if(justGotAnalCreampie) {
			if(analCreampielvl3)
				faceArray.push(37);
			else if(analCreampielvl2)
				faceArray.push(24);
			else
				faceArray.push(12);
		}
		else if(justOrgasmed) {
			if(orgasmlvl3)
				faceArray.push(37);
			else if(orgasmlvl2)
				faceArray.push(24);
			else
				faceArray.push(12);
		}
		//Pervert
		else if(thereIsAIdentifiedPervInFront) {
			if(receptionistIsKissing) {
				if(generallvl3)
					faceArray.push(36);
				else if(generallvl2)
					faceArray.push(23);
				else
					faceArray.push(11);
			}
			else if(receptionistIsGettingBoobsRubbed) {
				if(generallvl3)
					faceArray.push(35);
				else if(generallvl2)
					faceArray.push(22);
				else
					faceArray.push(10);
			}
			else if(justOrgasmed) {
				if(generallvl3)
					faceArray.push(30);
				else if(generallvl2)
					faceArray.push(20);
				else
					faceArray.push(8);
			}
			else {
				if(generallvl3)
					faceArray.push(34);
				else if(generallvl2)
					faceArray.push(21);
				else
					faceArray.push(9);
			}
		}
		//Goblin
		else if(thereIsAGoblinBehind) {
			if(lastHitCunnilingus) {
				if(generallvl3)
					faceArray.push(53);
				else if(generallvl2)
					faceArray.push(52);
				else
					faceArray.push(51);
			}
			else if(karrynGotPetted) {
				if(thereIsVisitorAtDesk) {
					if(generallvl3)
						faceArray.push(30);
					else if(generallvl2)
						faceArray.push(18);
					else
						faceArray.push(6);
				}
				else {
					if(generallvl3)
						faceArray.push(29);
					else if(generallvl2)
						faceArray.push(17);
					else
						faceArray.push(5);
				}
			}
			else if(lastHitPussySex || lastHitAnalSex || receptionistIsGettingPussyLicked || receptionistIsGettingPussyFucked || receptionistIsGettingAnalFucked) {
				if(thereIsVisitorAtDesk) {
					if(generallvl3)
						faceArray.push(32);
					else if(generallvl2)
						faceArray.push(20);
					else
						faceArray.push(8);
				}
				else {
					if(generallvl3)
						faceArray.push(31);
					else if(generallvl2)
						faceArray.push(19);
					else
						faceArray.push(7);
				}
			}
			else if(justOrgasmed) {
				if(generallvl3)
					faceArray.push(30);
				else if(generallvl2)
					faceArray.push(20);
				else
					faceArray.push(8);
			}
			else {
				if(thereIsVisitorAtDesk) {
					if(generallvl3)
						faceArray.push(28);
					else if(generallvl2)
						faceArray.push(16);
					else
						faceArray.push(4);
				}
				else {
					if(generallvl3)
						faceArray.push(27);
					else if(generallvl2)
						faceArray.push(15);
					else
						faceArray.push(3);
				}
			}
			
		}
		//No Goblin
		else {
			if(justOrgasmed) {
				if(generallvl3)
					faceArray.push(30);
				else if(generallvl2)
					faceArray.push(20);
				else
					faceArray.push(8);
			}
			else if(thereIsVisitorAtDesk) {
				if(generallvl3)
					faceArray.push(26);
				else if(generallvl2)
					faceArray.push(14);
				else
					faceArray.push(2);
			}
			else {
				if(generallvl3)
					faceArray.push(25);
				else if(generallvl2)
					faceArray.push(13);
				else
					faceArray.push(1);
			}
		}
		
	}
	
	let faceId = faceArray[Math.randomInt(faceArray.length)];
	let eyebrowsArray = [];
	let eyesArray = [];
	let mouthArray = [];
	
	
	if(faceId === 1) {
		eyebrowsArray.push('kiri1');
		eyebrowsArray.push('kiri2');
		eyesArray.push('mae1');
		mouthArray.push('mu1');
		if(isAroused) {
			tachieHoppeName += '1';
			displayTachieHoppe = true;
		}
	}
	else if(faceId === 2) {
		eyebrowsArray.push('kiri1');
		eyebrowsArray.push('kiri2');
		eyesArray.push('mae1');
		mouthArray.push('wa1');
		mouthArray.push('mu1');
		if(isAroused) {
			tachieHoppeName += '1';
			displayTachieHoppe = true;
		}
	}
	else if(faceId === 3) {
		eyebrowsArray.push('kiri1');
		eyebrowsArray.push('kiri2');
		eyesArray.push('sita1');
		mouthArray.push('ku1');
		mouthArray.push('ku2');
		if(isAroused) {
			tachieHoppeName += '1';
			displayTachieHoppe = true;
		}
		tachieSweatName += '1';
		displayTachieSweat = true;
	}
	else if(faceId === 4) {
		eyebrowsArray.push('kiri1');
		eyebrowsArray.push('kiri2');
		eyesArray.push('sita1');
		eyesArray.push('mae1');
		mouthArray.push('mu1');
		mouthArray.push('wa1');
		mouthArray.push('ku1');
		if(isAroused) {
			tachieHoppeName += '1';
			displayTachieHoppe = true;
		}
		tachieSweatName += '1';
		displayTachieSweat = true;
	}
	else if(faceId === 5) {
		eyebrowsArray.push('koma1');
		eyebrowsArray.push('koma2');
		eyebrowsArray.push('oko1');
		eyesArray.push('sita1');
		eyesArray.push('sita2');
		mouthArray.push('ku1');
		mouthArray.push('ku2');
		mouthArray.push('mu1');
		tachieHoppeName += '1';
		displayTachieHoppe = true;
		tachieSweatName += '1';
		displayTachieSweat = true;
	}
	else if(faceId === 6) {
		eyebrowsArray.push('koma1');
		eyebrowsArray.push('koma2');
		eyebrowsArray.push('oko1');
		eyesArray.push('sita2');
		eyesArray.push('mae1');
		mouthArray.push('ku1');
		mouthArray.push('ku2');
		mouthArray.push('wa1');
		tachieHoppeName += '1';
		displayTachieHoppe = true;
		tachieSweatName += '1';
		displayTachieSweat = true;
	}
	else if(faceId === 7) {
		eyebrowsArray.push('koma1');
		eyebrowsArray.push('koma2');
		eyesArray.push('sita2');
		eyesArray.push('toji1');
		mouthArray.push('mu1');
		mouthArray.push('ku1');
		mouthArray.push('ku2');
		mouthArray.push('wa2');
		tachieHoppeName += '1';
		displayTachieHoppe = true;
		tachieSweatName += '2';
		displayTachieSweat = true;
	}
	else if(faceId === 8) {
		eyebrowsArray.push('koma1');
		eyebrowsArray.push('koma2');
		eyesArray.push('sita2');
		eyesArray.push('mae2');
		eyesArray.push('toji1');
		mouthArray.push('mu1');
		mouthArray.push('ku1');
		mouthArray.push('ku2');
		mouthArray.push('wa2');
		tachieHoppeName += '1';
		displayTachieHoppe = true;
		tachieSweatName += '2';
		displayTachieSweat = true;
	}
	else if(faceId === 9) {
		eyebrowsArray.push('koma1');
		eyebrowsArray.push('oko1');
		if(thereIsAIdentifiedPervInFront && thereIsAGoblinFront) {
			eyesArray.push('maesita2');
		}
		else {
			eyesArray.push('mae1');
			eyesArray.push('mae2');
		}
		mouthArray.push('mu1');
		mouthArray.push('ku1');
		mouthArray.push('ho1');
		tachieHoppeName += '1';
		displayTachieHoppe = true;
	}
	else if(faceId === 10) {
		eyebrowsArray.push('koma1');
		eyebrowsArray.push('koma2');
		eyebrowsArray.push('oko1');
		if(thereIsAIdentifiedPervInFront && thereIsAGoblinFront) {
			eyesArray.push('maesita2');
			eyesArray.push('toji1');
		}
		else {
			eyesArray.push('mae1');
			eyesArray.push('mae2');
			eyesArray.push('toji1');
		}
		mouthArray.push('mu1');
		mouthArray.push('ku1');
		mouthArray.push('ku2');
		tachieHoppeName += '1';
		displayTachieHoppe = true;
		tachieSweatName += '1';
		displayTachieSweat = true;
	}
	else if(faceId === 11) {
		eyebrowsArray.push('koma1');
		eyebrowsArray.push('koma2');
		if(thereIsAIdentifiedPervInFront && thereIsAGoblinFront) {
			eyesArray.push('maesita2');
			eyesArray.push('toji1');
		}
		else {
			eyesArray.push('sita2');
			eyesArray.push('mae2');
			eyesArray.push('toji1');
		}
		mouthArray.push('kiss1');
		tachieHoppeName += '1';
		displayTachieHoppe = true;
		tachieSweatName += '2';
		displayTachieSweat = true;
	}
	else if(faceId === 12) {
		eyebrowsArray.push('koma1');
		eyebrowsArray.push('koma2');
		eyesArray.push('ahe2');
		eyesArray.push('nico1');
		mouthArray.push('mu2');
		mouthArray.push('wa2');
		mouthArray.push('ahe1');
		tachieHoppeName += '1';
		displayTachieHoppe = true;
		tachieSweatName += '2';
		displayTachieSweat = true;
	}
	else if(faceId === 13) {
		eyebrowsArray.push('kiri1');
		eyebrowsArray.push('kiri2');
		eyesArray.push('mae1');
		mouthArray.push('nico1');
		if(isAroused) {
			tachieHoppeName += '1';
			displayTachieHoppe = true;
		}
	}
	else if(faceId === 14) {
		eyebrowsArray.push('kiri1');
		eyebrowsArray.push('kiri2');
		eyesArray.push('mae1');
		mouthArray.push('nico2');
		mouthArray.push('nico3');
		if(isAroused) {
			tachieHoppeName += '1';
			displayTachieHoppe = true;
		}
	}
	else if(faceId === 15) {
		eyebrowsArray.push('kiri1');
		eyebrowsArray.push('kiri2');
		eyesArray.push('sita1');
		mouthArray.push('mu1');
		mouthArray.push('mu2');
		if(isAroused) {
			tachieHoppeName += '1';
			displayTachieHoppe = true;
		}
		tachieSweatName += '1';
		displayTachieSweat = true;
	}
	else if(faceId === 16) {
		eyebrowsArray.push('kiri1');
		eyebrowsArray.push('kiri2');
		eyesArray.push('sita1');
		eyesArray.push('mae1');
		mouthArray.push('ho1');
		mouthArray.push('nico2');
		mouthArray.push('nico3');
		if(isAroused) {
			tachieHoppeName += '1';
			displayTachieHoppe = true;
		}
		tachieSweatName += '1';
		displayTachieSweat = true;
	}
	else if(faceId === 17) {
		eyebrowsArray.push('koma1');
		eyebrowsArray.push('kiri1');
		eyebrowsArray.push('oko1');
		eyesArray.push('sita1');
		eyesArray.push('sita2');
		mouthArray.push('ku2');
		mouthArray.push('mu2');
		mouthArray.push('ho1');
		mouthArray.push('wa1');
		tachieHoppeName += '1';
		displayTachieHoppe = true;
		tachieSweatName += '1';
		displayTachieSweat = true;
	}
	else if(faceId === 18) {
		eyebrowsArray.push('koma1');
		eyebrowsArray.push('koma2');
		eyesArray.push('sita2');
		eyesArray.push('mae1');
		mouthArray.push('nico1');
		mouthArray.push('nico2');
		mouthArray.push('nico3');
		tachieHoppeName += '1';
		displayTachieHoppe = true;
		tachieSweatName += '1';
		displayTachieSweat = true;
	}
	else if(faceId === 19) {
		eyebrowsArray.push('koma1');
		eyebrowsArray.push('koma2');
		eyebrowsArray.push('oko1');
		eyesArray.push('sita1');
		eyesArray.push('sita2');
		mouthArray.push('mu1');
		mouthArray.push('ku1');
		mouthArray.push('ku2');
		mouthArray.push('wa2');
		tachieHoppeName += '1';
		displayTachieHoppe = true;
		tachieSweatName += '2';
		displayTachieSweat = true;
	}
	else if(faceId === 20) {
		eyebrowsArray.push('koma1');
		eyebrowsArray.push('koma2');
		eyesArray.push('sita2');
		eyesArray.push('mae2');
		eyesArray.push('nico1');
		mouthArray.push('nico2');
		mouthArray.push('nico3');
		mouthArray.push('wa2');
		tachieHoppeName += '1';
		displayTachieHoppe = true;
		tachieSweatName += '2';
		displayTachieSweat = true;
	}
	else if(faceId === 21) {
		eyebrowsArray.push('kiri1');
		eyebrowsArray.push('kiri2');
		eyebrowsArray.push('oko1');
		if(thereIsAIdentifiedPervInFront && thereIsAGoblinFront) {
			eyesArray.push('maesita1');
			eyesArray.push('maesita2');
		}
		else {
			eyesArray.push('mae1');
			eyesArray.push('mae2');
		}
		mouthArray.push('mu1');
		mouthArray.push('mu2');
		if(isAroused) {
			tachieHoppeName += '1';
			displayTachieHoppe = true;
		}
		tachieSweatName += '1';
		displayTachieSweat = true;
	}
	else if(faceId === 22) {
		eyebrowsArray.push('koma1');
		eyebrowsArray.push('koma2');
		if(thereIsAIdentifiedPervInFront && thereIsAGoblinFront) {
			eyesArray.push('maesita1');
			eyesArray.push('maesita2');
			eyesArray.push('toji1');
		}
		else {
			eyesArray.push('mae1');
			eyesArray.push('mae2');
			eyesArray.push('toji1');
		}
		mouthArray.push('mu2');
		mouthArray.push('wa1');
		mouthArray.push('ho1');
		tachieHoppeName += '1';
		displayTachieHoppe = true;
		tachieSweatName += '1';
		displayTachieSweat = true;
	}
	else if(faceId === 23) {
		eyebrowsArray.push('kiri1');
		eyebrowsArray.push('kiri2');
		if(thereIsAIdentifiedPervInFront && thereIsAGoblinFront) {
			eyesArray.push('maesita1');
			eyesArray.push('nico1');
		}
		else {
			eyesArray.push('mae2');
			eyesArray.push('nico1');
		}
		mouthArray.push('kiss1');
		tachieHoppeName += '1';
		displayTachieHoppe = true;
		tachieSweatName += '2';
		displayTachieSweat = true;
	}
	else if(faceId === 24) {
		eyebrowsArray.push('koma1');
		eyebrowsArray.push('koma2');
		eyebrowsArray.push('oko1');
		eyesArray.push('ahe1');
		eyesArray.push('ahe2');
		eyesArray.push('nico1');
		mouthArray.push('mu2');
		mouthArray.push('ahe1');
		mouthArray.push('ahe2');
		mouthArray.push('nico3');
		tachieHoppeName += '1';
		displayTachieHoppe = true;
		tachieSweatName += '2';
		displayTachieSweat = true;
	}
	else if(faceId === 25) {
		eyebrowsArray.push('nico1');
		eyebrowsArray.push('nico2');
		eyesArray.push('mae1');
		mouthArray.push('nico1');
		if(isAroused) {
			tachieHoppeName += '1';
			displayTachieHoppe = true;
		}
	}
	else if(faceId === 26) {
		eyebrowsArray.push('nico1');
		eyebrowsArray.push('nico2');
		eyesArray.push('mae1');
		mouthArray.push('nico2');
		mouthArray.push('nico3');
		if(isAroused) {
			tachieHoppeName += '1';
			displayTachieHoppe = true;
		}
	}
	else if(faceId === 27) {
		eyebrowsArray.push('nico1');
		eyebrowsArray.push('nico2');
		eyesArray.push('sita1');
		eyesArray.push('sita2');
		mouthArray.push('nico1');
		mouthArray.push('nico4');
		if(isAroused) {
			tachieHoppeName += '1';
			displayTachieHoppe = true;
		}
	}
	else if(faceId === 28) {
		eyebrowsArray.push('nico1');
		eyebrowsArray.push('nico2');
		eyesArray.push('sita1');
		eyesArray.push('sita2');
		eyesArray.push('mae1');
		eyesArray.push('mae2');
		mouthArray.push('nico1');
		mouthArray.push('nico2');
		mouthArray.push('nico3');
		if(isAroused) {
			tachieHoppeName += '1';
			displayTachieHoppe = true;
		}
	}
	else if(faceId === 29) {
		eyebrowsArray.push('nico1');
		eyebrowsArray.push('nico2');
		eyesArray.push('sita1');
		eyesArray.push('sita2');
		mouthArray.push('nico1');
		mouthArray.push('nico2');
		mouthArray.push('nico3');
		mouthArray.push('ho1');
		tachieHoppeName += '1';
		displayTachieHoppe = true;
	}
	else if(faceId === 30) {
		eyebrowsArray.push('koma1');
		eyebrowsArray.push('koma2');
		eyebrowsArray.push('kiri1');
		eyebrowsArray.push('kiri2');
		eyesArray.push('sita1');
		eyesArray.push('sita2');
		eyesArray.push('mae1');
		eyesArray.push('mae2');
		mouthArray.push('nico1');
		mouthArray.push('nico2');
		mouthArray.push('nico3');
		tachieHoppeName += '1';
		displayTachieHoppe = true;
	}
	else if(faceId === 31) {
		eyebrowsArray.push('kiri1');
		eyebrowsArray.push('kiri2');
		eyebrowsArray.push('nico1');
		eyebrowsArray.push('nico2');
		eyesArray.push('sita1');
		eyesArray.push('sita2');
		eyesArray.push('nico1');
		mouthArray.push('ahe1');
		mouthArray.push('ahe3');
		mouthArray.push('ho1');
		mouthArray.push('nico4');
		tachieHoppeName += '1';
		displayTachieHoppe = true;
		tachieSweatName += '1';
		displayTachieSweat = true;
	}
	else if(faceId === 32) {
		eyebrowsArray.push('kiri1');
		eyebrowsArray.push('kiri2');
		eyebrowsArray.push('nico1');
		eyebrowsArray.push('nico2');
		eyesArray.push('sita2');
		eyesArray.push('mae2');
		eyesArray.push('toji1');
		eyesArray.push('ahe1');
		eyesArray.push('ahe2');
		mouthArray.push('ahe1');
		mouthArray.push('ahe2');
		mouthArray.push('ahe3');
		mouthArray.push('nico4');
		tachieHoppeName += '1';
		displayTachieHoppe = true;
		tachieSweatName += '2';
		displayTachieSweat = true;
	}
	else if(faceId === 34) {
		eyebrowsArray.push('kiri1');
		eyebrowsArray.push('kiri2');
		eyebrowsArray.push('nico1');
		eyebrowsArray.push('nico2');
		if(thereIsAIdentifiedPervInFront && thereIsAGoblinFront) {
			eyesArray.push('maesita1');
		}
		else {
			eyesArray.push('mae1');
			eyesArray.push('mae2');
		}	
		mouthArray.push('nico1');
		mouthArray.push('nico2');
		mouthArray.push('nico3');
		mouthArray.push('nico4');
		if(isAroused) {
			tachieHoppeName += '1';
			displayTachieHoppe = true;
		}
	}
	else if(faceId === 35) {
		eyebrowsArray.push('kiri1');
		eyebrowsArray.push('kiri2');
		eyebrowsArray.push('nico1');
		eyebrowsArray.push('nico2');
		if(thereIsAIdentifiedPervInFront && thereIsAGoblinFront) {
			eyesArray.push('maesita1');
			eyesArray.push('maesita2');
			eyesArray.push('toji1');
		}
		else {
			eyesArray.push('mae2');
			eyesArray.push('toji1');
			eyesArray.push('nico1');
		}	
		mouthArray.push('mu2');
		mouthArray.push('ahe1');
		mouthArray.push('ahe2');
		mouthArray.push('nico3');
		tachieHoppeName += '1';
		displayTachieHoppe = true;
	}
	else if(faceId === 36) {
		eyebrowsArray.push('nico1');
		eyebrowsArray.push('nico2');
		if(thereIsAIdentifiedPervInFront && thereIsAGoblinFront) {
			eyesArray.push('maesita2');
			eyesArray.push('toji1');
			eyesArray.push('nico1');
		}
		else {
			eyesArray.push('mae2');
			eyesArray.push('toji1');
			eyesArray.push('nico1');
		}
		mouthArray.push('kiss2');
		tachieHoppeName += '1';
		displayTachieHoppe = true;
	}
	else if(faceId === 37) {
		eyebrowsArray.push('nico1');
		eyebrowsArray.push('nico2');
		eyebrowsArray.push('koma1');
		eyebrowsArray.push('koma2');
		eyesArray.push('ahe1');
		eyesArray.push('ahe2');
		eyesArray.push('nico1');
		mouthArray.push('ahe1');
		mouthArray.push('ahe2');
		mouthArray.push('ahe3');
		mouthArray.push('nico4');
		tachieHoppeName += '1';
		displayTachieHoppe = true;
		tachieSweatName += '2';
		displayTachieSweat = true;
	}
	else if(faceId === 38) {
		mouthArray.push('mu1');
		if(isAroused) {
			tachieHoppeName += '1';
			displayTachieHoppe = true;
		}
	}
	else if(faceId === 39) {
		mouthArray.push('ku1');
		mouthArray.push('ku2');
		if(isAroused) {
			tachieHoppeName += '1';
			displayTachieHoppe = true;
		}
		tachieSweatName += '1';
		displayTachieSweat = true;
	}
	else if(faceId === 40) {
		mouthArray.push('ku2');
		mouthArray.push('wa1');
		tachieHoppeName += '1';
		displayTachieHoppe = true;
		tachieSweatName += '1';
		displayTachieSweat = true;
	}
	else if(faceId === 41) {
		mouthArray.push('ku2');
		mouthArray.push('wa1');
		tachieHoppeName += '1';
		displayTachieHoppe = true;
		tachieSweatName += '2';
		displayTachieSweat = true;
	}
	else if(faceId === 42) {
		mouthArray.push('ahe1');
		mouthArray.push('ku2');
		mouthArray.push('wa1');
		tachieHoppeName += '1';
		displayTachieHoppe = true;
		tachieSweatName += '2';
		displayTachieSweat = true;
	}
	else if(faceId === 43) {
		mouthArray.push('nico1');
		if(isAroused) {
			tachieHoppeName += '1';
			displayTachieHoppe = true;
		}
	}
	else if(faceId === 44) {
		mouthArray.push('nico1');
		mouthArray.push('wa1');
		tachieHoppeName += '1';
		displayTachieHoppe = true;
	}
	else if(faceId === 45) {
		mouthArray.push('nico1');
		mouthArray.push('wa1');
		mouthArray.push('ahe1');
		tachieHoppeName += '1';
		displayTachieHoppe = true;
		tachieSweatName += '1';
		displayTachieSweat = true;
	}
	else if(faceId === 46) {
		mouthArray.push('nico1');
		mouthArray.push('wa1');
		mouthArray.push('ahe1');
		tachieHoppeName += '1';
		displayTachieHoppe = true;
		tachieSweatName += '2';
		displayTachieSweat = true;
	}
	else if(faceId === 47) {
		tachieHoppeName += '1';
		displayTachieHoppe = true;
		tachieSweatName += '2';
		displayTachieSweat = true;
	}
	else if(faceId === 48) {
		tachieHoppeName += '1';
		displayTachieHoppe = true;
		tachieSweatName += '1';
		displayTachieSweat = true;
	}
	else if(faceId === 49) {

	}
	else if(faceId === 50) {
		tachieHoppeName += '1';
		displayTachieHoppe = true;
		tachieSweatName += '2';
		displayTachieSweat = true;
	}
	else if(faceId === 51) {
		eyebrowsArray.push('koma1');
		eyebrowsArray.push('koma2');
		eyebrowsArray.push('oko1');
		eyesArray.push('sita3');
		eyesArray.push('sita4');
		mouthArray.push('ku1');
		mouthArray.push('ku2');
		mouthArray.push('ho1');
		mouthArray.push('wa2');
		tachieHoppeName += '1';
		displayTachieHoppe = true;
		tachieSweatName += '2';
		displayTachieSweat = true;
	}
	else if(faceId === 52) {
		eyebrowsArray.push('koma1');
		eyebrowsArray.push('koma2');
		eyebrowsArray.push('kiri1');
		eyebrowsArray.push('kiri2');
		eyesArray.push('sita3');
		eyesArray.push('sita4');
		mouthArray.push('mu1');
		mouthArray.push('mu2');
		mouthArray.push('ho1');
		mouthArray.push('wa1');
		tachieHoppeName += '1';
		displayTachieHoppe = true;
		tachieSweatName += '1';
		displayTachieSweat = true;
	}
	else if(faceId === 53) {
		eyebrowsArray.push('nico1');
		eyebrowsArray.push('nico2');
		eyebrowsArray.push('koma1');
		eyesArray.push('sita3');
		eyesArray.push('sita4');
		eyesArray.push('nico1');
		mouthArray.push('nico1');
		mouthArray.push('nico2');
		mouthArray.push('nico3');
		mouthArray.push('nico4');
		tachieHoppeName += '1';
		displayTachieHoppe = true;
	}
	
	
	if(eyebrowsArray.length > 0) {
		this.setTachieEyebrows('' + tachieEyebrowsName + eyebrowsArray[Math.randomInt(eyebrowsArray.length)]);
	}
	if(eyesArray.length > 0) {
		this.setTachieEyes('' + tachieEyesName + eyesArray[Math.randomInt(eyesArray.length)]);
	}
	if(mouthArray.length > 0) {
		this.setTachieMouth('' + tachieMouthName + mouthArray[Math.randomInt(mouthArray.length)]);
	}
	
	if(displayTachieHoppe) this.setTachieHoppe(tachieHoppeName);
	if(displayTachieSweat) this.setTachieSweat(tachieSweatName);
	
	switch(this.tachieMouth) {
		case 'standing_kiss1':
			this.setTachieStrayFaceExtension('standing_kiss1_');
			break;
		case 'standing_kiss2':
			this.setTachieStrayFaceExtension('standing_kiss2_');
			break;
	}
	
	this.setAllowTachieEmoteUpdate(true);
};

//////////////////
/////////////////
// Emote Map Pose
/////////////////
/////////////////

Game_Actor.prototype.emoteMapPose = function(goingToSleep, goingToOnani, calledFromCommons, mapTransition) {
	if(this.isInWaitressServingPose()) {
		this.emoteWaitressServingPose();
		return;
	}
	if(!this.isInMapPose()) {
		return;
	}
	if(!$gameScreen.isMapMode() && !goingToSleep && !goingToOnani && !calledFromCommons) {
		return;
	}
	this.setAllowTachieEmoteUpdate(false);
	let justEscaped = this._justEscapedFlag;
	let enemyNPCPresent = $gameMap.theresAnEnemyInThisMap();
	let stoodStillForTooLong = this.stoodStillForTooLong();
	let wearingWardenOutfit = this.isWearingWardenClothing();
	let justOrgasmed = this.didLastGetHitBySkillType(JUST_SKILLTYPE_KARRYN_ORGASM) || this.justOrgasmed();
	let isAroused = this.isAroused() || justOrgasmed;
	let isNightMode = $gameParty.isNightMode();
	let hasHalberd = this.hasHalberd();
	let justDefeated = this.isStateAffected(STATE_JUST_DEFEATED_ID);
	let talkingToNPC = this.isStateAffected(STATE_TALKING_TO_NPC_ID);
	let clothingStage = this._clothingStage;
	let isClothingAtStageSeeOneBoob = this.isClothingAtStageSeeOneBoob();
	let isClothingAtStageSeeBothBoobs = this.isClothingAtStageSeeBothBoobs();
	
	let isAlmostNaked = this.clothingStage >= 4 && wearingWardenOutfit;
	let isFrustrated = this.isOnaniFrustrated();
	let isWearingPanties = this.isWearingPanties();
	let canSeeSemenOnFace = this.canGetBukkakedFaceSeen();
	let canSeeSemenOnBoobs = this.canGetBukkakedBoobsSeen();
	let canSeePussyCreampie = this.canGetPussyCreampieSeen();
	let canSeeAnalCreampie = this.canGetAnalCreampieSeen();
	let wearingClitToy = this.isWearingClitToy();
	let wearingPussyToy = this.isWearingPussyToy();
	let wearingAnalToy = this.isWearingAnalToy();
	let hasHighHandjobLevelPassive = this.hasPassive(PASSIVE_HJ_PEOPLE_THREE_ID);
	let hasHighBlowjobLevelPassive = this.hasPassive(PASSIVE_BJ_PEOPLE_THREE_ID);

	let mapReactionScore = this.getMapReactionScore();
	let fatigueLevel = this.getFatigueLevel();
	let masochismLvl = this.masochismLvl();
	let sadismLvl = this.sadismLvl();
	
	let maplvl3 = mapReactionScore >= VAR_DEF_RS_LV3_REQ;
	let maplvl2 = mapReactionScore >= VAR_DEF_RS_LV2_REQ;
	let maplvl1 = mapReactionScore >= VAR_DEF_RS_LV1_REQ;
	let fatigueLvl1 = fatigueLevel === 2;
	let fatigueLvl2 = fatigueLevel === 3;
	let fatigueLvl3 = fatigueLevel >= 4;
	
	let isSadist = sadismLvl - masochismLvl >= 3;
	let isMasochist = masochismLvl - sadismLvl >= 3;
	
	if(!this.isWearingGlovesAndHat() || !this.isWearingWardenClothing())
		this.resetTachieTie();
	else
		this.setTachieTie('1');
	
	let faceArray = [];
	
	if(goingToSleep) {
		faceArray.push(35);
	}
	else if(goingToOnani) {
		if(maplvl3) {
			faceArray.push(29);
		}
		else if(maplvl2) {
			faceArray.push(28);
		}
		else {
			faceArray.push(27);
		}
	}
	//Boredom takes precedent over all other mood since boredom only happens from afking
	else if(stoodStillForTooLong) {
		if(this._standingStillStage === 0) {
			faceArray.push(22);
		}
		else if(this._standingStillStage === 1) {
			faceArray.push(23);
		}
		else if(this._standingStillStage === 2) {
			faceArray.push(24);
		}
		else if(this._standingStillStage === 3) {
			faceArray.push(25);
		}
		//sleep
		else if(this._standingStillStage === 4) {
			faceArray.push(26);
			
			this.setKarrynSleepSprite();
		}
		else if(this._standingStillStage > 4) {
			return;
		}
		
		this._standingStillStage++;
	}
	//Talking to NPC
	else if(talkingToNPC) {
		if(maplvl3) {
			faceArray.push(34);
		}
		else if(maplvl2) {
			if(isClothingAtStageSeeOneBoob || !isWearingPanties || isAroused)
				faceArray.push(33);
			else
				faceArray.push(32);
		}
		else {
			if(isClothingAtStageSeeOneBoob || !isWearingPanties || isAroused)
				faceArray.push(31);
			else
				faceArray.push(30);
		}
	}
	else {
		//maplvl3
		if(maplvl3) {
			if(!enemyNPCPresent) {
				if(fatigueLvl3) {
					faceArray.push(4);
				}
				else if(fatigueLvl2) {
					faceArray.push(17);
				}
				else if(fatigueLvl1) {
					faceArray.push(16);
				}
				else {
					faceArray.push(15);
				}
			}
			else {
				if(fatigueLvl3) {
					faceArray.push(21);
				}
				else if(fatigueLvl2) {
					faceArray.push(20);
				}
				else if(fatigueLvl1) {
					faceArray.push(19);
				}
				else {
					faceArray.push(18);
				}
			}
			
		}
		//maplvl2
		else if(maplvl2) {
			if(!enemyNPCPresent) {
				if(fatigueLvl3) {
					faceArray.push(4);
				}
				else if(fatigueLvl2) {
					faceArray.push(11);
				}
				else if(fatigueLvl1) {
					faceArray.push(10);
				}
				else {
					faceArray.push(9);
				}
			}
			else {
				if(fatigueLvl3) {
					faceArray.push(8);
				}
				else if(fatigueLvl2) {
					faceArray.push(14);
				}
				else if(fatigueLvl1) {
					faceArray.push(13);
				}
				else {
					faceArray.push(12);
				}
			}
		}
		//maplvl1
		else {
			if(!enemyNPCPresent) {
				if(fatigueLvl3) {
					faceArray.push(4);
				}
				else if(fatigueLvl2) {
					faceArray.push(3);
				}
				else if(fatigueLvl1) {
					faceArray.push(2);
				}
				else {
					faceArray.push(1);
				}
			}
			else {
				if(fatigueLvl3) {
					faceArray.push(8);
				}
				else if(fatigueLvl2) {
					faceArray.push(7);
				}
				else if(fatigueLvl1) {
					faceArray.push(6);
				}
				else {
					faceArray.push(5);
				}
			}
		}
		
	}
	
	this.resetTachieHoppe();
	this.resetTachieSweat();
	this.resetTachieFrontF();
	this.resetTachieFrontG();
	this.resetTachieFrontH();
	this.resetTachieFrontI();
	this.resetTachieBackB();
	this.resetTachieBackC();
	this.resetTachieBackD();
	
	//Set face
	let faceId = faceArray[Math.randomInt(faceArray.length)];
	let headType = '';
	let bodyType = '1';
	let eyebrowsArray = [];
	let eyesArray = [];
	let mouthArray = [];
	let boobsTypeArray = [];
	let leftArmArray = [];
	let rightArmArray = [];
	let tachieHoppeName = '';
	let tachieSweatName = '';
	let displayTachieHoppe = false;
	let displayTachieSweat = false;

	
	switch(faceId) {
		case 1:
			if(justDefeated) headType = 'down';
			else if(Math.random() < 0.5) headType = 'down';
			else headType = 'normal';
			boobsTypeArray.push('reg');
			if(headType === 'normal') {
				eyebrowsArray.push('kiri3');
				eyebrowsArray.push('nico1');
				eyebrowsArray.push('nico2');
			}
			else {
				eyebrowsArray.push('kiri3');
				eyebrowsArray.push('nico1');
				eyebrowsArray.push('nico2');
			}
			if(headType === 'normal') {
				eyesArray.push('yoko1');
				eyesArray.push('yoko2');
				eyesArray.push('mae1');
				eyesArray.push('mae2');
			}
			else {
				eyesArray.push('yoko1');
				eyesArray.push('yoko2');
				eyesArray.push('mae1');
				eyesArray.push('mae2');
			}
			if(justDefeated) {
				mouthArray.push('ku2');
			}
			else if(headType === 'normal') {
				mouthArray.push('ho1');
				mouthArray.push('mu1');
				mouthArray.push('mu3');
			}
			else {
				mouthArray.push('mu1');
				mouthArray.push('mu2');
				mouthArray.push('mu3');
			}
			if(!isClothingAtStageSeeOneBoob) {
				rightArmArray.push('1');
			}
			else {
				rightArmArray.push('boob1');
			}
			if(!isClothingAtStageSeeBothBoobs) {
				leftArmArray.push('1');
			}
			else {
				leftArmArray.push('boob1');
			}
			
			if(justDefeated) {
				tachieSweatName = '3';
				displayTachieSweat = true;
			}
			if(isAroused) {
				tachieHoppeName += '1';
				displayTachieHoppe = true;
			}
		break;
		
		case 2:
			if(justDefeated) headType = 'down';
			else if(Math.random() < 0.5) headType = 'down';
			else headType = 'normal';
			boobsTypeArray.push('reg');
			if(headType === 'normal') {
				eyebrowsArray.push('kiri2');
				eyebrowsArray.push('kiri3');
			}
			else {
				eyebrowsArray.push('kiri3');
				eyebrowsArray.push('kiri2');
			}
			if(headType === 'normal') {
				eyesArray.push('yoko2');
				eyesArray.push('mae2');
			}
			else {
				eyesArray.push('yoko1');
				eyesArray.push('mae1');
			}
			if(justDefeated) {
				mouthArray.push('ku2');
			}
			else if(headType === 'normal') {
				mouthArray.push('ho2');
				mouthArray.push('mu1');
				mouthArray.push('mu2');
			}
			else {
				mouthArray.push('mu1');
				mouthArray.push('mu2');
			}
			if(!isClothingAtStageSeeOneBoob) {
				rightArmArray.push('1');
			}
			else {
				rightArmArray.push('boob1');
			}
			if(!isClothingAtStageSeeBothBoobs) {
				leftArmArray.push('1');
			}
			else {
				leftArmArray.push('boob1');
			}
			if(justDefeated) {
				tachieSweatName = '3';
				displayTachieSweat = true;
			}
			if(isAroused) {
				tachieHoppeName += '1';
				displayTachieHoppe = true;
			}
		break;
		
		case 3:
			headType = 'down';
			boobsTypeArray.push('reg');
			eyebrowsArray.push('koma1');
			eyebrowsArray.push('koma2');
			eyesArray.push('yoko2');
			eyesArray.push('yoko3');
			eyesArray.push('mae2');
			mouthArray.push('mu1');
			mouthArray.push('mu2');
			mouthArray.push('ku1');
			mouthArray.push('ku2');
			rightArmArray.push('3');
			if(!isClothingAtStageSeeBothBoobs) {
				leftArmArray.push('1');
			}
			else {
				leftArmArray.push('boob1');
			}
			if(justDefeated) {
				tachieSweatName = '3';
				displayTachieSweat = true;
			}
			else {
				tachieSweatName = '2';
				displayTachieSweat = true;
			}
			if(isAroused) {
				tachieHoppeName += '1';
				displayTachieHoppe = true;
			}
		break;
		
		case 4:
			headType = 'down';
			boobsTypeArray.push('reg');
			eyebrowsArray.push('koma1');
			eyebrowsArray.push('koma2');
			eyesArray.push('yoko3');
			eyesArray.push('yoko4');
			eyesArray.push('mae2');
			eyesArray.push('urumae2');
			eyesArray.push('toji1');
			eyesArray.push('jito1');
			mouthArray.push('mu1');
			mouthArray.push('wa1');
			mouthArray.push('wa2');
			mouthArray.push('wa3');
			mouthArray.push('ku1');
			mouthArray.push('ku2');
			rightArmArray.push('3');
			leftArmArray.push('2');
			tachieSweatName = '3';
			displayTachieSweat = true;
			if(isAroused) {
				tachieHoppeName += '1';
				displayTachieHoppe = true;
			}
		break;
		
		case 5:
			if(Math.random() < 0.5) headType = 'down';
			else headType = 'normal';
			boobsTypeArray.push('reg');
			if(headType === 'normal') {
				eyebrowsArray.push('kiri1');
				eyebrowsArray.push('kiri2');
			}
			else {
				eyebrowsArray.push('kiri1');
				eyebrowsArray.push('kiri2');
			}
			if(headType === 'normal') {
				eyesArray.push('yoko1');
				eyesArray.push('yoko2');
				eyesArray.push('oko1');
			}
			else {
				eyesArray.push('yoko1');
				eyesArray.push('yoko2');
			}
			if(headType === 'normal') {
				mouthArray.push('ho1');
				mouthArray.push('ho2');
				mouthArray.push('mu1');
				mouthArray.push('mu3');
			}
			else {
				mouthArray.push('mu1');
				mouthArray.push('mu2');
				mouthArray.push('mu3');
			}
			leftArmArray.push('3');
			if(hasHalberd) {
				rightArmArray.push('weapon_1');
				this.setTachieFrontH('weapon_1');
			}
			else {
				rightArmArray.push('toyC_grip_1');
			}
			if(isAroused) {
				tachieHoppeName += '1';
				displayTachieHoppe = true;
			}
		break;
		
		case 6:
			headType = 'normal';
			boobsTypeArray.push('reg');
			eyebrowsArray.push('kiri1');
			eyebrowsArray.push('kiri2');
			eyebrowsArray.push('oko2');
			eyesArray.push('yoko1');
			eyesArray.push('yoko2');
			eyesArray.push('oko1');
			mouthArray.push('ho1');
			mouthArray.push('ho2');
			mouthArray.push('mu1');
			mouthArray.push('mu3');
			leftArmArray.push('3');
			if(hasHalberd) {
				rightArmArray.push('weapon_1');
				this.setTachieFrontH('weapon_1');
			}
			else {
				rightArmArray.push('toyC_grip_1');
			}
			tachieSweatName = '1';
			displayTachieSweat = true;
			if(isAroused) {
				tachieHoppeName += '1';
				displayTachieHoppe = true;
			}
		break;
		
		case 7:
			headType = 'normal';
			boobsTypeArray.push('reg');
			eyebrowsArray.push('kiri1');
			eyebrowsArray.push('oko1');
			eyebrowsArray.push('oko2');
			eyesArray.push('yoko2');
			eyesArray.push('yoko3');
			eyesArray.push('oko1');
			mouthArray.push('ku1');
			mouthArray.push('ku2');
			mouthArray.push('mu1');
			mouthArray.push('mu2');
			if(hasHalberd) {
				rightArmArray.push('weapon_1');
				leftArmArray.push('3');
				this.setTachieFrontH('weapon_1');
			}
			else {
				rightArmArray.push('toyC_grip_1');
				leftArmArray.push('defend_1');
			}
			tachieSweatName = '2';
			displayTachieSweat = true;
			if(isAroused) {
				tachieHoppeName += '1';
				displayTachieHoppe = true;
			}
		break;
		
		case 8:
			headType = 'down';
			boobsTypeArray.push('reg');
			eyebrowsArray.push('koma1');
			eyebrowsArray.push('koma2');
			eyebrowsArray.push('oko1');
			eyebrowsArray.push('oko2');
			eyesArray.push('yoko3');
			eyesArray.push('yoko4');
			eyesArray.push('jito1');
			mouthArray.push('ku1');
			mouthArray.push('ku2');
			mouthArray.push('mu1');
			mouthArray.push('wa1');
			mouthArray.push('wa2');
			mouthArray.push('wa3');
			leftArmArray.push('defend_1');
			if(hasHalberd) {
				rightArmArray.push('weapon_tired_1');
				this.setTachieFrontH('weapon_tired_1');
			}
			else {
				rightArmArray.push('3');
			}
			tachieSweatName = '3';
			displayTachieSweat = true;
			if(isAroused) {
				tachieHoppeName += '1';
				displayTachieHoppe = true;
			}
		break;
		
		case 9:
			if(justDefeated) headType = 'down';
			else if(Math.random() < 0.5) headType = 'down';
			else headType = 'normal';
			boobsTypeArray.push('reg');
			if(headType === 'normal') {
				eyebrowsArray.push('kiri3');
				eyebrowsArray.push('nico1');
				eyebrowsArray.push('nico2');
			}
			else {
				eyebrowsArray.push('kiri3');
				eyebrowsArray.push('nico1');
				eyebrowsArray.push('nico2');
			}
			if(headType === 'normal') {
				eyesArray.push('yoko1');
				eyesArray.push('yoko2');
				eyesArray.push('mae1');
				eyesArray.push('mae2');
			}
			else {
				eyesArray.push('yoko1');
				eyesArray.push('yoko2');
				eyesArray.push('mae1');
				eyesArray.push('mae2');
			}
			if(justDefeated) {
				mouthArray.push('ku1');
			}
			else if(headType === 'normal') {
				mouthArray.push('ho2');
				mouthArray.push('nico1');
				mouthArray.push('nico2');
				mouthArray.push('mu3');
			}
			else {
				mouthArray.push('nico1');
				mouthArray.push('nico2');
				mouthArray.push('mu2');
				mouthArray.push('mu3');
			}
			rightArmArray.push('1');
			
			if(Math.random() < 0.8) {
				leftArmArray.push('1');
			}
			else {
				leftArmArray.push('hair_1');
			}
			if(justDefeated) {
				tachieSweatName = '2';
				displayTachieSweat = true;
			}
			if(isAroused) {
				tachieHoppeName += '1';
				displayTachieHoppe = true;
			}
		break;
		
		case 10:
			if(justDefeated) headType = 'down';
			else if(Math.random() < 0.5) headType = 'down';
			else headType = 'normal';
			boobsTypeArray.push('reg');
			if(headType === 'normal') {
				eyebrowsArray.push('kiri3');
				eyebrowsArray.push('kiri2');
			}
			else {
				eyebrowsArray.push('kiri3');
				eyebrowsArray.push('kiri2');
			}
			if(headType === 'normal') {
				eyesArray.push('yoko2');
				eyesArray.push('mae2');
			}
			else {
				eyesArray.push('yoko2');
				eyesArray.push('mae2');
			}
			if(justDefeated) {
				mouthArray.push('ku1');
			}
			else if(headType === 'normal') {
				mouthArray.push('ho2');
				mouthArray.push('nico1');
				mouthArray.push('mu3');
			}
			else {
				mouthArray.push('nico1');
				mouthArray.push('mu2');
				mouthArray.push('mu3');
			}
			rightArmArray.push('1');
			
			if(Math.random() < 0.9) {
				leftArmArray.push('1');
			}
			else {
				leftArmArray.push('rest_boobs_1');
			}
			if(justDefeated) {
				tachieSweatName = '2';
				displayTachieSweat = true;
			}
			else {
				tachieSweatName = '1';
				displayTachieSweat = true;
			}
			if(isAroused) {
				tachieHoppeName += '1';
				displayTachieHoppe = true;
			}
		break;
		
		case 11:
			headType = 'down';
			boobsTypeArray.push('reg');
			eyebrowsArray.push('koma1');
			eyebrowsArray.push('koma2');
			eyebrowsArray.push('kiri3');
			eyebrowsArray.push('kiri2');
			eyesArray.push('yoko2');
			eyesArray.push('yoko3');
			eyesArray.push('mae2');		
			mouthArray.push('ku1');
			mouthArray.push('mu1');
			mouthArray.push('mu2');
			mouthArray.push('mu3');			
			rightArmArray.push('3');
			leftArmArray.push('4');		
			tachieSweatName = '2';
			displayTachieSweat = true;			
			if(isAroused) {
				tachieHoppeName += '1';
				displayTachieHoppe = true;
			}
		break;
		
		case 12:
			if(Math.random() < 0.5) headType = 'down';
			else headType = 'normal';
			boobsTypeArray.push('reg');
			if(!hasHalberd) boobsTypeArray.push('hold');
			if(headType === 'normal') {
				eyebrowsArray.push('kiri3');
				eyebrowsArray.push('kiri2');
				eyebrowsArray.push('kiri1');
				if(isSadist) {
					eyebrowsArray.push('sado1');
					eyebrowsArray.push('sado2');
				}
				else if(isMasochist && isAroused) {
					eyebrowsArray.push('maso1');
				}
			}
			else {
				eyebrowsArray.push('kiri3');
				eyebrowsArray.push('kiri2');
				eyebrowsArray.push('kiri1');
				if(isSadist) {
					eyebrowsArray.push('sado1');
					eyebrowsArray.push('sado2');
				}
				else if(isMasochist && isAroused) {
					eyebrowsArray.push('maso1');
				}
			}
			if(headType === 'normal') {
				eyesArray.push('yoko2');
				eyesArray.push('yoko1');
				if(isSadist) {
					eyesArray.push('sadoyoko1');
					eyesArray.push('sadoyoko2');
				}
				else if(isMasochist && isAroused) {
					eyesArray.push('masoyoko1');
					eyesArray.push('masoyoko2');
				}
			}
			else {
				eyesArray.push('yoko2');
				eyesArray.push('yoko1');
				if(isSadist) {
					eyesArray.push('sadoyoko1');
					eyesArray.push('sadoyoko2');
				}
				else if(isMasochist && isAroused) {
					eyesArray.push('masoyoko1');
					eyesArray.push('masoyoko2');
				}
			}
			if(headType === 'normal') {
				mouthArray.push('nico1');
				mouthArray.push('nico2');
				mouthArray.push('nico3');
				mouthArray.push('wa1');
				mouthArray.push('wara1');
				mouthArray.push('pero1');
			}
			else {
				mouthArray.push('nico1');
				mouthArray.push('nico2');
				mouthArray.push('nico3');
				mouthArray.push('wara1');
				mouthArray.push('wara2');
			}
			rightArmArray.push('toyC_grip_1');
			leftArmArray.push('1');
			leftArmArray.push('hair_1');
			if(hasHalberd) this.setTachieBackC('weapon_1');
			if(canSeeSemenOnFace) leftArmArray.push('face_1');
			if(canSeeSemenOnBoobs) leftArmArray.push('rest_boobs_1');
			if(canSeeAnalCreampie) leftArmArray.push('ketsu_1');
			if(isAlmostNaked) leftArmArray.push('boob1');
			if(isAroused) {
				tachieHoppeName += '1';
				displayTachieHoppe = true;
			}
			if(isFrustrated) this.setTachieFrontF('breath_1');
			
		break;
		
		case 13:
			if(Math.random() < 0.5) headType = 'down';
			else headType = 'normal';
			boobsTypeArray.push('reg');
			if(headType === 'normal') {
				eyebrowsArray.push('kiri3');
				eyebrowsArray.push('kiri2');
				eyebrowsArray.push('kiri1');
				if(isSadist) {
					eyebrowsArray.push('sado1');
					eyebrowsArray.push('sado2');
				}
				else if(isMasochist && isAroused) {
					eyebrowsArray.push('maso1');
				}
			}
			else {
				eyebrowsArray.push('kiri3');
				eyebrowsArray.push('kiri2');
				eyebrowsArray.push('kiri1');
				if(isSadist) {
					eyebrowsArray.push('sado1');
					eyebrowsArray.push('sado2');
				}
				else if(isMasochist && isAroused) {
					eyebrowsArray.push('maso1');
				}
			}
			if(headType === 'normal') {
				eyesArray.push('yoko2');
				eyesArray.push('yoko1');
				if(isSadist) {
					eyesArray.push('sadoyoko1');
					eyesArray.push('sadoyoko2');
				}
				else if(isMasochist && isAroused) {
					eyesArray.push('masoyoko1');
					eyesArray.push('masoyoko2');
				}
			}
			else {
				eyesArray.push('yoko2');
				eyesArray.push('yoko1');
				if(isSadist) {
					eyesArray.push('sadoyoko1');
					eyesArray.push('sadoyoko2');
				}
				else if(isMasochist && isAroused) {
					eyesArray.push('masoyoko1');
					eyesArray.push('masoyoko2');
				}
			}
			if(headType === 'normal') {
				mouthArray.push('nico1');
				mouthArray.push('nico2');
				mouthArray.push('nico3');
			}
			else {
				mouthArray.push('nico1');
				mouthArray.push('nico2');
				mouthArray.push('nico3');
			}
			rightArmArray.push('toyC_grip_1');
			leftArmArray.push('1');
			leftArmArray.push('hair_1');
			if(hasHalberd) this.setTachieBackC('weapon_1');
			if(canSeeSemenOnFace) leftArmArray.push('face_1');
			if(canSeeSemenOnBoobs) leftArmArray.push('defend_1');
			if(canSeeAnalCreampie) leftArmArray.push('ketsu_1');
			if(isAlmostNaked) leftArmArray.push('boob1');
			tachieSweatName = '1';
			displayTachieSweat = true;	
			if(isAroused) {
				tachieHoppeName += '1';
				displayTachieHoppe = true;
			}
			if(isFrustrated) this.setTachieFrontF('breath_1');
			
		break;
		
		case 14:
			headType = 'normal';
			boobsTypeArray.push('reg');		
			eyebrowsArray.push('oko2');
			eyebrowsArray.push('kiri2');
			eyebrowsArray.push('kiri1');	
			eyesArray.push('yoko2');
			eyesArray.push('yoko3');
			if(isSadist) {
				eyesArray.push('sadoyoko1');
				eyesArray.push('sadoyoko2');
			}	
			mouthArray.push('mu3');
			mouthArray.push('ho1');
			mouthArray.push('ho2');
			mouthArray.push('wa3');
			mouthArray.push('ku1');
			if(hasHalberd) {
				rightArmArray.push('weapon_1');
				leftArmArray.push('3');
				this.setTachieFrontH('weapon_1');
			}
			else {
				rightArmArray.push('toyC_grip_1');
				if(isClothingAtStageSeeBothBoobs) rightArmArray.push('boob1');
				leftArmArray.push('defend_1');
			}
			tachieSweatName = '2';
			displayTachieSweat = true;	
			if(isAroused) {
				tachieHoppeName += '1';
				displayTachieHoppe = true;
			}
			if(isFrustrated) this.setTachieFrontF('breath_1');
			
		break;
		
		case 15:
			if(Math.random() < 0.5) headType = 'down';
			else headType = 'normal';
			boobsTypeArray.push('reg');
			if(headType === 'normal') {
				eyebrowsArray.push('nico3');
				eyebrowsArray.push('nico1');
				eyebrowsArray.push('nico2');
			}
			else {
				eyebrowsArray.push('nico3');
				eyebrowsArray.push('nico1');
				eyebrowsArray.push('nico2');
			}
			if(headType === 'normal') {
				eyesArray.push('yoko1');
				eyesArray.push('yoko2');
				eyesArray.push('mae1');
				eyesArray.push('mae2');
			}
			else {
				eyesArray.push('yoko1');
				eyesArray.push('yoko2');
				eyesArray.push('mae1');
				eyesArray.push('mae2');
			}
			if(headType === 'normal') {
				mouthArray.push('wa1');
				mouthArray.push('nico1');
				mouthArray.push('nico2');
				mouthArray.push('nico3');
			}
			else {
				mouthArray.push('nico1');
				mouthArray.push('nico2');
				mouthArray.push('nico3');
			}
			if(Math.random() < 0.8) {
				rightArmArray.push('1');
			}
			else if(Math.random() < 0.5) {
				rightArmArray.push('2');
			}
			else {
				rightArmArray.push('6');
			}
			if(Math.random() < 0.8) {
				leftArmArray.push('1');
			}
			else if(Math.random() < 0.5) {
				leftArmArray.push('hair_1');
			}
			else {
				leftArmArray.push('rest_boobs_1');
			}
			if(isAroused) {
				tachieHoppeName += '1';
				displayTachieHoppe = true;
			}
		break;
		
		case 16:
			if(Math.random() < 0.5) headType = 'down';
			else headType = 'normal';
			boobsTypeArray.push('reg');
			if(headType === 'normal') {
				eyebrowsArray.push('nico1');
				eyebrowsArray.push('nico2');
			}
			else {
				eyebrowsArray.push('nico1');
				eyebrowsArray.push('nico2');
			}
			if(headType === 'normal') {
				eyesArray.push('yoko2');
				eyesArray.push('mae2');
			}
			else {
				eyesArray.push('yoko2');
				eyesArray.push('mae2');
			}
			if(headType === 'normal') {
				mouthArray.push('wa1');
				mouthArray.push('mu1');
				mouthArray.push('nico1');
				mouthArray.push('nico2');
				mouthArray.push('nico3');
			}
			else {
				mouthArray.push('nico1');
				mouthArray.push('nico2');
				mouthArray.push('nico3');
				mouthArray.push('mu3');
			}
			if(Math.random() < 0.8) {
				rightArmArray.push('1');
			}
			else if(Math.random() < 0.5) {
				rightArmArray.push('rest_boobs_1');
			}
			else {
				rightArmArray.push('6');
			}
			if(Math.random() < 0.8) {
				leftArmArray.push('1');
			}
			else if(Math.random() < 0.5) {
				leftArmArray.push('hair_1');
			}
			else {
				leftArmArray.push('rest_boobs_1');
			}
			tachieSweatName = '1';
			displayTachieSweat = true;
			if(isAroused) {
				tachieHoppeName += '1';
				displayTachieHoppe = true;
			}
		break;
		
		case 17:
			headType = 'down';
			boobsTypeArray.push('reg');			
			eyebrowsArray.push('koma2');
			eyebrowsArray.push('kiri3');
			eyebrowsArray.push('kiri2');			
			eyesArray.push('yoko2');
			eyesArray.push('yoko3');
			eyesArray.push('mae2');			
			mouthArray.push('ku1');
			mouthArray.push('wa1');
			mouthArray.push('mu2');
			mouthArray.push('mu3');
			
			if(Math.random() < 0.9) {
				rightArmArray.push('1');
			}
			else {
				rightArmArray.push('6');
			}
			if(Math.random() < 0.8) {
				leftArmArray.push('1');
			}
			else {
				leftArmArray.push('rest_boobs_1');
			}
			tachieSweatName = '2';
			displayTachieSweat = true;
			if(isAroused) {
				tachieHoppeName += '1';
				displayTachieHoppe = true;
			}
		break;
		
		case 18:
			if(Math.random() < 0.5) headType = 'down';
			else headType = 'normal';
			boobsTypeArray.push('reg');
			if(headType === 'normal') {
				eyebrowsArray.push('kiri3');
				eyebrowsArray.push('kiri2');
				eyebrowsArray.push('nico1');
				eyebrowsArray.push('nico2');
				if(isSadist) {
					eyebrowsArray.push('sado1');
					eyebrowsArray.push('sado2');
				}
				else if(isMasochist && isAroused) {
					eyebrowsArray.push('maso1');
				}
			}
			else {
				eyebrowsArray.push('kiri3');
				eyebrowsArray.push('kiri2');
				eyebrowsArray.push('nico1');
				eyebrowsArray.push('nico2');
				if(isSadist) {
					eyebrowsArray.push('sado1');
					eyebrowsArray.push('sado2');
				}
				else if(isMasochist && isAroused) {
					eyebrowsArray.push('maso1');
				}
			}
			if(headType === 'normal') {
				eyesArray.push('yoko2');
				eyesArray.push('yoko3');
				eyesArray.push('yoko4');
				eyesArray.push('heartyoko1');
				eyesArray.push('heartyoko2');
				eyesArray.push('jito1');
				eyesArray.push('toji2');
				if(isSadist) {
					eyesArray.push('sadoyoko1');
					eyesArray.push('sadoyoko2');
				}
				else if(isMasochist && isAroused) {
					eyesArray.push('masoyoko1');
					eyesArray.push('masoyoko2');
				}
			}
			else {
				eyesArray.push('yoko2');
				eyesArray.push('yoko3');
				eyesArray.push('yoko4');
				eyesArray.push('heartyoko1');
				eyesArray.push('heartyoko2');
				eyesArray.push('jito1');
				if(isSadist) {
					eyesArray.push('sadoyoko1');
					eyesArray.push('sadoyoko2');
				}
				else if(isMasochist && isAroused) {
					eyesArray.push('masoyoko1');
					eyesArray.push('masoyoko2');
				}
			}
			if(headType === 'normal') {
				mouthArray.push('nico1');
				mouthArray.push('nico2');
				mouthArray.push('nico3');
				mouthArray.push('nico4');
				if(isSadist) mouthArray.push('nico5');
				mouthArray.push('wara1');
				mouthArray.push('wara2');
				mouthArray.push('pero1');
				mouthArray.push('pero2');
				mouthArray.push('pero4');
				mouthArray.push('ahe3');
			}
			else {
				mouthArray.push('nico1');
				mouthArray.push('nico2');
				mouthArray.push('nico3');
				mouthArray.push('nico4');
				if(isSadist) mouthArray.push('nico5');
				mouthArray.push('wara1');
				mouthArray.push('wara2');
				mouthArray.push('pero1');
				mouthArray.push('pero2');
				mouthArray.push('pero3');
				mouthArray.push('ahe3');
			}
			if(hasHalberd) {
				if(isMasochist && isFrustrated) {
					rightArmArray.push('weapon_maso_1');
					this.setTachieFrontH('weapon_maso_1');
				}
				else if(isSadist && isFrustrated) {
					rightArmArray.push('weapon_sado_1');
					this.setTachieBackB('weapon_sado_1');
				}
				else if(Math.random() < 0.5) {
					rightArmArray.push('toyC_grip_1');
					this.setTachieBackC('weapon_1');
				}
				else {
					rightArmArray.push('ketsu_1');
					this.setTachieBackD('weapon_ketsu_1');
				}
			}
			else {
				rightArmArray.push('6');
				if(hasHighHandjobLevelPassive) rightArmArray.push('7');
				if(hasHighBlowjobLevelPassive) rightArmArray.push('8');
				rightArmArray.push('rest_boobs_1');
				rightArmArray.push('up1');
				if(isClothingAtStageSeeOneBoob && isFrustrated) rightArmArray.push('kuri_1');
				if(isClothingAtStageSeeBothBoobs && isFrustrated) rightArmArray.push('kupa_1');
				if(wearingPussyToy && isFrustrated) rightArmArray.push('toyP_grip_1');
			}
			
			
			leftArmArray.push('1');
			leftArmArray.push('4');
			leftArmArray.push('ketsu_1');
			leftArmArray.push('hair_1');
			leftArmArray.push('rest_boobs_1');
			if(canSeeSemenOnFace) leftArmArray.push('peace_1');
			if(canSeeSemenOnBoobs) leftArmArray.push('up1');
			if(wearingAnalToy && isFrustrated) leftArmArray.push('toyA_grip_1');
			if(isAlmostNaked && isAroused) leftArmArray.push('boob2');
			
			if(isAroused) {
				tachieHoppeName += '1';
				displayTachieHoppe = true;
			}
			if(isFrustrated) bodyType = 'spread_1';
			
		break;
		
		case 19:
			if(Math.random() < 0.5) headType = 'down';
			else headType = 'normal';
			boobsTypeArray.push('reg');
			if(!hasHalberd) boobsTypeArray.push('hold');
			if(headType === 'normal') {
				eyebrowsArray.push('kiri3');
				eyebrowsArray.push('kiri2');
				eyebrowsArray.push('nico1');
				eyebrowsArray.push('nico2');
				if(isSadist) {
					eyebrowsArray.push('sado1');
					eyebrowsArray.push('sado2');
				}
				else if(isMasochist && isAroused) {
					eyebrowsArray.push('maso1');
				}
			}
			else {
				eyebrowsArray.push('kiri3');
				eyebrowsArray.push('kiri2');
				eyebrowsArray.push('nico1');
				eyebrowsArray.push('nico2');
				if(isSadist) {
					eyebrowsArray.push('sado1');
					eyebrowsArray.push('sado2');
				}
				else if(isMasochist && isAroused) {
					eyebrowsArray.push('maso1');
				}
			}
			if(headType === 'normal') {
				eyesArray.push('yoko2');
				eyesArray.push('uruyoko2');
				eyesArray.push('heartyoko2');
				eyesArray.push('jito1');
				if(isSadist) {
					eyesArray.push('sadoyoko1');
					eyesArray.push('sadoyoko2');
				}
				else if(isMasochist && isAroused) {
					eyesArray.push('masoyoko1');
					eyesArray.push('masoyoko2');
				}
			}
			else {
				eyesArray.push('yoko2');
				eyesArray.push('uruyoko2');
				eyesArray.push('heartyoko2');
				eyesArray.push('jito1');
				if(isSadist) {
					eyesArray.push('sadoyoko1');
					eyesArray.push('sadoyoko2');
				}
				else if(isMasochist && isAroused) {
					eyesArray.push('masoyoko1');
					eyesArray.push('masoyoko2');
				}
			}
			if(headType === 'normal') {
				mouthArray.push('nico1');
				mouthArray.push('nico2');
				mouthArray.push('nico3');
				mouthArray.push('nico4');
				mouthArray.push('wara1');
				mouthArray.push('wa1');
				mouthArray.push('pero1');
				mouthArray.push('pero2');
				mouthArray.push('ahe3');
			}
			else {
				mouthArray.push('nico1');
				mouthArray.push('nico2');
				mouthArray.push('nico3');
				mouthArray.push('wara1');
				mouthArray.push('pero1');
				mouthArray.push('pero2');
				mouthArray.push('ahe3');
			}
			if(hasHalberd) {
				if(isSadist && isFrustrated) {
					rightArmArray.push('weapon_sado_1');
					this.setTachieBackB('weapon_sado_1');
				}
				else if(Math.random() < 0.5) {
					rightArmArray.push('ketsu_1');
					this.setTachieBackD('weapon_ketsu_1');
				}
				else {
					rightArmArray.push('toyC_grip_1');
					this.setTachieBackC('weapon_1');
				}
			}
			else {
				if(hasHighHandjobLevelPassive) rightArmArray.push('7');
				if(hasHighBlowjobLevelPassive) rightArmArray.push('8');
				rightArmArray.push('rest_boobs_1');
				rightArmArray.push('up1');
				if(isClothingAtStageSeeOneBoob && isFrustrated) rightArmArray.push('kuri_1');
				if(isClothingAtStageSeeBothBoobs && isFrustrated) rightArmArray.push('kupa_1');
				if(wearingPussyToy && isFrustrated) rightArmArray.push('toyP_grip_1');
				if(wearingClitToy && isFrustrated) rightArmArray.push('toyC_grip_1');
			}
			
			
			leftArmArray.push('4');
			leftArmArray.push('ketsu_1');
			leftArmArray.push('hair_1');
			leftArmArray.push('rest_boobs_1');
			if(canSeeSemenOnFace) leftArmArray.push('peace_1');
			if(canSeeSemenOnBoobs) leftArmArray.push('up1');
			if(wearingAnalToy && isFrustrated) leftArmArray.push('toyA_grip_1');
			if(isAlmostNaked) leftArmArray.push('boob1');
			if(isAlmostNaked && isAroused) leftArmArray.push('boob2');
			if(isAroused) {
				tachieHoppeName += '1';
				displayTachieHoppe = true;
			}
			if(isFrustrated) bodyType = 'spread_1';
			
		break;
		
		case 20:
			if(Math.random() < 0.5) headType = 'down';
			else headType = 'normal';
			boobsTypeArray.push('reg');
			if(headType === 'normal') {
				eyebrowsArray.push('kiri3');
				eyebrowsArray.push('kiri2');
				eyebrowsArray.push('koma2');
				if(isSadist) {
					eyebrowsArray.push('sado1');
					eyebrowsArray.push('sado2');
				}
				else if(isMasochist && isAroused) {
					eyebrowsArray.push('maso1');
				}
			}
			else {
				eyebrowsArray.push('kiri3');
				eyebrowsArray.push('kiri2');
				eyebrowsArray.push('koma2');
				if(isSadist) {
					eyebrowsArray.push('sado1');
					eyebrowsArray.push('sado2');
				}
				else if(isMasochist && isAroused) {
					eyebrowsArray.push('maso1');
				}
			}
			if(headType === 'normal') {
				eyesArray.push('yoko3');
				eyesArray.push('uruyoko1');
				eyesArray.push('uruyoko2');
				eyesArray.push('jito1');
				if(isSadist) {
					eyesArray.push('sadoyoko1');
					eyesArray.push('sadoyoko2');
				}
				else if(isMasochist && isAroused) {
					eyesArray.push('masoyoko1');
					eyesArray.push('masoyoko2');
				}
			}
			else {
				eyesArray.push('yoko3');
				eyesArray.push('uruyoko1');
				eyesArray.push('uruyoko2');
				eyesArray.push('jito1');
				if(isSadist) {
					eyesArray.push('sadoyoko1');
					eyesArray.push('sadoyoko2');
				}
				else if(isMasochist && isAroused) {
					eyesArray.push('masoyoko1');
					eyesArray.push('masoyoko2');
				}
			}
			if(headType === 'normal') {
				mouthArray.push('nico1');
				mouthArray.push('nico3');
				mouthArray.push('mu3');
				mouthArray.push('wa1');
				mouthArray.push('wara1');
				mouthArray.push('pero2');
				mouthArray.push('ahe1');
				mouthArray.push('ahe2');
			}
			else {
				mouthArray.push('nico1');
				mouthArray.push('nico3');
				mouthArray.push('wara1');
				mouthArray.push('pero3');
				mouthArray.push('ahe1');
				mouthArray.push('ahe2');
			}
			if(hasHalberd) {
				if(isSadist && isFrustrated) {
					rightArmArray.push('weapon_sado_1');
					this.setTachieBackB('weapon_sado_1');
				}
				else if(hasHighHandjobLevelPassive) {
					rightArmArray.push('7');
					this.setTachieFrontH('weapon_1');
				}
				else {
					rightArmArray.push('weapon_1');
					this.setTachieFrontH('weapon_1');
				}
			}
			else {
				rightArmArray.push('toyC_grip_1');
				if(hasHighBlowjobLevelPassive) rightArmArray.push('8');
				rightArmArray.push('6');
				rightArmArray.push('ketsu_1');
				if(isClothingAtStageSeeOneBoob && isFrustrated) rightArmArray.push('kuri_1');
				if(isClothingAtStageSeeBothBoobs && isFrustrated) rightArmArray.push('kupa_1');
				if(wearingPussyToy && isFrustrated) rightArmArray.push('toyP_grip_1');
			}
			
			if(hasHalberd) {
				leftArmArray.push('3');
			}
			else {
				leftArmArray.push('1');
				leftArmArray.push('3');
				leftArmArray.push('hair_1');
				leftArmArray.push('rest_boobs_1');
				if(canSeeSemenOnBoobs) leftArmArray.push('up1');
				if(canSeeSemenOnFace) leftArmArray.push('peace_1');
				if(isAlmostNaked && isAroused) leftArmArray.push('boob2');
				if(wearingAnalToy && isFrustrated) leftArmArray.push('toyA_grip_1');
			}
			tachieSweatName = '1';
			displayTachieSweat = true;
			if(isAroused) {
				tachieHoppeName += '1';
				displayTachieHoppe = true;
			}
			if(isFrustrated) bodyType = 'spread_1';
			
		break;
		
		case 21:
			headType = 'down';
			boobsTypeArray.push('reg');
			if(!hasHalberd) boobsTypeArray.push('hold');
			eyebrowsArray.push('koma1');
			eyebrowsArray.push('koma2');
			eyesArray.push('yoko3');
			eyesArray.push('yoko4');
			eyesArray.push('jito1');
			mouthArray.push('nico2');
			mouthArray.push('nico3');
			mouthArray.push('nico4');
			mouthArray.push('ho1');
			mouthArray.push('mu3');
			mouthArray.push('wara1');
			mouthArray.push('pero2');
			mouthArray.push('pero4');
			mouthArray.push('ahe3');
			
			if(hasHalberd) {
				rightArmArray.push('weapon_maso_1');
				this.setTachieFrontH('weapon_maso_1');
			}
			else {
				rightArmArray.push('3');
				rightArmArray.push('hip_1');
				rightArmArray.push('toyC_grip_1');
				if(isClothingAtStageSeeBothBoobs && isFrustrated) rightArmArray.push('kuri_1');
			}
			leftArmArray.push('1');
			leftArmArray.push('3');
			leftArmArray.push('4');
			leftArmArray.push('hair_1');
			leftArmArray.push('rest_boobs_1');
			if(isAlmostNaked && isAroused) leftArmArray.push('boob2');
			tachieSweatName = '2';
			displayTachieSweat = true;
			if(isAroused) {
				tachieHoppeName += '1';
				displayTachieHoppe = true;
			}
			if(isFrustrated) bodyType = 'spread_1';
			
		break;
		
		case 22:
			headType = 'down';
			boobsTypeArray.push('reg');
			if(maplvl2) {
				eyebrowsArray.push('nico2');
				eyebrowsArray.push('nico3');
			}
			else {
				eyebrowsArray.push('kiri3');
			}
			eyesArray.push('yoko3');
			eyesArray.push('yoko4');

			mouthArray.push('ho1');
			mouthArray.push('mu1');
			mouthArray.push('mu3');
			mouthArray.push('wa3');
			
			rightArmArray.push('rest_boobs_1');		
			leftArmArray.push('1');
			
			if(maplvl3) {
				if(fatigueLvl3) {
					tachieSweatName = '2';
					displayTachieSweat = true;
				}
				else if(fatigueLvl2 || fatigueLvl1) {
					tachieSweatName = '1';
					displayTachieSweat = true;
				}
			}
			else {
				if(fatigueLvl3) {
					tachieSweatName = '3';
					displayTachieSweat = true;
				}
				else if(fatigueLvl2) {
					tachieSweatName = '2';
					displayTachieSweat = true;
				}
				else if(fatigueLvl1) {
					tachieSweatName = '1';
					displayTachieSweat = true;
				}
			}
			if(isAroused) {
				tachieHoppeName += '1';
				displayTachieHoppe = true;
			}
			
		break;
		case 23:
			headType = 'down';
			boobsTypeArray.push('hold');
			if(maplvl2 || maplvl3) {
				eyebrowsArray.push('nico2');
				eyebrowsArray.push('nico3');
			}
			else {
				eyebrowsArray.push('kiri1');
			}
			eyesArray.push('sitayoko2');
			if(maplvl3) {
				mouthArray.push('mu3');
				mouthArray.push('mu2');
				mouthArray.push('ho1');
			}
			else if(maplvl2) {
				mouthArray.push('mu3');
				mouthArray.push('ho1');
				mouthArray.push('mu2');
			}
			else {
				mouthArray.push('mu1');
				mouthArray.push('mu2');
				mouthArray.push('mu3');
			}
			if(maplvl3) {
				if(fatigueLvl3) {
					tachieSweatName = '2';
					displayTachieSweat = true;
				}
				else if(fatigueLvl2 || fatigueLvl1) {
					tachieSweatName = '1';
					displayTachieSweat = true;
				}
			}
			else {
				if(fatigueLvl3) {
					tachieSweatName = '3';
					displayTachieSweat = true;
				}
				else if(fatigueLvl2) {
					tachieSweatName = '2';
					displayTachieSweat = true;
				}
				else if(fatigueLvl1) {
					tachieSweatName = '1';
					displayTachieSweat = true;
				}
			}
			if(isAroused) {
				tachieHoppeName += '1';
				displayTachieHoppe = true;
			}
			
		break;
		
		case 24:
			headType = 'down';
			boobsTypeArray.push('reg');
			if(maplvl2) {
				eyebrowsArray.push('nico2');
				eyebrowsArray.push('nico3');
			}
			else {
				eyebrowsArray.push('kiri2');
				eyebrowsArray.push('kiri3');
			}
			eyesArray.push('sita2');
			if(maplvl3) {
				mouthArray.push('nico1');
			}
			else if(maplvl2) {
				mouthArray.push('mu2');
				mouthArray.push('mu3');
				mouthArray.push('ho1');
			}
			else {
				mouthArray.push('mu1');
				mouthArray.push('mu2');
				mouthArray.push('mu3');
			}
			rightArmArray.push('2');		
			leftArmArray.push('up1');
			if(maplvl3) {
				if(fatigueLvl3) {
					tachieSweatName = '2';
					displayTachieSweat = true;
				}
				else if(fatigueLvl2 || fatigueLvl1) {
					tachieSweatName = '1';
					displayTachieSweat = true;
				}
			}
			else {
				if(fatigueLvl3) {
					tachieSweatName = '3';
					displayTachieSweat = true;
				}
				else if(fatigueLvl2) {
					tachieSweatName = '2';
					displayTachieSweat = true;
				}
				else if(fatigueLvl1) {
					tachieSweatName = '1';
					displayTachieSweat = true;
				}
			}
			if(isAroused) {
				tachieHoppeName += '1';
				displayTachieHoppe = true;
			}
			
		break;
		
		case 25:
			this.setTachieFrontI('sleepy_1');
			headType = 'normal';
			boobsTypeArray.push('reg');
			eyebrowsArray.push('nico2');
			eyebrowsArray.push('nico3');
			eyesArray.push('yoko4');
			mouthArray.push('wa2');
			mouthArray.push('wa3');
			mouthArray.push('wa4');
			rightArmArray.push('5');		
			leftArmArray.push('3');
			leftArmArray.push('ketsu_1');
			leftArmArray.push('hair_1');
			if(maplvl3) {
				if(fatigueLvl3) {
					tachieSweatName = '1';
					displayTachieSweat = true;
				}
			}
			else {
				if(fatigueLvl3) {
					tachieSweatName = '2';
					displayTachieSweat = true;
				}
				else if(fatigueLvl2 || fatigueLvl1) {
					tachieSweatName = '1';
					displayTachieSweat = true;
				}
			}
			if(isAroused) {
				tachieHoppeName += '1';
				displayTachieHoppe = true;
			}
			
		break;
		
		case 26:
			this.setTachieFrontI('sleepy_1');
			headType = 'down';
			boobsTypeArray.push('reg');
			eyebrowsArray.push('nico3');
			eyesArray.push('toji1');
			mouthArray.push('wa1');
			mouthArray.push('mu1');
			mouthArray.push('mu2');
			mouthArray.push('mu3');
			mouthArray.push('nico1');
			mouthArray.push('wa1');
			rightArmArray.push('1');		
			rightArmArray.push('3');					
			rightArmArray.push('ketsu_1');		
			leftArmArray.push('2');
			leftArmArray.push('ketsu_1');
			if(isAroused) {
				tachieHoppeName += '1';
				displayTachieHoppe = true;
			}
		break;
		
		case 27:
			headType = 'down';
			boobsTypeArray.push('reg');
			eyebrowsArray.push('koma2');
			eyesArray.push('sita2');
			eyesArray.push('sitayoko2');
			mouthArray.push('wa1');
			mouthArray.push('ho1');
			mouthArray.push('mu2');
			mouthArray.push('mu3');
			rightArmArray.push('2');		
			rightArmArray.push('hip_1');					
			rightArmArray.push('ketsu_1');
			rightArmArray.push('rest_boobs_1');				
			leftArmArray.push('4');
			leftArmArray.push('3');
			leftArmArray.push('ketsu_1');
			leftArmArray.push('rest_boobs_1');
			tachieSweatName = '2';
			displayTachieSweat = true;
			tachieHoppeName += '1';
			displayTachieHoppe = true;
		break;
		
		case 28:
			headType = 'down';
			boobsTypeArray.push('reg');
			eyebrowsArray.push('kiri3');
			eyesArray.push('sita2');
			eyesArray.push('sita1');
			mouthArray.push('nico1');
			mouthArray.push('nico2');
			mouthArray.push('nico3');
			mouthArray.push('nico4');
			mouthArray.push('wara1');
			mouthArray.push('pero1');
			rightArmArray.push('boob1');		
			rightArmArray.push('cover_1');					
			rightArmArray.push('ketsu_1');
			rightArmArray.push('rest_boobs_1');	
			if(wearingClitToy) rightArmArray.push('toyC_grip_1');
			if(wearingPussyToy) rightArmArray.push('toyP_grip_1');
			
			if(isClothingAtStageSeeBothBoobs) leftArmArray.push('boob1');
			leftArmArray.push('hair_1');
			leftArmArray.push('ketsu_1');
			leftArmArray.push('rest_boobs_1');
			if(wearingAnalToy) leftArmArray.push('toyA_grip_1');
			tachieSweatName = '1';
			displayTachieSweat = true;
			tachieHoppeName += '1';
			displayTachieHoppe = true;
		break;
		
		case 29:
			this.setTachieFrontG('heart_1');
			headType = 'down';
			boobsTypeArray.push('reg');
			eyebrowsArray.push('koma2');
			eyebrowsArray.push('nico2');
			eyebrowsArray.push('nico3');
			eyesArray.push('sita2');
			eyesArray.push('sita1');
			eyesArray.push('heartyoko2');
			mouthArray.push('nico1');
			mouthArray.push('nico2');
			mouthArray.push('nico3');
			mouthArray.push('nico4');
			mouthArray.push('wara1');
			mouthArray.push('pero1');
			mouthArray.push('pero4');
			mouthArray.push('ahe2');
			mouthArray.push('ahe3');
			rightArmArray.push('boob1');		
			rightArmArray.push('cover_1');					
			rightArmArray.push('ketsu_1');
			rightArmArray.push('rest_boobs_1');	
			if(wearingClitToy) rightArmArray.push('toyC_grip_1');
			if(wearingPussyToy) rightArmArray.push('toyP_grip_1');
			rightArmArray.push('kuri_1');	
			rightArmArray.push('kupa_1');	
			if(isClothingAtStageSeeBothBoobs) leftArmArray.push('boob1');
			if(isAlmostNaked && isAroused) leftArmArray.push('boob2');
			leftArmArray.push('hair_1');
			leftArmArray.push('ketsu_1');
			leftArmArray.push('rest_boobs_1');
			if(wearingAnalToy) leftArmArray.push('toyA_grip_1');
			tachieHoppeName += '1';
			displayTachieHoppe = true;
			bodyType = 'spread_1';
		break;
		
		case 30:
			if(Math.random() < 0.5) headType = 'down';
			else headType = 'normal';
			boobsTypeArray.push('reg');
			boobsTypeArray.push('hold');
			if(headType === 'normal') {
				eyebrowsArray.push('kiri3');
				eyebrowsArray.push('nico2');
				eyebrowsArray.push('nico1');
			}
			else {
				eyebrowsArray.push('kiri3');
				eyebrowsArray.push('nico2');
				eyebrowsArray.push('nico1');
			}
			if(headType === 'normal') {
				eyesArray.push('mae1');
				eyesArray.push('mae2');
				eyesArray.push('yoko4');
			}
			else {
				eyesArray.push('mae1');
				eyesArray.push('mae2');
				eyesArray.push('yoko4');
			}
			if(headType === 'normal') {
				mouthArray.push('mu1');
				mouthArray.push('mu2');
				mouthArray.push('mu3');
				mouthArray.push('ho1');
				mouthArray.push('ho2');
			}
			else {
				mouthArray.push('mu1');
				mouthArray.push('mu2');
				mouthArray.push('mu3');
				mouthArray.push('ho1');
				mouthArray.push('wa1');
			}
			
			if(Math.random() < 0.33) {
				rightArmArray.push('hip_1');
				leftArmArray.push('1');
			}
			else {
				rightArmArray.push('1');
				rightArmArray.push('6');
				leftArmArray.push('1');
				leftArmArray.push('4');
			}
			if(fatigueLvl3) {
				tachieSweatName = '2';
				displayTachieSweat = true;
			}
			else if(fatigueLvl2 || fatigueLvl1) {
				tachieSweatName = '1';
				displayTachieSweat = true;
			}
		break;
		
		case 31:
			if(Math.random() < 0.5) headType = 'down';
			else headType = 'normal';
			boobsTypeArray.push('reg');
			if(headType === 'normal') {
				eyebrowsArray.push('kiri3');
				eyebrowsArray.push('kiri2');
				eyebrowsArray.push('oko2');
			}
			else {
				eyebrowsArray.push('kiri3');
				eyebrowsArray.push('kiri2');
				eyebrowsArray.push('oko2');
			}
			if(headType === 'normal') {
				eyesArray.push('sitayoko1');
				eyesArray.push('sitayoko2');
				eyesArray.push('jito2');
			}
			else {
					eyesArray.push('sitayoko2');
				eyesArray.push('jito2');
			}
			if(headType === 'normal') {
				mouthArray.push('ku1');
				mouthArray.push('ho1');
				mouthArray.push('ho2');
				mouthArray.push('mu1');
				mouthArray.push('mu2');
				mouthArray.push('mu3');
				mouthArray.push('wa2');
				mouthArray.push('wa3');
			}
			else {
				mouthArray.push('ku1');
				mouthArray.push('ku2');
				mouthArray.push('mu3');
				mouthArray.push('mu1');
				mouthArray.push('wa1');
			}
			if(isClothingAtStageSeeBothBoobs && !isWearingPanties) {
				rightArmArray.push('cover_1');
			}
			else if(isClothingAtStageSeeBothBoobs) {
				rightArmArray.push('boob1');
			}
			else {
				rightArmArray.push('1');
				rightArmArray.push('6');
			}
			if(isAlmostNaked) {
				leftArmArray.push('boob1');
			}
			else {
				leftArmArray.push('1');
				leftArmArray.push('3');
				leftArmArray.push('4');
				leftArmArray.push('hair_1');
			}
			if(fatigueLvl3) {
				tachieSweatName = '2';
				displayTachieSweat = true;
			}
			else if(fatigueLvl2 || fatigueLvl1) {
				tachieSweatName = '1';
				displayTachieSweat = true;
			}
			tachieHoppeName += '1';
			displayTachieHoppe = true;
		break;
		
		case 32:
			if(Math.random() < 0.5) headType = 'down';
			else headType = 'normal';
			boobsTypeArray.push('reg');
			boobsTypeArray.push('hold');
			if(headType === 'normal') {
				eyebrowsArray.push('kiri3');
				eyebrowsArray.push('nico2');
				eyebrowsArray.push('nico1');
			}
			else {
				eyebrowsArray.push('kiri3');
				eyebrowsArray.push('nico2');
				eyebrowsArray.push('nico1');
			}
			if(headType === 'normal') {
				eyesArray.push('mae1');
				eyesArray.push('mae2');
				eyesArray.push('yoko4');
			}
			else {
				eyesArray.push('mae1');
				eyesArray.push('mae2');
				eyesArray.push('yoko4');
			}
			if(headType === 'normal') {
				mouthArray.push('nico1');
				mouthArray.push('nico2');
				mouthArray.push('mu3');
				mouthArray.push('ho1');
				mouthArray.push('ho2');
				mouthArray.push('wa1');
			}
			else {
				mouthArray.push('nico1');
				mouthArray.push('nico2');
				mouthArray.push('mu2');
				mouthArray.push('mu3');
				mouthArray.push('wa1');
			}
			
			if(Math.random() < 0.4) {
				if(Math.random() < 0.5) {
					rightArmArray.push('hip_1');
					leftArmArray.push('1');
				}
				else {
					rightArmArray.push('ketsu_1');
					leftArmArray.push('ketsu_1');
				}
			}
			else {
				rightArmArray.push('1');
				rightArmArray.push('2');
				rightArmArray.push('6');
				leftArmArray.push('1');
				leftArmArray.push('3');
				leftArmArray.push('4');
				leftArmArray.push('hair_1');
			}
			
			
			if(fatigueLvl3) {
				tachieSweatName = '2';
				displayTachieSweat = true;
			}
			else if(fatigueLvl2 || fatigueLvl1) {
				tachieSweatName = '1';
				displayTachieSweat = true;
			}
		break;
		
		case 33:
			if(Math.random() < 0.5) headType = 'down';
			else headType = 'normal';
			boobsTypeArray.push('reg');
			if(headType === 'normal') {
				eyebrowsArray.push('kiri3');
				eyebrowsArray.push('nico1');
				eyebrowsArray.push('nico2');
				eyebrowsArray.push('koma2');
			}
			else {
				eyebrowsArray.push('kiri3');
				eyebrowsArray.push('nico1');
				eyebrowsArray.push('nico2');
				eyebrowsArray.push('koma2');
			}
			if(headType === 'normal') {
				eyesArray.push('mae1');
				eyesArray.push('mae2');
				eyesArray.push('urumae2');
				eyesArray.push('sita2');
				eyesArray.push('sitayoko2');
				eyesArray.push('jito2');
				eyesArray.push('jito1');
			}
			else {
				eyesArray.push('mae1');
				eyesArray.push('mae2');
				eyesArray.push('urumae2');
				eyesArray.push('sita2');
				eyesArray.push('sitayoko2');
				eyesArray.push('jito2');
				eyesArray.push('jito1');
			}
			if(headType === 'normal') {
				mouthArray.push('ku1');
				mouthArray.push('ho1');
				mouthArray.push('ho2');
				mouthArray.push('mu3');
				mouthArray.push('wa1');
				mouthArray.push('wa2');
				mouthArray.push('wa3');
			}
			else {
				mouthArray.push('ku1');
				mouthArray.push('ho1');
				mouthArray.push('mu2');
				mouthArray.push('mu3');
				mouthArray.push('wa1');
			}
			if(isClothingAtStageSeeBothBoobs && !isWearingPanties && canSeePussyCreampie) {
				rightArmArray.push('cover_1');
			}
			else if(isClothingAtStageSeeBothBoobs) {
				rightArmArray.push('boob1');
			}
			else {
				rightArmArray.push('1');
				rightArmArray.push('6');
			}
			if(canSeeSemenOnFace || isAlmostNaked) {
				if(canSeeSemenOnFace) leftArmArray.push('face_1');
				if(isAlmostNaked) leftArmArray.push('boob1');
			}
			else {
				leftArmArray.push('1');
				leftArmArray.push('3');
				leftArmArray.push('4');
				leftArmArray.push('hair_1');
			}
			if(fatigueLvl3) {
				tachieSweatName = '2';
				displayTachieSweat = true;
			}
			else if(fatigueLvl2 || fatigueLvl1) {
				tachieSweatName = '1';
				displayTachieSweat = true;
			}
			tachieHoppeName += '1';
			displayTachieHoppe = true;
		break;
		
		case 34:
			if(Math.random() < 0.5) headType = 'down';
			else headType = 'normal';
			boobsTypeArray.push('reg');
			boobsTypeArray.push('hold');
			if(headType === 'normal') {
				eyebrowsArray.push('nico1');
				eyebrowsArray.push('nico2');
				eyebrowsArray.push('nico3');
			}
			else {
				eyebrowsArray.push('nico1');
				eyebrowsArray.push('nico2');
				eyebrowsArray.push('nico3');
			}
			if(headType === 'normal') {
				eyesArray.push('mae1');
				eyesArray.push('mae2');
				eyesArray.push('sita1');
				eyesArray.push('sita2');
			}
			else {
				eyesArray.push('mae1');
				eyesArray.push('mae2');
				eyesArray.push('sita1');
				eyesArray.push('sita2');
			}
			if(headType === 'normal') {
				mouthArray.push('nico1');
				mouthArray.push('nico2');
				mouthArray.push('nico3');
				mouthArray.push('mu3');
				mouthArray.push('ho1');
				mouthArray.push('ho2');
				mouthArray.push('wa1');
			}
			else {
				mouthArray.push('nico1');
				mouthArray.push('nico2');
				mouthArray.push('nico3');
				mouthArray.push('mu2');
				mouthArray.push('mu3');
				mouthArray.push('ho1');
				mouthArray.push('wa1');
			}
			if(isClothingAtStageSeeBothBoobs && !isWearingPanties && canSeePussyCreampie && Math.random() < 0.1) {
				rightArmArray.push('kuri_1');
				
				if(canSeeSemenOnFace && Math.random() < 0.1) {
					leftArmArray.push('face_1');
				}
				else {
					leftArmArray.push('1');
					leftArmArray.push('3');
					leftArmArray.push('4');
					leftArmArray.push('hair_1');
				}
				
			}
			else if(Math.random() < 0.6) {
				if(Math.random() < 0.25) {
					rightArmArray.push('hip_1');
					leftArmArray.push('1');
				}
				else if(Math.random() < 0.33) {
					rightArmArray.push('ketsu_1');
					leftArmArray.push('ketsu_1');
				}
				else if(Math.random() < 0.5) {
					rightArmArray.push('rest_boobs_1');
					leftArmArray.push('rest_boobs_1');
				}
				else {
					rightArmArray.push('ketsu_1');
					leftArmArray.push('ketsu_1');
				}
			}
			else {
				rightArmArray.push('1');
				rightArmArray.push('2');
				rightArmArray.push('6');
				if(canSeeSemenOnFace && Math.random() < 0.1) {
					leftArmArray.push('face_1');
				}
				else {
					leftArmArray.push('1');
					leftArmArray.push('3');
					leftArmArray.push('4');
					leftArmArray.push('hair_1');
				}
			}
			
			if(fatigueLvl3) {
				tachieSweatName = '1';
				displayTachieSweat = true;
			}
			if(isAroused) {
				tachieHoppeName += '1';
				displayTachieHoppe = true;
			}
		break;
		
		case 35:
			headType = 'down';
			boobsTypeArray.push('reg');
			eyebrowsArray.push('nico3');
			eyebrowsArray.push('nico2');
			if(Math.random() < 0.1) {
				eyesArray.push('yoko4');
				mouthArray.push('ho1');
				rightArmArray.push('5');
				leftArmArray.push('ketsu_1');
			}
			else {
				eyesArray.push('toji1');
				mouthArray.push('mu2');
				mouthArray.push('mu3');
				rightArmArray.push('1');
				rightArmArray.push('3');
				leftArmArray.push('2');
			}	
			
		break;
	}

	
	if(headType == '' || !headType) {
		console.error('map emote error faceId ' + faceId);
		headType = 'normal';
		boobsTypeArray.push('reg');
		eyebrowsArray.push('kiri3');
		eyebrowsArray.push('kiri3');
		eyebrowsArray.push('nico1');
		eyesArray.push('yoko1');
		eyesArray.push('yoko2');
		eyesArray.push('mae2');
		mouthArray.push('ho2');
		mouthArray.push('mu1');
		mouthArray.push('mu3');
		leftArmArray.push(1);
		rightArmArray.push(1);
	}
	
	if(bodyType === 'spread_1') {
		if(!this.isWearingGlovesAndHat()) {
			if(Karryn.isCensored())
				this.setTachieBody('' + bodyType + '_naked_cen');
			else
				this.setTachieBody('' + bodyType + '_naked');
		}
		else {
			if(Karryn.isCensored())
				this.setTachieBody('' + bodyType + '_cen');
			else
				this.setTachieBody('' + bodyType);
		}
		this.setTachieSemenCrotchExtension('spread_');
		this.setTachieSemenCrotchPantiesExtension('spread_');
		this.setTachieSemenWetExtension('spread_');
		this.setTachieSemenWetPantiesExtension('spread_');
	}
	else {
		if(!this.isWearingGlovesAndHat()) {
			this.setTachieBody('naked_' + bodyType);
		}
		else {
			this.setTachieBody('' + bodyType);
		}
		this.setTachieSemenCrotchExtension('normal_');
		this.setTachieSemenCrotchPantiesExtension('normal_');
		this.resetTachieSemenWetExtension();
		this.resetTachieSemenWetPantiesExtension();
	}
	this.setTachieHead('' + headType + '_1');
	if(eyebrowsArray.length > 0) {
		this.setTachieEyebrows('' + headType + '_' + eyebrowsArray[Math.randomInt(eyebrowsArray.length)]);
	}
	if(eyesArray.length > 0) {
		this.setTachieEyes('' + headType + '_' + eyesArray[Math.randomInt(eyesArray.length)]);
	}
	if(mouthArray.length > 0) {
		this.setTachieMouth('' + headType + '_' + mouthArray[Math.randomInt(mouthArray.length)]);
	}
	if(boobsTypeArray.length > 0) {
		this.setBoobsType(boobsTypeArray[Math.randomInt(boobsTypeArray.length)]);
	}
	if(leftArmArray.length > 0) {
		this.setTachieLeftArm('' + leftArmArray[Math.randomInt(leftArmArray.length)]);
	}
	if(rightArmArray.length > 0) {
		this.setTachieRightArm('' + rightArmArray[Math.randomInt(rightArmArray.length)]);
	}
	if(displayTachieHoppe) this.setTachieHoppe('' + headType + '_' + tachieHoppeName);
	if(displayTachieSweat) this.setTachieSweat('' + headType + '_' + tachieSweatName);

	this.setWardenMapPoseExtensions();
	this.setAllowTachieEmoteUpdate(true);
	
	//Lastly, Cleanup flags
	this.turnOffJustEscapedFlag();
	this.resetStandingStillCounter();
};

Game_Actor.prototype.setBedSleepingMapPose = function() {
	this.setupLiquids();
	this.setupStray();
	this.setAllowTachieUpdate(false);
	this.takeOffGlovesAndHat();
	this.setWardenMapPose_Naked();
	this.emoteMapPose(true, false);
	this.setAllowTachieUpdate(true);
};

Game_Actor.prototype.setCouchOnaniMapPose = function() {
	this.resetLiquidsExceptPussyJuice();
	this.cleanUpStrayBeforeCouchMasturbation();
	this.setAllowTachieUpdate(false);
	this.takeOffGlovesAndHat();
	this.takeOffPanties();
	this.setWardenMapPose_Naked();
	this.emoteMapPose(false, true);
	this.setAllowTachieUpdate(true);
};

///////////////
// Tachie Update Emote
// Set whether to update tachie yet or not, emote version
///////////////

Game_Actor.prototype.setAllowTachieEmoteUpdate = function(allow) {
	this._allowTachieEmoteUpdate = allow;
	if(allow) this.setCacheChanged();
};
Game_Actor.prototype.allowTachieEmoteUpdate = function() {
	return this._allowTachieEmoteUpdate;
};

/////////////////
//Turned on right after escaping, for tired mood emotes
Game_Actor.prototype.turnOnJustEscapedFlag = function() { this._justEscapedFlag = true; };
Game_Actor.prototype.turnOffJustEscapedFlag = function() { this._justEscapedFlag = false; };

///////////////////
//For bored mood emotes
Karryn.resetStandingStillCounter = function() { 
	$gameActors.actor(ACTOR_KARRYN_ID).resetStandingStillCounter();
};
Karryn.resetStandingStillStage = function() { 
	$gameActors.actor(ACTOR_KARRYN_ID).resetStandingStillStage();
};
Karryn.stoodStillForTooLong = function() { 
	return $gameActors.actor(ACTOR_KARRYN_ID).stoodStillForTooLong();
};
Karryn.increaseStandingStillCounter = function() { 
	return $gameActors.actor(ACTOR_KARRYN_ID).increaseStandingStillCounter();
};

//Also called in common event 3:Load Game
Game_Actor.prototype.resetStandingStillCounter = function() { 
	this._standingStillCounter = 0; 
};
//Also called in common event 3:Load Game
Game_Actor.prototype.resetStandingStillStage = function() {
	if(this._standingStillStage === 0) return;
	let needsToCallEmoteManager = false;
	if(this._standingStillStage > 0) {
		this.setKarrynWardenSprite();
		if(!this._emoteMasterManagerIsRunning) {
			needsToCallEmoteManager = true;
		}
	}
	this._standingStillStage = 0;
	if(needsToCallEmoteManager) {
		this.emoteMasterManager();
	}
};

Game_Actor.prototype.stoodStillForTooLong = function() { 
	return this._standingStillCounter > VAR_STOOD_STILL_FOR_TOO_LONG_NUM; 
};

Game_Actor.prototype.increaseStandingStillCounter = function() { 
	if(!$gameScreen.isMapMode() || !this.isWearingWardenClothing()) {
		this.resetStandingStillCounter();
		this.resetStandingStillStage();
		return;
	}
	this._standingStillCounter++; 
	if(this.stoodStillForTooLong() && !this._emoteMasterManagerIsRunning) {
		this.emoteMapPose();
	}
};

Remtairy.KarrynEmote.Scene_Map_updateScene = Scene_Map.prototype.updateScene;
Scene_Map.prototype.updateScene = function() {
	Remtairy.KarrynEmote.Scene_Map_updateScene.call(this);
    if(!SceneManager.isSceneChanging()) {
       Karryn.increaseStandingStillCounter();
    }
};
